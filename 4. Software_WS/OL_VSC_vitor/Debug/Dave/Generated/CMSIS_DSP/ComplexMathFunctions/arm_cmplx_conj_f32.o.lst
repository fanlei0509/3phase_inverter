   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_cmplx_conj_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_cmplx_conj_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_cmplx_conj_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_cmplx_conj_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Title:        arm_cmplx_conj_f32.c
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Description:  Floating-point complex conjugate
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @ingroup groupCmplxMath
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @defgroup cmplx_conj Complex Conjugate
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Conjugates the elements of a complex data vector.
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * The <code>pSrc</code> points to the source data and
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <code>pDst</code> points to the where the result should be written.
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <code>numSamples</code> specifies the number of complex samples
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * and the data in each array is stored in an interleaved fashion
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * (real, imag, real, imag, ...).
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Each array has a total of <code>2*numSamples</code> values.
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * The underlying algorithm is used:
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <pre>
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * for(n=0; n<numSamples; n++) {
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *     pDst[(2*n)+0)] = pSrc[(2*n)+0];     // real part
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *     pDst[(2*n)+1)] = -pSrc[(2*n)+1];    // imag part
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * }
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * </pre>
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * There are separate functions for floating-point, Q15, and Q31 data types.
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @addtogroup cmplx_conj
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @{
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @brief  Floating-point complex conjugate.
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  *pSrc points to the input vector
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  *pDst points to the output vector
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  numSamples number of complex samples in each vector
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @return none.
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** void arm_cmplx_conj_f32(
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t * pSrc,
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t * pDst,
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t numSamples)
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** {
  28              	 .loc 1 75 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 8FB0     	 sub sp,sp,#60
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 64
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #if defined (ARM_MATH_DSP)
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t inR1, inR2, inR3, inR4;
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t inI1, inI2, inI3, inI4;
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /*loop Unrolling */
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples >> 2u;
  46              	 .loc 1 85 0
  47 000c 7B68     	 ldr r3,[r7,#4]
  48 000e 9B08     	 lsrs r3,r3,#2
  49 0010 7B63     	 str r3,[r7,#52]
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   while (blkCnt > 0u)
  50              	 .loc 1 89 0
  51 0012 57E0     	 b .L2
  52              	.L3:
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* C[0]+jC[1] = A[0]+ j (-1) A[1] */
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Calculate Complex Conjugate and then store the results in the destination buffer. */
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read real input samples */
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR1 = pSrc[0];
  53              	 .loc 1 94 0
  54 0014 FB68     	 ldr r3,[r7,#12]
  55 0016 1B68     	 ldr r3,[r3]
  56 0018 3B63     	 str r3,[r7,#48]
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store real samples to destination */
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[0] = inR1;
  57              	 .loc 1 96 0
  58 001a BB68     	 ldr r3,[r7,#8]
  59 001c 3A6B     	 ldr r2,[r7,#48]
  60 001e 1A60     	 str r2,[r3]
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR2 = pSrc[2];
  61              	 .loc 1 97 0
  62 0020 FB68     	 ldr r3,[r7,#12]
  63 0022 9B68     	 ldr r3,[r3,#8]
  64 0024 FB62     	 str r3,[r7,#44]
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[2] = inR2;
  65              	 .loc 1 98 0
  66 0026 BB68     	 ldr r3,[r7,#8]
  67 0028 0833     	 adds r3,r3,#8
  68 002a FA6A     	 ldr r2,[r7,#44]
  69 002c 1A60     	 str r2,[r3]
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR3 = pSrc[4];
  70              	 .loc 1 99 0
  71 002e FB68     	 ldr r3,[r7,#12]
  72 0030 1B69     	 ldr r3,[r3,#16]
  73 0032 BB62     	 str r3,[r7,#40]
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[4] = inR3;
  74              	 .loc 1 100 0
  75 0034 BB68     	 ldr r3,[r7,#8]
  76 0036 1033     	 adds r3,r3,#16
  77 0038 BA6A     	 ldr r2,[r7,#40]
  78 003a 1A60     	 str r2,[r3]
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR4 = pSrc[6];
  79              	 .loc 1 101 0
  80 003c FB68     	 ldr r3,[r7,#12]
  81 003e 9B69     	 ldr r3,[r3,#24]
  82 0040 7B62     	 str r3,[r7,#36]
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[6] = inR4;
  83              	 .loc 1 102 0
  84 0042 BB68     	 ldr r3,[r7,#8]
  85 0044 1833     	 adds r3,r3,#24
  86 0046 7A6A     	 ldr r2,[r7,#36]
  87 0048 1A60     	 str r2,[r3]
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI1 = pSrc[1];
  88              	 .loc 1 105 0
  89 004a FB68     	 ldr r3,[r7,#12]
  90 004c 5B68     	 ldr r3,[r3,#4]
  91 004e 3B62     	 str r3,[r7,#32]
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI2 = pSrc[3];
  92              	 .loc 1 106 0
  93 0050 FB68     	 ldr r3,[r7,#12]
  94 0052 DB68     	 ldr r3,[r3,#12]
  95 0054 FB61     	 str r3,[r7,#28]
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI1 = -inI1;
  96              	 .loc 1 109 0
  97 0056 D7ED087A 	 flds s15,[r7,#32]
  98 005a F1EE677A 	 fnegs s15,s15
  99 005e C7ED087A 	 fsts s15,[r7,#32]
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI3 = pSrc[5];
 100              	 .loc 1 112 0
 101 0062 FB68     	 ldr r3,[r7,#12]
 102 0064 5B69     	 ldr r3,[r3,#20]
 103 0066 BB61     	 str r3,[r7,#24]
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI2 = -inI2;
 104              	 .loc 1 115 0
 105 0068 D7ED077A 	 flds s15,[r7,#28]
 106 006c F1EE677A 	 fnegs s15,s15
 107 0070 C7ED077A 	 fsts s15,[r7,#28]
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI4 = pSrc[7];
 108              	 .loc 1 118 0
 109 0074 FB68     	 ldr r3,[r7,#12]
 110 0076 DB69     	 ldr r3,[r3,#28]
 111 0078 7B61     	 str r3,[r7,#20]
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI3 = -inI3;
 112              	 .loc 1 121 0
 113 007a D7ED067A 	 flds s15,[r7,#24]
 114 007e F1EE677A 	 fnegs s15,s15
 115 0082 C7ED067A 	 fsts s15,[r7,#24]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary samples to destination */
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[1] = inI1;
 116              	 .loc 1 124 0
 117 0086 BB68     	 ldr r3,[r7,#8]
 118 0088 0433     	 adds r3,r3,#4
 119 008a 3A6A     	 ldr r2,[r7,#32]
 120 008c 1A60     	 str r2,[r3]
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[3] = inI2;
 121              	 .loc 1 125 0
 122 008e BB68     	 ldr r3,[r7,#8]
 123 0090 0C33     	 adds r3,r3,#12
 124 0092 FA69     	 ldr r2,[r7,#28]
 125 0094 1A60     	 str r2,[r3]
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI4 = -inI4;
 126              	 .loc 1 128 0
 127 0096 D7ED057A 	 flds s15,[r7,#20]
 128 009a F1EE677A 	 fnegs s15,s15
 129 009e C7ED057A 	 fsts s15,[r7,#20]
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary samples to destination */
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[5] = inI3;
 130              	 .loc 1 131 0
 131 00a2 BB68     	 ldr r3,[r7,#8]
 132 00a4 1433     	 adds r3,r3,#20
 133 00a6 BA69     	 ldr r2,[r7,#24]
 134 00a8 1A60     	 str r2,[r3]
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* increment source pointer by 8 to process next sampels */
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pSrc += 8u;
 135              	 .loc 1 134 0
 136 00aa FB68     	 ldr r3,[r7,#12]
 137 00ac 2033     	 adds r3,r3,#32
 138 00ae FB60     	 str r3,[r7,#12]
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary sample to destination */
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[7] = inI4;
 139              	 .loc 1 137 0
 140 00b0 BB68     	 ldr r3,[r7,#8]
 141 00b2 1C33     	 adds r3,r3,#28
 142 00b4 7A69     	 ldr r2,[r7,#20]
 143 00b6 1A60     	 str r2,[r3]
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* increment destination pointer by 8 to store next samples */
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst += 8u;
 144              	 .loc 1 140 0
 145 00b8 BB68     	 ldr r3,[r7,#8]
 146 00ba 2033     	 adds r3,r3,#32
 147 00bc BB60     	 str r3,[r7,#8]
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Decrement the loop counter */
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     blkCnt--;
 148              	 .loc 1 143 0
 149 00be 7B6B     	 ldr r3,[r7,#52]
 150 00c0 013B     	 subs r3,r3,#1
 151 00c2 7B63     	 str r3,[r7,#52]
 152              	.L2:
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 153              	 .loc 1 89 0
 154 00c4 7B6B     	 ldr r3,[r7,#52]
 155 00c6 002B     	 cmp r3,#0
 156 00c8 A4D1     	 bne .L3
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   }
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****    ** No loop unrolling is used. */
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples % 0x4u;
 157              	 .loc 1 148 0
 158 00ca 7B68     	 ldr r3,[r7,#4]
 159 00cc 03F00303 	 and r3,r3,#3
 160 00d0 7B63     	 str r3,[r7,#52]
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #else
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* Run the below code for Cortex-M0 */
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples;
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   while (blkCnt > 0u)
 161              	 .loc 1 157 0
 162 00d2 16E0     	 b .L4
 163              	.L5:
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* realOut + j (imagOut) = realIn + j (-1) imagIn */
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Calculate Complex Conjugate and then store the results in the destination buffer. */
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = *pSrc++;
 164              	 .loc 1 161 0
 165 00d4 BB68     	 ldr r3,[r7,#8]
 166 00d6 1A1D     	 adds r2,r3,#4
 167 00d8 BA60     	 str r2,[r7,#8]
 168 00da FA68     	 ldr r2,[r7,#12]
 169 00dc 111D     	 adds r1,r2,#4
 170 00de F960     	 str r1,[r7,#12]
 171 00e0 1268     	 ldr r2,[r2]
 172 00e2 1A60     	 str r2,[r3]
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = -*pSrc++;
 173              	 .loc 1 162 0
 174 00e4 BB68     	 ldr r3,[r7,#8]
 175 00e6 1A1D     	 adds r2,r3,#4
 176 00e8 BA60     	 str r2,[r7,#8]
 177 00ea FA68     	 ldr r2,[r7,#12]
 178 00ec 111D     	 adds r1,r2,#4
 179 00ee F960     	 str r1,[r7,#12]
 180 00f0 D2ED007A 	 flds s15,[r2]
 181 00f4 F1EE677A 	 fnegs s15,s15
 182 00f8 C3ED007A 	 fsts s15,[r3]
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Decrement the loop counter */
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     blkCnt--;
 183              	 .loc 1 165 0
 184 00fc 7B6B     	 ldr r3,[r7,#52]
 185 00fe 013B     	 subs r3,r3,#1
 186 0100 7B63     	 str r3,[r7,#52]
 187              	.L4:
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 188              	 .loc 1 157 0
 189 0102 7B6B     	 ldr r3,[r7,#52]
 190 0104 002B     	 cmp r3,#0
 191 0106 E5D1     	 bne .L5
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   }
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** }
 192              	 .loc 1 167 0
 193 0108 3C37     	 adds r7,r7,#60
 194              	.LCFI3:
 195              	 .cfi_def_cfa_offset 4
 196 010a BD46     	 mov sp,r7
 197              	.LCFI4:
 198              	 .cfi_def_cfa_register 13
 199              	 
 200 010c 5DF8047B 	 ldr r7,[sp],#4
 201              	.LCFI5:
 202              	 .cfi_restore 7
 203              	 .cfi_def_cfa_offset 0
 204 0110 7047     	 bx lr
 205              	 .cfi_endproc
 206              	.LFE135:
 208 0112 00BF     	 .text
 209              	.Letext0:
 210              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 211              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 212              	 .file 4 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_conj_f32.c
    {standard input}:20     .text.arm_cmplx_conj_f32:00000000 $t
    {standard input}:25     .text.arm_cmplx_conj_f32:00000000 arm_cmplx_conj_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
