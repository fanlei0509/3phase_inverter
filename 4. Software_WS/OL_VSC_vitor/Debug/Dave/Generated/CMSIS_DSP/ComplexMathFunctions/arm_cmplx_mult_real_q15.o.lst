   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_cmplx_mult_real_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_cmplx_mult_real_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_cmplx_mult_real_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_cmplx_mult_real_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * Title:        arm_cmplx_mult_real_q15.c
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * Description:  Q15 complex by real multiplication
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @ingroup groupCmplxMath
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @addtogroup CmplxByRealMult
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** /**
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @brief  Q15 complex-by-real multiplication
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @param[in]  *pSrcCmplx points to the complex input vector
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @param[in]  *pSrcReal points to the real input vector
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @param[out]  *pCmplxDst points to the complex output vector
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @param[in]  numSamples number of samples in each vector
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @return none.
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  *
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * \par
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * The function uses saturating arithmetic.
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * Results outside of the allowable Q15 range [0x8000 0x7FFF] will be saturated.
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  */
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** void arm_cmplx_mult_real_q15(
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q15_t * pSrcCmplx,
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q15_t * pSrcReal,
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q15_t * pCmplxDst,
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   uint32_t numSamples)
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** {
  28              	 .loc 1 60 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 A7B0     	 sub sp,sp,#156
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 160
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q15_t in;                                      /* Temporary variable to store input value */
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #if defined (ARM_MATH_DSP)
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   uint32_t blkCnt;                               /* loop counters */
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q31_t inA1, inA2;                              /* Temporary variables to hold input data */
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q31_t inB1;                                    /* Temporary variables to hold input data */
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q15_t out1, out2, out3, out4;                  /* Temporary variables to hold output data */
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q31_t mul1, mul2, mul3, mul4;                  /* Temporary variables to hold intermediate data *
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   /* loop Unrolling */
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   blkCnt = numSamples >> 2u;
  47              	 .loc 1 73 0
  48 000e 3B68     	 ldr r3,[r7]
  49 0010 9B08     	 lsrs r3,r3,#2
  50 0012 C7F89430 	 str r3,[r7,#148]
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   while (blkCnt > 0u)
  51              	 .loc 1 77 0
  52 0016 1CE1     	 b .L2
  53              	.L3:
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   {
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* C[2 * i] = A[2 * i] * B[i].            */
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i].        */
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* read complex number both real and imaginary from complex input buffer */
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inA1 = *__SIMD32(pSrcCmplx)++;
  54              	 .loc 1 82 0
  55 0018 07F10C02 	 add r2,r7,#12
  56 001c 1368     	 ldr r3,[r2]
  57 001e 191D     	 adds r1,r3,#4
  58 0020 1160     	 str r1,[r2]
  59 0022 1B68     	 ldr r3,[r3]
  60 0024 C7F89030 	 str r3,[r7,#144]
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* read two real values at a time from real input buffer */
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inB1 = *__SIMD32(pSrcReal)++;
  61              	 .loc 1 84 0
  62 0028 07F10802 	 add r2,r7,#8
  63 002c 1368     	 ldr r3,[r2]
  64 002e 191D     	 adds r1,r3,#4
  65 0030 1160     	 str r1,[r2]
  66 0032 1B68     	 ldr r3,[r3]
  67 0034 C7F88C30 	 str r3,[r7,#140]
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* read complex number both real and imaginary from complex input buffer */
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inA2 = *__SIMD32(pSrcCmplx)++;
  68              	 .loc 1 86 0
  69 0038 07F10C02 	 add r2,r7,#12
  70 003c 1368     	 ldr r3,[r2]
  71 003e 191D     	 adds r1,r3,#4
  72 0040 1160     	 str r1,[r2]
  73 0042 1B68     	 ldr r3,[r3]
  74 0044 C7F88830 	 str r3,[r7,#136]
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* multiply complex number with real numbers */
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul1 = (q31_t) ((q15_t) (inA1) * (q15_t) (inB1));
  75              	 .loc 1 91 0
  76 0048 D7F89030 	 ldr r3,[r7,#144]
  77 004c 9BB2     	 uxth r3,r3
  78 004e 1BB2     	 sxth r3,r3
  79 0050 D7F88C20 	 ldr r2,[r7,#140]
  80 0054 92B2     	 uxth r2,r2
  81 0056 12B2     	 sxth r2,r2
  82 0058 02FB03F3 	 mul r3,r2,r3
  83 005c C7F88430 	 str r3,[r7,#132]
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul2 = (q31_t) ((q15_t) (inA1 >> 16) * (q15_t) (inB1));
  84              	 .loc 1 92 0
  85 0060 D7F89030 	 ldr r3,[r7,#144]
  86 0064 1B14     	 asrs r3,r3,#16
  87 0066 9BB2     	 uxth r3,r3
  88 0068 1BB2     	 sxth r3,r3
  89 006a D7F88C20 	 ldr r2,[r7,#140]
  90 006e 92B2     	 uxth r2,r2
  91 0070 12B2     	 sxth r2,r2
  92 0072 02FB03F3 	 mul r3,r2,r3
  93 0076 C7F88030 	 str r3,[r7,#128]
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul3 = (q31_t) ((q15_t) (inA2) * (q15_t) (inB1 >> 16));
  94              	 .loc 1 93 0
  95 007a D7F88830 	 ldr r3,[r7,#136]
  96 007e 9BB2     	 uxth r3,r3
  97 0080 1BB2     	 sxth r3,r3
  98 0082 D7F88C20 	 ldr r2,[r7,#140]
  99 0086 1214     	 asrs r2,r2,#16
 100 0088 92B2     	 uxth r2,r2
 101 008a 12B2     	 sxth r2,r2
 102 008c 02FB03F3 	 mul r3,r2,r3
 103 0090 FB67     	 str r3,[r7,#124]
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul4 = (q31_t) ((q15_t) (inA2 >> 16) * (q15_t) (inB1 >> 16));
 104              	 .loc 1 94 0
 105 0092 D7F88830 	 ldr r3,[r7,#136]
 106 0096 1B14     	 asrs r3,r3,#16
 107 0098 9BB2     	 uxth r3,r3
 108 009a 1BB2     	 sxth r3,r3
 109 009c D7F88C20 	 ldr r2,[r7,#140]
 110 00a0 1214     	 asrs r2,r2,#16
 111 00a2 92B2     	 uxth r2,r2
 112 00a4 12B2     	 sxth r2,r2
 113 00a6 02FB03F3 	 mul r3,r2,r3
 114 00aa BB67     	 str r3,[r7,#120]
 115              	.LBB2:
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #else
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul2 = (q31_t) ((q15_t) (inA1 >> 16) * (q15_t) (inB1 >> 16));
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul1 = (q31_t) ((q15_t) inA1 * (q15_t) (inB1 >> 16));
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul4 = (q31_t) ((q15_t) (inA2 >> 16) * (q15_t) inB1);
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul3 = (q31_t) ((q15_t) inA2 * (q15_t) inB1);
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* saturate the result */
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out1 = (q15_t) __SSAT(mul1 >> 15u, 16);
 116              	 .loc 1 106 0
 117 00ac D7F88430 	 ldr r3,[r7,#132]
 118 00b0 DB13     	 asrs r3,r3,#15
 119 00b2 7B67     	 str r3,[r7,#116]
 120 00b4 7B6F     	 ldr r3,[r7,#116]
 121              	
 122 00b6 03F30F03 	 ssat r3,#16,r3
 123              	
 124              	 .thumb
 125 00ba 3B67     	 str r3,[r7,#112]
 126 00bc 3B6F     	 ldr r3,[r7,#112]
 127              	.LBE2:
 128 00be A7F86E30 	 strh r3,[r7,#110]
 129              	.LBB3:
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out2 = (q15_t) __SSAT(mul2 >> 15u, 16);
 130              	 .loc 1 107 0
 131 00c2 D7F88030 	 ldr r3,[r7,#128]
 132 00c6 DB13     	 asrs r3,r3,#15
 133 00c8 BB66     	 str r3,[r7,#104]
 134 00ca BB6E     	 ldr r3,[r7,#104]
 135              	
 136 00cc 03F30F03 	 ssat r3,#16,r3
 137              	
 138              	 .thumb
 139 00d0 7B66     	 str r3,[r7,#100]
 140 00d2 7B6E     	 ldr r3,[r7,#100]
 141              	.LBE3:
 142 00d4 A7F86230 	 strh r3,[r7,#98]
 143              	.LBB4:
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out3 = (q15_t) __SSAT(mul3 >> 15u, 16);
 144              	 .loc 1 108 0
 145 00d8 FB6F     	 ldr r3,[r7,#124]
 146 00da DB13     	 asrs r3,r3,#15
 147 00dc FB65     	 str r3,[r7,#92]
 148 00de FB6D     	 ldr r3,[r7,#92]
 149              	
 150 00e0 03F30F03 	 ssat r3,#16,r3
 151              	
 152              	 .thumb
 153 00e4 BB65     	 str r3,[r7,#88]
 154 00e6 BB6D     	 ldr r3,[r7,#88]
 155              	.LBE4:
 156 00e8 A7F85630 	 strh r3,[r7,#86]
 157              	.LBB5:
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out4 = (q15_t) __SSAT(mul4 >> 15u, 16);
 158              	 .loc 1 109 0
 159 00ec BB6F     	 ldr r3,[r7,#120]
 160 00ee DB13     	 asrs r3,r3,#15
 161 00f0 3B65     	 str r3,[r7,#80]
 162 00f2 3B6D     	 ldr r3,[r7,#80]
 163              	
 164 00f4 03F30F03 	 ssat r3,#16,r3
 165              	
 166              	 .thumb
 167 00f8 FB64     	 str r3,[r7,#76]
 168 00fa FB6C     	 ldr r3,[r7,#76]
 169              	.LBE5:
 170 00fc A7F84A30 	 strh r3,[r7,#74]
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* pack real and imaginary outputs and store them to destination */
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *__SIMD32(pCmplxDst)++ = __PKHBT(out1, out2, 16);
 171              	 .loc 1 112 0
 172 0100 3A1D     	 adds r2,r7,#4
 173 0102 1368     	 ldr r3,[r2]
 174 0104 191D     	 adds r1,r3,#4
 175 0106 1160     	 str r1,[r2]
 176 0108 B7F96E20 	 ldrsh r2,[r7,#110]
 177 010c 91B2     	 uxth r1,r2
 178 010e B7F96220 	 ldrsh r2,[r7,#98]
 179 0112 1204     	 lsls r2,r2,#16
 180 0114 0A43     	 orrs r2,r2,r1
 181 0116 1A60     	 str r2,[r3]
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *__SIMD32(pCmplxDst)++ = __PKHBT(out3, out4, 16);
 182              	 .loc 1 113 0
 183 0118 3A1D     	 adds r2,r7,#4
 184 011a 1368     	 ldr r3,[r2]
 185 011c 191D     	 adds r1,r3,#4
 186 011e 1160     	 str r1,[r2]
 187 0120 B7F95620 	 ldrsh r2,[r7,#86]
 188 0124 91B2     	 uxth r1,r2
 189 0126 B7F94A20 	 ldrsh r2,[r7,#74]
 190 012a 1204     	 lsls r2,r2,#16
 191 012c 0A43     	 orrs r2,r2,r1
 192 012e 1A60     	 str r2,[r3]
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inA1 = *__SIMD32(pSrcCmplx)++;
 193              	 .loc 1 115 0
 194 0130 07F10C02 	 add r2,r7,#12
 195 0134 1368     	 ldr r3,[r2]
 196 0136 191D     	 adds r1,r3,#4
 197 0138 1160     	 str r1,[r2]
 198 013a 1B68     	 ldr r3,[r3]
 199 013c C7F89030 	 str r3,[r7,#144]
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inB1 = *__SIMD32(pSrcReal)++;
 200              	 .loc 1 116 0
 201 0140 07F10802 	 add r2,r7,#8
 202 0144 1368     	 ldr r3,[r2]
 203 0146 191D     	 adds r1,r3,#4
 204 0148 1160     	 str r1,[r2]
 205 014a 1B68     	 ldr r3,[r3]
 206 014c C7F88C30 	 str r3,[r7,#140]
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inA2 = *__SIMD32(pSrcCmplx)++;
 207              	 .loc 1 117 0
 208 0150 07F10C02 	 add r2,r7,#12
 209 0154 1368     	 ldr r3,[r2]
 210 0156 191D     	 adds r1,r3,#4
 211 0158 1160     	 str r1,[r2]
 212 015a 1B68     	 ldr r3,[r3]
 213 015c C7F88830 	 str r3,[r7,#136]
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul1 = (q31_t) ((q15_t) (inA1) * (q15_t) (inB1));
 214              	 .loc 1 121 0
 215 0160 D7F89030 	 ldr r3,[r7,#144]
 216 0164 9BB2     	 uxth r3,r3
 217 0166 1BB2     	 sxth r3,r3
 218 0168 D7F88C20 	 ldr r2,[r7,#140]
 219 016c 92B2     	 uxth r2,r2
 220 016e 12B2     	 sxth r2,r2
 221 0170 02FB03F3 	 mul r3,r2,r3
 222 0174 C7F88430 	 str r3,[r7,#132]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul2 = (q31_t) ((q15_t) (inA1 >> 16) * (q15_t) (inB1));
 223              	 .loc 1 122 0
 224 0178 D7F89030 	 ldr r3,[r7,#144]
 225 017c 1B14     	 asrs r3,r3,#16
 226 017e 9BB2     	 uxth r3,r3
 227 0180 1BB2     	 sxth r3,r3
 228 0182 D7F88C20 	 ldr r2,[r7,#140]
 229 0186 92B2     	 uxth r2,r2
 230 0188 12B2     	 sxth r2,r2
 231 018a 02FB03F3 	 mul r3,r2,r3
 232 018e C7F88030 	 str r3,[r7,#128]
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul3 = (q31_t) ((q15_t) (inA2) * (q15_t) (inB1 >> 16));
 233              	 .loc 1 123 0
 234 0192 D7F88830 	 ldr r3,[r7,#136]
 235 0196 9BB2     	 uxth r3,r3
 236 0198 1BB2     	 sxth r3,r3
 237 019a D7F88C20 	 ldr r2,[r7,#140]
 238 019e 1214     	 asrs r2,r2,#16
 239 01a0 92B2     	 uxth r2,r2
 240 01a2 12B2     	 sxth r2,r2
 241 01a4 02FB03F3 	 mul r3,r2,r3
 242 01a8 FB67     	 str r3,[r7,#124]
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul4 = (q31_t) ((q15_t) (inA2 >> 16) * (q15_t) (inB1 >> 16));
 243              	 .loc 1 124 0
 244 01aa D7F88830 	 ldr r3,[r7,#136]
 245 01ae 1B14     	 asrs r3,r3,#16
 246 01b0 9BB2     	 uxth r3,r3
 247 01b2 1BB2     	 sxth r3,r3
 248 01b4 D7F88C20 	 ldr r2,[r7,#140]
 249 01b8 1214     	 asrs r2,r2,#16
 250 01ba 92B2     	 uxth r2,r2
 251 01bc 12B2     	 sxth r2,r2
 252 01be 02FB03F3 	 mul r3,r2,r3
 253 01c2 BB67     	 str r3,[r7,#120]
 254              	.LBB6:
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #else
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul2 = (q31_t) ((q15_t) (inA1 >> 16) * (q15_t) (inB1 >> 16));
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul1 = (q31_t) ((q15_t) inA1 * (q15_t) (inB1 >> 16));
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul4 = (q31_t) ((q15_t) (inA2 >> 16) * (q15_t) inB1);
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul3 = (q31_t) ((q15_t) inA2 * (q15_t) inB1);
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out1 = (q15_t) __SSAT(mul1 >> 15u, 16);
 255              	 .loc 1 135 0
 256 01c4 D7F88430 	 ldr r3,[r7,#132]
 257 01c8 DB13     	 asrs r3,r3,#15
 258 01ca 7B64     	 str r3,[r7,#68]
 259 01cc 7B6C     	 ldr r3,[r7,#68]
 260              	
 261 01ce 03F30F03 	 ssat r3,#16,r3
 262              	
 263              	 .thumb
 264 01d2 3B64     	 str r3,[r7,#64]
 265 01d4 3B6C     	 ldr r3,[r7,#64]
 266              	.LBE6:
 267 01d6 A7F86E30 	 strh r3,[r7,#110]
 268              	.LBB7:
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out2 = (q15_t) __SSAT(mul2 >> 15u, 16);
 269              	 .loc 1 136 0
 270 01da D7F88030 	 ldr r3,[r7,#128]
 271 01de DB13     	 asrs r3,r3,#15
 272 01e0 FB63     	 str r3,[r7,#60]
 273 01e2 FB6B     	 ldr r3,[r7,#60]
 274              	
 275 01e4 03F30F03 	 ssat r3,#16,r3
 276              	
 277              	 .thumb
 278 01e8 BB63     	 str r3,[r7,#56]
 279 01ea BB6B     	 ldr r3,[r7,#56]
 280              	.LBE7:
 281 01ec A7F86230 	 strh r3,[r7,#98]
 282              	.LBB8:
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out3 = (q15_t) __SSAT(mul3 >> 15u, 16);
 283              	 .loc 1 137 0
 284 01f0 FB6F     	 ldr r3,[r7,#124]
 285 01f2 DB13     	 asrs r3,r3,#15
 286 01f4 7B63     	 str r3,[r7,#52]
 287 01f6 7B6B     	 ldr r3,[r7,#52]
 288              	
 289 01f8 03F30F03 	 ssat r3,#16,r3
 290              	
 291              	 .thumb
 292 01fc 3B63     	 str r3,[r7,#48]
 293 01fe 3B6B     	 ldr r3,[r7,#48]
 294              	.LBE8:
 295 0200 A7F85630 	 strh r3,[r7,#86]
 296              	.LBB9:
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out4 = (q15_t) __SSAT(mul4 >> 15u, 16);
 297              	 .loc 1 138 0
 298 0204 BB6F     	 ldr r3,[r7,#120]
 299 0206 DB13     	 asrs r3,r3,#15
 300 0208 FB62     	 str r3,[r7,#44]
 301 020a FB6A     	 ldr r3,[r7,#44]
 302              	
 303 020c 03F30F03 	 ssat r3,#16,r3
 304              	
 305              	 .thumb
 306 0210 BB62     	 str r3,[r7,#40]
 307 0212 BB6A     	 ldr r3,[r7,#40]
 308              	.LBE9:
 309 0214 A7F84A30 	 strh r3,[r7,#74]
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *__SIMD32(pCmplxDst)++ = __PKHBT(out1, out2, 16);
 310              	 .loc 1 140 0
 311 0218 3A1D     	 adds r2,r7,#4
 312 021a 1368     	 ldr r3,[r2]
 313 021c 191D     	 adds r1,r3,#4
 314 021e 1160     	 str r1,[r2]
 315 0220 B7F96E20 	 ldrsh r2,[r7,#110]
 316 0224 91B2     	 uxth r1,r2
 317 0226 B7F96220 	 ldrsh r2,[r7,#98]
 318 022a 1204     	 lsls r2,r2,#16
 319 022c 0A43     	 orrs r2,r2,r1
 320 022e 1A60     	 str r2,[r3]
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *__SIMD32(pCmplxDst)++ = __PKHBT(out3, out4, 16);
 321              	 .loc 1 141 0
 322 0230 3A1D     	 adds r2,r7,#4
 323 0232 1368     	 ldr r3,[r2]
 324 0234 191D     	 adds r1,r3,#4
 325 0236 1160     	 str r1,[r2]
 326 0238 B7F95620 	 ldrsh r2,[r7,#86]
 327 023c 91B2     	 uxth r1,r2
 328 023e B7F94A20 	 ldrsh r2,[r7,#74]
 329 0242 1204     	 lsls r2,r2,#16
 330 0244 0A43     	 orrs r2,r2,r1
 331 0246 1A60     	 str r2,[r3]
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* Decrement the numSamples loop counter */
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     blkCnt--;
 332              	 .loc 1 144 0
 333 0248 D7F89430 	 ldr r3,[r7,#148]
 334 024c 013B     	 subs r3,r3,#1
 335 024e C7F89430 	 str r3,[r7,#148]
 336              	.L2:
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   {
 337              	 .loc 1 77 0
 338 0252 D7F89430 	 ldr r3,[r7,#148]
 339 0256 002B     	 cmp r3,#0
 340 0258 7FF4DEAE 	 bne .L3
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   }
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****    ** No loop unrolling is used. */
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   blkCnt = numSamples % 0x4u;
 341              	 .loc 1 149 0
 342 025c 3B68     	 ldr r3,[r7]
 343 025e 03F00303 	 and r3,r3,#3
 344 0262 C7F89430 	 str r3,[r7,#148]
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   while (blkCnt > 0u)
 345              	 .loc 1 151 0
 346 0266 33E0     	 b .L4
 347              	.L5:
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   {
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* C[2 * i] = A[2 * i] * B[i].            */
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i].        */
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     in = *pSrcReal++;
 348              	 .loc 1 155 0
 349 0268 BB68     	 ldr r3,[r7,#8]
 350 026a 9A1C     	 adds r2,r3,#2
 351 026c BA60     	 str r2,[r7,#8]
 352 026e 1B88     	 ldrh r3,[r3]
 353 0270 FB84     	 strh r3,[r7,#38]
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* store the result in the destination buffer. */
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *pCmplxDst++ =
 354              	 .loc 1 157 0
 355 0272 7B68     	 ldr r3,[r7,#4]
 356 0274 9A1C     	 adds r2,r3,#2
 357 0276 7A60     	 str r2,[r7,#4]
 358              	.LBB10:
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****       (q15_t) __SSAT((((q31_t) (*pSrcCmplx++) * (in)) >> 15), 16);
 359              	 .loc 1 158 0
 360 0278 FA68     	 ldr r2,[r7,#12]
 361 027a 911C     	 adds r1,r2,#2
 362 027c F960     	 str r1,[r7,#12]
 363 027e 1288     	 ldrh r2,[r2]
 364 0280 12B2     	 sxth r2,r2
 365 0282 B7F92610 	 ldrsh r1,[r7,#38]
 366 0286 01FB02F2 	 mul r2,r1,r2
 367 028a D213     	 asrs r2,r2,#15
 368 028c 3A62     	 str r2,[r7,#32]
 369 028e 3A6A     	 ldr r2,[r7,#32]
 370              	
 371 0290 02F30F02 	 ssat r2,#16,r2
 372              	
 373              	 .thumb
 374 0294 FA61     	 str r2,[r7,#28]
 375 0296 FA69     	 ldr r2,[r7,#28]
 376              	.LBE10:
 377 0298 92B2     	 uxth r2,r2
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****       (q15_t) __SSAT((((q31_t) (*pSrcCmplx++) * (in)) >> 15), 16);
 378              	 .loc 1 157 0
 379 029a 1A80     	 strh r2,[r3]
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *pCmplxDst++ =
 380              	 .loc 1 159 0
 381 029c 7B68     	 ldr r3,[r7,#4]
 382 029e 9A1C     	 adds r2,r3,#2
 383 02a0 7A60     	 str r2,[r7,#4]
 384              	.LBB11:
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****       (q15_t) __SSAT((((q31_t) (*pSrcCmplx++) * (in)) >> 15), 16);
 385              	 .loc 1 160 0
 386 02a2 FA68     	 ldr r2,[r7,#12]
 387 02a4 911C     	 adds r1,r2,#2
 388 02a6 F960     	 str r1,[r7,#12]
 389 02a8 1288     	 ldrh r2,[r2]
 390 02aa 12B2     	 sxth r2,r2
 391 02ac B7F92610 	 ldrsh r1,[r7,#38]
 392 02b0 01FB02F2 	 mul r2,r1,r2
 393 02b4 D213     	 asrs r2,r2,#15
 394 02b6 BA61     	 str r2,[r7,#24]
 395 02b8 BA69     	 ldr r2,[r7,#24]
 396              	
 397 02ba 02F30F02 	 ssat r2,#16,r2
 398              	
 399              	 .thumb
 400 02be 7A61     	 str r2,[r7,#20]
 401 02c0 7A69     	 ldr r2,[r7,#20]
 402              	.LBE11:
 403 02c2 92B2     	 uxth r2,r2
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *pCmplxDst++ =
 404              	 .loc 1 159 0
 405 02c4 1A80     	 strh r2,[r3]
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* Decrement the numSamples loop counter */
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     blkCnt--;
 406              	 .loc 1 163 0
 407 02c6 D7F89430 	 ldr r3,[r7,#148]
 408 02ca 013B     	 subs r3,r3,#1
 409 02cc C7F89430 	 str r3,[r7,#148]
 410              	.L4:
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   {
 411              	 .loc 1 151 0
 412 02d0 D7F89430 	 ldr r3,[r7,#148]
 413 02d4 002B     	 cmp r3,#0
 414 02d6 C7D1     	 bne .L5
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   }
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #else
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   /* Run the below code for Cortex-M0 */
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   while (numSamples > 0u)
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   {
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* realOut = realA * realB.            */
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* imagOut = imagA * realB.                */
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     in = *pSrcReal++;
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* store the result in the destination buffer. */
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *pCmplxDst++ =
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****       (q15_t) __SSAT((((q31_t) (*pSrcCmplx++) * (in)) >> 15), 16);
 178:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *pCmplxDst++ =
 179:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****       (q15_t) __SSAT((((q31_t) (*pSrcCmplx++) * (in)) >> 15), 16);
 180:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 181:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* Decrement the numSamples loop counter */
 182:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     numSamples--;
 183:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   }
 184:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 185:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 186:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 187:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** }
 415              	 .loc 1 187 0
 416 02d8 9C37     	 adds r7,r7,#156
 417              	.LCFI3:
 418              	 .cfi_def_cfa_offset 4
 419 02da BD46     	 mov sp,r7
 420              	.LCFI4:
 421              	 .cfi_def_cfa_register 13
 422              	 
 423 02dc 5DF8047B 	 ldr r7,[sp],#4
 424              	.LCFI5:
 425              	 .cfi_restore 7
 426              	 .cfi_def_cfa_offset 0
 427 02e0 7047     	 bx lr
 428              	 .cfi_endproc
 429              	.LFE135:
 431 02e2 00BF     	 .text
 432              	.Letext0:
 433              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 434              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 435              	 .file 4 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mult_real_q15.c
    {standard input}:20     .text.arm_cmplx_mult_real_q15:00000000 $t
    {standard input}:25     .text.arm_cmplx_mult_real_q15:00000000 arm_cmplx_mult_real_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
