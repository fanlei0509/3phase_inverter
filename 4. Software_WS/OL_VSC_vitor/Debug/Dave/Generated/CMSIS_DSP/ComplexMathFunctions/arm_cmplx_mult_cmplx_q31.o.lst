   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_cmplx_mult_cmplx_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_cmplx_mult_cmplx_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_cmplx_mult_cmplx_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_cmplx_mult_cmplx_q31:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Title:        arm_cmplx_mult_cmplx_q31.c
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Description:  Q31 complex-by-complex multiplication
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @ingroup groupCmplxMath
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @addtogroup CmplxByCmplxMult
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /**
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @brief  Q31 complex-by-complex multiplication
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @param[in]  *pSrcA points to the first input vector
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @param[in]  *pSrcB points to the second input vector
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @param[out]  *pDst  points to the output vector
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @param[in]  numSamples number of complex samples in each vector
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @return none.
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * \par
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * The function implements 1.31 by 1.31 multiplications and finally output is converted into 3.29 f
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Input down scaling is not required.
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** void arm_cmplx_mult_cmplx_q31(
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t * pSrcA,
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t * pSrcB,
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t * pDst,
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   uint32_t numSamples)
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** {
  28              	 .loc 1 60 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 28
  36              	 .cfi_offset 4,-28
  37              	 .cfi_offset 5,-24
  38              	 .cfi_offset 7,-20
  39              	 .cfi_offset 8,-16
  40              	 .cfi_offset 9,-12
  41              	 .cfi_offset 10,-8
  42              	 .cfi_offset 11,-4
  43 0004 B5B0     	 sub sp,sp,#212
  44              	.LCFI1:
  45              	 .cfi_def_cfa_offset 240
  46 0006 00AF     	 add r7,sp,#0
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 7
  49 0008 C7F89C00 	 str r0,[r7,#156]
  50 000c C7F89810 	 str r1,[r7,#152]
  51 0010 C7F89420 	 str r2,[r7,#148]
  52 0014 C7F89030 	 str r3,[r7,#144]
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t a, b, c, d;                              /* Temporary variables to store real and imaginary
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   uint32_t blkCnt;                               /* loop counters */
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t mul1, mul2, mul3, mul4;
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t out1, out2;
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #if defined (ARM_MATH_DSP)
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* loop Unrolling */
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples >> 2u;
  53              	 .loc 1 71 0
  54 0018 D7F89030 	 ldr r3,[r7,#144]
  55 001c 9B08     	 lsrs r3,r3,#2
  56 001e C7F8CC30 	 str r3,[r7,#204]
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   while (blkCnt > 0u)
  57              	 .loc 1 75 0
  58 0022 F2E2     	 b .L2
  59              	.L3:
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
  60              	 .loc 1 79 0
  61 0024 D7F89C20 	 ldr r2,[r7,#156]
  62 0028 131D     	 adds r3,r2,#4
  63 002a C7F89C30 	 str r3,[r7,#156]
  64 002e 1368     	 ldr r3,[r2]
  65 0030 C7F8C830 	 str r3,[r7,#200]
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
  66              	 .loc 1 80 0
  67 0034 D7F89C20 	 ldr r2,[r7,#156]
  68 0038 131D     	 adds r3,r2,#4
  69 003a C7F89C30 	 str r3,[r7,#156]
  70 003e 1368     	 ldr r3,[r2]
  71 0040 C7F8C430 	 str r3,[r7,#196]
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
  72              	 .loc 1 81 0
  73 0044 D7F89820 	 ldr r2,[r7,#152]
  74 0048 131D     	 adds r3,r2,#4
  75 004a C7F89830 	 str r3,[r7,#152]
  76 004e 1368     	 ldr r3,[r2]
  77 0050 C7F8C030 	 str r3,[r7,#192]
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
  78              	 .loc 1 82 0
  79 0054 D7F89820 	 ldr r2,[r7,#152]
  80 0058 131D     	 adds r3,r2,#4
  81 005a C7F89830 	 str r3,[r7,#152]
  82 005e 1368     	 ldr r3,[r2]
  83 0060 C7F8BC30 	 str r3,[r7,#188]
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
  84              	 .loc 1 84 0
  85 0064 D7F8C830 	 ldr r3,[r7,#200]
  86 0068 1846     	 mov r0,r3
  87 006a 4FEAE071 	 asr r1,r0,#31
  88 006e D7F8C030 	 ldr r3,[r7,#192]
  89 0072 1A46     	 mov r2,r3
  90 0074 4FEAE273 	 asr r3,r2,#31
  91 0078 02FB01F5 	 mul r5,r2,r1
  92 007c 00FB03F4 	 mul r4,r0,r3
  93 0080 2C44     	 add r4,r4,r5
  94 0082 A0FB0223 	 umull r2,r3,r0,r2
  95 0086 E118     	 adds r1,r4,r3
  96 0088 0B46     	 mov r3,r1
  97 008a 1900     	 movs r1,r3
  98 008c C7F88810 	 str r1,[r7,#136]
  99 0090 DB17     	 asrs r3,r3,#31
 100 0092 C7F88C30 	 str r3,[r7,#140]
 101 0096 D7F88830 	 ldr r3,[r7,#136]
 102 009a C7F8B830 	 str r3,[r7,#184]
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 103              	 .loc 1 85 0
 104 009e D7F8C430 	 ldr r3,[r7,#196]
 105 00a2 1846     	 mov r0,r3
 106 00a4 4FEAE071 	 asr r1,r0,#31
 107 00a8 D7F8BC30 	 ldr r3,[r7,#188]
 108 00ac 1A46     	 mov r2,r3
 109 00ae 4FEAE273 	 asr r3,r2,#31
 110 00b2 02FB01F5 	 mul r5,r2,r1
 111 00b6 00FB03F4 	 mul r4,r0,r3
 112 00ba 2C44     	 add r4,r4,r5
 113 00bc A0FB0223 	 umull r2,r3,r0,r2
 114 00c0 E118     	 adds r1,r4,r3
 115 00c2 0B46     	 mov r3,r1
 116 00c4 1900     	 movs r1,r3
 117 00c6 C7F88010 	 str r1,[r7,#128]
 118 00ca DB17     	 asrs r3,r3,#31
 119 00cc C7F88430 	 str r3,[r7,#132]
 120 00d0 D7F88030 	 ldr r3,[r7,#128]
 121 00d4 C7F8B430 	 str r3,[r7,#180]
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 122              	 .loc 1 86 0
 123 00d8 D7F8C830 	 ldr r3,[r7,#200]
 124 00dc 1846     	 mov r0,r3
 125 00de 4FEAE071 	 asr r1,r0,#31
 126 00e2 D7F8BC30 	 ldr r3,[r7,#188]
 127 00e6 1A46     	 mov r2,r3
 128 00e8 4FEAE273 	 asr r3,r2,#31
 129 00ec 02FB01F5 	 mul r5,r2,r1
 130 00f0 00FB03F4 	 mul r4,r0,r3
 131 00f4 2C44     	 add r4,r4,r5
 132 00f6 A0FB0223 	 umull r2,r3,r0,r2
 133 00fa E118     	 adds r1,r4,r3
 134 00fc 0B46     	 mov r3,r1
 135 00fe 1900     	 movs r1,r3
 136 0100 B967     	 str r1,[r7,#120]
 137 0102 DB17     	 asrs r3,r3,#31
 138 0104 FB67     	 str r3,[r7,#124]
 139 0106 BB6F     	 ldr r3,[r7,#120]
 140 0108 C7F8B030 	 str r3,[r7,#176]
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 141              	 .loc 1 87 0
 142 010c D7F8C430 	 ldr r3,[r7,#196]
 143 0110 1846     	 mov r0,r3
 144 0112 4FEAE071 	 asr r1,r0,#31
 145 0116 D7F8C030 	 ldr r3,[r7,#192]
 146 011a 1A46     	 mov r2,r3
 147 011c 4FEAE273 	 asr r3,r2,#31
 148 0120 02FB01F5 	 mul r5,r2,r1
 149 0124 00FB03F4 	 mul r4,r0,r3
 150 0128 2C44     	 add r4,r4,r5
 151 012a A0FB0223 	 umull r2,r3,r0,r2
 152 012e E118     	 adds r1,r4,r3
 153 0130 0B46     	 mov r3,r1
 154 0132 1900     	 movs r1,r3
 155 0134 3967     	 str r1,[r7,#112]
 156 0136 DB17     	 asrs r3,r3,#31
 157 0138 7B67     	 str r3,[r7,#116]
 158 013a 3B6F     	 ldr r3,[r7,#112]
 159 013c C7F8AC30 	 str r3,[r7,#172]
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 160              	 .loc 1 89 0
 161 0140 D7F8B830 	 ldr r3,[r7,#184]
 162 0144 5B10     	 asrs r3,r3,#1
 163 0146 C7F8B830 	 str r3,[r7,#184]
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 164              	 .loc 1 90 0
 165 014a D7F8B430 	 ldr r3,[r7,#180]
 166 014e 5B10     	 asrs r3,r3,#1
 167 0150 C7F8B430 	 str r3,[r7,#180]
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 168              	 .loc 1 91 0
 169 0154 D7F8B030 	 ldr r3,[r7,#176]
 170 0158 5B10     	 asrs r3,r3,#1
 171 015a C7F8B030 	 str r3,[r7,#176]
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 172              	 .loc 1 92 0
 173 015e D7F8AC30 	 ldr r3,[r7,#172]
 174 0162 5B10     	 asrs r3,r3,#1
 175 0164 C7F8AC30 	 str r3,[r7,#172]
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 176              	 .loc 1 94 0
 177 0168 D7F8B820 	 ldr r2,[r7,#184]
 178 016c D7F8B430 	 ldr r3,[r7,#180]
 179 0170 D31A     	 subs r3,r2,r3
 180 0172 C7F8A830 	 str r3,[r7,#168]
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 181              	 .loc 1 95 0
 182 0176 D7F8B020 	 ldr r2,[r7,#176]
 183 017a D7F8AC30 	 ldr r3,[r7,#172]
 184 017e 1344     	 add r3,r3,r2
 185 0180 C7F8A430 	 str r3,[r7,#164]
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 186              	 .loc 1 98 0
 187 0184 D7F89420 	 ldr r2,[r7,#148]
 188 0188 131D     	 adds r3,r2,#4
 189 018a C7F89430 	 str r3,[r7,#148]
 190 018e D7F8A830 	 ldr r3,[r7,#168]
 191 0192 1360     	 str r3,[r2]
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 192              	 .loc 1 100 0
 193 0194 D7F89420 	 ldr r2,[r7,#148]
 194 0198 131D     	 adds r3,r2,#4
 195 019a C7F89430 	 str r3,[r7,#148]
 196 019e D7F8A430 	 ldr r3,[r7,#164]
 197 01a2 1360     	 str r3,[r2]
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 198              	 .loc 1 102 0
 199 01a4 D7F89C20 	 ldr r2,[r7,#156]
 200 01a8 131D     	 adds r3,r2,#4
 201 01aa C7F89C30 	 str r3,[r7,#156]
 202 01ae 1368     	 ldr r3,[r2]
 203 01b0 C7F8C830 	 str r3,[r7,#200]
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 204              	 .loc 1 103 0
 205 01b4 D7F89C20 	 ldr r2,[r7,#156]
 206 01b8 131D     	 adds r3,r2,#4
 207 01ba C7F89C30 	 str r3,[r7,#156]
 208 01be 1368     	 ldr r3,[r2]
 209 01c0 C7F8C430 	 str r3,[r7,#196]
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 210              	 .loc 1 104 0
 211 01c4 D7F89820 	 ldr r2,[r7,#152]
 212 01c8 131D     	 adds r3,r2,#4
 213 01ca C7F89830 	 str r3,[r7,#152]
 214 01ce 1368     	 ldr r3,[r2]
 215 01d0 C7F8C030 	 str r3,[r7,#192]
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 216              	 .loc 1 105 0
 217 01d4 D7F89820 	 ldr r2,[r7,#152]
 218 01d8 131D     	 adds r3,r2,#4
 219 01da C7F89830 	 str r3,[r7,#152]
 220 01de 1368     	 ldr r3,[r2]
 221 01e0 C7F8BC30 	 str r3,[r7,#188]
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 222              	 .loc 1 107 0
 223 01e4 D7F8C830 	 ldr r3,[r7,#200]
 224 01e8 1846     	 mov r0,r3
 225 01ea 4FEAE071 	 asr r1,r0,#31
 226 01ee D7F8C030 	 ldr r3,[r7,#192]
 227 01f2 1A46     	 mov r2,r3
 228 01f4 4FEAE273 	 asr r3,r2,#31
 229 01f8 02FB01F5 	 mul r5,r2,r1
 230 01fc 00FB03F4 	 mul r4,r0,r3
 231 0200 2C44     	 add r4,r4,r5
 232 0202 A0FB0223 	 umull r2,r3,r0,r2
 233 0206 E118     	 adds r1,r4,r3
 234 0208 0B46     	 mov r3,r1
 235 020a 1900     	 movs r1,r3
 236 020c B966     	 str r1,[r7,#104]
 237 020e DB17     	 asrs r3,r3,#31
 238 0210 FB66     	 str r3,[r7,#108]
 239 0212 BB6E     	 ldr r3,[r7,#104]
 240 0214 C7F8B830 	 str r3,[r7,#184]
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 241              	 .loc 1 108 0
 242 0218 D7F8C430 	 ldr r3,[r7,#196]
 243 021c 1846     	 mov r0,r3
 244 021e 4FEAE071 	 asr r1,r0,#31
 245 0222 D7F8BC30 	 ldr r3,[r7,#188]
 246 0226 1A46     	 mov r2,r3
 247 0228 4FEAE273 	 asr r3,r2,#31
 248 022c 02FB01F5 	 mul r5,r2,r1
 249 0230 00FB03F4 	 mul r4,r0,r3
 250 0234 2C44     	 add r4,r4,r5
 251 0236 A0FB0223 	 umull r2,r3,r0,r2
 252 023a E118     	 adds r1,r4,r3
 253 023c 0B46     	 mov r3,r1
 254 023e 1900     	 movs r1,r3
 255 0240 3966     	 str r1,[r7,#96]
 256 0242 DB17     	 asrs r3,r3,#31
 257 0244 7B66     	 str r3,[r7,#100]
 258 0246 3B6E     	 ldr r3,[r7,#96]
 259 0248 C7F8B430 	 str r3,[r7,#180]
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 260              	 .loc 1 109 0
 261 024c D7F8C830 	 ldr r3,[r7,#200]
 262 0250 1846     	 mov r0,r3
 263 0252 4FEAE071 	 asr r1,r0,#31
 264 0256 D7F8BC30 	 ldr r3,[r7,#188]
 265 025a 1A46     	 mov r2,r3
 266 025c 4FEAE273 	 asr r3,r2,#31
 267 0260 02FB01F5 	 mul r5,r2,r1
 268 0264 00FB03F4 	 mul r4,r0,r3
 269 0268 2C44     	 add r4,r4,r5
 270 026a A0FB0223 	 umull r2,r3,r0,r2
 271 026e E118     	 adds r1,r4,r3
 272 0270 0B46     	 mov r3,r1
 273 0272 1900     	 movs r1,r3
 274 0274 B965     	 str r1,[r7,#88]
 275 0276 DB17     	 asrs r3,r3,#31
 276 0278 FB65     	 str r3,[r7,#92]
 277 027a BB6D     	 ldr r3,[r7,#88]
 278 027c C7F8B030 	 str r3,[r7,#176]
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 279              	 .loc 1 110 0
 280 0280 D7F8C430 	 ldr r3,[r7,#196]
 281 0284 1846     	 mov r0,r3
 282 0286 4FEAE071 	 asr r1,r0,#31
 283 028a D7F8C030 	 ldr r3,[r7,#192]
 284 028e 1A46     	 mov r2,r3
 285 0290 4FEAE273 	 asr r3,r2,#31
 286 0294 02FB01F5 	 mul r5,r2,r1
 287 0298 00FB03F4 	 mul r4,r0,r3
 288 029c 2C44     	 add r4,r4,r5
 289 029e A0FB0223 	 umull r2,r3,r0,r2
 290 02a2 E118     	 adds r1,r4,r3
 291 02a4 0B46     	 mov r3,r1
 292 02a6 1900     	 movs r1,r3
 293 02a8 3965     	 str r1,[r7,#80]
 294 02aa DB17     	 asrs r3,r3,#31
 295 02ac 7B65     	 str r3,[r7,#84]
 296 02ae 3B6D     	 ldr r3,[r7,#80]
 297 02b0 C7F8AC30 	 str r3,[r7,#172]
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 298              	 .loc 1 112 0
 299 02b4 D7F8B830 	 ldr r3,[r7,#184]
 300 02b8 5B10     	 asrs r3,r3,#1
 301 02ba C7F8B830 	 str r3,[r7,#184]
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 302              	 .loc 1 113 0
 303 02be D7F8B430 	 ldr r3,[r7,#180]
 304 02c2 5B10     	 asrs r3,r3,#1
 305 02c4 C7F8B430 	 str r3,[r7,#180]
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 306              	 .loc 1 114 0
 307 02c8 D7F8B030 	 ldr r3,[r7,#176]
 308 02cc 5B10     	 asrs r3,r3,#1
 309 02ce C7F8B030 	 str r3,[r7,#176]
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 310              	 .loc 1 115 0
 311 02d2 D7F8AC30 	 ldr r3,[r7,#172]
 312 02d6 5B10     	 asrs r3,r3,#1
 313 02d8 C7F8AC30 	 str r3,[r7,#172]
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 314              	 .loc 1 117 0
 315 02dc D7F8B820 	 ldr r2,[r7,#184]
 316 02e0 D7F8B430 	 ldr r3,[r7,#180]
 317 02e4 D31A     	 subs r3,r2,r3
 318 02e6 C7F8A830 	 str r3,[r7,#168]
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 319              	 .loc 1 118 0
 320 02ea D7F8B020 	 ldr r2,[r7,#176]
 321 02ee D7F8AC30 	 ldr r3,[r7,#172]
 322 02f2 1344     	 add r3,r3,r2
 323 02f4 C7F8A430 	 str r3,[r7,#164]
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 324              	 .loc 1 121 0
 325 02f8 D7F89420 	 ldr r2,[r7,#148]
 326 02fc 131D     	 adds r3,r2,#4
 327 02fe C7F89430 	 str r3,[r7,#148]
 328 0302 D7F8A830 	 ldr r3,[r7,#168]
 329 0306 1360     	 str r3,[r2]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 330              	 .loc 1 123 0
 331 0308 D7F89420 	 ldr r2,[r7,#148]
 332 030c 131D     	 adds r3,r2,#4
 333 030e C7F89430 	 str r3,[r7,#148]
 334 0312 D7F8A430 	 ldr r3,[r7,#164]
 335 0316 1360     	 str r3,[r2]
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 336              	 .loc 1 125 0
 337 0318 D7F89C20 	 ldr r2,[r7,#156]
 338 031c 131D     	 adds r3,r2,#4
 339 031e C7F89C30 	 str r3,[r7,#156]
 340 0322 1368     	 ldr r3,[r2]
 341 0324 C7F8C830 	 str r3,[r7,#200]
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 342              	 .loc 1 126 0
 343 0328 D7F89C20 	 ldr r2,[r7,#156]
 344 032c 131D     	 adds r3,r2,#4
 345 032e C7F89C30 	 str r3,[r7,#156]
 346 0332 1368     	 ldr r3,[r2]
 347 0334 C7F8C430 	 str r3,[r7,#196]
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 348              	 .loc 1 127 0
 349 0338 D7F89820 	 ldr r2,[r7,#152]
 350 033c 131D     	 adds r3,r2,#4
 351 033e C7F89830 	 str r3,[r7,#152]
 352 0342 1368     	 ldr r3,[r2]
 353 0344 C7F8C030 	 str r3,[r7,#192]
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 354              	 .loc 1 128 0
 355 0348 D7F89820 	 ldr r2,[r7,#152]
 356 034c 131D     	 adds r3,r2,#4
 357 034e C7F89830 	 str r3,[r7,#152]
 358 0352 1368     	 ldr r3,[r2]
 359 0354 C7F8BC30 	 str r3,[r7,#188]
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 360              	 .loc 1 130 0
 361 0358 D7F8C830 	 ldr r3,[r7,#200]
 362 035c 1846     	 mov r0,r3
 363 035e 4FEAE071 	 asr r1,r0,#31
 364 0362 D7F8C030 	 ldr r3,[r7,#192]
 365 0366 1A46     	 mov r2,r3
 366 0368 4FEAE273 	 asr r3,r2,#31
 367 036c 02FB01F5 	 mul r5,r2,r1
 368 0370 00FB03F4 	 mul r4,r0,r3
 369 0374 2C44     	 add r4,r4,r5
 370 0376 A0FB0223 	 umull r2,r3,r0,r2
 371 037a E118     	 adds r1,r4,r3
 372 037c 0B46     	 mov r3,r1
 373 037e 1900     	 movs r1,r3
 374 0380 B964     	 str r1,[r7,#72]
 375 0382 DB17     	 asrs r3,r3,#31
 376 0384 FB64     	 str r3,[r7,#76]
 377 0386 BB6C     	 ldr r3,[r7,#72]
 378 0388 C7F8B830 	 str r3,[r7,#184]
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 379              	 .loc 1 131 0
 380 038c D7F8C430 	 ldr r3,[r7,#196]
 381 0390 1846     	 mov r0,r3
 382 0392 4FEAE071 	 asr r1,r0,#31
 383 0396 D7F8BC30 	 ldr r3,[r7,#188]
 384 039a 1A46     	 mov r2,r3
 385 039c 4FEAE273 	 asr r3,r2,#31
 386 03a0 02FB01F5 	 mul r5,r2,r1
 387 03a4 00FB03F4 	 mul r4,r0,r3
 388 03a8 2C44     	 add r4,r4,r5
 389 03aa A0FB0223 	 umull r2,r3,r0,r2
 390 03ae E118     	 adds r1,r4,r3
 391 03b0 0B46     	 mov r3,r1
 392 03b2 1900     	 movs r1,r3
 393 03b4 3964     	 str r1,[r7,#64]
 394 03b6 DB17     	 asrs r3,r3,#31
 395 03b8 7B64     	 str r3,[r7,#68]
 396 03ba 3B6C     	 ldr r3,[r7,#64]
 397 03bc C7F8B430 	 str r3,[r7,#180]
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 398              	 .loc 1 132 0
 399 03c0 D7F8C830 	 ldr r3,[r7,#200]
 400 03c4 1846     	 mov r0,r3
 401 03c6 4FEAE071 	 asr r1,r0,#31
 402 03ca D7F8BC30 	 ldr r3,[r7,#188]
 403 03ce 1A46     	 mov r2,r3
 404 03d0 4FEAE273 	 asr r3,r2,#31
 405 03d4 02FB01F5 	 mul r5,r2,r1
 406 03d8 00FB03F4 	 mul r4,r0,r3
 407 03dc 2C44     	 add r4,r4,r5
 408 03de A0FB0223 	 umull r2,r3,r0,r2
 409 03e2 E118     	 adds r1,r4,r3
 410 03e4 0B46     	 mov r3,r1
 411 03e6 1900     	 movs r1,r3
 412 03e8 B963     	 str r1,[r7,#56]
 413 03ea DB17     	 asrs r3,r3,#31
 414 03ec FB63     	 str r3,[r7,#60]
 415 03ee BB6B     	 ldr r3,[r7,#56]
 416 03f0 C7F8B030 	 str r3,[r7,#176]
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 417              	 .loc 1 133 0
 418 03f4 D7F8C430 	 ldr r3,[r7,#196]
 419 03f8 1846     	 mov r0,r3
 420 03fa 4FEAE071 	 asr r1,r0,#31
 421 03fe D7F8C030 	 ldr r3,[r7,#192]
 422 0402 1A46     	 mov r2,r3
 423 0404 4FEAE273 	 asr r3,r2,#31
 424 0408 02FB01F5 	 mul r5,r2,r1
 425 040c 00FB03F4 	 mul r4,r0,r3
 426 0410 2C44     	 add r4,r4,r5
 427 0412 A0FB0223 	 umull r2,r3,r0,r2
 428 0416 E118     	 adds r1,r4,r3
 429 0418 0B46     	 mov r3,r1
 430 041a 1900     	 movs r1,r3
 431 041c 3963     	 str r1,[r7,#48]
 432 041e DB17     	 asrs r3,r3,#31
 433 0420 7B63     	 str r3,[r7,#52]
 434 0422 3B6B     	 ldr r3,[r7,#48]
 435 0424 C7F8AC30 	 str r3,[r7,#172]
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 436              	 .loc 1 135 0
 437 0428 D7F8B830 	 ldr r3,[r7,#184]
 438 042c 5B10     	 asrs r3,r3,#1
 439 042e C7F8B830 	 str r3,[r7,#184]
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 440              	 .loc 1 136 0
 441 0432 D7F8B430 	 ldr r3,[r7,#180]
 442 0436 5B10     	 asrs r3,r3,#1
 443 0438 C7F8B430 	 str r3,[r7,#180]
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 444              	 .loc 1 137 0
 445 043c D7F8B030 	 ldr r3,[r7,#176]
 446 0440 5B10     	 asrs r3,r3,#1
 447 0442 C7F8B030 	 str r3,[r7,#176]
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 448              	 .loc 1 138 0
 449 0446 D7F8AC30 	 ldr r3,[r7,#172]
 450 044a 5B10     	 asrs r3,r3,#1
 451 044c C7F8AC30 	 str r3,[r7,#172]
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 452              	 .loc 1 140 0
 453 0450 D7F8B820 	 ldr r2,[r7,#184]
 454 0454 D7F8B430 	 ldr r3,[r7,#180]
 455 0458 D31A     	 subs r3,r2,r3
 456 045a C7F8A830 	 str r3,[r7,#168]
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 457              	 .loc 1 141 0
 458 045e D7F8B020 	 ldr r2,[r7,#176]
 459 0462 D7F8AC30 	 ldr r3,[r7,#172]
 460 0466 1344     	 add r3,r3,r2
 461 0468 C7F8A430 	 str r3,[r7,#164]
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 462              	 .loc 1 144 0
 463 046c D7F89420 	 ldr r2,[r7,#148]
 464 0470 131D     	 adds r3,r2,#4
 465 0472 C7F89430 	 str r3,[r7,#148]
 466 0476 D7F8A830 	 ldr r3,[r7,#168]
 467 047a 1360     	 str r3,[r2]
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 468              	 .loc 1 146 0
 469 047c D7F89420 	 ldr r2,[r7,#148]
 470 0480 131D     	 adds r3,r2,#4
 471 0482 C7F89430 	 str r3,[r7,#148]
 472 0486 D7F8A430 	 ldr r3,[r7,#164]
 473 048a 1360     	 str r3,[r2]
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 474              	 .loc 1 148 0
 475 048c D7F89C20 	 ldr r2,[r7,#156]
 476 0490 131D     	 adds r3,r2,#4
 477 0492 C7F89C30 	 str r3,[r7,#156]
 478 0496 1368     	 ldr r3,[r2]
 479 0498 C7F8C830 	 str r3,[r7,#200]
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 480              	 .loc 1 149 0
 481 049c D7F89C20 	 ldr r2,[r7,#156]
 482 04a0 131D     	 adds r3,r2,#4
 483 04a2 C7F89C30 	 str r3,[r7,#156]
 484 04a6 1368     	 ldr r3,[r2]
 485 04a8 C7F8C430 	 str r3,[r7,#196]
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 486              	 .loc 1 150 0
 487 04ac D7F89820 	 ldr r2,[r7,#152]
 488 04b0 131D     	 adds r3,r2,#4
 489 04b2 C7F89830 	 str r3,[r7,#152]
 490 04b6 1368     	 ldr r3,[r2]
 491 04b8 C7F8C030 	 str r3,[r7,#192]
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 492              	 .loc 1 151 0
 493 04bc D7F89820 	 ldr r2,[r7,#152]
 494 04c0 131D     	 adds r3,r2,#4
 495 04c2 C7F89830 	 str r3,[r7,#152]
 496 04c6 1368     	 ldr r3,[r2]
 497 04c8 C7F8BC30 	 str r3,[r7,#188]
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 498              	 .loc 1 153 0
 499 04cc D7F8C830 	 ldr r3,[r7,#200]
 500 04d0 1846     	 mov r0,r3
 501 04d2 4FEAE071 	 asr r1,r0,#31
 502 04d6 D7F8C030 	 ldr r3,[r7,#192]
 503 04da 1A46     	 mov r2,r3
 504 04dc 4FEAE273 	 asr r3,r2,#31
 505 04e0 02FB01F5 	 mul r5,r2,r1
 506 04e4 00FB03F4 	 mul r4,r0,r3
 507 04e8 2C44     	 add r4,r4,r5
 508 04ea A0FB0223 	 umull r2,r3,r0,r2
 509 04ee E118     	 adds r1,r4,r3
 510 04f0 0B46     	 mov r3,r1
 511 04f2 1900     	 movs r1,r3
 512 04f4 B962     	 str r1,[r7,#40]
 513 04f6 DB17     	 asrs r3,r3,#31
 514 04f8 FB62     	 str r3,[r7,#44]
 515 04fa BB6A     	 ldr r3,[r7,#40]
 516 04fc C7F8B830 	 str r3,[r7,#184]
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 517              	 .loc 1 154 0
 518 0500 D7F8C430 	 ldr r3,[r7,#196]
 519 0504 1846     	 mov r0,r3
 520 0506 4FEAE071 	 asr r1,r0,#31
 521 050a D7F8BC30 	 ldr r3,[r7,#188]
 522 050e 1A46     	 mov r2,r3
 523 0510 4FEAE273 	 asr r3,r2,#31
 524 0514 02FB01F5 	 mul r5,r2,r1
 525 0518 00FB03F4 	 mul r4,r0,r3
 526 051c 2C44     	 add r4,r4,r5
 527 051e A0FB0223 	 umull r2,r3,r0,r2
 528 0522 E118     	 adds r1,r4,r3
 529 0524 0B46     	 mov r3,r1
 530 0526 1900     	 movs r1,r3
 531 0528 3962     	 str r1,[r7,#32]
 532 052a DB17     	 asrs r3,r3,#31
 533 052c 7B62     	 str r3,[r7,#36]
 534 052e 3B6A     	 ldr r3,[r7,#32]
 535 0530 C7F8B430 	 str r3,[r7,#180]
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 536              	 .loc 1 155 0
 537 0534 D7F8C830 	 ldr r3,[r7,#200]
 538 0538 1846     	 mov r0,r3
 539 053a 4FEAE071 	 asr r1,r0,#31
 540 053e D7F8BC30 	 ldr r3,[r7,#188]
 541 0542 1A46     	 mov r2,r3
 542 0544 4FEAE273 	 asr r3,r2,#31
 543 0548 02FB01F5 	 mul r5,r2,r1
 544 054c 00FB03F4 	 mul r4,r0,r3
 545 0550 2C44     	 add r4,r4,r5
 546 0552 A0FB0223 	 umull r2,r3,r0,r2
 547 0556 E118     	 adds r1,r4,r3
 548 0558 0B46     	 mov r3,r1
 549 055a 1900     	 movs r1,r3
 550 055c B961     	 str r1,[r7,#24]
 551 055e DB17     	 asrs r3,r3,#31
 552 0560 FB61     	 str r3,[r7,#28]
 553 0562 BB69     	 ldr r3,[r7,#24]
 554 0564 C7F8B030 	 str r3,[r7,#176]
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 555              	 .loc 1 156 0
 556 0568 D7F8C430 	 ldr r3,[r7,#196]
 557 056c 1846     	 mov r0,r3
 558 056e 4FEAE071 	 asr r1,r0,#31
 559 0572 D7F8C030 	 ldr r3,[r7,#192]
 560 0576 1A46     	 mov r2,r3
 561 0578 4FEAE273 	 asr r3,r2,#31
 562 057c 02FB01F5 	 mul r5,r2,r1
 563 0580 00FB03F4 	 mul r4,r0,r3
 564 0584 2C44     	 add r4,r4,r5
 565 0586 A0FB0223 	 umull r2,r3,r0,r2
 566 058a E118     	 adds r1,r4,r3
 567 058c 0B46     	 mov r3,r1
 568 058e 1900     	 movs r1,r3
 569 0590 3961     	 str r1,[r7,#16]
 570 0592 DB17     	 asrs r3,r3,#31
 571 0594 7B61     	 str r3,[r7,#20]
 572 0596 3B69     	 ldr r3,[r7,#16]
 573 0598 C7F8AC30 	 str r3,[r7,#172]
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 574              	 .loc 1 158 0
 575 059c D7F8B830 	 ldr r3,[r7,#184]
 576 05a0 5B10     	 asrs r3,r3,#1
 577 05a2 C7F8B830 	 str r3,[r7,#184]
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 578              	 .loc 1 159 0
 579 05a6 D7F8B430 	 ldr r3,[r7,#180]
 580 05aa 5B10     	 asrs r3,r3,#1
 581 05ac C7F8B430 	 str r3,[r7,#180]
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 582              	 .loc 1 160 0
 583 05b0 D7F8B030 	 ldr r3,[r7,#176]
 584 05b4 5B10     	 asrs r3,r3,#1
 585 05b6 C7F8B030 	 str r3,[r7,#176]
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 586              	 .loc 1 161 0
 587 05ba D7F8AC30 	 ldr r3,[r7,#172]
 588 05be 5B10     	 asrs r3,r3,#1
 589 05c0 C7F8AC30 	 str r3,[r7,#172]
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 590              	 .loc 1 163 0
 591 05c4 D7F8B820 	 ldr r2,[r7,#184]
 592 05c8 D7F8B430 	 ldr r3,[r7,#180]
 593 05cc D31A     	 subs r3,r2,r3
 594 05ce C7F8A830 	 str r3,[r7,#168]
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 595              	 .loc 1 164 0
 596 05d2 D7F8B020 	 ldr r2,[r7,#176]
 597 05d6 D7F8AC30 	 ldr r3,[r7,#172]
 598 05da 1344     	 add r3,r3,r2
 599 05dc C7F8A430 	 str r3,[r7,#164]
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 600              	 .loc 1 167 0
 601 05e0 D7F89420 	 ldr r2,[r7,#148]
 602 05e4 131D     	 adds r3,r2,#4
 603 05e6 C7F89430 	 str r3,[r7,#148]
 604 05ea D7F8A830 	 ldr r3,[r7,#168]
 605 05ee 1360     	 str r3,[r2]
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 606              	 .loc 1 169 0
 607 05f0 D7F89420 	 ldr r2,[r7,#148]
 608 05f4 131D     	 adds r3,r2,#4
 609 05f6 C7F89430 	 str r3,[r7,#148]
 610 05fa D7F8A430 	 ldr r3,[r7,#164]
 611 05fe 1360     	 str r3,[r2]
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* Decrement the blockSize loop counter */
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     blkCnt--;
 612              	 .loc 1 172 0
 613 0600 D7F8CC30 	 ldr r3,[r7,#204]
 614 0604 013B     	 subs r3,r3,#1
 615 0606 C7F8CC30 	 str r3,[r7,#204]
 616              	.L2:
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 617              	 .loc 1 75 0
 618 060a D7F8CC30 	 ldr r3,[r7,#204]
 619 060e 002B     	 cmp r3,#0
 620 0610 7FF408AD 	 bne .L3
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   }
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****    ** No loop unrolling is used. */
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples % 0x4u;
 621              	 .loc 1 177 0
 622 0614 D7F89030 	 ldr r3,[r7,#144]
 623 0618 03F00303 	 and r3,r3,#3
 624 061c C7F8CC30 	 str r3,[r7,#204]
 178:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 179:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   while (blkCnt > 0u)
 625              	 .loc 1 179 0
 626 0620 BCE0     	 b .L4
 627              	.L5:
 180:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 181:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 182:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 183:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 628              	 .loc 1 183 0
 629 0622 D7F89C30 	 ldr r3,[r7,#156]
 630 0626 1A1D     	 adds r2,r3,#4
 631 0628 C7F89C20 	 str r2,[r7,#156]
 632 062c 1B68     	 ldr r3,[r3]
 633 062e C7F8C830 	 str r3,[r7,#200]
 184:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 634              	 .loc 1 184 0
 635 0632 D7F89C30 	 ldr r3,[r7,#156]
 636 0636 1A1D     	 adds r2,r3,#4
 637 0638 C7F89C20 	 str r2,[r7,#156]
 638 063c 1B68     	 ldr r3,[r3]
 639 063e C7F8C430 	 str r3,[r7,#196]
 185:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 640              	 .loc 1 185 0
 641 0642 D7F89830 	 ldr r3,[r7,#152]
 642 0646 1A1D     	 adds r2,r3,#4
 643 0648 C7F89820 	 str r2,[r7,#152]
 644 064c 1B68     	 ldr r3,[r3]
 645 064e C7F8C030 	 str r3,[r7,#192]
 186:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 646              	 .loc 1 186 0
 647 0652 D7F89830 	 ldr r3,[r7,#152]
 648 0656 1A1D     	 adds r2,r3,#4
 649 0658 C7F89820 	 str r2,[r7,#152]
 650 065c 1B68     	 ldr r3,[r3]
 651 065e C7F8BC30 	 str r3,[r7,#188]
 187:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 188:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 652              	 .loc 1 188 0
 653 0662 D7F8C830 	 ldr r3,[r7,#200]
 654 0666 1846     	 mov r0,r3
 655 0668 4FEAE071 	 asr r1,r0,#31
 656 066c D7F8C030 	 ldr r3,[r7,#192]
 657 0670 1A46     	 mov r2,r3
 658 0672 4FEAE273 	 asr r3,r2,#31
 659 0676 02FB01F5 	 mul r5,r2,r1
 660 067a 00FB03F4 	 mul r4,r0,r3
 661 067e 2C44     	 add r4,r4,r5
 662 0680 A0FB0223 	 umull r2,r3,r0,r2
 663 0684 E118     	 adds r1,r4,r3
 664 0686 0B46     	 mov r3,r1
 665 0688 9846     	 mov r8,r3
 666 068a 4FEAE379 	 asr r9,r3,#31
 667 068e 4346     	 mov r3,r8
 668 0690 C7F8B830 	 str r3,[r7,#184]
 189:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 669              	 .loc 1 189 0
 670 0694 D7F8C430 	 ldr r3,[r7,#196]
 671 0698 1846     	 mov r0,r3
 672 069a 4FEAE071 	 asr r1,r0,#31
 673 069e D7F8BC30 	 ldr r3,[r7,#188]
 674 06a2 1A46     	 mov r2,r3
 675 06a4 4FEAE273 	 asr r3,r2,#31
 676 06a8 02FB01F5 	 mul r5,r2,r1
 677 06ac 00FB03F4 	 mul r4,r0,r3
 678 06b0 2C44     	 add r4,r4,r5
 679 06b2 A0FB0223 	 umull r2,r3,r0,r2
 680 06b6 E118     	 adds r1,r4,r3
 681 06b8 0B46     	 mov r3,r1
 682 06ba 9A46     	 mov r10,r3
 683 06bc 4FEAE37B 	 asr fp,r3,#31
 684 06c0 5346     	 mov r3,r10
 685 06c2 C7F8B430 	 str r3,[r7,#180]
 190:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 686              	 .loc 1 190 0
 687 06c6 D7F8C830 	 ldr r3,[r7,#200]
 688 06ca 1846     	 mov r0,r3
 689 06cc 4FEAE071 	 asr r1,r0,#31
 690 06d0 D7F8BC30 	 ldr r3,[r7,#188]
 691 06d4 1A46     	 mov r2,r3
 692 06d6 4FEAE273 	 asr r3,r2,#31
 693 06da 02FB01F5 	 mul r5,r2,r1
 694 06de 00FB03F4 	 mul r4,r0,r3
 695 06e2 2C44     	 add r4,r4,r5
 696 06e4 A0FB0223 	 umull r2,r3,r0,r2
 697 06e8 E118     	 adds r1,r4,r3
 698 06ea 0B46     	 mov r3,r1
 699 06ec 1900     	 movs r1,r3
 700 06ee B960     	 str r1,[r7,#8]
 701 06f0 DB17     	 asrs r3,r3,#31
 702 06f2 FB60     	 str r3,[r7,#12]
 703 06f4 BB68     	 ldr r3,[r7,#8]
 704 06f6 C7F8B030 	 str r3,[r7,#176]
 191:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 705              	 .loc 1 191 0
 706 06fa D7F8C430 	 ldr r3,[r7,#196]
 707 06fe 1846     	 mov r0,r3
 708 0700 4FEAE071 	 asr r1,r0,#31
 709 0704 D7F8C030 	 ldr r3,[r7,#192]
 710 0708 1A46     	 mov r2,r3
 711 070a 4FEAE273 	 asr r3,r2,#31
 712 070e 02FB01F5 	 mul r5,r2,r1
 713 0712 00FB03F4 	 mul r4,r0,r3
 714 0716 2C44     	 add r4,r4,r5
 715 0718 A0FB0223 	 umull r2,r3,r0,r2
 716 071c E118     	 adds r1,r4,r3
 717 071e 0B46     	 mov r3,r1
 718 0720 1900     	 movs r1,r3
 719 0722 3960     	 str r1,[r7]
 720 0724 DB17     	 asrs r3,r3,#31
 721 0726 7B60     	 str r3,[r7,#4]
 722 0728 3B68     	 ldr r3,[r7]
 723 072a C7F8AC30 	 str r3,[r7,#172]
 192:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 193:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 724              	 .loc 1 193 0
 725 072e D7F8B830 	 ldr r3,[r7,#184]
 726 0732 5B10     	 asrs r3,r3,#1
 727 0734 C7F8B830 	 str r3,[r7,#184]
 194:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 728              	 .loc 1 194 0
 729 0738 D7F8B430 	 ldr r3,[r7,#180]
 730 073c 5B10     	 asrs r3,r3,#1
 731 073e C7F8B430 	 str r3,[r7,#180]
 195:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 732              	 .loc 1 195 0
 733 0742 D7F8B030 	 ldr r3,[r7,#176]
 734 0746 5B10     	 asrs r3,r3,#1
 735 0748 C7F8B030 	 str r3,[r7,#176]
 196:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 736              	 .loc 1 196 0
 737 074c D7F8AC30 	 ldr r3,[r7,#172]
 738 0750 5B10     	 asrs r3,r3,#1
 739 0752 C7F8AC30 	 str r3,[r7,#172]
 197:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 198:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 740              	 .loc 1 198 0
 741 0756 D7F8B820 	 ldr r2,[r7,#184]
 742 075a D7F8B430 	 ldr r3,[r7,#180]
 743 075e D31A     	 subs r3,r2,r3
 744 0760 C7F8A830 	 str r3,[r7,#168]
 199:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 745              	 .loc 1 199 0
 746 0764 D7F8B020 	 ldr r2,[r7,#176]
 747 0768 D7F8AC30 	 ldr r3,[r7,#172]
 748 076c 1344     	 add r3,r3,r2
 749 076e C7F8A430 	 str r3,[r7,#164]
 200:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 201:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 202:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 750              	 .loc 1 202 0
 751 0772 D7F89430 	 ldr r3,[r7,#148]
 752 0776 1A1D     	 adds r2,r3,#4
 753 0778 C7F89420 	 str r2,[r7,#148]
 754 077c D7F8A820 	 ldr r2,[r7,#168]
 755 0780 1A60     	 str r2,[r3]
 203:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 204:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 756              	 .loc 1 204 0
 757 0782 D7F89430 	 ldr r3,[r7,#148]
 758 0786 1A1D     	 adds r2,r3,#4
 759 0788 C7F89420 	 str r2,[r7,#148]
 760 078c D7F8A420 	 ldr r2,[r7,#164]
 761 0790 1A60     	 str r2,[r3]
 205:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 206:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* Decrement the blockSize loop counter */
 207:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     blkCnt--;
 762              	 .loc 1 207 0
 763 0792 D7F8CC30 	 ldr r3,[r7,#204]
 764 0796 013B     	 subs r3,r3,#1
 765 0798 C7F8CC30 	 str r3,[r7,#204]
 766              	.L4:
 179:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 767              	 .loc 1 179 0
 768 079c D7F8CC30 	 ldr r3,[r7,#204]
 769 07a0 002B     	 cmp r3,#0
 770 07a2 7FF43EAF 	 bne .L5
 208:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   }
 209:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 210:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #else
 211:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 212:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* Run the below code for Cortex-M0 */
 213:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 214:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* loop Unrolling */
 215:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples >> 1u;
 216:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 217:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* First part of the processing with loop unrolling.  Compute 2 outputs at a time.
 218:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****    ** a second loop below computes the remaining 1 sample. */
 219:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   while (blkCnt > 0u)
 220:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 221:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 222:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 223:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 224:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 225:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 226:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 227:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 228:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 229:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 230:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 231:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 232:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 233:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 234:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 235:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 236:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 237:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 238:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 239:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 240:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 241:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 242:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 243:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 244:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 245:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 246:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 247:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 248:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 249:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 250:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 251:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 252:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 253:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 254:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 255:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 256:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 257:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 258:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 259:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 260:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 261:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 262:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 263:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 264:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 265:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 266:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 267:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 268:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 269:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* Decrement the blockSize loop counter */
 270:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     blkCnt--;
 271:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   }
 272:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 273:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* If the blockSize is not a multiple of 2, compute any remaining output samples here.
 274:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****    ** No loop unrolling is used. */
 275:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples % 0x2u;
 276:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 277:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   while (blkCnt > 0u)
 278:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 279:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 280:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 281:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 282:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 283:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 284:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 285:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 286:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 287:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 288:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 289:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 290:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 291:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 292:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 293:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 294:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 295:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 296:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 297:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 298:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 299:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 300:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 301:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 302:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 303:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 304:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* Decrement the blockSize loop counter */
 305:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     blkCnt--;
 306:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   }
 307:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 308:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #endif /* #if defined (ARM_MATH_DSP) */
 309:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 310:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** }
 771              	 .loc 1 310 0
 772 07a6 D437     	 adds r7,r7,#212
 773              	.LCFI3:
 774              	 .cfi_def_cfa_offset 28
 775 07a8 BD46     	 mov sp,r7
 776              	.LCFI4:
 777              	 .cfi_def_cfa_register 13
 778              	 
 779 07aa BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 780              	.LCFI5:
 781              	 .cfi_restore 11
 782              	 .cfi_restore 10
 783              	 .cfi_restore 9
 784              	 .cfi_restore 8
 785              	 .cfi_restore 7
 786              	 .cfi_restore 5
 787              	 .cfi_restore 4
 788              	 .cfi_def_cfa_offset 0
 789 07ae 7047     	 bx lr
 790              	 .cfi_endproc
 791              	.LFE135:
 793              	 .text
 794              	.Letext0:
 795              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 796              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 797              	 .file 4 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mult_cmplx_q31.c
    {standard input}:20     .text.arm_cmplx_mult_cmplx_q31:00000000 $t
    {standard input}:25     .text.arm_cmplx_mult_cmplx_q31:00000000 arm_cmplx_mult_cmplx_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
