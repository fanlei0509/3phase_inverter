   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_sqrt_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_sqrt_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_sqrt_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_sqrt_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c"
   1:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * Title:        arm_sqrt_q15.c
   4:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * Description:  Q15 square root function
   5:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** #include "CMSIS_DSP/arm_common_tables.h"
  31:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  32:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  33:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** /**
  34:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * @ingroup groupFastMath
  35:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  */
  36:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  37:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** /**
  38:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * @addtogroup SQRT
  39:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  * @{
  40:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****  */
  41:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  42:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   /**
  43:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****    * @brief  Q15 square root function.
  44:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****    * @param[in]   in     input value.  The range of the input value is [0 +1) or 0x0000 to 0x7FFF.
  45:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****    * @param[out]  *pOut  square root of input value.
  46:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****    * @return The function returns ARM_MATH_SUCCESS if the input value is positive
  47:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****    * and ARM_MATH_ARGUMENT_ERROR if the input is negative.  For
  48:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****    * negative inputs, the function returns *pOut = 0.
  49:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****    */
  50:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  51:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** arm_status arm_sqrt_q15(
  52:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   q15_t in,
  53:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   q15_t * pOut)
  54:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** {
  28              	 .loc 1 54 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 8BB0     	 sub sp,sp,#44
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 48
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 0346     	 mov r3,r0
  44 0008 B960     	 str r1,[r7,#8]
  45 000a FB81     	 strh r3,[r7,#14]
  55:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   q15_t number, temp1, var1, signBits1, half;
  56:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   q31_t bits_val1;
  57:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   float32_t temp_float1;
  58:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   union
  59:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   {
  60:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     q31_t fracval;
  61:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     float32_t floatval;
  62:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   } tempconv;
  63:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  64:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   number = in;
  46              	 .loc 1 64 0
  47 000c FB89     	 ldrh r3,[r7,#14]
  48 000e FB84     	 strh r3,[r7,#38]
  65:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  66:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   /* If the input is a positive number then compute the signBits. */
  67:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   if (number > 0)
  49              	 .loc 1 67 0
  50 0010 B7F92630 	 ldrsh r3,[r7,#38]
  51 0014 002B     	 cmp r3,#0
  52 0016 40F3C880 	 ble .L2
  68:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   {
  69:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     signBits1 = __CLZ(number) - 17;
  53              	 .loc 1 69 0
  54 001a B7F92630 	 ldrsh r3,[r7,#38]
  55 001e B3FA83F3 	 clz r3,r3
  56 0022 9BB2     	 uxth r3,r3
  57 0024 113B     	 subs r3,r3,#17
  58 0026 9BB2     	 uxth r3,r3
  59 0028 7B84     	 strh r3,[r7,#34]
  70:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  71:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* Shift by the number of signBits1 */
  72:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     if ((signBits1 % 2) == 0)
  60              	 .loc 1 72 0
  61 002a 7B8C     	 ldrh r3,[r7,#34]
  62 002c 03F00103 	 and r3,r3,#1
  63 0030 9BB2     	 uxth r3,r3
  64 0032 002B     	 cmp r3,#0
  65 0034 07D1     	 bne .L3
  73:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     {
  74:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****       number = number << signBits1;
  66              	 .loc 1 74 0
  67 0036 B7F92620 	 ldrsh r2,[r7,#38]
  68 003a B7F92230 	 ldrsh r3,[r7,#34]
  69 003e 02FA03F3 	 lsl r3,r2,r3
  70 0042 FB84     	 strh r3,[r7,#38]
  71 0044 07E0     	 b .L4
  72              	.L3:
  75:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     }
  76:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     else
  77:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     {
  78:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****       number = number << (signBits1 - 1);
  73              	 .loc 1 78 0
  74 0046 B7F92620 	 ldrsh r2,[r7,#38]
  75 004a B7F92230 	 ldrsh r3,[r7,#34]
  76 004e 013B     	 subs r3,r3,#1
  77 0050 02FA03F3 	 lsl r3,r2,r3
  78 0054 FB84     	 strh r3,[r7,#38]
  79              	.L4:
  79:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     }
  80:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  81:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* Calculate half value of the number */
  82:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     half = number >> 1;
  80              	 .loc 1 82 0
  81 0056 B7F92630 	 ldrsh r3,[r7,#38]
  82 005a 5B10     	 asrs r3,r3,#1
  83 005c 3B84     	 strh r3,[r7,#32]
  83:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* Store the number for later use */
  84:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     temp1 = number;
  84              	 .loc 1 84 0
  85 005e FB8C     	 ldrh r3,[r7,#38]
  86 0060 FB83     	 strh r3,[r7,#30]
  85:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  86:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* Convert to float */
  87:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     temp_float1 = number * 3.051757812500000e-005f;
  87              	 .loc 1 87 0
  88 0062 B7F92630 	 ldrsh r3,[r7,#38]
  89 0066 07EE903A 	 fmsr s15,r3
  90 006a F8EEE77A 	 fsitos s15,s15
  91 006e 9FED547A 	 flds s14,.L9
  92 0072 67EE877A 	 fmuls s15,s15,s14
  93 0076 C7ED067A 	 fsts s15,[r7,#24]
  88:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /*Store as integer */
  89:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     tempconv.floatval = temp_float1;
  94              	 .loc 1 89 0
  95 007a BB69     	 ldr r3,[r7,#24]
  96 007c 3B61     	 str r3,[r7,#16]
  90:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     bits_val1 = tempconv.fracval;
  97              	 .loc 1 90 0
  98 007e 3B69     	 ldr r3,[r7,#16]
  99 0080 7B61     	 str r3,[r7,#20]
  91:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* Subtract the shifted value from the magic number to give intial guess */
  92:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     bits_val1 = 0x5f3759df - (bits_val1 >> 1);  /* gives initial guess */
 100              	 .loc 1 92 0
 101 0082 7B69     	 ldr r3,[r7,#20]
 102 0084 5A10     	 asrs r2,r3,#1
 103 0086 4F4B     	 ldr r3,.L9+4
 104 0088 9B1A     	 subs r3,r3,r2
 105 008a 7B61     	 str r3,[r7,#20]
  93:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* Store as float */
  94:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     tempconv.fracval = bits_val1;
 106              	 .loc 1 94 0
 107 008c 7B69     	 ldr r3,[r7,#20]
 108 008e 3B61     	 str r3,[r7,#16]
  95:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     temp_float1 = tempconv.floatval;
 109              	 .loc 1 95 0
 110 0090 3B69     	 ldr r3,[r7,#16]
 111 0092 BB61     	 str r3,[r7,#24]
  96:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* Convert to integer format */
  97:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     var1 = (q31_t) (temp_float1 * 16384);
 112              	 .loc 1 97 0
 113 0094 D7ED067A 	 flds s15,[r7,#24]
 114 0098 9FED4B7A 	 flds s14,.L9+8
 115 009c 67EE877A 	 fmuls s15,s15,s14
 116 00a0 FDEEE77A 	 ftosizs s15,s15
 117 00a4 C7ED017A 	 fsts s15,[r7,#4]
 118 00a8 BB88     	 ldrh r3,[r7,#4]
 119 00aa BB84     	 strh r3,[r7,#36]
  98:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
  99:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* 1st iteration */
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     var1 = ((q15_t) ((q31_t) var1 * (0x3000 -
 120              	 .loc 1 100 0
 121 00ac B7F92430 	 ldrsh r3,[r7,#36]
 101:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 102:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                       ((((q15_t)
 103:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 122              	 .loc 1 103 0
 123 00b0 B7F92420 	 ldrsh r2,[r7,#36]
 124 00b4 B7F92410 	 ldrsh r1,[r7,#36]
 125 00b8 01FB02F2 	 mul r2,r1,r2
 126 00bc D213     	 asrs r2,r2,#15
 102:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 127              	 .loc 1 102 0
 128 00be 92B2     	 uxth r2,r2
 129              	 .loc 1 103 0
 130 00c0 12B2     	 sxth r2,r2
 104:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                         (q31_t) half) >> 15))) >> 15)) << 2;
 131              	 .loc 1 104 0
 132 00c2 B7F92010 	 ldrsh r1,[r7,#32]
 103:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                         (q31_t) half) >> 15))) >> 15)) << 2;
 133              	 .loc 1 103 0
 134 00c6 01FB02F2 	 mul r2,r1,r2
 135              	 .loc 1 104 0
 136 00ca D213     	 asrs r2,r2,#15
 101:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                       ((((q15_t)
 137              	 .loc 1 101 0
 138 00cc 92B2     	 uxth r2,r2
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 139              	 .loc 1 100 0
 140 00ce 12B2     	 sxth r2,r2
 141 00d0 C2F54052 	 rsb r2,r2,#12288
 142 00d4 02FB03F3 	 mul r3,r2,r3
 143              	 .loc 1 104 0
 144 00d8 DB13     	 asrs r3,r3,#15
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 145              	 .loc 1 100 0
 146 00da 9BB2     	 uxth r3,r3
 147              	 .loc 1 104 0
 148 00dc 1BB2     	 sxth r3,r3
 149 00de 9B00     	 lsls r3,r3,#2
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 150              	 .loc 1 100 0
 151 00e0 BB84     	 strh r3,[r7,#36]
 105:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* 2nd iteration */
 106:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     var1 = ((q15_t) ((q31_t) var1 * (0x3000 -
 152              	 .loc 1 106 0
 153 00e2 B7F92430 	 ldrsh r3,[r7,#36]
 107:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 108:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                       ((((q15_t)
 109:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 154              	 .loc 1 109 0
 155 00e6 B7F92420 	 ldrsh r2,[r7,#36]
 156 00ea B7F92410 	 ldrsh r1,[r7,#36]
 157 00ee 01FB02F2 	 mul r2,r1,r2
 158 00f2 D213     	 asrs r2,r2,#15
 108:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 159              	 .loc 1 108 0
 160 00f4 92B2     	 uxth r2,r2
 161              	 .loc 1 109 0
 162 00f6 12B2     	 sxth r2,r2
 110:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                         (q31_t) half) >> 15))) >> 15)) << 2;
 163              	 .loc 1 110 0
 164 00f8 B7F92010 	 ldrsh r1,[r7,#32]
 109:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                         (q31_t) half) >> 15))) >> 15)) << 2;
 165              	 .loc 1 109 0
 166 00fc 01FB02F2 	 mul r2,r1,r2
 167              	 .loc 1 110 0
 168 0100 D213     	 asrs r2,r2,#15
 107:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                       ((((q15_t)
 169              	 .loc 1 107 0
 170 0102 92B2     	 uxth r2,r2
 106:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 171              	 .loc 1 106 0
 172 0104 12B2     	 sxth r2,r2
 173 0106 C2F54052 	 rsb r2,r2,#12288
 174 010a 02FB03F3 	 mul r3,r2,r3
 175              	 .loc 1 110 0
 176 010e DB13     	 asrs r3,r3,#15
 106:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 177              	 .loc 1 106 0
 178 0110 9BB2     	 uxth r3,r3
 179              	 .loc 1 110 0
 180 0112 1BB2     	 sxth r3,r3
 181 0114 9B00     	 lsls r3,r3,#2
 106:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 182              	 .loc 1 106 0
 183 0116 BB84     	 strh r3,[r7,#36]
 111:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* 3rd iteration */
 112:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     var1 = ((q15_t) ((q31_t) var1 * (0x3000 -
 184              	 .loc 1 112 0
 185 0118 B7F92430 	 ldrsh r3,[r7,#36]
 113:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 114:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                       ((((q15_t)
 115:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 186              	 .loc 1 115 0
 187 011c B7F92420 	 ldrsh r2,[r7,#36]
 188 0120 B7F92410 	 ldrsh r1,[r7,#36]
 189 0124 01FB02F2 	 mul r2,r1,r2
 190 0128 D213     	 asrs r2,r2,#15
 114:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 191              	 .loc 1 114 0
 192 012a 92B2     	 uxth r2,r2
 193              	 .loc 1 115 0
 194 012c 12B2     	 sxth r2,r2
 116:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                         (q31_t) half) >> 15))) >> 15)) << 2;
 195              	 .loc 1 116 0
 196 012e B7F92010 	 ldrsh r1,[r7,#32]
 115:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                         (q31_t) half) >> 15))) >> 15)) << 2;
 197              	 .loc 1 115 0
 198 0132 01FB02F2 	 mul r2,r1,r2
 199              	 .loc 1 116 0
 200 0136 D213     	 asrs r2,r2,#15
 113:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                       ((((q15_t)
 201              	 .loc 1 113 0
 202 0138 92B2     	 uxth r2,r2
 112:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 203              	 .loc 1 112 0
 204 013a 12B2     	 sxth r2,r2
 205 013c C2F54052 	 rsb r2,r2,#12288
 206 0140 02FB03F3 	 mul r3,r2,r3
 207              	 .loc 1 116 0
 208 0144 DB13     	 asrs r3,r3,#15
 112:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 209              	 .loc 1 112 0
 210 0146 9BB2     	 uxth r3,r3
 211              	 .loc 1 116 0
 212 0148 1BB2     	 sxth r3,r3
 213 014a 9B00     	 lsls r3,r3,#2
 112:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 214              	 .loc 1 112 0
 215 014c BB84     	 strh r3,[r7,#36]
 117:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
 118:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* Multiply the inverse square root with the original value */
 119:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     var1 = ((q15_t) (((q31_t) temp1 * var1) >> 15)) << 1;
 216              	 .loc 1 119 0
 217 014e B7F91E30 	 ldrsh r3,[r7,#30]
 218 0152 B7F92420 	 ldrsh r2,[r7,#36]
 219 0156 02FB03F3 	 mul r3,r2,r3
 220 015a DB13     	 asrs r3,r3,#15
 221 015c 9BB2     	 uxth r3,r3
 222 015e 1BB2     	 sxth r3,r3
 223 0160 5B00     	 lsls r3,r3,#1
 224 0162 BB84     	 strh r3,[r7,#36]
 120:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
 121:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     /* Shift the output down accordingly */
 122:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     if ((signBits1 % 2) == 0)
 225              	 .loc 1 122 0
 226 0164 7B8C     	 ldrh r3,[r7,#34]
 227 0166 03F00103 	 and r3,r3,#1
 228 016a 9BB2     	 uxth r3,r3
 229 016c 002B     	 cmp r3,#0
 230 016e 0CD1     	 bne .L5
 123:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     {
 124:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****       var1 = var1 >> (signBits1 / 2);
 231              	 .loc 1 124 0
 232 0170 B7F92420 	 ldrsh r2,[r7,#36]
 233 0174 B7F92230 	 ldrsh r3,[r7,#34]
 234 0178 D90F     	 lsrs r1,r3,#31
 235 017a 0B44     	 add r3,r3,r1
 236 017c 5B10     	 asrs r3,r3,#1
 237 017e 9BB2     	 uxth r3,r3
 238 0180 1BB2     	 sxth r3,r3
 239 0182 42FA03F3 	 asr r3,r2,r3
 240 0186 BB84     	 strh r3,[r7,#36]
 241 0188 0AE0     	 b .L6
 242              	.L5:
 125:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     }
 126:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     else
 127:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     {
 128:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****       var1 = var1 >> ((signBits1 - 1) / 2);
 243              	 .loc 1 128 0
 244 018a B7F92420 	 ldrsh r2,[r7,#36]
 245 018e B7F92230 	 ldrsh r3,[r7,#34]
 246 0192 013B     	 subs r3,r3,#1
 247 0194 D90F     	 lsrs r1,r3,#31
 248 0196 0B44     	 add r3,r3,r1
 249 0198 5B10     	 asrs r3,r3,#1
 250 019a 42FA03F3 	 asr r3,r2,r3
 251 019e BB84     	 strh r3,[r7,#36]
 252              	.L6:
 129:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     }
 130:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     *pOut = var1;
 253              	 .loc 1 130 0
 254 01a0 BB68     	 ldr r3,[r7,#8]
 255 01a2 BA8C     	 ldrh r2,[r7,#36]
 256 01a4 1A80     	 strh r2,[r3]
 131:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** 
 132:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     return (ARM_MATH_SUCCESS);
 257              	 .loc 1 132 0
 258 01a6 0023     	 movs r3,#0
 259 01a8 03E0     	 b .L8
 260              	.L2:
 133:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   }
 134:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   /* If the number is a negative number then store zero as its square root value */
 135:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   else
 136:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   {
 137:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     *pOut = 0;
 261              	 .loc 1 137 0
 262 01aa BB68     	 ldr r3,[r7,#8]
 263 01ac 0022     	 movs r2,#0
 264 01ae 1A80     	 strh r2,[r3]
 138:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****     return (ARM_MATH_ARGUMENT_ERROR);
 265              	 .loc 1 138 0
 266 01b0 FF23     	 movs r3,#255
 267              	.L8:
 268 01b2 5BB2     	 sxtb r3,r3
 139:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c ****   }
 140:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q15.c **** }
 269              	 .loc 1 140 0 discriminator 1
 270 01b4 1846     	 mov r0,r3
 271 01b6 2C37     	 adds r7,r7,#44
 272              	.LCFI3:
 273              	 .cfi_def_cfa_offset 4
 274 01b8 BD46     	 mov sp,r7
 275              	.LCFI4:
 276              	 .cfi_def_cfa_register 13
 277              	 
 278 01ba 5DF8047B 	 ldr r7,[sp],#4
 279              	.LCFI5:
 280              	 .cfi_restore 7
 281              	 .cfi_def_cfa_offset 0
 282 01be 7047     	 bx lr
 283              	.L10:
 284              	 .align 2
 285              	.L9:
 286 01c0 00000038 	 .word 939524096
 287 01c4 DF59375F 	 .word 1597463007
 288 01c8 00008046 	 .word 1182793728
 289              	 .cfi_endproc
 290              	.LFE135:
 292              	 .text
 293              	.Letext0:
 294              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 295              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 296              	 .file 4 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_sqrt_q15.c
    {standard input}:20     .text.arm_sqrt_q15:00000000 $t
    {standard input}:25     .text.arm_sqrt_q15:00000000 arm_sqrt_q15
    {standard input}:286    .text.arm_sqrt_q15:000001c0 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
