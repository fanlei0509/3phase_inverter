   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_power_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_power_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_power_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_power_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c"
   1:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Title:        arm_power_f32.c
   4:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Description:  Sum of the squares of the elements of a floating-point vector
   5:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @ingroup groupStats
  33:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @defgroup power Power
  37:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  38:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Calculates the sum of the squares of the elements in the input vector.
  39:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * The underlying algorithm is used:
  40:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  41:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * <pre>
  42:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * 	Result = pSrc[0] * pSrc[0] + pSrc[1] * pSrc[1] + pSrc[2] * pSrc[2] + ... + pSrc[blockSize-1] * 
  43:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * </pre>
  44:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  45:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * There are separate functions for floating point, Q31, Q15, and Q7 data types.
  46:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  47:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  48:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**
  49:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @addtogroup power
  50:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @{
  51:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  52:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  53:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  54:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**
  55:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @brief Sum of the squares of the elements of a floating-point vector.
  56:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @param[in]       *pSrc points to the input vector
  57:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @param[in]       blockSize length of the input vector
  58:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @param[out]      *pResult sum of the squares value returned here
  59:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @return none.
  60:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  61:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  62:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  63:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  64:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** void arm_power_f32(
  65:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t * pSrc,
  66:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   uint32_t blockSize,
  67:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t * pResult)
  68:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** {
  28              	 .loc 1 68 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 89B0     	 sub sp,sp,#36
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 40
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  69:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t sum = 0.0f;                          /* accumulator */
  46              	 .loc 1 69 0
  47 000c 4FF00003 	 mov r3,#0
  48 0010 FB61     	 str r3,[r7,#28]
  70:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t in;                                  /* Temporary variable to store input value */
  71:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  72:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  73:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #if defined (ARM_MATH_DSP)
  74:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  75:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  76:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /*loop Unrolling */
  77:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize >> 2u;
  49              	 .loc 1 77 0
  50 0012 BB68     	 ldr r3,[r7,#8]
  51 0014 9B08     	 lsrs r3,r3,#2
  52 0016 BB61     	 str r3,[r7,#24]
  78:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  79:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  80:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0u)
  53              	 .loc 1 81 0
  54 0018 46E0     	 b .L2
  55              	.L3:
  82:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
  83:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
  84:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* Compute Power and then store the result in a temporary variable, sum. */
  85:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  56              	 .loc 1 85 0
  57 001a FB68     	 ldr r3,[r7,#12]
  58 001c 1A1D     	 adds r2,r3,#4
  59 001e FA60     	 str r2,[r7,#12]
  60 0020 1B68     	 ldr r3,[r3]
  61 0022 7B61     	 str r3,[r7,#20]
  86:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  62              	 .loc 1 86 0
  63 0024 97ED057A 	 flds s14,[r7,#20]
  64 0028 D7ED057A 	 flds s15,[r7,#20]
  65 002c 67EE277A 	 fmuls s15,s14,s15
  66 0030 97ED077A 	 flds s14,[r7,#28]
  67 0034 77EE277A 	 fadds s15,s14,s15
  68 0038 C7ED077A 	 fsts s15,[r7,#28]
  87:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  69              	 .loc 1 87 0
  70 003c FB68     	 ldr r3,[r7,#12]
  71 003e 1A1D     	 adds r2,r3,#4
  72 0040 FA60     	 str r2,[r7,#12]
  73 0042 1B68     	 ldr r3,[r3]
  74 0044 7B61     	 str r3,[r7,#20]
  88:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  75              	 .loc 1 88 0
  76 0046 97ED057A 	 flds s14,[r7,#20]
  77 004a D7ED057A 	 flds s15,[r7,#20]
  78 004e 67EE277A 	 fmuls s15,s14,s15
  79 0052 97ED077A 	 flds s14,[r7,#28]
  80 0056 77EE277A 	 fadds s15,s14,s15
  81 005a C7ED077A 	 fsts s15,[r7,#28]
  89:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  82              	 .loc 1 89 0
  83 005e FB68     	 ldr r3,[r7,#12]
  84 0060 1A1D     	 adds r2,r3,#4
  85 0062 FA60     	 str r2,[r7,#12]
  86 0064 1B68     	 ldr r3,[r3]
  87 0066 7B61     	 str r3,[r7,#20]
  90:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  88              	 .loc 1 90 0
  89 0068 97ED057A 	 flds s14,[r7,#20]
  90 006c D7ED057A 	 flds s15,[r7,#20]
  91 0070 67EE277A 	 fmuls s15,s14,s15
  92 0074 97ED077A 	 flds s14,[r7,#28]
  93 0078 77EE277A 	 fadds s15,s14,s15
  94 007c C7ED077A 	 fsts s15,[r7,#28]
  91:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  95              	 .loc 1 91 0
  96 0080 FB68     	 ldr r3,[r7,#12]
  97 0082 1A1D     	 adds r2,r3,#4
  98 0084 FA60     	 str r2,[r7,#12]
  99 0086 1B68     	 ldr r3,[r3]
 100 0088 7B61     	 str r3,[r7,#20]
  92:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 101              	 .loc 1 92 0
 102 008a 97ED057A 	 flds s14,[r7,#20]
 103 008e D7ED057A 	 flds s15,[r7,#20]
 104 0092 67EE277A 	 fmuls s15,s14,s15
 105 0096 97ED077A 	 flds s14,[r7,#28]
 106 009a 77EE277A 	 fadds s15,s14,s15
 107 009e C7ED077A 	 fsts s15,[r7,#28]
  93:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  94:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* Decrement the loop counter */
  95:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
 108              	 .loc 1 95 0
 109 00a2 BB69     	 ldr r3,[r7,#24]
 110 00a4 013B     	 subs r3,r3,#1
 111 00a6 BB61     	 str r3,[r7,#24]
 112              	.L2:
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
 113              	 .loc 1 81 0
 114 00a8 BB69     	 ldr r3,[r7,#24]
 115 00aa 002B     	 cmp r3,#0
 116 00ac B5D1     	 bne .L3
  96:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   }
  97:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  98:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
  99:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****    ** No loop unrolling is used. */
 100:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize % 0x4u;
 117              	 .loc 1 100 0
 118 00ae BB68     	 ldr r3,[r7,#8]
 119 00b0 03F00303 	 and r3,r3,#3
 120 00b4 BB61     	 str r3,[r7,#24]
 101:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 102:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 103:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #else
 104:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Run the below code for Cortex-M0 */
 105:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 106:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Loop over blockSize number of values */
 107:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize;
 108:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 109:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 110:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 111:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0u)
 121              	 .loc 1 112 0
 122 00b6 13E0     	 b .L4
 123              	.L5:
 113:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
 114:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
 115:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* compute power and then store the result in a temporary variable, sum. */
 116:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 124              	 .loc 1 116 0
 125 00b8 FB68     	 ldr r3,[r7,#12]
 126 00ba 1A1D     	 adds r2,r3,#4
 127 00bc FA60     	 str r2,[r7,#12]
 128 00be 1B68     	 ldr r3,[r3]
 129 00c0 7B61     	 str r3,[r7,#20]
 117:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 130              	 .loc 1 117 0
 131 00c2 97ED057A 	 flds s14,[r7,#20]
 132 00c6 D7ED057A 	 flds s15,[r7,#20]
 133 00ca 67EE277A 	 fmuls s15,s14,s15
 134 00ce 97ED077A 	 flds s14,[r7,#28]
 135 00d2 77EE277A 	 fadds s15,s14,s15
 136 00d6 C7ED077A 	 fsts s15,[r7,#28]
 118:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 119:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* Decrement the loop counter */
 120:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
 137              	 .loc 1 120 0
 138 00da BB69     	 ldr r3,[r7,#24]
 139 00dc 013B     	 subs r3,r3,#1
 140 00de BB61     	 str r3,[r7,#24]
 141              	.L4:
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
 142              	 .loc 1 112 0
 143 00e0 BB69     	 ldr r3,[r7,#24]
 144 00e2 002B     	 cmp r3,#0
 145 00e4 E8D1     	 bne .L5
 121:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   }
 122:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Store the result to the destination */
 124:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   *pResult = sum;
 146              	 .loc 1 124 0
 147 00e6 7B68     	 ldr r3,[r7,#4]
 148 00e8 FA69     	 ldr r2,[r7,#28]
 149 00ea 1A60     	 str r2,[r3]
 125:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** }
 150              	 .loc 1 125 0
 151 00ec 2437     	 adds r7,r7,#36
 152              	.LCFI3:
 153              	 .cfi_def_cfa_offset 4
 154 00ee BD46     	 mov sp,r7
 155              	.LCFI4:
 156              	 .cfi_def_cfa_register 13
 157              	 
 158 00f0 5DF8047B 	 ldr r7,[sp],#4
 159              	.LCFI5:
 160              	 .cfi_restore 7
 161              	 .cfi_def_cfa_offset 0
 162 00f4 7047     	 bx lr
 163              	 .cfi_endproc
 164              	.LFE135:
 166 00f6 00BF     	 .text
 167              	.Letext0:
 168              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 169              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 170              	 .file 4 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_power_f32.c
    {standard input}:20     .text.arm_power_f32:00000000 $t
    {standard input}:25     .text.arm_power_f32:00000000 arm_power_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
