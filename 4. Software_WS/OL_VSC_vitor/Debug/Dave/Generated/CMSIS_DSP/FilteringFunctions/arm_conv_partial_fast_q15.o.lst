   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_partial_fast_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_partial_fast_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_partial_fast_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_partial_fast_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Title:        arm_conv_partial_fast_q15.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Description:  Fast Q15 Partial convolution
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @addtogroup PartialConv
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       *pSrcA points to the first input sequence.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       srcALen length of the first input sequence.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       *pSrcB points to the second input sequence.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       srcBLen length of the second input sequence.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[out]      *pDst points to the location where the output result is written.
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       firstIndex is the first output sample to start with.
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       numPoints is the number of output points to be computed.
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @return Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * See <code>arm_conv_partial_q15()</code> for a slower implementation of this function which uses 
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** arm_status arm_conv_partial_fast_q15(
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t * pSrcA,
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t srcALen,
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t * pSrcB,
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t srcBLen,
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t * pDst,
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t firstIndex,
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t numPoints)
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** {
  28              	 .loc 1 63 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 90B4     	 push {r4,r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 4,-8
  37              	 .cfi_offset 7,-4
  38 0002 ADF51E7D 	 sub sp,sp,#632
  39              	.LCFI1:
  40              	 .cfi_def_cfa_offset 640
  41 0006 00AF     	 add r7,sp,#0
  42              	.LCFI2:
  43              	 .cfi_def_cfa_register 7
  44 0008 07F10C04 	 add r4,r7,#12
  45 000c 2060     	 str r0,[r4]
  46 000e 07F10800 	 add r0,r7,#8
  47 0012 0160     	 str r1,[r0]
  48 0014 391D     	 adds r1,r7,#4
  49 0016 0A60     	 str r2,[r1]
  50 0018 3A46     	 mov r2,r7
  51 001a 1360     	 str r3,[r2]
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pIn1;                                   /* inputA pointer               */
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pIn2;                                   /* inputB pointer               */
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pOut = pDst;                            /* output pointer               */
  52              	 .loc 1 68 0
  53 001c 07F11803 	 add r3,r7,#24
  54 0020 D7F88022 	 ldr r2,[r7,#640]
  55 0024 1A60     	 str r2,[r3]
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulator                  */
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers        */
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q31_t x0, x1, x2, x3, c0;
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t j, k, count, check, blkCnt;
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   int32_t blockSize1, blockSize2, blockSize3;    /* loop counters                 */
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   arm_status status;                             /* status of Partial convolution */
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   /* Check for range of output samples to be calculated */
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1u))))
  56              	 .loc 1 79 0
  57 0026 D7F88422 	 ldr r2,[r7,#644]
  58 002a D7F88832 	 ldr r3,[r7,#648]
  59 002e 1A44     	 add r2,r2,r3
  60 0030 3946     	 mov r1,r7
  61 0032 07F10803 	 add r3,r7,#8
  62 0036 0968     	 ldr r1,[r1]
  63 0038 1B68     	 ldr r3,[r3]
  64 003a 0B44     	 add r3,r3,r1
  65 003c 013B     	 subs r3,r3,#1
  66 003e 9A42     	 cmp r2,r3
  67 0040 04D9     	 bls .L2
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   {
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     status = ARM_MATH_ARGUMENT_ERROR;
  68              	 .loc 1 82 0
  69 0042 FF23     	 movs r3,#255
  70 0044 87F83332 	 strb r3,[r7,#563]
  71 0048 01F0DDB8 	 b .L3
  72              	.L2:
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   }
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   else
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   {
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* srcB is always made to slide across srcA. */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if (srcALen >=srcBLen)
  73              	 .loc 1 90 0
  74 004c 07F10802 	 add r2,r7,#8
  75 0050 3B46     	 mov r3,r7
  76 0052 1268     	 ldr r2,[r2]
  77 0054 1B68     	 ldr r3,[r3]
  78 0056 9A42     	 cmp r2,r3
  79 0058 09D3     	 bcc .L4
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputA pointer */
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn1 = pSrcA;
  80              	 .loc 1 93 0
  81 005a 07F10C03 	 add r3,r7,#12
  82 005e 1B68     	 ldr r3,[r3]
  83 0060 C7F87432 	 str r3,[r7,#628]
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputB pointer */
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn2 = pSrcB;
  84              	 .loc 1 96 0
  85 0064 3B1D     	 adds r3,r7,#4
  86 0066 1B68     	 ldr r3,[r3]
  87 0068 C7F87032 	 str r3,[r7,#624]
  88 006c 16E0     	 b .L5
  89              	.L4:
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputA pointer */
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn1 = pSrcB;
  90              	 .loc 1 101 0
  91 006e 3B1D     	 adds r3,r7,#4
  92 0070 1B68     	 ldr r3,[r3]
  93 0072 C7F87432 	 str r3,[r7,#628]
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputB pointer */
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn2 = pSrcA;
  94              	 .loc 1 104 0
  95 0076 07F10C03 	 add r3,r7,#12
  96 007a 1B68     	 ldr r3,[r3]
  97 007c C7F87032 	 str r3,[r7,#624]
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       j = srcBLen;
  98              	 .loc 1 107 0
  99 0080 3B46     	 mov r3,r7
 100 0082 1B68     	 ldr r3,[r3]
 101 0084 C7F84832 	 str r3,[r7,#584]
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       srcBLen = srcALen;
 102              	 .loc 1 108 0
 103 0088 3B46     	 mov r3,r7
 104 008a 07F10802 	 add r2,r7,#8
 105 008e 1268     	 ldr r2,[r2]
 106 0090 1A60     	 str r2,[r3]
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       srcALen = j;
 107              	 .loc 1 109 0
 108 0092 07F10803 	 add r3,r7,#8
 109 0096 D7F84822 	 ldr r2,[r7,#584]
 110 009a 1A60     	 str r2,[r3]
 111              	.L5:
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Conditions to check which loopCounter holds
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * the first and last indices of the output samples to be calculated. */
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     check = firstIndex + numPoints;
 112              	 .loc 1 114 0
 113 009c D7F88422 	 ldr r2,[r7,#644]
 114 00a0 D7F88832 	 ldr r3,[r7,#648]
 115 00a4 1344     	 add r3,r3,r2
 116 00a6 C7F82C32 	 str r3,[r7,#556]
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize3 = ((int32_t)check > (int32_t)srcALen) ? (int32_t)check - (int32_t)srcALen : 0;
 117              	 .loc 1 115 0
 118 00aa D7F82C22 	 ldr r2,[r7,#556]
 119 00ae 07F10803 	 add r3,r7,#8
 120 00b2 1B68     	 ldr r3,[r3]
 121 00b4 9A42     	 cmp r2,r3
 122 00b6 06DD     	 ble .L6
 123              	 .loc 1 115 0 is_stmt 0 discriminator 1
 124 00b8 D7F82C22 	 ldr r2,[r7,#556]
 125 00bc 07F10803 	 add r3,r7,#8
 126 00c0 1B68     	 ldr r3,[r3]
 127 00c2 D31A     	 subs r3,r2,r3
 128 00c4 00E0     	 b .L7
 129              	.L6:
 130              	 .loc 1 115 0 discriminator 2
 131 00c6 0023     	 movs r3,#0
 132              	.L7:
 133              	 .loc 1 115 0 discriminator 4
 134 00c8 C7F83432 	 str r3,[r7,#564]
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize3 = ((int32_t)firstIndex > (int32_t)srcALen - 1) ? blockSize3 - (int32_t)firstIndex + 
 135              	 .loc 1 116 0 is_stmt 1 discriminator 4
 136 00cc D7F88422 	 ldr r2,[r7,#644]
 137 00d0 07F10803 	 add r3,r7,#8
 138 00d4 1B68     	 ldr r3,[r3]
 139 00d6 013B     	 subs r3,r3,#1
 140 00d8 9A42     	 cmp r2,r3
 141 00da 09DD     	 ble .L8
 142              	 .loc 1 116 0 is_stmt 0 discriminator 1
 143 00dc D7F88432 	 ldr r3,[r7,#644]
 144 00e0 D7F83422 	 ldr r2,[r7,#564]
 145 00e4 D21A     	 subs r2,r2,r3
 146 00e6 07F10803 	 add r3,r7,#8
 147 00ea 1B68     	 ldr r3,[r3]
 148 00ec 1344     	 add r3,r3,r2
 149 00ee 01E0     	 b .L9
 150              	.L8:
 151              	 .loc 1 116 0 discriminator 2
 152 00f0 D7F83432 	 ldr r3,[r7,#564]
 153              	.L9:
 154              	 .loc 1 116 0 discriminator 4
 155 00f4 C7F83432 	 str r3,[r7,#564]
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (((int32_t) srcBLen - 1) - (int32_t) firstIndex);
 156              	 .loc 1 117 0 is_stmt 1 discriminator 4
 157 00f8 3B46     	 mov r3,r7
 158 00fa 1A68     	 ldr r2,[r3]
 159 00fc D7F88432 	 ldr r3,[r7,#644]
 160 0100 D31A     	 subs r3,r2,r3
 161 0102 013B     	 subs r3,r3,#1
 162 0104 C7F83832 	 str r3,[r7,#568]
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****                                      (int32_t) numPoints) : 0;
 163              	 .loc 1 119 0 discriminator 4
 164 0108 D7F83832 	 ldr r3,[r7,#568]
 165 010c 002B     	 cmp r3,#0
 166 010e 0CDD     	 ble .L10
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 167              	 .loc 1 118 0
 168 0110 3B46     	 mov r3,r7
 169 0112 1B68     	 ldr r3,[r3]
 170 0114 5A1E     	 subs r2,r3,#1
 171 0116 D7F82C32 	 ldr r3,[r7,#556]
 172 011a 9A42     	 cmp r2,r3
 173 011c 02D3     	 bcc .L11
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 174              	 .loc 1 118 0 is_stmt 0 discriminator 1
 175 011e D7F88832 	 ldr r3,[r7,#648]
 176 0122 03E0     	 b .L13
 177              	.L11:
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 178              	 .loc 1 118 0 discriminator 2
 179 0124 D7F83832 	 ldr r3,[r7,#568]
 180 0128 00E0     	 b .L13
 181              	.L10:
 182              	 .loc 1 119 0 is_stmt 1 discriminator 1
 183 012a 0023     	 movs r3,#0
 184              	.L13:
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 185              	 .loc 1 118 0
 186 012c C7F83832 	 str r3,[r7,#568]
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = (int32_t) check - ((blockSize3 + blockSize1) +
 187              	 .loc 1 120 0
 188 0130 D7F82C22 	 ldr r2,[r7,#556]
 189 0134 D7F83412 	 ldr r1,[r7,#564]
 190 0138 D7F83832 	 ldr r3,[r7,#568]
 191 013c 1944     	 add r1,r1,r3
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****                                     (int32_t) firstIndex);
 192              	 .loc 1 121 0
 193 013e D7F88432 	 ldr r3,[r7,#644]
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = (int32_t) check - ((blockSize3 + blockSize1) +
 194              	 .loc 1 120 0
 195 0142 0B44     	 add r3,r3,r1
 196 0144 D31A     	 subs r3,r2,r3
 197 0146 C7F82832 	 str r3,[r7,#552]
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = (blockSize2 > 0) ? blockSize2 : 0;
 198              	 .loc 1 122 0
 199 014a D7F82832 	 ldr r3,[r7,#552]
 200 014e 23EAE373 	 bic r3,r3,r3,asr#31
 201 0152 C7F82832 	 str r3,[r7,#552]
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The function is internally
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * divided into three stages according to the number of multiplications that has to be
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * taken place between inputA samples and inputB samples. In the first stage of the
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * algorithm, the multiplications increase by one for every iteration.
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * In the second stage of the algorithm, srcBLen number of multiplications are done.
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * In the third stage of the algorithm, the multiplications decrease by one
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * for every iteration. */
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set the output pointer to point to the firstIndex
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * of the output sample to be calculated. */
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pOut = pDst + firstIndex;
 202              	 .loc 1 135 0
 203 0156 D7F88432 	 ldr r3,[r7,#644]
 204 015a 5B00     	 lsls r3,r3,#1
 205 015c D7F88022 	 ldr r2,[r7,#640]
 206 0160 1A44     	 add r2,r2,r3
 207 0162 07F11803 	 add r3,r7,#24
 208 0166 1A60     	 str r2,[r3]
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage1
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------------*/
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum = x[0] * y[0]
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[0] * y[1] + x[1] * y[0]
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* In this stage the MAC operations are increased by 1 for every iteration.
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        The count variable holds the number of MAC operations performed.
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        Since the partial convolution starts from firstIndex
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        Number of Macs to be performed is firstIndex + 1 */
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = 1u + firstIndex;
 209              	 .loc 1 151 0
 210 0168 D7F88432 	 ldr r3,[r7,#644]
 211 016c 0133     	 adds r3,r3,#1
 212 016e C7F84032 	 str r3,[r7,#576]
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pIn1;
 213              	 .loc 1 154 0
 214 0172 07F11403 	 add r3,r7,#20
 215 0176 D7F87422 	 ldr r2,[r7,#628]
 216 017a 1A60     	 str r2,[r3]
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + firstIndex;
 217              	 .loc 1 157 0
 218 017c D7F88432 	 ldr r3,[r7,#644]
 219 0180 5B00     	 lsls r3,r3,#1
 220 0182 D7F87022 	 ldr r2,[r7,#624]
 221 0186 1344     	 add r3,r3,r2
 222 0188 C7F85432 	 str r3,[r7,#596]
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pSrc2;
 223              	 .loc 1 158 0
 224 018c 07F11003 	 add r3,r7,#16
 225 0190 D7F85422 	 ldr r2,[r7,#596]
 226 0194 1A60     	 str r2,[r3]
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* ------------------------
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage1 process
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ----------------------*/
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* First part of this stage computes the MAC operations less than 4 */
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The first part of the stage starts here */
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while ((count < 4u) && (blockSize1 > 0))
 227              	 .loc 1 169 0
 228 0196 5DE0     	 b .L14
 229              	.L19:
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 230              	 .loc 1 172 0
 231 0198 0023     	 movs r3,#0
 232 019a C7F86C32 	 str r3,[r7,#620]
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Loop over number of MAC operations between
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * inputA samples and inputB samples */
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count;
 233              	 .loc 1 176 0
 234 019e D7F84032 	 ldr r3,[r7,#576]
 235 01a2 C7F84432 	 str r3,[r7,#580]
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0u)
 236              	 .loc 1 178 0
 237 01a6 2CE0     	 b .L15
 238              	.L17:
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 239              	 .loc 1 181 0
 240 01a8 07F11403 	 add r3,r7,#20
 241 01ac 1B68     	 ldr r3,[r3]
 242 01ae 991C     	 adds r1,r3,#2
 243 01b0 07F11402 	 add r2,r7,#20
 244 01b4 1160     	 str r1,[r2]
 245 01b6 1B88     	 ldrh r3,[r3]
 246 01b8 19B2     	 sxth r1,r3
 247 01ba 07F11003 	 add r3,r7,#16
 248 01be 1B68     	 ldr r3,[r3]
 249 01c0 981E     	 subs r0,r3,#2
 250 01c2 07F11002 	 add r2,r7,#16
 251 01c6 1060     	 str r0,[r2]
 252 01c8 1B88     	 ldrh r3,[r3]
 253 01ca 1AB2     	 sxth r2,r3
 254 01cc D7F86C32 	 ldr r3,[r7,#620]
 255 01d0 C7F81812 	 str r1,[r7,#536]
 256 01d4 C7F81422 	 str r2,[r7,#532]
 257 01d8 C7F81032 	 str r3,[r7,#528]
 258              	.LBB66:
 259              	.LBB67:
 260              	 .file 2 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.1
   5:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     02. February 2017
   6:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  36:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                     __asm
  37:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  39:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                  inline
  40:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  41:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  44:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  47:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  48:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  50:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  51:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  53:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  65:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  71:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  72:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  76:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  77:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  78:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  79:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  83:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  85:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0U);
 644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 734:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 735:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 739:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 740:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 744:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 747:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 751:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 753:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 755:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 756:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 758:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 764:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 766:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 767:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 768:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 769:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 773:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 774:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 776:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 779:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 780:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 781:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 783:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 784:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 785:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 787:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 788:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 789:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 791:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 792:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 793:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 795:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 796:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 797:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 799:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 800:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 802:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 803:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 807:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 808:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 810:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 813:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 814:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 815:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 817:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 818:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 819:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 820:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 821:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 822:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 827:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 828:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 830:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 832:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 833:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 834:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 835:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 836:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 841:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 843:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 845:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 846:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 848:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 849:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 850:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 851:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 852:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 853:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 858:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 859:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 861:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   {
 864:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 865:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 866:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     s--;
 867:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 868:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 870:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 871:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 872:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 873:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 874:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 875:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Count leading zeros
 876:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 877:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 878:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             number of leading zeros in value
 879:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 880:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CLZ             __builtin_clz
 881:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 882:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 883:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 884:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 885:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 886:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 887:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 888:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 889:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 890:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 891:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 892:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 893:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDREXB(volatile uint8_t *addr)
 894:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 895:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 896:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 897:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 898:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 899:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 900:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 901:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 902:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 903:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 904:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 905:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 906:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 907:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 908:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 909:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 910:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 911:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 912:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 913:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 914:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 915:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDREXH(volatile uint16_t *addr)
 916:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 917:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 918:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 920:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 921:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 922:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 923:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 924:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 925:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 926:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 927:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 928:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 929:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 930:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 931:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 932:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 933:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 934:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 935:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 936:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 937:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDREXW(volatile uint32_t *addr)
 938:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 939:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 940:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 941:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 942:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 943:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 944:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 945:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 946:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 947:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 948:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 949:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 950:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 951:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 952:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 953:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 954:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *a
 955:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 956:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 957:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 958:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 959:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 960:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 962:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 963:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 964:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 965:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 966:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 967:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 968:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 969:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 970:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 971:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXH(uint16_t value, volatile uint16_t 
 972:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 973:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 974:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 975:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 976:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 977:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 978:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 979:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 980:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 981:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 982:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 983:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 984:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 985:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 986:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 987:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 988:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t 
 989:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 990:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 991:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 992:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 993:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 994:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 995:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 996:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 997:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 998:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Remove the exclusive lock
 999:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1000:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1001:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __CLREX(void)
1002:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1003:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1004:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1005:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1006:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1007:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1008:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1009:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1010:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1011:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1012:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1013:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1014:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1015:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1016:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Signed Saturate
1017:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates a signed value.
1018:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1019:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1020:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1021:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1022:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1023:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1024:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1025:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1026:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1027:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1028:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1029:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1030:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1031:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Unsigned Saturate
1032:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates an unsigned value.
1033:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1034:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1035:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1036:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1037:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1038:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1039:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1040:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1041:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1042:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1043:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1044:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1045:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1046:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1047:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1048:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1049:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
1050:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
1051:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1052:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RRX(uint32_t value)
1053:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1054:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1055:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1056:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1057:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1058:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1059:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1060:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1061:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1062:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1063:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1064:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1065:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1066:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1067:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1068:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1069:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1070:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1071:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1072:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1073:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1074:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1075:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1076:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1077:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1078:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1079:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1080:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1081:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1082:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1083:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1084:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1085:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1086:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1087:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1088:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1089:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1090:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1091:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1092:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1093:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1094:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1095:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1096:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1097:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1098:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1099:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDRT(volatile uint32_t *ptr)
1112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAB(volatile uint8_t *ptr)
1169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAH(volatile uint16_t *ptr)
1184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDA(volatile uint32_t *ptr)
1199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *p
1297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t 
1314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *
1331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated SIMD instructions
1347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
1348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
1349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__ARM_FEATURE_DSP == 1)                             /* ToDo ARMCLANG: This should be ARCH >= A
1351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32
1651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTB16(uint32_t op1)
1673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTB16(uint32_t op1)
1689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32
1721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 261              	 .loc 2 1724 0
 262 01dc D7F81832 	 ldr r3,[r7,#536]
 263 01e0 D7F81422 	 ldr r2,[r7,#532]
 264 01e4 D7F81012 	 ldr r1,[r7,#528]
 265              	
 266 01e8 23FB0213 	 smlad r3,r3,r2,r1
 267              	
 268              	 .thumb
 269 01ec C7F80C32 	 str r3,[r7,#524]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 270              	 .loc 2 1725 0
 271 01f0 D7F80C32 	 ldr r3,[r7,#524]
 272              	.LBE67:
 273              	.LBE66:
 274              	 .loc 1 181 0
 275 01f4 C7F86C32 	 str r3,[r7,#620]
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 276              	 .loc 1 184 0
 277 01f8 D7F84432 	 ldr r3,[r7,#580]
 278 01fc 013B     	 subs r3,r3,#1
 279 01fe C7F84432 	 str r3,[r7,#580]
 280              	.L15:
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 281              	 .loc 1 178 0
 282 0202 D7F84432 	 ldr r3,[r7,#580]
 283 0206 002B     	 cmp r3,#0
 284 0208 CED1     	 bne .L17
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 285              	 .loc 1 188 0
 286 020a 07F11803 	 add r3,r7,#24
 287 020e 1B68     	 ldr r3,[r3]
 288 0210 991C     	 adds r1,r3,#2
 289 0212 07F11802 	 add r2,r7,#24
 290 0216 1160     	 str r1,[r2]
 291 0218 D7F86C22 	 ldr r2,[r7,#620]
 292 021c D213     	 asrs r2,r2,#15
 293 021e 92B2     	 uxth r2,r2
 294 0220 1A80     	 strh r2,[r3]
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = ++pSrc2;
 295              	 .loc 1 191 0
 296 0222 D7F85432 	 ldr r3,[r7,#596]
 297 0226 0233     	 adds r3,r3,#2
 298 0228 C7F85432 	 str r3,[r7,#596]
 299 022c 07F11003 	 add r3,r7,#16
 300 0230 D7F85422 	 ldr r2,[r7,#596]
 301 0234 1A60     	 str r2,[r3]
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 302              	 .loc 1 192 0
 303 0236 07F11403 	 add r3,r7,#20
 304 023a D7F87422 	 ldr r2,[r7,#628]
 305 023e 1A60     	 str r2,[r3]
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Increment the MAC count */
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count++;
 306              	 .loc 1 195 0
 307 0240 D7F84032 	 ldr r3,[r7,#576]
 308 0244 0133     	 adds r3,r3,#1
 309 0246 C7F84032 	 str r3,[r7,#576]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize1--;
 310              	 .loc 1 198 0
 311 024a D7F83832 	 ldr r3,[r7,#568]
 312 024e 013B     	 subs r3,r3,#1
 313 0250 C7F83832 	 str r3,[r7,#568]
 314              	.L14:
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 315              	 .loc 1 169 0
 316 0254 D7F84032 	 ldr r3,[r7,#576]
 317 0258 032B     	 cmp r3,#3
 318 025a 03D8     	 bhi .L18
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 319              	 .loc 1 169 0 is_stmt 0 discriminator 1
 320 025c D7F83832 	 ldr r3,[r7,#568]
 321 0260 002B     	 cmp r3,#0
 322 0262 99DC     	 bgt .L19
 323              	.L18:
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The second part of the stage starts here */
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The internal loop, over count, is unrolled by 4 */
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* To, read the last two inputB samples using SIMD:
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = py - 1;
 324              	 .loc 1 205 0 is_stmt 1
 325 0264 07F11003 	 add r3,r7,#16
 326 0268 1B68     	 ldr r3,[r3]
 327 026a 9A1E     	 subs r2,r3,#2
 328 026c 07F11003 	 add r3,r7,#16
 329 0270 1A60     	 str r2,[r3]
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while (blockSize1 > 0)
 330              	 .loc 1 207 0
 331 0272 BEE0     	 b .L20
 332              	.L28:
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 333              	 .loc 1 210 0
 334 0274 0023     	 movs r3,#0
 335 0276 C7F86C32 	 str r3,[r7,#620]
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count >> 2u;
 336              	 .loc 1 213 0
 337 027a D7F84032 	 ldr r3,[r7,#576]
 338 027e 9B08     	 lsrs r3,r3,#2
 339 0280 C7F84432 	 str r3,[r7,#580]
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0u)
 340              	 .loc 1 217 0
 341 0284 4CE0     	 b .L21
 342              	.L24:
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[0], x[1] are multiplied with y[srcBLen - 1], y[srcBLen - 2] respectively */
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 343              	 .loc 1 221 0
 344 0286 07F11402 	 add r2,r7,#20
 345 028a 1368     	 ldr r3,[r2]
 346 028c 191D     	 adds r1,r3,#4
 347 028e 1160     	 str r1,[r2]
 348 0290 1B68     	 ldr r3,[r3]
 349 0292 1846     	 mov r0,r3
 350 0294 07F11002 	 add r2,r7,#16
 351 0298 1368     	 ldr r3,[r2]
 352 029a 191F     	 subs r1,r3,#4
 353 029c 1160     	 str r1,[r2]
 354 029e 1B68     	 ldr r3,[r3]
 355 02a0 1A46     	 mov r2,r3
 356 02a2 D7F86C32 	 ldr r3,[r7,#620]
 357 02a6 C7F80802 	 str r0,[r7,#520]
 358 02aa C7F80422 	 str r2,[r7,#516]
 359 02ae C7F80032 	 str r3,[r7,#512]
 360              	.LBB68:
 361              	.LBB69:
1726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint3
1729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 362              	 .loc 2 1732 0
 363 02b2 D7F80832 	 ldr r3,[r7,#520]
 364 02b6 D7F80422 	 ldr r2,[r7,#516]
 365 02ba D7F80012 	 ldr r1,[r7,#512]
 366              	
 367 02be 23FB1213 	 smladx r3,r3,r2,r1
 368              	
 369              	 .thumb
 370 02c2 C7F8FC31 	 str r3,[r7,#508]
1733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 371              	 .loc 2 1733 0
 372 02c6 D7F8FC31 	 ldr r3,[r7,#508]
 373              	.LBE69:
 374              	.LBE68:
 375              	 .loc 1 221 0
 376 02ca C7F86C32 	 str r3,[r7,#620]
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[2], x[3] are multiplied with y[srcBLen - 3], y[srcBLen - 4] respectively */
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 377              	 .loc 1 223 0
 378 02ce 07F11402 	 add r2,r7,#20
 379 02d2 1368     	 ldr r3,[r2]
 380 02d4 191D     	 adds r1,r3,#4
 381 02d6 1160     	 str r1,[r2]
 382 02d8 1B68     	 ldr r3,[r3]
 383 02da 1846     	 mov r0,r3
 384 02dc 07F11002 	 add r2,r7,#16
 385 02e0 1368     	 ldr r3,[r2]
 386 02e2 191F     	 subs r1,r3,#4
 387 02e4 1160     	 str r1,[r2]
 388 02e6 1B68     	 ldr r3,[r3]
 389 02e8 1A46     	 mov r2,r3
 390 02ea D7F86C32 	 ldr r3,[r7,#620]
 391 02ee C7F8F801 	 str r0,[r7,#504]
 392 02f2 C7F8F421 	 str r2,[r7,#500]
 393 02f6 C7F8F031 	 str r3,[r7,#496]
 394              	.LBB70:
 395              	.LBB71:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 396              	 .loc 2 1732 0
 397 02fa D7F8F831 	 ldr r3,[r7,#504]
 398 02fe D7F8F421 	 ldr r2,[r7,#500]
 399 0302 D7F8F011 	 ldr r1,[r7,#496]
 400              	
 401 0306 23FB1213 	 smladx r3,r3,r2,r1
 402              	
 403              	 .thumb
 404 030a C7F8EC31 	 str r3,[r7,#492]
 405              	 .loc 2 1733 0
 406 030e D7F8EC31 	 ldr r3,[r7,#492]
 407              	.LBE71:
 408              	.LBE70:
 409              	 .loc 1 223 0
 410 0312 C7F86C32 	 str r3,[r7,#620]
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 411              	 .loc 1 226 0
 412 0316 D7F84432 	 ldr r3,[r7,#580]
 413 031a 013B     	 subs r3,r3,#1
 414 031c C7F84432 	 str r3,[r7,#580]
 415              	.L21:
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 416              	 .loc 1 217 0
 417 0320 D7F84432 	 ldr r3,[r7,#580]
 418 0324 002B     	 cmp r3,#0
 419 0326 AED1     	 bne .L24
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* For the next MAC operations, the pointer py is used without SIMD
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * So, py is incremented by 1 */
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = py + 1u;
 420              	 .loc 1 231 0
 421 0328 07F11003 	 add r3,r7,#16
 422 032c 1B68     	 ldr r3,[r3]
 423 032e 9A1C     	 adds r2,r3,#2
 424 0330 07F11003 	 add r3,r7,#16
 425 0334 1A60     	 str r2,[r3]
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count % 0x4u;
 426              	 .loc 1 235 0
 427 0336 D7F84032 	 ldr r3,[r7,#576]
 428 033a 03F00303 	 and r3,r3,#3
 429 033e C7F84432 	 str r3,[r7,#580]
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0u)
 430              	 .loc 1 237 0
 431 0342 2CE0     	 b .L25
 432              	.L27:
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 433              	 .loc 1 240 0
 434 0344 07F11403 	 add r3,r7,#20
 435 0348 1B68     	 ldr r3,[r3]
 436 034a 991C     	 adds r1,r3,#2
 437 034c 07F11402 	 add r2,r7,#20
 438 0350 1160     	 str r1,[r2]
 439 0352 1B88     	 ldrh r3,[r3]
 440 0354 19B2     	 sxth r1,r3
 441 0356 07F11003 	 add r3,r7,#16
 442 035a 1B68     	 ldr r3,[r3]
 443 035c 981E     	 subs r0,r3,#2
 444 035e 07F11002 	 add r2,r7,#16
 445 0362 1060     	 str r0,[r2]
 446 0364 1B88     	 ldrh r3,[r3]
 447 0366 1AB2     	 sxth r2,r3
 448 0368 D7F86C32 	 ldr r3,[r7,#620]
 449 036c C7F8E811 	 str r1,[r7,#488]
 450 0370 C7F8E421 	 str r2,[r7,#484]
 451 0374 C7F8E031 	 str r3,[r7,#480]
 452              	.LBB72:
 453              	.LBB73:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 454              	 .loc 2 1724 0
 455 0378 D7F8E831 	 ldr r3,[r7,#488]
 456 037c D7F8E421 	 ldr r2,[r7,#484]
 457 0380 D7F8E011 	 ldr r1,[r7,#480]
 458              	
 459 0384 23FB0213 	 smlad r3,r3,r2,r1
 460              	
 461              	 .thumb
 462 0388 C7F8DC31 	 str r3,[r7,#476]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 463              	 .loc 2 1725 0
 464 038c D7F8DC31 	 ldr r3,[r7,#476]
 465              	.LBE73:
 466              	.LBE72:
 467              	 .loc 1 240 0
 468 0390 C7F86C32 	 str r3,[r7,#620]
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 469              	 .loc 1 243 0
 470 0394 D7F84432 	 ldr r3,[r7,#580]
 471 0398 013B     	 subs r3,r3,#1
 472 039a C7F84432 	 str r3,[r7,#580]
 473              	.L25:
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 474              	 .loc 1 237 0
 475 039e D7F84432 	 ldr r3,[r7,#580]
 476 03a2 002B     	 cmp r3,#0
 477 03a4 CED1     	 bne .L27
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 478              	 .loc 1 247 0
 479 03a6 07F11803 	 add r3,r7,#24
 480 03aa 1B68     	 ldr r3,[r3]
 481 03ac 991C     	 adds r1,r3,#2
 482 03ae 07F11802 	 add r2,r7,#24
 483 03b2 1160     	 str r1,[r2]
 484 03b4 D7F86C22 	 ldr r2,[r7,#620]
 485 03b8 D213     	 asrs r2,r2,#15
 486 03ba 92B2     	 uxth r2,r2
 487 03bc 1A80     	 strh r2,[r3]
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = ++pSrc2 - 1u;
 488              	 .loc 1 250 0
 489 03be D7F85432 	 ldr r3,[r7,#596]
 490 03c2 0233     	 adds r3,r3,#2
 491 03c4 C7F85432 	 str r3,[r7,#596]
 492 03c8 D7F85432 	 ldr r3,[r7,#596]
 493 03cc 9A1E     	 subs r2,r3,#2
 494 03ce 07F11003 	 add r3,r7,#16
 495 03d2 1A60     	 str r2,[r3]
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 496              	 .loc 1 251 0
 497 03d4 07F11403 	 add r3,r7,#20
 498 03d8 D7F87422 	 ldr r2,[r7,#628]
 499 03dc 1A60     	 str r2,[r3]
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Increment the MAC count */
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count++;
 500              	 .loc 1 254 0
 501 03de D7F84032 	 ldr r3,[r7,#576]
 502 03e2 0133     	 adds r3,r3,#1
 503 03e4 C7F84032 	 str r3,[r7,#576]
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize1--;
 504              	 .loc 1 257 0
 505 03e8 D7F83832 	 ldr r3,[r7,#568]
 506 03ec 013B     	 subs r3,r3,#1
 507 03ee C7F83832 	 str r3,[r7,#568]
 508              	.L20:
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 509              	 .loc 1 207 0
 510 03f2 D7F83832 	 ldr r3,[r7,#568]
 511 03f6 002B     	 cmp r3,#0
 512 03f8 3FF73CAF 	 bgt .L28
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage2
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------------*/
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if ((int32_t)firstIndex - (int32_t)srcBLen + 1 > 0)
 513              	 .loc 1 271 0
 514 03fc D7F88422 	 ldr r2,[r7,#644]
 515 0400 3B46     	 mov r3,r7
 516 0402 1B68     	 ldr r3,[r3]
 517 0404 D31A     	 subs r3,r2,r3
 518 0406 0133     	 adds r3,r3,#1
 519 0408 002B     	 cmp r3,#0
 520 040a 0DDD     	 ble .L29
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1 + firstIndex - srcBLen + 1;
 521              	 .loc 1 273 0
 522 040c 3B46     	 mov r3,r7
 523 040e D7F88422 	 ldr r2,[r7,#644]
 524 0412 1B68     	 ldr r3,[r3]
 525 0414 D31A     	 subs r3,r2,r3
 526 0416 0133     	 adds r3,r3,#1
 527 0418 5B00     	 lsls r3,r3,#1
 528 041a D7F87422 	 ldr r2,[r7,#628]
 529 041e 1A44     	 add r2,r2,r3
 530 0420 07F11403 	 add r3,r7,#20
 531 0424 1A60     	 str r2,[r3]
 532 0426 04E0     	 b .L30
 533              	.L29:
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 534              	 .loc 1 277 0
 535 0428 07F11403 	 add r3,r7,#20
 536 042c D7F87422 	 ldr r2,[r7,#628]
 537 0430 1A60     	 str r2,[r3]
 538              	.L30:
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1u);
 539              	 .loc 1 281 0
 540 0432 3B46     	 mov r3,r7
 541 0434 1B68     	 ldr r3,[r3]
 542 0436 03F10043 	 add r3,r3,#-2147483648
 543 043a 013B     	 subs r3,r3,#1
 544 043c 5B00     	 lsls r3,r3,#1
 545 043e D7F87022 	 ldr r2,[r7,#624]
 546 0442 1344     	 add r3,r3,r2
 547 0444 C7F85432 	 str r3,[r7,#596]
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pSrc2;
 548              	 .loc 1 282 0
 549 0448 07F11003 	 add r3,r7,#16
 550 044c D7F85422 	 ldr r2,[r7,#596]
 551 0450 1A60     	 str r2,[r3]
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* count is the index by which the pointer pIn1 to be incremented */
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = 0u;
 552              	 .loc 1 285 0
 553 0452 0023     	 movs r3,#0
 554 0454 C7F84032 	 str r3,[r7,#576]
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage2 process
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------*/
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * So, to loop unroll over blockSize2,
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * srcBLen should be greater than or equal to 4 */
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if (srcBLen >= 4u)
 555              	 .loc 1 295 0
 556 0458 3B46     	 mov r3,r7
 557 045a 1B68     	 ldr r3,[r3]
 558 045c 032B     	 cmp r3,#3
 559 045e 40F2F084 	 bls .L31
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Loop unroll over blockSize2, by 4 */
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = ((uint32_t) blockSize2 >> 2u);
 560              	 .loc 1 298 0
 561 0462 D7F82832 	 ldr r3,[r7,#552]
 562 0466 9B08     	 lsrs r3,r3,#2
 563 0468 C7F83C32 	 str r3,[r7,#572]
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (blkCnt > 0u)
 564              	 .loc 1 300 0
 565 046c 00F014BC 	 b .L32
 566              	.L61:
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = py - 1u;
 567              	 .loc 1 302 0
 568 0470 07F11003 	 add r3,r7,#16
 569 0474 1B68     	 ldr r3,[r3]
 570 0476 9A1E     	 subs r2,r3,#2
 571 0478 07F11003 	 add r3,r7,#16
 572 047c 1A60     	 str r2,[r3]
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Set all accumulators to zero */
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = 0;
 573              	 .loc 1 305 0
 574 047e 0023     	 movs r3,#0
 575 0480 C7F86832 	 str r3,[r7,#616]
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = 0;
 576              	 .loc 1 306 0
 577 0484 0023     	 movs r3,#0
 578 0486 C7F86432 	 str r3,[r7,#612]
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = 0;
 579              	 .loc 1 307 0
 580 048a 0023     	 movs r3,#0
 581 048c C7F86032 	 str r3,[r7,#608]
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = 0;
 582              	 .loc 1 308 0
 583 0490 0023     	 movs r3,#0
 584 0492 C7F85C32 	 str r3,[r7,#604]
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* read x[0], x[1] samples */
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       x0 = *__SIMD32(px);
 585              	 .loc 1 312 0
 586 0496 07F11403 	 add r3,r7,#20
 587 049a 1B68     	 ldr r3,[r3]
 588 049c 1B68     	 ldr r3,[r3]
 589 049e C7F85032 	 str r3,[r7,#592]
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* read x[1], x[2] samples */
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       x1 = _SIMD32_OFFSET(px+1);
 590              	 .loc 1 314 0
 591 04a2 07F11403 	 add r3,r7,#20
 592 04a6 1B68     	 ldr r3,[r3]
 593 04a8 D3F80230 	 ldr r3,[r3,#2]
 594 04ac C7F84C32 	 str r3,[r7,#588]
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  px+= 2u;
 595              	 .loc 1 315 0
 596 04b0 07F11403 	 add r3,r7,#20
 597 04b4 1B68     	 ldr r3,[r3]
 598 04b6 1A1D     	 adds r2,r3,#4
 599 04b8 07F11403 	 add r3,r7,#20
 600 04bc 1A60     	 str r2,[r3]
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen >> 2u;
 601              	 .loc 1 319 0
 602 04be 3B46     	 mov r3,r7
 603 04c0 1B68     	 ldr r3,[r3]
 604 04c2 9B08     	 lsrs r3,r3,#2
 605 04c4 C7F84432 	 str r3,[r7,#580]
 606              	.L41:
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         do
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read the last two inputB samples using SIMD:
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****            * y[srcBLen - 1] and y[srcBLen - 2] */
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = *__SIMD32(py)--;
 607              	 .loc 1 327 0 discriminator 1
 608 04c8 07F11002 	 add r2,r7,#16
 609 04cc 1368     	 ldr r3,[r2]
 610 04ce 191F     	 subs r1,r3,#4
 611 04d0 1160     	 str r1,[r2]
 612 04d2 1B68     	 ldr r3,[r3]
 613 04d4 C7F82432 	 str r3,[r7,#548]
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x0, c0, acc0);
 614              	 .loc 1 330 0 discriminator 1
 615 04d8 D7F85012 	 ldr r1,[r7,#592]
 616 04dc D7F82422 	 ldr r2,[r7,#548]
 617 04e0 D7F86832 	 ldr r3,[r7,#616]
 618 04e4 C7F8D811 	 str r1,[r7,#472]
 619 04e8 C7F8D421 	 str r2,[r7,#468]
 620 04ec C7F8D031 	 str r3,[r7,#464]
 621              	.LBB74:
 622              	.LBB75:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 623              	 .loc 2 1732 0 discriminator 1
 624 04f0 D7F8D831 	 ldr r3,[r7,#472]
 625 04f4 D7F8D421 	 ldr r2,[r7,#468]
 626 04f8 D7F8D011 	 ldr r1,[r7,#464]
 627              	
 628 04fc 23FB1213 	 smladx r3,r3,r2,r1
 629              	
 630              	 .thumb
 631 0500 C7F8CC31 	 str r3,[r7,#460]
 632              	 .loc 2 1733 0 discriminator 1
 633 0504 D7F8CC31 	 ldr r3,[r7,#460]
 634              	.LBE75:
 635              	.LBE74:
 636              	 .loc 1 330 0 discriminator 1
 637 0508 C7F86832 	 str r3,[r7,#616]
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x1, c0, acc1);
 638              	 .loc 1 333 0 discriminator 1
 639 050c D7F84C12 	 ldr r1,[r7,#588]
 640 0510 D7F82422 	 ldr r2,[r7,#548]
 641 0514 D7F86432 	 ldr r3,[r7,#612]
 642 0518 C7F8C811 	 str r1,[r7,#456]
 643 051c C7F8C421 	 str r2,[r7,#452]
 644 0520 C7F8C031 	 str r3,[r7,#448]
 645              	.LBB76:
 646              	.LBB77:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 647              	 .loc 2 1732 0 discriminator 1
 648 0524 D7F8C831 	 ldr r3,[r7,#456]
 649 0528 D7F8C421 	 ldr r2,[r7,#452]
 650 052c D7F8C011 	 ldr r1,[r7,#448]
 651              	
 652 0530 23FB1213 	 smladx r3,r3,r2,r1
 653              	
 654              	 .thumb
 655 0534 C7F8BC31 	 str r3,[r7,#444]
 656              	 .loc 2 1733 0 discriminator 1
 657 0538 D7F8BC31 	 ldr r3,[r7,#444]
 658              	.LBE77:
 659              	.LBE76:
 660              	 .loc 1 333 0 discriminator 1
 661 053c C7F86432 	 str r3,[r7,#612]
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[2], x[3] */
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x2 = *__SIMD32(px);
 662              	 .loc 1 336 0 discriminator 1
 663 0540 07F11403 	 add r3,r7,#20
 664 0544 1B68     	 ldr r3,[r3]
 665 0546 1B68     	 ldr r3,[r3]
 666 0548 C7F82032 	 str r3,[r7,#544]
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[3], x[4] */
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x3 = _SIMD32_OFFSET(px+1);
 667              	 .loc 1 339 0 discriminator 1
 668 054c 07F11403 	 add r3,r7,#20
 669 0550 1B68     	 ldr r3,[r3]
 670 0552 D3F80230 	 ldr r3,[r3,#2]
 671 0556 C7F81C32 	 str r3,[r7,#540]
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x2, c0, acc2);
 672              	 .loc 1 342 0 discriminator 1
 673 055a D7F82012 	 ldr r1,[r7,#544]
 674 055e D7F82422 	 ldr r2,[r7,#548]
 675 0562 D7F86032 	 ldr r3,[r7,#608]
 676 0566 C7F8B811 	 str r1,[r7,#440]
 677 056a C7F8B421 	 str r2,[r7,#436]
 678 056e C7F8B031 	 str r3,[r7,#432]
 679              	.LBB78:
 680              	.LBB79:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 681              	 .loc 2 1732 0 discriminator 1
 682 0572 D7F8B831 	 ldr r3,[r7,#440]
 683 0576 D7F8B421 	 ldr r2,[r7,#436]
 684 057a D7F8B011 	 ldr r1,[r7,#432]
 685              	
 686 057e 23FB1213 	 smladx r3,r3,r2,r1
 687              	
 688              	 .thumb
 689 0582 C7F8AC31 	 str r3,[r7,#428]
 690              	 .loc 2 1733 0 discriminator 1
 691 0586 D7F8AC31 	 ldr r3,[r7,#428]
 692              	.LBE79:
 693              	.LBE78:
 694              	 .loc 1 342 0 discriminator 1
 695 058a C7F86032 	 str r3,[r7,#608]
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x3, c0, acc3);
 696              	 .loc 1 345 0 discriminator 1
 697 058e D7F81C12 	 ldr r1,[r7,#540]
 698 0592 D7F82422 	 ldr r2,[r7,#548]
 699 0596 D7F85C32 	 ldr r3,[r7,#604]
 700 059a C7F8A811 	 str r1,[r7,#424]
 701 059e C7F8A421 	 str r2,[r7,#420]
 702 05a2 C7F8A031 	 str r3,[r7,#416]
 703              	.LBB80:
 704              	.LBB81:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 705              	 .loc 2 1732 0 discriminator 1
 706 05a6 D7F8A831 	 ldr r3,[r7,#424]
 707 05aa D7F8A421 	 ldr r2,[r7,#420]
 708 05ae D7F8A011 	 ldr r1,[r7,#416]
 709              	
 710 05b2 23FB1213 	 smladx r3,r3,r2,r1
 711              	
 712              	 .thumb
 713 05b6 C7F89C31 	 str r3,[r7,#412]
 714              	 .loc 2 1733 0 discriminator 1
 715 05ba D7F89C31 	 ldr r3,[r7,#412]
 716              	.LBE81:
 717              	.LBE80:
 718              	 .loc 1 345 0 discriminator 1
 719 05be C7F85C32 	 str r3,[r7,#604]
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 3] and y[srcBLen - 4] */
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = *__SIMD32(py)--;
 720              	 .loc 1 348 0 discriminator 1
 721 05c2 07F11002 	 add r2,r7,#16
 722 05c6 1368     	 ldr r3,[r2]
 723 05c8 191F     	 subs r1,r3,#4
 724 05ca 1160     	 str r1,[r2]
 725 05cc 1B68     	 ldr r3,[r3]
 726 05ce C7F82432 	 str r3,[r7,#548]
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x2, c0, acc0);
 727              	 .loc 1 351 0 discriminator 1
 728 05d2 D7F82012 	 ldr r1,[r7,#544]
 729 05d6 D7F82422 	 ldr r2,[r7,#548]
 730 05da D7F86832 	 ldr r3,[r7,#616]
 731 05de C7F89811 	 str r1,[r7,#408]
 732 05e2 C7F89421 	 str r2,[r7,#404]
 733 05e6 C7F89031 	 str r3,[r7,#400]
 734              	.LBB82:
 735              	.LBB83:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 736              	 .loc 2 1732 0 discriminator 1
 737 05ea D7F89831 	 ldr r3,[r7,#408]
 738 05ee D7F89421 	 ldr r2,[r7,#404]
 739 05f2 D7F89011 	 ldr r1,[r7,#400]
 740              	
 741 05f6 23FB1213 	 smladx r3,r3,r2,r1
 742              	
 743              	 .thumb
 744 05fa C7F88C31 	 str r3,[r7,#396]
 745              	 .loc 2 1733 0 discriminator 1
 746 05fe D7F88C31 	 ldr r3,[r7,#396]
 747              	.LBE83:
 748              	.LBE82:
 749              	 .loc 1 351 0 discriminator 1
 750 0602 C7F86832 	 str r3,[r7,#616]
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x3, c0, acc1);
 751              	 .loc 1 354 0 discriminator 1
 752 0606 D7F81C12 	 ldr r1,[r7,#540]
 753 060a D7F82422 	 ldr r2,[r7,#548]
 754 060e D7F86432 	 ldr r3,[r7,#612]
 755 0612 C7F88811 	 str r1,[r7,#392]
 756 0616 C7F88421 	 str r2,[r7,#388]
 757 061a C7F88031 	 str r3,[r7,#384]
 758              	.LBB84:
 759              	.LBB85:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 760              	 .loc 2 1732 0 discriminator 1
 761 061e D7F88831 	 ldr r3,[r7,#392]
 762 0622 D7F88421 	 ldr r2,[r7,#388]
 763 0626 D7F88011 	 ldr r1,[r7,#384]
 764              	
 765 062a 23FB1213 	 smladx r3,r3,r2,r1
 766              	
 767              	 .thumb
 768 062e C7F87C31 	 str r3,[r7,#380]
 769              	 .loc 2 1733 0 discriminator 1
 770 0632 D7F87C31 	 ldr r3,[r7,#380]
 771              	.LBE85:
 772              	.LBE84:
 773              	 .loc 1 354 0 discriminator 1
 774 0636 C7F86432 	 str r3,[r7,#612]
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[4], x[5] */
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x0 = _SIMD32_OFFSET(px+2);
 775              	 .loc 1 357 0 discriminator 1
 776 063a 07F11403 	 add r3,r7,#20
 777 063e 1B68     	 ldr r3,[r3]
 778 0640 5B68     	 ldr r3,[r3,#4]
 779 0642 C7F85032 	 str r3,[r7,#592]
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[5], x[6] */
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x1 = _SIMD32_OFFSET(px+3);
 780              	 .loc 1 360 0 discriminator 1
 781 0646 07F11403 	 add r3,r7,#20
 782 064a 1B68     	 ldr r3,[r3]
 783 064c D3F80630 	 ldr r3,[r3,#6]
 784 0650 C7F84C32 	 str r3,[r7,#588]
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 4u;
 785              	 .loc 1 361 0 discriminator 1
 786 0654 07F11403 	 add r3,r7,#20
 787 0658 1B68     	 ldr r3,[r3]
 788 065a 03F10802 	 add r2,r3,#8
 789 065e 07F11403 	 add r3,r7,#20
 790 0662 1A60     	 str r2,[r3]
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x0, c0, acc2);
 791              	 .loc 1 364 0 discriminator 1
 792 0664 D7F85002 	 ldr r0,[r7,#592]
 793 0668 D7F82412 	 ldr r1,[r7,#548]
 794 066c D7F86022 	 ldr r2,[r7,#608]
 795 0670 07F5BC73 	 add r3,r7,#376
 796 0674 1860     	 str r0,[r3]
 797 0676 07F5BA73 	 add r3,r7,#372
 798 067a 1960     	 str r1,[r3]
 799 067c 07F5B873 	 add r3,r7,#368
 800 0680 1A60     	 str r2,[r3]
 801              	.LBB86:
 802              	.LBB87:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 803              	 .loc 2 1732 0 discriminator 1
 804 0682 07F5BC73 	 add r3,r7,#376
 805 0686 1B68     	 ldr r3,[r3]
 806 0688 07F5BA72 	 add r2,r7,#372
 807 068c 1268     	 ldr r2,[r2]
 808 068e 07F5B871 	 add r1,r7,#368
 809 0692 0968     	 ldr r1,[r1]
 810              	
 811 0694 23FB1212 	 smladx r2,r3,r2,r1
 812              	
 813              	 .thumb
 814 0698 07F5B673 	 add r3,r7,#364
 815 069c 1A60     	 str r2,[r3]
 816              	 .loc 2 1733 0 discriminator 1
 817 069e 07F5B673 	 add r3,r7,#364
 818 06a2 1B68     	 ldr r3,[r3]
 819              	.LBE87:
 820              	.LBE86:
 821              	 .loc 1 364 0 discriminator 1
 822 06a4 C7F86032 	 str r3,[r7,#608]
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x1, c0, acc3);
 823              	 .loc 1 367 0 discriminator 1
 824 06a8 D7F84C02 	 ldr r0,[r7,#588]
 825 06ac D7F82412 	 ldr r1,[r7,#548]
 826 06b0 D7F85C22 	 ldr r2,[r7,#604]
 827 06b4 07F5B473 	 add r3,r7,#360
 828 06b8 1860     	 str r0,[r3]
 829 06ba 07F5B273 	 add r3,r7,#356
 830 06be 1960     	 str r1,[r3]
 831 06c0 07F5B073 	 add r3,r7,#352
 832 06c4 1A60     	 str r2,[r3]
 833              	.LBB88:
 834              	.LBB89:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 835              	 .loc 2 1732 0 discriminator 1
 836 06c6 07F5B473 	 add r3,r7,#360
 837 06ca 1B68     	 ldr r3,[r3]
 838 06cc 07F5B272 	 add r2,r7,#356
 839 06d0 1268     	 ldr r2,[r2]
 840 06d2 07F5B071 	 add r1,r7,#352
 841 06d6 0968     	 ldr r1,[r1]
 842              	
 843 06d8 23FB1212 	 smladx r2,r3,r2,r1
 844              	
 845              	 .thumb
 846 06dc 07F5AE73 	 add r3,r7,#348
 847 06e0 1A60     	 str r2,[r3]
 848              	 .loc 2 1733 0 discriminator 1
 849 06e2 07F5AE73 	 add r3,r7,#348
 850 06e6 1B68     	 ldr r3,[r3]
 851              	.LBE89:
 852              	.LBE88:
 853              	 .loc 1 367 0 discriminator 1
 854 06e8 C7F85C32 	 str r3,[r7,#604]
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         } while (--k);
 855              	 .loc 1 369 0 discriminator 1
 856 06ec D7F84432 	 ldr r3,[r7,#580]
 857 06f0 013B     	 subs r3,r3,#1
 858 06f2 C7F84432 	 str r3,[r7,#580]
 859 06f6 D7F84432 	 ldr r3,[r7,#580]
 860 06fa 002B     	 cmp r3,#0
 861 06fc 7FF4E4AE 	 bne .L41
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* For the next MAC operations, SIMD is not used
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          * So, the 16 bit pointer if inputB, py is updated */
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** No loop unrolling is used. */
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen % 0x4u;
 862              	 .loc 1 376 0
 863 0700 3B46     	 mov r3,r7
 864 0702 1B68     	 ldr r3,[r3]
 865 0704 03F00303 	 and r3,r3,#3
 866 0708 C7F84432 	 str r3,[r7,#580]
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         if (k == 1u)
 867              	 .loc 1 378 0
 868 070c D7F84432 	 ldr r3,[r7,#580]
 869 0710 012B     	 cmp r3,#1
 870 0712 40F0A280 	 bne .L42
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 5] */
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = *(py+1);
 871              	 .loc 1 381 0
 872 0716 07F11003 	 add r3,r7,#16
 873 071a 1B68     	 ldr r3,[r3]
 874 071c 0233     	 adds r3,r3,#2
 875 071e 1B88     	 ldrh r3,[r3]
 876 0720 1BB2     	 sxth r3,r3
 877 0722 C7F82432 	 str r3,[r7,#548]
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 << 16u;
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 878              	 .loc 1 388 0
 879 0726 D7F82432 	 ldr r3,[r7,#548]
 880 072a 9BB2     	 uxth r3,r3
 881 072c C7F82432 	 str r3,[r7,#548]
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[7] */
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x3 = *__SIMD32(px);
 882              	 .loc 1 393 0
 883 0730 07F11403 	 add r3,r7,#20
 884 0734 1B68     	 ldr r3,[r3]
 885 0736 1B68     	 ldr r3,[r3]
 886 0738 C7F81C32 	 str r3,[r7,#540]
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px++;
 887              	 .loc 1 394 0
 888 073c 07F11403 	 add r3,r7,#20
 889 0740 1B68     	 ldr r3,[r3]
 890 0742 9A1C     	 adds r2,r3,#2
 891 0744 07F11403 	 add r3,r7,#20
 892 0748 1A60     	 str r2,[r3]
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLAD(x0, c0, acc0);
 893              	 .loc 1 397 0
 894 074a D7F85002 	 ldr r0,[r7,#592]
 895 074e D7F82412 	 ldr r1,[r7,#548]
 896 0752 D7F86822 	 ldr r2,[r7,#616]
 897 0756 07F5AC73 	 add r3,r7,#344
 898 075a 1860     	 str r0,[r3]
 899 075c 07F5AA73 	 add r3,r7,#340
 900 0760 1960     	 str r1,[r3]
 901 0762 07F5A873 	 add r3,r7,#336
 902 0766 1A60     	 str r2,[r3]
 903              	.LBB90:
 904              	.LBB91:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 905              	 .loc 2 1724 0
 906 0768 07F5AC73 	 add r3,r7,#344
 907 076c 1B68     	 ldr r3,[r3]
 908 076e 07F5AA72 	 add r2,r7,#340
 909 0772 1268     	 ldr r2,[r2]
 910 0774 07F5A871 	 add r1,r7,#336
 911 0778 0968     	 ldr r1,[r1]
 912              	
 913 077a 23FB0212 	 smlad r2,r3,r2,r1
 914              	
 915              	 .thumb
 916 077e 07F5A673 	 add r3,r7,#332
 917 0782 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 918              	 .loc 2 1725 0
 919 0784 07F5A673 	 add r3,r7,#332
 920 0788 1B68     	 ldr r3,[r3]
 921              	.LBE91:
 922              	.LBE90:
 923              	 .loc 1 397 0
 924 078a C7F86832 	 str r3,[r7,#616]
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLAD(x1, c0, acc1);
 925              	 .loc 1 398 0
 926 078e D7F84C02 	 ldr r0,[r7,#588]
 927 0792 D7F82412 	 ldr r1,[r7,#548]
 928 0796 D7F86422 	 ldr r2,[r7,#612]
 929 079a 07F5A473 	 add r3,r7,#328
 930 079e 1860     	 str r0,[r3]
 931 07a0 07F5A273 	 add r3,r7,#324
 932 07a4 1960     	 str r1,[r3]
 933 07a6 07F5A073 	 add r3,r7,#320
 934 07aa 1A60     	 str r2,[r3]
 935              	.LBB92:
 936              	.LBB93:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 937              	 .loc 2 1724 0
 938 07ac 07F5A473 	 add r3,r7,#328
 939 07b0 1B68     	 ldr r3,[r3]
 940 07b2 07F5A272 	 add r2,r7,#324
 941 07b6 1268     	 ldr r2,[r2]
 942 07b8 07F5A071 	 add r1,r7,#320
 943 07bc 0968     	 ldr r1,[r1]
 944              	
 945 07be 23FB0212 	 smlad r2,r3,r2,r1
 946              	
 947              	 .thumb
 948 07c2 07F59E73 	 add r3,r7,#316
 949 07c6 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 950              	 .loc 2 1725 0
 951 07c8 07F59E73 	 add r3,r7,#316
 952 07cc 1B68     	 ldr r3,[r3]
 953              	.LBE93:
 954              	.LBE92:
 955              	 .loc 1 398 0
 956 07ce C7F86432 	 str r3,[r7,#612]
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x1, c0, acc2);
 957              	 .loc 1 399 0
 958 07d2 D7F84C02 	 ldr r0,[r7,#588]
 959 07d6 D7F82412 	 ldr r1,[r7,#548]
 960 07da D7F86022 	 ldr r2,[r7,#608]
 961 07de 07F59C73 	 add r3,r7,#312
 962 07e2 1860     	 str r0,[r3]
 963 07e4 07F59A73 	 add r3,r7,#308
 964 07e8 1960     	 str r1,[r3]
 965 07ea 07F59873 	 add r3,r7,#304
 966 07ee 1A60     	 str r2,[r3]
 967              	.LBB94:
 968              	.LBB95:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 969              	 .loc 2 1732 0
 970 07f0 07F59C73 	 add r3,r7,#312
 971 07f4 1B68     	 ldr r3,[r3]
 972 07f6 07F59A72 	 add r2,r7,#308
 973 07fa 1268     	 ldr r2,[r2]
 974 07fc 07F59871 	 add r1,r7,#304
 975 0800 0968     	 ldr r1,[r1]
 976              	
 977 0802 23FB1212 	 smladx r2,r3,r2,r1
 978              	
 979              	 .thumb
 980 0806 07F59673 	 add r3,r7,#300
 981 080a 1A60     	 str r2,[r3]
 982              	 .loc 2 1733 0
 983 080c 07F59673 	 add r3,r7,#300
 984 0810 1B68     	 ldr r3,[r3]
 985              	.LBE95:
 986              	.LBE94:
 987              	 .loc 1 399 0
 988 0812 C7F86032 	 str r3,[r7,#608]
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x3, c0, acc3);
 989              	 .loc 1 400 0
 990 0816 D7F81C02 	 ldr r0,[r7,#540]
 991 081a D7F82412 	 ldr r1,[r7,#548]
 992 081e D7F85C22 	 ldr r2,[r7,#604]
 993 0822 07F59473 	 add r3,r7,#296
 994 0826 1860     	 str r0,[r3]
 995 0828 07F59273 	 add r3,r7,#292
 996 082c 1960     	 str r1,[r3]
 997 082e 07F59073 	 add r3,r7,#288
 998 0832 1A60     	 str r2,[r3]
 999              	.LBB96:
 1000              	.LBB97:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1001              	 .loc 2 1732 0
 1002 0834 07F59473 	 add r3,r7,#296
 1003 0838 1B68     	 ldr r3,[r3]
 1004 083a 07F59272 	 add r2,r7,#292
 1005 083e 1268     	 ldr r2,[r2]
 1006 0840 07F59071 	 add r1,r7,#288
 1007 0844 0968     	 ldr r1,[r1]
 1008              	
 1009 0846 23FB1212 	 smladx r2,r3,r2,r1
 1010              	
 1011              	 .thumb
 1012 084a 07F58E73 	 add r3,r7,#284
 1013 084e 1A60     	 str r2,[r3]
 1014              	 .loc 2 1733 0
 1015 0850 07F58E73 	 add r3,r7,#284
 1016 0854 1B68     	 ldr r3,[r3]
 1017              	.LBE97:
 1018              	.LBE96:
 1019              	 .loc 1 400 0
 1020 0856 C7F85C32 	 str r3,[r7,#604]
 1021              	.L42:
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         if (k == 2u)
 1022              	 .loc 1 403 0
 1023 085a D7F84432 	 ldr r3,[r7,#580]
 1024 085e 022B     	 cmp r3,#2
 1025 0860 40F0A280 	 bne .L47
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 5], y[srcBLen - 6] */
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = _SIMD32_OFFSET(py);
 1026              	 .loc 1 406 0
 1027 0864 07F11003 	 add r3,r7,#16
 1028 0868 1B68     	 ldr r3,[r3]
 1029 086a 1B68     	 ldr r3,[r3]
 1030 086c C7F82432 	 str r3,[r7,#548]
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[7], x[8] */
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x3 = *__SIMD32(px);
 1031              	 .loc 1 409 0
 1032 0870 07F11403 	 add r3,r7,#20
 1033 0874 1B68     	 ldr r3,[r3]
 1034 0876 1B68     	 ldr r3,[r3]
 1035 0878 C7F81C32 	 str r3,[r7,#540]
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[9] */
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x2 = _SIMD32_OFFSET(px+1);
 1036              	 .loc 1 412 0
 1037 087c 07F11403 	 add r3,r7,#20
 1038 0880 1B68     	 ldr r3,[r3]
 1039 0882 D3F80230 	 ldr r3,[r3,#2]
 1040 0886 C7F82032 	 str r3,[r7,#544]
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 2u;
 1041              	 .loc 1 413 0
 1042 088a 07F11403 	 add r3,r7,#20
 1043 088e 1B68     	 ldr r3,[r3]
 1044 0890 1A1D     	 adds r2,r3,#4
 1045 0892 07F11403 	 add r3,r7,#20
 1046 0896 1A60     	 str r2,[r3]
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x0, c0, acc0);
 1047              	 .loc 1 416 0
 1048 0898 D7F85002 	 ldr r0,[r7,#592]
 1049 089c D7F82412 	 ldr r1,[r7,#548]
 1050 08a0 D7F86822 	 ldr r2,[r7,#616]
 1051 08a4 07F58C73 	 add r3,r7,#280
 1052 08a8 1860     	 str r0,[r3]
 1053 08aa 07F58A73 	 add r3,r7,#276
 1054 08ae 1960     	 str r1,[r3]
 1055 08b0 07F58873 	 add r3,r7,#272
 1056 08b4 1A60     	 str r2,[r3]
 1057              	.LBB98:
 1058              	.LBB99:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1059              	 .loc 2 1732 0
 1060 08b6 07F58C73 	 add r3,r7,#280
 1061 08ba 1B68     	 ldr r3,[r3]
 1062 08bc 07F58A72 	 add r2,r7,#276
 1063 08c0 1268     	 ldr r2,[r2]
 1064 08c2 07F58871 	 add r1,r7,#272
 1065 08c6 0968     	 ldr r1,[r1]
 1066              	
 1067 08c8 23FB1212 	 smladx r2,r3,r2,r1
 1068              	
 1069              	 .thumb
 1070 08cc 07F58673 	 add r3,r7,#268
 1071 08d0 1A60     	 str r2,[r3]
 1072              	 .loc 2 1733 0
 1073 08d2 07F58673 	 add r3,r7,#268
 1074 08d6 1B68     	 ldr r3,[r3]
 1075              	.LBE99:
 1076              	.LBE98:
 1077              	 .loc 1 416 0
 1078 08d8 C7F86832 	 str r3,[r7,#616]
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x1, c0, acc1);
 1079              	 .loc 1 417 0
 1080 08dc D7F84C02 	 ldr r0,[r7,#588]
 1081 08e0 D7F82412 	 ldr r1,[r7,#548]
 1082 08e4 D7F86422 	 ldr r2,[r7,#612]
 1083 08e8 07F58473 	 add r3,r7,#264
 1084 08ec 1860     	 str r0,[r3]
 1085 08ee 07F58273 	 add r3,r7,#260
 1086 08f2 1960     	 str r1,[r3]
 1087 08f4 07F58073 	 add r3,r7,#256
 1088 08f8 1A60     	 str r2,[r3]
 1089              	.LBB100:
 1090              	.LBB101:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1091              	 .loc 2 1732 0
 1092 08fa 07F58473 	 add r3,r7,#264
 1093 08fe 1B68     	 ldr r3,[r3]
 1094 0900 07F58272 	 add r2,r7,#260
 1095 0904 1268     	 ldr r2,[r2]
 1096 0906 07F58071 	 add r1,r7,#256
 1097 090a 0968     	 ldr r1,[r1]
 1098              	
 1099 090c 23FB1212 	 smladx r2,r3,r2,r1
 1100              	
 1101              	 .thumb
 1102 0910 07F1FC03 	 add r3,r7,#252
 1103 0914 1A60     	 str r2,[r3]
 1104              	 .loc 2 1733 0
 1105 0916 07F1FC03 	 add r3,r7,#252
 1106 091a 1B68     	 ldr r3,[r3]
 1107              	.LBE101:
 1108              	.LBE100:
 1109              	 .loc 1 417 0
 1110 091c C7F86432 	 str r3,[r7,#612]
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x3, c0, acc2);
 1111              	 .loc 1 418 0
 1112 0920 D7F81C02 	 ldr r0,[r7,#540]
 1113 0924 D7F82412 	 ldr r1,[r7,#548]
 1114 0928 D7F86022 	 ldr r2,[r7,#608]
 1115 092c 07F1F803 	 add r3,r7,#248
 1116 0930 1860     	 str r0,[r3]
 1117 0932 07F1F403 	 add r3,r7,#244
 1118 0936 1960     	 str r1,[r3]
 1119 0938 07F1F003 	 add r3,r7,#240
 1120 093c 1A60     	 str r2,[r3]
 1121              	.LBB102:
 1122              	.LBB103:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1123              	 .loc 2 1732 0
 1124 093e 07F1F803 	 add r3,r7,#248
 1125 0942 1B68     	 ldr r3,[r3]
 1126 0944 07F1F402 	 add r2,r7,#244
 1127 0948 1268     	 ldr r2,[r2]
 1128 094a 07F1F001 	 add r1,r7,#240
 1129 094e 0968     	 ldr r1,[r1]
 1130              	
 1131 0950 23FB1212 	 smladx r2,r3,r2,r1
 1132              	
 1133              	 .thumb
 1134 0954 07F1EC03 	 add r3,r7,#236
 1135 0958 1A60     	 str r2,[r3]
 1136              	 .loc 2 1733 0
 1137 095a 07F1EC03 	 add r3,r7,#236
 1138 095e 1B68     	 ldr r3,[r3]
 1139              	.LBE103:
 1140              	.LBE102:
 1141              	 .loc 1 418 0
 1142 0960 C7F86032 	 str r3,[r7,#608]
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x2, c0, acc3);
 1143              	 .loc 1 419 0
 1144 0964 D7F82002 	 ldr r0,[r7,#544]
 1145 0968 D7F82412 	 ldr r1,[r7,#548]
 1146 096c D7F85C22 	 ldr r2,[r7,#604]
 1147 0970 07F1E803 	 add r3,r7,#232
 1148 0974 1860     	 str r0,[r3]
 1149 0976 07F1E403 	 add r3,r7,#228
 1150 097a 1960     	 str r1,[r3]
 1151 097c 07F1E003 	 add r3,r7,#224
 1152 0980 1A60     	 str r2,[r3]
 1153              	.LBB104:
 1154              	.LBB105:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1155              	 .loc 2 1732 0
 1156 0982 07F1E803 	 add r3,r7,#232
 1157 0986 1B68     	 ldr r3,[r3]
 1158 0988 07F1E402 	 add r2,r7,#228
 1159 098c 1268     	 ldr r2,[r2]
 1160 098e 07F1E001 	 add r1,r7,#224
 1161 0992 0968     	 ldr r1,[r1]
 1162              	
 1163 0994 23FB1212 	 smladx r2,r3,r2,r1
 1164              	
 1165              	 .thumb
 1166 0998 07F1DC03 	 add r3,r7,#220
 1167 099c 1A60     	 str r2,[r3]
 1168              	 .loc 2 1733 0
 1169 099e 07F1DC03 	 add r3,r7,#220
 1170 09a2 1B68     	 ldr r3,[r3]
 1171              	.LBE105:
 1172              	.LBE104:
 1173              	 .loc 1 419 0
 1174 09a4 C7F85C32 	 str r3,[r7,#604]
 1175              	.L47:
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         if (k == 3u)
 1176              	 .loc 1 422 0
 1177 09a8 D7F84432 	 ldr r3,[r7,#580]
 1178 09ac 032B     	 cmp r3,#3
 1179 09ae 40F03D81 	 bne .L52
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 5], y[srcBLen - 6] */
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = _SIMD32_OFFSET(py);
 1180              	 .loc 1 425 0
 1181 09b2 07F11003 	 add r3,r7,#16
 1182 09b6 1B68     	 ldr r3,[r3]
 1183 09b8 1B68     	 ldr r3,[r3]
 1184 09ba C7F82432 	 str r3,[r7,#548]
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[7], x[8] */
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x3 = *__SIMD32(px);
 1185              	 .loc 1 428 0
 1186 09be 07F11403 	 add r3,r7,#20
 1187 09c2 1B68     	 ldr r3,[r3]
 1188 09c4 1B68     	 ldr r3,[r3]
 1189 09c6 C7F81C32 	 str r3,[r7,#540]
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[9] */
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x2 = _SIMD32_OFFSET(px+1);
 1190              	 .loc 1 431 0
 1191 09ca 07F11403 	 add r3,r7,#20
 1192 09ce 1B68     	 ldr r3,[r3]
 1193 09d0 D3F80230 	 ldr r3,[r3,#2]
 1194 09d4 C7F82032 	 str r3,[r7,#544]
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x0, c0, acc0);
 1195              	 .loc 1 434 0
 1196 09d8 D7F85002 	 ldr r0,[r7,#592]
 1197 09dc D7F82412 	 ldr r1,[r7,#548]
 1198 09e0 D7F86822 	 ldr r2,[r7,#616]
 1199 09e4 07F1D803 	 add r3,r7,#216
 1200 09e8 1860     	 str r0,[r3]
 1201 09ea 07F1D403 	 add r3,r7,#212
 1202 09ee 1960     	 str r1,[r3]
 1203 09f0 07F1D003 	 add r3,r7,#208
 1204 09f4 1A60     	 str r2,[r3]
 1205              	.LBB106:
 1206              	.LBB107:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1207              	 .loc 2 1732 0
 1208 09f6 07F1D803 	 add r3,r7,#216
 1209 09fa 1B68     	 ldr r3,[r3]
 1210 09fc 07F1D402 	 add r2,r7,#212
 1211 0a00 1268     	 ldr r2,[r2]
 1212 0a02 07F1D001 	 add r1,r7,#208
 1213 0a06 0968     	 ldr r1,[r1]
 1214              	
 1215 0a08 23FB1212 	 smladx r2,r3,r2,r1
 1216              	
 1217              	 .thumb
 1218 0a0c 07F1CC03 	 add r3,r7,#204
 1219 0a10 1A60     	 str r2,[r3]
 1220              	 .loc 2 1733 0
 1221 0a12 07F1CC03 	 add r3,r7,#204
 1222 0a16 1B68     	 ldr r3,[r3]
 1223              	.LBE107:
 1224              	.LBE106:
 1225              	 .loc 1 434 0
 1226 0a18 C7F86832 	 str r3,[r7,#616]
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x1, c0, acc1);
 1227              	 .loc 1 435 0
 1228 0a1c D7F84C02 	 ldr r0,[r7,#588]
 1229 0a20 D7F82412 	 ldr r1,[r7,#548]
 1230 0a24 D7F86422 	 ldr r2,[r7,#612]
 1231 0a28 07F1C803 	 add r3,r7,#200
 1232 0a2c 1860     	 str r0,[r3]
 1233 0a2e 07F1C403 	 add r3,r7,#196
 1234 0a32 1960     	 str r1,[r3]
 1235 0a34 07F1C003 	 add r3,r7,#192
 1236 0a38 1A60     	 str r2,[r3]
 1237              	.LBB108:
 1238              	.LBB109:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1239              	 .loc 2 1732 0
 1240 0a3a 07F1C803 	 add r3,r7,#200
 1241 0a3e 1B68     	 ldr r3,[r3]
 1242 0a40 07F1C402 	 add r2,r7,#196
 1243 0a44 1268     	 ldr r2,[r2]
 1244 0a46 07F1C001 	 add r1,r7,#192
 1245 0a4a 0968     	 ldr r1,[r1]
 1246              	
 1247 0a4c 23FB1212 	 smladx r2,r3,r2,r1
 1248              	
 1249              	 .thumb
 1250 0a50 07F1BC03 	 add r3,r7,#188
 1251 0a54 1A60     	 str r2,[r3]
 1252              	 .loc 2 1733 0
 1253 0a56 07F1BC03 	 add r3,r7,#188
 1254 0a5a 1B68     	 ldr r3,[r3]
 1255              	.LBE109:
 1256              	.LBE108:
 1257              	 .loc 1 435 0
 1258 0a5c C7F86432 	 str r3,[r7,#612]
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x3, c0, acc2);
 1259              	 .loc 1 436 0
 1260 0a60 D7F81C02 	 ldr r0,[r7,#540]
 1261 0a64 D7F82412 	 ldr r1,[r7,#548]
 1262 0a68 D7F86022 	 ldr r2,[r7,#608]
 1263 0a6c 07F1B803 	 add r3,r7,#184
 1264 0a70 1860     	 str r0,[r3]
 1265 0a72 07F1B403 	 add r3,r7,#180
 1266 0a76 1960     	 str r1,[r3]
 1267 0a78 07F1B003 	 add r3,r7,#176
 1268 0a7c 1A60     	 str r2,[r3]
 1269              	.LBB110:
 1270              	.LBB111:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1271              	 .loc 2 1732 0
 1272 0a7e 07F1B803 	 add r3,r7,#184
 1273 0a82 1B68     	 ldr r3,[r3]
 1274 0a84 07F1B402 	 add r2,r7,#180
 1275 0a88 1268     	 ldr r2,[r2]
 1276 0a8a 07F1B001 	 add r1,r7,#176
 1277 0a8e 0968     	 ldr r1,[r1]
 1278              	
 1279 0a90 23FB1212 	 smladx r2,r3,r2,r1
 1280              	
 1281              	 .thumb
 1282 0a94 07F1AC03 	 add r3,r7,#172
 1283 0a98 1A60     	 str r2,[r3]
 1284              	 .loc 2 1733 0
 1285 0a9a 07F1AC03 	 add r3,r7,#172
 1286 0a9e 1B68     	 ldr r3,[r3]
 1287              	.LBE111:
 1288              	.LBE110:
 1289              	 .loc 1 436 0
 1290 0aa0 C7F86032 	 str r3,[r7,#608]
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x2, c0, acc3);
 1291              	 .loc 1 437 0
 1292 0aa4 D7F82002 	 ldr r0,[r7,#544]
 1293 0aa8 D7F82412 	 ldr r1,[r7,#548]
 1294 0aac D7F85C22 	 ldr r2,[r7,#604]
 1295 0ab0 07F1A803 	 add r3,r7,#168
 1296 0ab4 1860     	 str r0,[r3]
 1297 0ab6 07F1A403 	 add r3,r7,#164
 1298 0aba 1960     	 str r1,[r3]
 1299 0abc 07F1A003 	 add r3,r7,#160
 1300 0ac0 1A60     	 str r2,[r3]
 1301              	.LBB112:
 1302              	.LBB113:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1303              	 .loc 2 1732 0
 1304 0ac2 07F1A803 	 add r3,r7,#168
 1305 0ac6 1B68     	 ldr r3,[r3]
 1306 0ac8 07F1A402 	 add r2,r7,#164
 1307 0acc 1268     	 ldr r2,[r2]
 1308 0ace 07F1A001 	 add r1,r7,#160
 1309 0ad2 0968     	 ldr r1,[r1]
 1310              	
 1311 0ad4 23FB1212 	 smladx r2,r3,r2,r1
 1312              	
 1313              	 .thumb
 1314 0ad8 07F19C03 	 add r3,r7,#156
 1315 0adc 1A60     	 str r2,[r3]
 1316              	 .loc 2 1733 0
 1317 0ade 07F19C03 	 add r3,r7,#156
 1318 0ae2 1B68     	 ldr r3,[r3]
 1319              	.LBE113:
 1320              	.LBE112:
 1321              	 .loc 1 437 0
 1322 0ae4 C7F85C32 	 str r3,[r7,#604]
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = *(py-1);
 1323              	 .loc 1 439 0
 1324 0ae8 07F11003 	 add r3,r7,#16
 1325 0aec 1B68     	 ldr r3,[r3]
 1326 0aee 023B     	 subs r3,r3,#2
 1327 0af0 1B88     	 ldrh r3,[r3]
 1328 0af2 1BB2     	 sxth r3,r3
 1329 0af4 C7F82432 	 str r3,[r7,#548]
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 << 16u;
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 1330              	 .loc 1 445 0
 1331 0af8 D7F82432 	 ldr r3,[r7,#548]
 1332 0afc 9BB2     	 uxth r3,r3
 1333 0afe C7F82432 	 str r3,[r7,#548]
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[10] */
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x3 =  _SIMD32_OFFSET(px+2);
 1334              	 .loc 1 449 0
 1335 0b02 07F11403 	 add r3,r7,#20
 1336 0b06 1B68     	 ldr r3,[r3]
 1337 0b08 5B68     	 ldr r3,[r3,#4]
 1338 0b0a C7F81C32 	 str r3,[r7,#540]
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 3u;
 1339              	 .loc 1 450 0
 1340 0b0e 07F11403 	 add r3,r7,#20
 1341 0b12 1B68     	 ldr r3,[r3]
 1342 0b14 9A1D     	 adds r2,r3,#6
 1343 0b16 07F11403 	 add r3,r7,#20
 1344 0b1a 1A60     	 str r2,[r3]
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x1, c0, acc0);
 1345              	 .loc 1 453 0
 1346 0b1c D7F84C02 	 ldr r0,[r7,#588]
 1347 0b20 D7F82412 	 ldr r1,[r7,#548]
 1348 0b24 D7F86822 	 ldr r2,[r7,#616]
 1349 0b28 07F19803 	 add r3,r7,#152
 1350 0b2c 1860     	 str r0,[r3]
 1351 0b2e 07F19403 	 add r3,r7,#148
 1352 0b32 1960     	 str r1,[r3]
 1353 0b34 07F19003 	 add r3,r7,#144
 1354 0b38 1A60     	 str r2,[r3]
 1355              	.LBB114:
 1356              	.LBB115:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1357              	 .loc 2 1732 0
 1358 0b3a 07F19803 	 add r3,r7,#152
 1359 0b3e 1B68     	 ldr r3,[r3]
 1360 0b40 07F19402 	 add r2,r7,#148
 1361 0b44 1268     	 ldr r2,[r2]
 1362 0b46 07F19001 	 add r1,r7,#144
 1363 0b4a 0968     	 ldr r1,[r1]
 1364              	
 1365 0b4c 23FB1212 	 smladx r2,r3,r2,r1
 1366              	
 1367              	 .thumb
 1368 0b50 07F18C03 	 add r3,r7,#140
 1369 0b54 1A60     	 str r2,[r3]
 1370              	 .loc 2 1733 0
 1371 0b56 07F18C03 	 add r3,r7,#140
 1372 0b5a 1B68     	 ldr r3,[r3]
 1373              	.LBE115:
 1374              	.LBE114:
 1375              	 .loc 1 453 0
 1376 0b5c C7F86832 	 str r3,[r7,#616]
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLAD(x2, c0, acc1);
 1377              	 .loc 1 454 0
 1378 0b60 D7F82002 	 ldr r0,[r7,#544]
 1379 0b64 D7F82412 	 ldr r1,[r7,#548]
 1380 0b68 D7F86422 	 ldr r2,[r7,#612]
 1381 0b6c 07F18803 	 add r3,r7,#136
 1382 0b70 1860     	 str r0,[r3]
 1383 0b72 07F18403 	 add r3,r7,#132
 1384 0b76 1960     	 str r1,[r3]
 1385 0b78 07F18003 	 add r3,r7,#128
 1386 0b7c 1A60     	 str r2,[r3]
 1387              	.LBB116:
 1388              	.LBB117:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1389              	 .loc 2 1724 0
 1390 0b7e 07F18803 	 add r3,r7,#136
 1391 0b82 1B68     	 ldr r3,[r3]
 1392 0b84 07F18402 	 add r2,r7,#132
 1393 0b88 1268     	 ldr r2,[r2]
 1394 0b8a 07F18001 	 add r1,r7,#128
 1395 0b8e 0968     	 ldr r1,[r1]
 1396              	
 1397 0b90 23FB0212 	 smlad r2,r3,r2,r1
 1398              	
 1399              	 .thumb
 1400 0b94 07F17C03 	 add r3,r7,#124
 1401 0b98 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1402              	 .loc 2 1725 0
 1403 0b9a 07F17C03 	 add r3,r7,#124
 1404 0b9e 1B68     	 ldr r3,[r3]
 1405              	.LBE117:
 1406              	.LBE116:
 1407              	 .loc 1 454 0
 1408 0ba0 C7F86432 	 str r3,[r7,#612]
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x2, c0, acc2);
 1409              	 .loc 1 455 0
 1410 0ba4 D7F82002 	 ldr r0,[r7,#544]
 1411 0ba8 D7F82412 	 ldr r1,[r7,#548]
 1412 0bac D7F86022 	 ldr r2,[r7,#608]
 1413 0bb0 07F17803 	 add r3,r7,#120
 1414 0bb4 1860     	 str r0,[r3]
 1415 0bb6 07F17403 	 add r3,r7,#116
 1416 0bba 1960     	 str r1,[r3]
 1417 0bbc 07F17003 	 add r3,r7,#112
 1418 0bc0 1A60     	 str r2,[r3]
 1419              	.LBB118:
 1420              	.LBB119:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1421              	 .loc 2 1732 0
 1422 0bc2 07F17803 	 add r3,r7,#120
 1423 0bc6 1B68     	 ldr r3,[r3]
 1424 0bc8 07F17402 	 add r2,r7,#116
 1425 0bcc 1268     	 ldr r2,[r2]
 1426 0bce 07F17001 	 add r1,r7,#112
 1427 0bd2 0968     	 ldr r1,[r1]
 1428              	
 1429 0bd4 23FB1212 	 smladx r2,r3,r2,r1
 1430              	
 1431              	 .thumb
 1432 0bd8 07F16C03 	 add r3,r7,#108
 1433 0bdc 1A60     	 str r2,[r3]
 1434              	 .loc 2 1733 0
 1435 0bde 07F16C03 	 add r3,r7,#108
 1436 0be2 1B68     	 ldr r3,[r3]
 1437              	.LBE119:
 1438              	.LBE118:
 1439              	 .loc 1 455 0
 1440 0be4 C7F86032 	 str r3,[r7,#608]
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x3, c0, acc3);
 1441              	 .loc 1 456 0
 1442 0be8 D7F81C02 	 ldr r0,[r7,#540]
 1443 0bec D7F82412 	 ldr r1,[r7,#548]
 1444 0bf0 D7F85C22 	 ldr r2,[r7,#604]
 1445 0bf4 07F16803 	 add r3,r7,#104
 1446 0bf8 1860     	 str r0,[r3]
 1447 0bfa 07F16403 	 add r3,r7,#100
 1448 0bfe 1960     	 str r1,[r3]
 1449 0c00 07F16003 	 add r3,r7,#96
 1450 0c04 1A60     	 str r2,[r3]
 1451              	.LBB120:
 1452              	.LBB121:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1453              	 .loc 2 1732 0
 1454 0c06 07F16803 	 add r3,r7,#104
 1455 0c0a 1B68     	 ldr r3,[r3]
 1456 0c0c 07F16402 	 add r2,r7,#100
 1457 0c10 1268     	 ldr r2,[r2]
 1458 0c12 07F16001 	 add r1,r7,#96
 1459 0c16 0968     	 ldr r1,[r1]
 1460              	
 1461 0c18 23FB1212 	 smladx r2,r3,r2,r1
 1462              	
 1463              	 .thumb
 1464 0c1c 07F15C03 	 add r3,r7,#92
 1465 0c20 1A60     	 str r2,[r3]
 1466              	 .loc 2 1733 0
 1467 0c22 07F15C03 	 add r3,r7,#92
 1468 0c26 1B68     	 ldr r3,[r3]
 1469              	.LBE121:
 1470              	.LBE120:
 1471              	 .loc 1 456 0
 1472 0c28 C7F85C32 	 str r3,[r7,#604]
 1473              	.L52:
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the results in the accumulators in the destination buffer. */
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *__SIMD32(pOut)++ = __PKHBT(acc0 >> 15, acc1 >> 15, 16);
 1474              	 .loc 1 462 0
 1475 0c2c 07F11802 	 add r2,r7,#24
 1476 0c30 1368     	 ldr r3,[r2]
 1477 0c32 191D     	 adds r1,r3,#4
 1478 0c34 1160     	 str r1,[r2]
 1479 0c36 D7F86822 	 ldr r2,[r7,#616]
 1480 0c3a D213     	 asrs r2,r2,#15
 1481 0c3c 91B2     	 uxth r1,r2
 1482 0c3e D7F86422 	 ldr r2,[r7,#612]
 1483 0c42 D213     	 asrs r2,r2,#15
 1484 0c44 1204     	 lsls r2,r2,#16
 1485 0c46 0A43     	 orrs r2,r2,r1
 1486 0c48 1A60     	 str r2,[r3]
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *__SIMD32(pOut)++ = __PKHBT(acc2 >> 15, acc3 >> 15, 16);
 1487              	 .loc 1 463 0
 1488 0c4a 07F11802 	 add r2,r7,#24
 1489 0c4e 1368     	 ldr r3,[r2]
 1490 0c50 191D     	 adds r1,r3,#4
 1491 0c52 1160     	 str r1,[r2]
 1492 0c54 D7F86022 	 ldr r2,[r7,#608]
 1493 0c58 D213     	 asrs r2,r2,#15
 1494 0c5a 91B2     	 uxth r1,r2
 1495 0c5c D7F85C22 	 ldr r2,[r7,#604]
 1496 0c60 D213     	 asrs r2,r2,#15
 1497 0c62 1204     	 lsls r2,r2,#16
 1498 0c64 0A43     	 orrs r2,r2,r1
 1499 0c66 1A60     	 str r2,[r3]
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *__SIMD32(pOut)++ = __PKHBT(acc1 >> 15, acc0 >> 15, 16);
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *__SIMD32(pOut)++ = __PKHBT(acc3 >> 15, acc2 >> 15, 16);
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*      #ifndef  ARM_MATH_BIG_ENDIAN    */
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the pointer pIn1 index, count by 4 */
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count += 4u;
 1500              	 .loc 1 473 0
 1501 0c68 D7F84032 	 ldr r3,[r7,#576]
 1502 0c6c 0433     	 adds r3,r3,#4
 1503 0c6e C7F84032 	 str r3,[r7,#576]
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
 1504              	 .loc 1 476 0
 1505 0c72 D7F84032 	 ldr r3,[r7,#576]
 1506 0c76 5B00     	 lsls r3,r3,#1
 1507 0c78 D7F87422 	 ldr r2,[r7,#628]
 1508 0c7c 1A44     	 add r2,r2,r3
 1509 0c7e 07F11403 	 add r3,r7,#20
 1510 0c82 1A60     	 str r2,[r3]
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
 1511              	 .loc 1 477 0
 1512 0c84 07F11003 	 add r3,r7,#16
 1513 0c88 D7F85422 	 ldr r2,[r7,#596]
 1514 0c8c 1A60     	 str r2,[r3]
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
 1515              	 .loc 1 480 0
 1516 0c8e D7F83C32 	 ldr r3,[r7,#572]
 1517 0c92 013B     	 subs r3,r3,#1
 1518 0c94 C7F83C32 	 str r3,[r7,#572]
 1519              	.L32:
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 1520              	 .loc 1 300 0
 1521 0c98 D7F83C32 	 ldr r3,[r7,#572]
 1522 0c9c 002B     	 cmp r3,#0
 1523 0c9e 7FF4E7AB 	 bne .L61
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = (uint32_t) blockSize2 % 0x4u;
 1524              	 .loc 1 485 0
 1525 0ca2 D7F82832 	 ldr r3,[r7,#552]
 1526 0ca6 03F00303 	 and r3,r3,#3
 1527 0caa C7F83C32 	 str r3,[r7,#572]
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (blkCnt > 0u)
 1528              	 .loc 1 487 0
 1529 0cae C2E0     	 b .L62
 1530              	.L67:
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Accumulator is made zero for every iteration */
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = 0;
 1531              	 .loc 1 490 0
 1532 0cb0 0023     	 movs r3,#0
 1533 0cb2 C7F86C32 	 str r3,[r7,#620]
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen >> 2u;
 1534              	 .loc 1 493 0
 1535 0cb6 3B46     	 mov r3,r7
 1536 0cb8 1B68     	 ldr r3,[r3]
 1537 0cba 9B08     	 lsrs r3,r3,#2
 1538 0cbc C7F84432 	 str r3,[r7,#580]
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while (k > 0u)
 1539              	 .loc 1 497 0
 1540 0cc0 68E0     	 b .L63
 1541              	.L64:
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1542              	 .loc 1 500 0
 1543 0cc2 07F11403 	 add r3,r7,#20
 1544 0cc6 1B68     	 ldr r3,[r3]
 1545 0cc8 991C     	 adds r1,r3,#2
 1546 0cca 07F11402 	 add r2,r7,#20
 1547 0cce 1160     	 str r1,[r2]
 1548 0cd0 1B88     	 ldrh r3,[r3]
 1549 0cd2 1AB2     	 sxth r2,r3
 1550 0cd4 07F11003 	 add r3,r7,#16
 1551 0cd8 1B68     	 ldr r3,[r3]
 1552 0cda 981E     	 subs r0,r3,#2
 1553 0cdc 07F11001 	 add r1,r7,#16
 1554 0ce0 0860     	 str r0,[r1]
 1555 0ce2 1B88     	 ldrh r3,[r3]
 1556 0ce4 1BB2     	 sxth r3,r3
 1557 0ce6 03FB02F3 	 mul r3,r3,r2
 1558 0cea D7F86C22 	 ldr r2,[r7,#620]
 1559 0cee 1344     	 add r3,r3,r2
 1560 0cf0 C7F86C32 	 str r3,[r7,#620]
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1561              	 .loc 1 501 0
 1562 0cf4 07F11403 	 add r3,r7,#20
 1563 0cf8 1B68     	 ldr r3,[r3]
 1564 0cfa 991C     	 adds r1,r3,#2
 1565 0cfc 07F11402 	 add r2,r7,#20
 1566 0d00 1160     	 str r1,[r2]
 1567 0d02 1B88     	 ldrh r3,[r3]
 1568 0d04 1AB2     	 sxth r2,r3
 1569 0d06 07F11003 	 add r3,r7,#16
 1570 0d0a 1B68     	 ldr r3,[r3]
 1571 0d0c 981E     	 subs r0,r3,#2
 1572 0d0e 07F11001 	 add r1,r7,#16
 1573 0d12 0860     	 str r0,[r1]
 1574 0d14 1B88     	 ldrh r3,[r3]
 1575 0d16 1BB2     	 sxth r3,r3
 1576 0d18 03FB02F3 	 mul r3,r3,r2
 1577 0d1c D7F86C22 	 ldr r2,[r7,#620]
 1578 0d20 1344     	 add r3,r3,r2
 1579 0d22 C7F86C32 	 str r3,[r7,#620]
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1580              	 .loc 1 502 0
 1581 0d26 07F11403 	 add r3,r7,#20
 1582 0d2a 1B68     	 ldr r3,[r3]
 1583 0d2c 991C     	 adds r1,r3,#2
 1584 0d2e 07F11402 	 add r2,r7,#20
 1585 0d32 1160     	 str r1,[r2]
 1586 0d34 1B88     	 ldrh r3,[r3]
 1587 0d36 1AB2     	 sxth r2,r3
 1588 0d38 07F11003 	 add r3,r7,#16
 1589 0d3c 1B68     	 ldr r3,[r3]
 1590 0d3e 981E     	 subs r0,r3,#2
 1591 0d40 07F11001 	 add r1,r7,#16
 1592 0d44 0860     	 str r0,[r1]
 1593 0d46 1B88     	 ldrh r3,[r3]
 1594 0d48 1BB2     	 sxth r3,r3
 1595 0d4a 03FB02F3 	 mul r3,r3,r2
 1596 0d4e D7F86C22 	 ldr r2,[r7,#620]
 1597 0d52 1344     	 add r3,r3,r2
 1598 0d54 C7F86C32 	 str r3,[r7,#620]
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1599              	 .loc 1 503 0
 1600 0d58 07F11403 	 add r3,r7,#20
 1601 0d5c 1B68     	 ldr r3,[r3]
 1602 0d5e 991C     	 adds r1,r3,#2
 1603 0d60 07F11402 	 add r2,r7,#20
 1604 0d64 1160     	 str r1,[r2]
 1605 0d66 1B88     	 ldrh r3,[r3]
 1606 0d68 1AB2     	 sxth r2,r3
 1607 0d6a 07F11003 	 add r3,r7,#16
 1608 0d6e 1B68     	 ldr r3,[r3]
 1609 0d70 981E     	 subs r0,r3,#2
 1610 0d72 07F11001 	 add r1,r7,#16
 1611 0d76 0860     	 str r0,[r1]
 1612 0d78 1B88     	 ldrh r3,[r3]
 1613 0d7a 1BB2     	 sxth r3,r3
 1614 0d7c 03FB02F3 	 mul r3,r3,r2
 1615 0d80 D7F86C22 	 ldr r2,[r7,#620]
 1616 0d84 1344     	 add r3,r3,r2
 1617 0d86 C7F86C32 	 str r3,[r7,#620]
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
 1618              	 .loc 1 506 0
 1619 0d8a D7F84432 	 ldr r3,[r7,#580]
 1620 0d8e 013B     	 subs r3,r3,#1
 1621 0d90 C7F84432 	 str r3,[r7,#580]
 1622              	.L63:
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 1623              	 .loc 1 497 0
 1624 0d94 D7F84432 	 ldr r3,[r7,#580]
 1625 0d98 002B     	 cmp r3,#0
 1626 0d9a 92D1     	 bne .L64
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** No loop unrolling is used. */
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen % 0x4u;
 1627              	 .loc 1 511 0
 1628 0d9c 3B46     	 mov r3,r7
 1629 0d9e 1B68     	 ldr r3,[r3]
 1630 0da0 03F00303 	 and r3,r3,#3
 1631 0da4 C7F84432 	 str r3,[r7,#580]
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while (k > 0u)
 1632              	 .loc 1 513 0
 1633 0da8 1DE0     	 b .L65
 1634              	.L66:
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1635              	 .loc 1 516 0
 1636 0daa 07F11403 	 add r3,r7,#20
 1637 0dae 1B68     	 ldr r3,[r3]
 1638 0db0 991C     	 adds r1,r3,#2
 1639 0db2 07F11402 	 add r2,r7,#20
 1640 0db6 1160     	 str r1,[r2]
 1641 0db8 1B88     	 ldrh r3,[r3]
 1642 0dba 1AB2     	 sxth r2,r3
 1643 0dbc 07F11003 	 add r3,r7,#16
 1644 0dc0 1B68     	 ldr r3,[r3]
 1645 0dc2 981E     	 subs r0,r3,#2
 1646 0dc4 07F11001 	 add r1,r7,#16
 1647 0dc8 0860     	 str r0,[r1]
 1648 0dca 1B88     	 ldrh r3,[r3]
 1649 0dcc 1BB2     	 sxth r3,r3
 1650 0dce 03FB02F3 	 mul r3,r3,r2
 1651 0dd2 D7F86C22 	 ldr r2,[r7,#620]
 1652 0dd6 1344     	 add r3,r3,r2
 1653 0dd8 C7F86C32 	 str r3,[r7,#620]
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
 1654              	 .loc 1 519 0
 1655 0ddc D7F84432 	 ldr r3,[r7,#580]
 1656 0de0 013B     	 subs r3,r3,#1
 1657 0de2 C7F84432 	 str r3,[r7,#580]
 1658              	.L65:
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 1659              	 .loc 1 513 0
 1660 0de6 D7F84432 	 ldr r3,[r7,#580]
 1661 0dea 002B     	 cmp r3,#0
 1662 0dec DDD1     	 bne .L66
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *pOut++ = (q15_t) (sum >> 15);
 1663              	 .loc 1 523 0
 1664 0dee 07F11803 	 add r3,r7,#24
 1665 0df2 1B68     	 ldr r3,[r3]
 1666 0df4 991C     	 adds r1,r3,#2
 1667 0df6 07F11802 	 add r2,r7,#24
 1668 0dfa 1160     	 str r1,[r2]
 1669 0dfc D7F86C22 	 ldr r2,[r7,#620]
 1670 0e00 D213     	 asrs r2,r2,#15
 1671 0e02 92B2     	 uxth r2,r2
 1672 0e04 1A80     	 strh r2,[r3]
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the pointer pIn1 index, count by 1 */
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count++;
 1673              	 .loc 1 526 0
 1674 0e06 D7F84032 	 ldr r3,[r7,#576]
 1675 0e0a 0133     	 adds r3,r3,#1
 1676 0e0c C7F84032 	 str r3,[r7,#576]
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
 1677              	 .loc 1 529 0
 1678 0e10 D7F84032 	 ldr r3,[r7,#576]
 1679 0e14 5B00     	 lsls r3,r3,#1
 1680 0e16 D7F87422 	 ldr r2,[r7,#628]
 1681 0e1a 1A44     	 add r2,r2,r3
 1682 0e1c 07F11403 	 add r3,r7,#20
 1683 0e20 1A60     	 str r2,[r3]
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
 1684              	 .loc 1 530 0
 1685 0e22 07F11003 	 add r3,r7,#16
 1686 0e26 D7F85422 	 ldr r2,[r7,#596]
 1687 0e2a 1A60     	 str r2,[r3]
 531:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 532:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 533:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
 1688              	 .loc 1 533 0
 1689 0e2c D7F83C32 	 ldr r3,[r7,#572]
 1690 0e30 013B     	 subs r3,r3,#1
 1691 0e32 C7F83C32 	 str r3,[r7,#572]
 1692              	.L62:
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 1693              	 .loc 1 487 0
 1694 0e36 D7F83C32 	 ldr r3,[r7,#572]
 1695 0e3a 002B     	 cmp r3,#0
 1696 0e3c 7FF438AF 	 bne .L67
 1697 0e40 56E0     	 b .L68
 1698              	.L31:
 534:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 535:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 537:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the srcBLen is not a multiple of 4,
 539:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * the blockSize2 loop cannot be unrolled by 4 */
 540:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = (uint32_t) blockSize2;
 1699              	 .loc 1 540 0
 1700 0e42 D7F82832 	 ldr r3,[r7,#552]
 1701 0e46 C7F83C32 	 str r3,[r7,#572]
 541:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (blkCnt > 0u)
 1702              	 .loc 1 542 0
 1703 0e4a 4DE0     	 b .L69
 1704              	.L72:
 543:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 544:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Accumulator is made zero for every iteration */
 545:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = 0;
 1705              	 .loc 1 545 0
 1706 0e4c 0023     	 movs r3,#0
 1707 0e4e C7F86C32 	 str r3,[r7,#620]
 546:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* srcBLen number of MACS should be performed */
 548:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen;
 1708              	 .loc 1 548 0
 1709 0e52 3B46     	 mov r3,r7
 1710 0e54 1B68     	 ldr r3,[r3]
 1711 0e56 C7F84432 	 str r3,[r7,#580]
 549:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 550:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while (k > 0u)
 1712              	 .loc 1 550 0
 1713 0e5a 1DE0     	 b .L70
 1714              	.L71:
 551:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 552:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulate */
 553:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1715              	 .loc 1 553 0
 1716 0e5c 07F11403 	 add r3,r7,#20
 1717 0e60 1B68     	 ldr r3,[r3]
 1718 0e62 991C     	 adds r1,r3,#2
 1719 0e64 07F11402 	 add r2,r7,#20
 1720 0e68 1160     	 str r1,[r2]
 1721 0e6a 1B88     	 ldrh r3,[r3]
 1722 0e6c 1AB2     	 sxth r2,r3
 1723 0e6e 07F11003 	 add r3,r7,#16
 1724 0e72 1B68     	 ldr r3,[r3]
 1725 0e74 981E     	 subs r0,r3,#2
 1726 0e76 07F11001 	 add r1,r7,#16
 1727 0e7a 0860     	 str r0,[r1]
 1728 0e7c 1B88     	 ldrh r3,[r3]
 1729 0e7e 1BB2     	 sxth r3,r3
 1730 0e80 03FB02F3 	 mul r3,r3,r2
 1731 0e84 D7F86C22 	 ldr r2,[r7,#620]
 1732 0e88 1344     	 add r3,r3,r2
 1733 0e8a C7F86C32 	 str r3,[r7,#620]
 554:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 555:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
 556:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
 1734              	 .loc 1 556 0
 1735 0e8e D7F84432 	 ldr r3,[r7,#580]
 1736 0e92 013B     	 subs r3,r3,#1
 1737 0e94 C7F84432 	 str r3,[r7,#580]
 1738              	.L70:
 550:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 1739              	 .loc 1 550 0
 1740 0e98 D7F84432 	 ldr r3,[r7,#580]
 1741 0e9c 002B     	 cmp r3,#0
 1742 0e9e DDD1     	 bne .L71
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 558:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 559:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
 560:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *pOut++ = (q15_t) (sum >> 15);
 1743              	 .loc 1 560 0
 1744 0ea0 07F11803 	 add r3,r7,#24
 1745 0ea4 1B68     	 ldr r3,[r3]
 1746 0ea6 991C     	 adds r1,r3,#2
 1747 0ea8 07F11802 	 add r2,r7,#24
 1748 0eac 1160     	 str r1,[r2]
 1749 0eae D7F86C22 	 ldr r2,[r7,#620]
 1750 0eb2 D213     	 asrs r2,r2,#15
 1751 0eb4 92B2     	 uxth r2,r2
 1752 0eb6 1A80     	 strh r2,[r3]
 561:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 562:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the MAC count */
 563:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count++;
 1753              	 .loc 1 563 0
 1754 0eb8 D7F84032 	 ldr r3,[r7,#576]
 1755 0ebc 0133     	 adds r3,r3,#1
 1756 0ebe C7F84032 	 str r3,[r7,#576]
 564:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 565:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 566:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
 1757              	 .loc 1 566 0
 1758 0ec2 D7F84032 	 ldr r3,[r7,#576]
 1759 0ec6 5B00     	 lsls r3,r3,#1
 1760 0ec8 D7F87422 	 ldr r2,[r7,#628]
 1761 0ecc 1A44     	 add r2,r2,r3
 1762 0ece 07F11403 	 add r3,r7,#20
 1763 0ed2 1A60     	 str r2,[r3]
 567:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
 1764              	 .loc 1 567 0
 1765 0ed4 07F11003 	 add r3,r7,#16
 1766 0ed8 D7F85422 	 ldr r2,[r7,#596]
 1767 0edc 1A60     	 str r2,[r3]
 568:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 569:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 570:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
 1768              	 .loc 1 570 0
 1769 0ede D7F83C32 	 ldr r3,[r7,#572]
 1770 0ee2 013B     	 subs r3,r3,#1
 1771 0ee4 C7F83C32 	 str r3,[r7,#572]
 1772              	.L69:
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 1773              	 .loc 1 542 0
 1774 0ee8 D7F83C32 	 ldr r3,[r7,#572]
 1775 0eec 002B     	 cmp r3,#0
 1776 0eee ADD1     	 bne .L72
 1777              	.L68:
 571:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 572:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 573:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 574:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 575:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------
 576:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage3
 577:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------------*/
 578:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 579:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[src
 580:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[src
 581:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....
 582:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 583:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum +=  x[srcALen-1] * y[srcBLen-1]
 584:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 585:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 586:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* In this stage the MAC operations are decreased by 1 for every iteration.
 587:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        The count variable holds the number of MAC operations performed */
 588:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = srcBLen - 1u;
 1778              	 .loc 1 588 0
 1779 0ef0 3B46     	 mov r3,r7
 1780 0ef2 1B68     	 ldr r3,[r3]
 1781 0ef4 013B     	 subs r3,r3,#1
 1782 0ef6 C7F84032 	 str r3,[r7,#576]
 589:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 590:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 591:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
 1783              	 .loc 1 591 0
 1784 0efa 07F10802 	 add r2,r7,#8
 1785 0efe 3B46     	 mov r3,r7
 1786 0f00 1268     	 ldr r2,[r2]
 1787 0f02 1B68     	 ldr r3,[r3]
 1788 0f04 D31A     	 subs r3,r2,r3
 1789 0f06 0133     	 adds r3,r3,#1
 1790 0f08 5B00     	 lsls r3,r3,#1
 1791 0f0a D7F87422 	 ldr r2,[r7,#628]
 1792 0f0e 1344     	 add r3,r3,r2
 1793 0f10 C7F85832 	 str r3,[r7,#600]
 592:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pSrc1;
 1794              	 .loc 1 592 0
 1795 0f14 07F11403 	 add r3,r7,#20
 1796 0f18 D7F85822 	 ldr r2,[r7,#600]
 1797 0f1c 1A60     	 str r2,[r3]
 593:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 594:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 595:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1u);
 1798              	 .loc 1 595 0
 1799 0f1e 3B46     	 mov r3,r7
 1800 0f20 1B68     	 ldr r3,[r3]
 1801 0f22 03F10043 	 add r3,r3,#-2147483648
 1802 0f26 013B     	 subs r3,r3,#1
 1803 0f28 5B00     	 lsls r3,r3,#1
 1804 0f2a D7F87022 	 ldr r2,[r7,#624]
 1805 0f2e 1344     	 add r3,r3,r2
 1806 0f30 C7F85432 	 str r3,[r7,#596]
 596:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pIn2 = pSrc2 - 1u;
 1807              	 .loc 1 596 0
 1808 0f34 D7F85432 	 ldr r3,[r7,#596]
 1809 0f38 023B     	 subs r3,r3,#2
 1810 0f3a C7F87032 	 str r3,[r7,#624]
 597:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pIn2;
 1811              	 .loc 1 597 0
 1812 0f3e 07F11003 	 add r3,r7,#16
 1813 0f42 D7F87022 	 ldr r2,[r7,#624]
 1814 0f46 1A60     	 str r2,[r3]
 598:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 599:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* -------------------
 600:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage3 process
 601:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------*/
 602:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 603:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 604:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* First part of this stage computes the MAC operations greater than 4 */
 605:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Second part of this stage computes the MAC operations less than or equal to 4 */
 606:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 607:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The first part of the stage starts here */
 608:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     j = count >> 2u;
 1815              	 .loc 1 608 0
 1816 0f48 D7F84032 	 ldr r3,[r7,#576]
 1817 0f4c 9B08     	 lsrs r3,r3,#2
 1818 0f4e C7F84832 	 str r3,[r7,#584]
 609:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 610:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while ((j > 0u) && (blockSize3 > 0))
 1819              	 .loc 1 610 0
 1820 0f52 DAE0     	 b .L73
 1821              	.L82:
 611:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 612:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 613:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 1822              	 .loc 1 613 0
 1823 0f54 0023     	 movs r3,#0
 1824 0f56 C7F86C32 	 str r3,[r7,#620]
 614:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 615:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 616:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count >> 2u;
 1825              	 .loc 1 616 0
 1826 0f5a D7F84032 	 ldr r3,[r7,#576]
 1827 0f5e 9B08     	 lsrs r3,r3,#2
 1828 0f60 C7F84432 	 str r3,[r7,#580]
 617:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 618:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 619:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 620:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0u)
 1829              	 .loc 1 620 0
 1830 0f64 5CE0     	 b .L74
 1831              	.L77:
 621:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 622:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[srcALen - srcBLen + 1], x[srcALen - srcBLen + 2] are multiplied
 623:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          * with y[srcBLen - 1], y[srcBLen - 2] respectively */
 624:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 1832              	 .loc 1 624 0
 1833 0f66 07F11402 	 add r2,r7,#20
 1834 0f6a 1368     	 ldr r3,[r2]
 1835 0f6c 191D     	 adds r1,r3,#4
 1836 0f6e 1160     	 str r1,[r2]
 1837 0f70 1B68     	 ldr r3,[r3]
 1838 0f72 1846     	 mov r0,r3
 1839 0f74 07F11002 	 add r2,r7,#16
 1840 0f78 1368     	 ldr r3,[r2]
 1841 0f7a 191F     	 subs r1,r3,#4
 1842 0f7c 1160     	 str r1,[r2]
 1843 0f7e 1B68     	 ldr r3,[r3]
 1844 0f80 1946     	 mov r1,r3
 1845 0f82 D7F86C22 	 ldr r2,[r7,#620]
 1846 0f86 07F15803 	 add r3,r7,#88
 1847 0f8a 1860     	 str r0,[r3]
 1848 0f8c 07F15403 	 add r3,r7,#84
 1849 0f90 1960     	 str r1,[r3]
 1850 0f92 07F15003 	 add r3,r7,#80
 1851 0f96 1A60     	 str r2,[r3]
 1852              	.LBB122:
 1853              	.LBB123:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1854              	 .loc 2 1732 0
 1855 0f98 07F15803 	 add r3,r7,#88
 1856 0f9c 1B68     	 ldr r3,[r3]
 1857 0f9e 07F15402 	 add r2,r7,#84
 1858 0fa2 1268     	 ldr r2,[r2]
 1859 0fa4 07F15001 	 add r1,r7,#80
 1860 0fa8 0968     	 ldr r1,[r1]
 1861              	
 1862 0faa 23FB1212 	 smladx r2,r3,r2,r1
 1863              	
 1864              	 .thumb
 1865 0fae 07F14C03 	 add r3,r7,#76
 1866 0fb2 1A60     	 str r2,[r3]
 1867              	 .loc 2 1733 0
 1868 0fb4 07F14C03 	 add r3,r7,#76
 1869 0fb8 1B68     	 ldr r3,[r3]
 1870              	.LBE123:
 1871              	.LBE122:
 1872              	 .loc 1 624 0
 1873 0fba C7F86C32 	 str r3,[r7,#620]
 625:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[srcALen - srcBLen + 3], x[srcALen - srcBLen + 4] are multiplied
 626:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          * with y[srcBLen - 3], y[srcBLen - 4] respectively */
 627:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 1874              	 .loc 1 627 0
 1875 0fbe 07F11402 	 add r2,r7,#20
 1876 0fc2 1368     	 ldr r3,[r2]
 1877 0fc4 191D     	 adds r1,r3,#4
 1878 0fc6 1160     	 str r1,[r2]
 1879 0fc8 1B68     	 ldr r3,[r3]
 1880 0fca 1846     	 mov r0,r3
 1881 0fcc 07F11002 	 add r2,r7,#16
 1882 0fd0 1368     	 ldr r3,[r2]
 1883 0fd2 191F     	 subs r1,r3,#4
 1884 0fd4 1160     	 str r1,[r2]
 1885 0fd6 1B68     	 ldr r3,[r3]
 1886 0fd8 1946     	 mov r1,r3
 1887 0fda D7F86C22 	 ldr r2,[r7,#620]
 1888 0fde 07F14803 	 add r3,r7,#72
 1889 0fe2 1860     	 str r0,[r3]
 1890 0fe4 07F14403 	 add r3,r7,#68
 1891 0fe8 1960     	 str r1,[r3]
 1892 0fea 07F14003 	 add r3,r7,#64
 1893 0fee 1A60     	 str r2,[r3]
 1894              	.LBB124:
 1895              	.LBB125:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1896              	 .loc 2 1732 0
 1897 0ff0 07F14803 	 add r3,r7,#72
 1898 0ff4 1B68     	 ldr r3,[r3]
 1899 0ff6 07F14402 	 add r2,r7,#68
 1900 0ffa 1268     	 ldr r2,[r2]
 1901 0ffc 07F14001 	 add r1,r7,#64
 1902 1000 0968     	 ldr r1,[r1]
 1903              	
 1904 1002 23FB1212 	 smladx r2,r3,r2,r1
 1905              	
 1906              	 .thumb
 1907 1006 07F13C03 	 add r3,r7,#60
 1908 100a 1A60     	 str r2,[r3]
 1909              	 .loc 2 1733 0
 1910 100c 07F13C03 	 add r3,r7,#60
 1911 1010 1B68     	 ldr r3,[r3]
 1912              	.LBE125:
 1913              	.LBE124:
 1914              	 .loc 1 627 0
 1915 1012 C7F86C32 	 str r3,[r7,#620]
 628:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 629:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 630:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 1916              	 .loc 1 630 0
 1917 1016 D7F84432 	 ldr r3,[r7,#580]
 1918 101a 013B     	 subs r3,r3,#1
 1919 101c C7F84432 	 str r3,[r7,#580]
 1920              	.L74:
 620:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 1921              	 .loc 1 620 0
 1922 1020 D7F84432 	 ldr r3,[r7,#580]
 1923 1024 002B     	 cmp r3,#0
 1924 1026 9ED1     	 bne .L77
 631:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 632:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 633:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* For the next MAC operations, the pointer py is used without SIMD
 634:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * So, py is incremented by 1 */
 635:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = py + 1u;
 1925              	 .loc 1 635 0
 1926 1028 07F11003 	 add r3,r7,#16
 1927 102c 1B68     	 ldr r3,[r3]
 1928 102e 9A1C     	 adds r2,r3,#2
 1929 1030 07F11003 	 add r3,r7,#16
 1930 1034 1A60     	 str r2,[r3]
 636:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 637:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.
 638:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
 639:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count % 0x4u;
 1931              	 .loc 1 639 0
 1932 1036 D7F84032 	 ldr r3,[r7,#576]
 1933 103a 03F00303 	 and r3,r3,#3
 1934 103e C7F84432 	 str r3,[r7,#580]
 640:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 641:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0u)
 1935              	 .loc 1 641 0
 1936 1042 34E0     	 b .L78
 1937              	.L80:
 642:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 643:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* sum += x[srcALen - srcBLen + 5] * y[srcBLen - 5] */
 644:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 1938              	 .loc 1 644 0
 1939 1044 07F11403 	 add r3,r7,#20
 1940 1048 1B68     	 ldr r3,[r3]
 1941 104a 991C     	 adds r1,r3,#2
 1942 104c 07F11402 	 add r2,r7,#20
 1943 1050 1160     	 str r1,[r2]
 1944 1052 1B88     	 ldrh r3,[r3]
 1945 1054 18B2     	 sxth r0,r3
 1946 1056 07F11003 	 add r3,r7,#16
 1947 105a 1B68     	 ldr r3,[r3]
 1948 105c 991E     	 subs r1,r3,#2
 1949 105e 07F11002 	 add r2,r7,#16
 1950 1062 1160     	 str r1,[r2]
 1951 1064 1B88     	 ldrh r3,[r3]
 1952 1066 19B2     	 sxth r1,r3
 1953 1068 D7F86C22 	 ldr r2,[r7,#620]
 1954 106c 07F13803 	 add r3,r7,#56
 1955 1070 1860     	 str r0,[r3]
 1956 1072 07F13403 	 add r3,r7,#52
 1957 1076 1960     	 str r1,[r3]
 1958 1078 07F13003 	 add r3,r7,#48
 1959 107c 1A60     	 str r2,[r3]
 1960              	.LBB126:
 1961              	.LBB127:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1962              	 .loc 2 1724 0
 1963 107e 07F13803 	 add r3,r7,#56
 1964 1082 1B68     	 ldr r3,[r3]
 1965 1084 07F13402 	 add r2,r7,#52
 1966 1088 1268     	 ldr r2,[r2]
 1967 108a 07F13001 	 add r1,r7,#48
 1968 108e 0968     	 ldr r1,[r1]
 1969              	
 1970 1090 23FB0212 	 smlad r2,r3,r2,r1
 1971              	
 1972              	 .thumb
 1973 1094 07F12C03 	 add r3,r7,#44
 1974 1098 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1975              	 .loc 2 1725 0
 1976 109a 07F12C03 	 add r3,r7,#44
 1977 109e 1B68     	 ldr r3,[r3]
 1978              	.LBE127:
 1979              	.LBE126:
 1980              	 .loc 1 644 0
 1981 10a0 C7F86C32 	 str r3,[r7,#620]
 645:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 646:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 647:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 1982              	 .loc 1 647 0
 1983 10a4 D7F84432 	 ldr r3,[r7,#580]
 1984 10a8 013B     	 subs r3,r3,#1
 1985 10aa C7F84432 	 str r3,[r7,#580]
 1986              	.L78:
 641:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 1987              	 .loc 1 641 0
 1988 10ae D7F84432 	 ldr r3,[r7,#580]
 1989 10b2 002B     	 cmp r3,#0
 1990 10b4 C6D1     	 bne .L80
 648:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 649:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 650:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 651:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 1991              	 .loc 1 651 0
 1992 10b6 07F11803 	 add r3,r7,#24
 1993 10ba 1B68     	 ldr r3,[r3]
 1994 10bc 991C     	 adds r1,r3,#2
 1995 10be 07F11802 	 add r2,r7,#24
 1996 10c2 1160     	 str r1,[r2]
 1997 10c4 D7F86C22 	 ldr r2,[r7,#620]
 1998 10c8 D213     	 asrs r2,r2,#15
 1999 10ca 92B2     	 uxth r2,r2
 2000 10cc 1A80     	 strh r2,[r3]
 652:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 653:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 654:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = ++pSrc1;
 2001              	 .loc 1 654 0
 2002 10ce D7F85832 	 ldr r3,[r7,#600]
 2003 10d2 0233     	 adds r3,r3,#2
 2004 10d4 C7F85832 	 str r3,[r7,#600]
 2005 10d8 07F11403 	 add r3,r7,#20
 2006 10dc D7F85822 	 ldr r2,[r7,#600]
 2007 10e0 1A60     	 str r2,[r3]
 655:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = pIn2;
 2008              	 .loc 1 655 0
 2009 10e2 07F11003 	 add r3,r7,#16
 2010 10e6 D7F87022 	 ldr r2,[r7,#624]
 2011 10ea 1A60     	 str r2,[r3]
 656:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 657:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the MAC count */
 658:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count--;
 2012              	 .loc 1 658 0
 2013 10ec D7F84032 	 ldr r3,[r7,#576]
 2014 10f0 013B     	 subs r3,r3,#1
 2015 10f2 C7F84032 	 str r3,[r7,#576]
 659:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 660:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 661:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize3--;
 2016              	 .loc 1 661 0
 2017 10f6 D7F83432 	 ldr r3,[r7,#564]
 2018 10fa 013B     	 subs r3,r3,#1
 2019 10fc C7F83432 	 str r3,[r7,#564]
 662:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 663:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       j--;
 2020              	 .loc 1 663 0
 2021 1100 D7F84832 	 ldr r3,[r7,#584]
 2022 1104 013B     	 subs r3,r3,#1
 2023 1106 C7F84832 	 str r3,[r7,#584]
 2024              	.L73:
 610:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 2025              	 .loc 1 610 0
 2026 110a D7F84832 	 ldr r3,[r7,#584]
 2027 110e 002B     	 cmp r3,#0
 2028 1110 04D0     	 beq .L81
 610:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 2029              	 .loc 1 610 0 is_stmt 0 discriminator 1
 2030 1112 D7F83432 	 ldr r3,[r7,#564]
 2031 1116 002B     	 cmp r3,#0
 2032 1118 3FF71CAF 	 bgt .L82
 2033              	.L81:
 664:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 665:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 666:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The second part of the stage starts here */
 667:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* SIMD is not used for the next MAC operations,
 668:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * so pointer py is updated to read only one sample at a time */
 669:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = py + 1u;
 2034              	 .loc 1 669 0 is_stmt 1
 2035 111c 07F11003 	 add r3,r7,#16
 2036 1120 1B68     	 ldr r3,[r3]
 2037 1122 9A1C     	 adds r2,r3,#2
 2038 1124 07F11003 	 add r3,r7,#16
 2039 1128 1A60     	 str r2,[r3]
 670:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 671:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while (blockSize3 > 0)
 2040              	 .loc 1 671 0
 2041 112a 65E0     	 b .L83
 2042              	.L87:
 672:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 673:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 674:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 2043              	 .loc 1 674 0
 2044 112c 0023     	 movs r3,#0
 2045 112e C7F86C32 	 str r3,[r7,#620]
 675:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 676:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 677:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count;
 2046              	 .loc 1 677 0
 2047 1132 D7F84032 	 ldr r3,[r7,#576]
 2048 1136 C7F84432 	 str r3,[r7,#580]
 678:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 679:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0u)
 2049              	 .loc 1 679 0
 2050 113a 34E0     	 b .L84
 2051              	.L86:
 680:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 681:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 682:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 683:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 2052              	 .loc 1 683 0
 2053 113c 07F11403 	 add r3,r7,#20
 2054 1140 1B68     	 ldr r3,[r3]
 2055 1142 991C     	 adds r1,r3,#2
 2056 1144 07F11402 	 add r2,r7,#20
 2057 1148 1160     	 str r1,[r2]
 2058 114a 1B88     	 ldrh r3,[r3]
 2059 114c 18B2     	 sxth r0,r3
 2060 114e 07F11003 	 add r3,r7,#16
 2061 1152 1B68     	 ldr r3,[r3]
 2062 1154 991E     	 subs r1,r3,#2
 2063 1156 07F11002 	 add r2,r7,#16
 2064 115a 1160     	 str r1,[r2]
 2065 115c 1B88     	 ldrh r3,[r3]
 2066 115e 19B2     	 sxth r1,r3
 2067 1160 D7F86C22 	 ldr r2,[r7,#620]
 2068 1164 07F12803 	 add r3,r7,#40
 2069 1168 1860     	 str r0,[r3]
 2070 116a 07F12403 	 add r3,r7,#36
 2071 116e 1960     	 str r1,[r3]
 2072 1170 07F12003 	 add r3,r7,#32
 2073 1174 1A60     	 str r2,[r3]
 2074              	.LBB128:
 2075              	.LBB129:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 2076              	 .loc 2 1724 0
 2077 1176 07F12803 	 add r3,r7,#40
 2078 117a 1B68     	 ldr r3,[r3]
 2079 117c 07F12402 	 add r2,r7,#36
 2080 1180 1268     	 ldr r2,[r2]
 2081 1182 07F12001 	 add r1,r7,#32
 2082 1186 0968     	 ldr r1,[r1]
 2083              	
 2084 1188 23FB0212 	 smlad r2,r3,r2,r1
 2085              	
 2086              	 .thumb
 2087 118c 07F11C03 	 add r3,r7,#28
 2088 1190 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 2089              	 .loc 2 1725 0
 2090 1192 07F11C03 	 add r3,r7,#28
 2091 1196 1B68     	 ldr r3,[r3]
 2092              	.LBE129:
 2093              	.LBE128:
 2094              	 .loc 1 683 0
 2095 1198 C7F86C32 	 str r3,[r7,#620]
 684:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 685:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 686:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 2096              	 .loc 1 686 0
 2097 119c D7F84432 	 ldr r3,[r7,#580]
 2098 11a0 013B     	 subs r3,r3,#1
 2099 11a2 C7F84432 	 str r3,[r7,#580]
 2100              	.L84:
 679:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 2101              	 .loc 1 679 0
 2102 11a6 D7F84432 	 ldr r3,[r7,#580]
 2103 11aa 002B     	 cmp r3,#0
 2104 11ac C6D1     	 bne .L86
 687:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 688:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 689:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 690:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 2105              	 .loc 1 690 0
 2106 11ae 07F11803 	 add r3,r7,#24
 2107 11b2 1B68     	 ldr r3,[r3]
 2108 11b4 991C     	 adds r1,r3,#2
 2109 11b6 07F11802 	 add r2,r7,#24
 2110 11ba 1160     	 str r1,[r2]
 2111 11bc D7F86C22 	 ldr r2,[r7,#620]
 2112 11c0 D213     	 asrs r2,r2,#15
 2113 11c2 92B2     	 uxth r2,r2
 2114 11c4 1A80     	 strh r2,[r3]
 691:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 692:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 693:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = ++pSrc1;
 2115              	 .loc 1 693 0
 2116 11c6 D7F85832 	 ldr r3,[r7,#600]
 2117 11ca 0233     	 adds r3,r3,#2
 2118 11cc C7F85832 	 str r3,[r7,#600]
 2119 11d0 07F11403 	 add r3,r7,#20
 2120 11d4 D7F85822 	 ldr r2,[r7,#600]
 2121 11d8 1A60     	 str r2,[r3]
 694:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = pSrc2;
 2122              	 .loc 1 694 0
 2123 11da 07F11003 	 add r3,r7,#16
 2124 11de D7F85422 	 ldr r2,[r7,#596]
 2125 11e2 1A60     	 str r2,[r3]
 695:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 696:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the MAC count */
 697:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count--;
 2126              	 .loc 1 697 0
 2127 11e4 D7F84032 	 ldr r3,[r7,#576]
 2128 11e8 013B     	 subs r3,r3,#1
 2129 11ea C7F84032 	 str r3,[r7,#576]
 698:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 699:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 700:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize3--;
 2130              	 .loc 1 700 0
 2131 11ee D7F83432 	 ldr r3,[r7,#564]
 2132 11f2 013B     	 subs r3,r3,#1
 2133 11f4 C7F83432 	 str r3,[r7,#564]
 2134              	.L83:
 671:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 2135              	 .loc 1 671 0
 2136 11f8 D7F83432 	 ldr r3,[r7,#564]
 2137 11fc 002B     	 cmp r3,#0
 2138 11fe 95DC     	 bgt .L87
 701:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 702:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 703:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* set status as ARM_MATH_SUCCESS */
 704:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     status = ARM_MATH_SUCCESS;
 2139              	 .loc 1 704 0
 2140 1200 0023     	 movs r3,#0
 2141 1202 87F83332 	 strb r3,[r7,#563]
 2142              	.L3:
 705:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   }
 706:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 707:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   /* Return to application */
 708:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   return (status);
 2143              	 .loc 1 708 0
 2144 1206 97F83332 	 ldrb r3,[r7,#563]
 2145 120a 5BB2     	 sxtb r3,r3
 709:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 710:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 711:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 712:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pIn1;                                   /* inputA pointer               */
 713:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pIn2;                                   /* inputB pointer               */
 714:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pOut = pDst;                            /* output pointer               */
 715:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulator                  */
 716:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
 717:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
 718:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers        */
 719:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q31_t x0, x1, x2, x3, c0;
 720:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t j, k, count, check, blkCnt;
 721:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   int32_t blockSize1, blockSize2, blockSize3;    /* loop counters                 */
 722:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   arm_status status;                             /* status of Partial convolution */
 723:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t a, b;
 724:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 725:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   /* Check for range of output samples to be calculated */
 726:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1u))))
 727:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   {
 728:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
 729:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     status = ARM_MATH_ARGUMENT_ERROR;
 730:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   }
 731:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   else
 732:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   {
 733:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 734:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
 735:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* srcB is always made to slide across srcA. */
 736:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
 737:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if (srcALen >=srcBLen)
 738:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 739:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputA pointer */
 740:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn1 = pSrcA;
 741:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 742:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputB pointer */
 743:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn2 = pSrcB;
 744:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 745:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 746:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 747:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputA pointer */
 748:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn1 = pSrcB;
 749:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 750:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputB pointer */
 751:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn2 = pSrcA;
 752:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 753:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 754:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       j = srcBLen;
 755:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       srcBLen = srcALen;
 756:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       srcALen = j;
 757:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 758:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 759:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Conditions to check which loopCounter holds
 760:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * the first and last indices of the output samples to be calculated. */
 761:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     check = firstIndex + numPoints;
 762:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize3 = ((int32_t)check > (int32_t)srcALen) ? (int32_t)check - (int32_t)srcALen : 0;
 763:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize3 = ((int32_t)firstIndex > (int32_t)srcALen - 1) ? blockSize3 - (int32_t)firstIndex + 
 764:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = ((int32_t) srcBLen - 1) - (int32_t) firstIndex;
 765:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 766:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****                                      (int32_t) numPoints) : 0;
 767:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = ((int32_t) check - blockSize3) -
 768:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       (blockSize1 + (int32_t) firstIndex);
 769:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = (blockSize2 > 0) ? blockSize2 : 0;
 770:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 771:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 772:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The function is internally
 773:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * divided into three stages according to the number of multiplications that has to be
 774:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * taken place between inputA samples and inputB samples. In the first stage of the
 775:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * algorithm, the multiplications increase by one for every iteration.
 776:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * In the second stage of the algorithm, srcBLen number of multiplications are done.
 777:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * In the third stage of the algorithm, the multiplications decrease by one
 778:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * for every iteration. */
 779:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 780:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set the output pointer to point to the firstIndex
 781:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * of the output sample to be calculated. */
 782:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pOut = pDst + firstIndex;
 783:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 784:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------
 785:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage1
 786:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------------*/
 787:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 788:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum = x[0] * y[0]
 789:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[0] * y[1] + x[1] * y[0]
 790:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....
 791:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 792:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 793:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 794:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* In this stage the MAC operations are increased by 1 for every iteration.
 795:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        The count variable holds the number of MAC operations performed.
 796:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        Since the partial convolution starts from firstIndex
 797:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        Number of Macs to be performed is firstIndex + 1 */
 798:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = 1u + firstIndex;
 799:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 800:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 801:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pIn1;
 802:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 803:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 804:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + firstIndex;
 805:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pSrc2;
 806:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 807:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* ------------------------
 808:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage1 process
 809:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ----------------------*/
 810:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 811:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 812:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* First part of this stage computes the MAC operations less than 4 */
 813:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 814:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 815:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The first part of the stage starts here */
 816:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   while ((count < 4u) && (blockSize1 > 0))
 817:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 818:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 819:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 820:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 821:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Loop over number of MAC operations between
 822:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * inputA samples and inputB samples */
 823:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count;
 824:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 825:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0u)
 826:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 827:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 828:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum += ((q31_t) * px++ * *py--);
 829:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 830:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 831:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 832:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 833:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 834:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 835:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 836:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 837:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 838:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = ++pSrc2;
 839:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 840:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 841:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Increment the MAC count */
 842:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count++;
 843:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 844:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 845:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize1--;
 846:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 847:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 848:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The second part of the stage starts here */
 849:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The internal loop, over count, is unrolled by 4 */
 850:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* To, read the last two inputB samples using SIMD:
 851:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 852:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = py - 1;
 853:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 854:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   while (blockSize1 > 0)
 855:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 856:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 857:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 858:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 859:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 860:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count >> 2u;
 861:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 862:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 863:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 864:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	py++;
 865:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 866:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while (k > 0u)
 867:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 868:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Perform the multiply-accumulates */
 869:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 870:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 871:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 872:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 873:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 874:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 875:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k--;
 876:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 877:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 878:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.
 879:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
 880:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count % 0x4u;
 881:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 882:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0u)
 883:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 884:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 885:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum += ((q31_t) * px++ * *py--);
 886:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 887:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 888:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 889:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 890:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 891:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 892:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 893:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 894:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 895:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = ++pSrc2 - 1u;
 896:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 897:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 898:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Increment the MAC count */
 899:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count++;
 900:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 901:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 902:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize1--;
 903:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 904:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 905:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------
 906:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage2
 907:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------------*/
 908:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 909:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 910:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 911:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....
 912:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y
 913:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 914:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 915:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 916:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if ((int32_t)firstIndex - (int32_t)srcBLen + 1 > 0)
 917:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 918:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1 + firstIndex - srcBLen + 1;
 919:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 920:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 921:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 922:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 923:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 924:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 925:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 926:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1u);
 927:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pSrc2;
 928:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 929:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* count is the index by which the pointer pIn1 to be incremented */
 930:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = 0u;
 931:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 932:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 933:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------
 934:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage2 process
 935:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------*/
 936:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 937:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 938:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * So, to loop unroll over blockSize2,
 939:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * srcBLen should be greater than or equal to 4 */
 940:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if (srcBLen >= 4u)
 941:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 942:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Loop unroll over blockSize2, by 4 */
 943:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = ((uint32_t) blockSize2 >> 2u);
 944:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 945:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (blkCnt > 0u)
 946:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 947:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = py - 1u;
 948:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 949:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Set all accumulators to zero */
 950:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = 0;
 951:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = 0;
 952:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = 0;
 953:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = 0;
 954:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 955:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* read x[0], x[1] samples */
 956:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px++;
 957:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  b = *px++;
 958:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 959:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 960:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 961:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x0 = __PKHBT(a, b, 16);
 962:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px;
 963:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x1 = __PKHBT(b, a, 16);
 964:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 965:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 966:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 967:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x0 = __PKHBT(b, a, 16);
 968:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px;
 969:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x1 = __PKHBT(a, b, 16);
 970:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 971:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
 972:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 973:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 974:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = srcBLen >> 2u;
 975:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 976:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 977:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 978:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       do
 979:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 980:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read the last two inputB samples using SIMD:
 981:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          * y[srcBLen - 1] and y[srcBLen - 2] */
 982:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *py;
 983:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(py+1);
 984:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		py -= 2;
 985:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 986:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 987:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 988:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
 989:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 990:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 991:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 992:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
 993:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 994:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
 995:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 996:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
 997:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
 998:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 999:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
1000:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
1001:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1002:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px;
1003:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  b = *(px + 1);
1004:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1005:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1006:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1007:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(a, b, 16);
1008:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1009:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(b, a, 16);
1010:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1011:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1012:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1013:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(b, a, 16);
1014:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1015:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(a, b, 16);
1016:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1017:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
1018:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1019:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
1020:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
1021:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1022:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
1023:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
1024:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1025:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read y[srcBLen - 3] and y[srcBLen - 4] */
1026:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *py;
1027:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(py+1);
1028:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		py -= 2;
1029:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1030:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1031:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1032:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
1033:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1034:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1035:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1036:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
1037:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1038:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1039:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1040:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
1041:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLADX(x2, c0, acc0);
1042:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1043:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
1044:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLADX(x3, c0, acc1);
1045:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1046:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[4], x[5], x[6] */
1047:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1048:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  b = *(px + 3);
1049:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1050:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1051:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1052:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x0 = __PKHBT(a, b, 16);
1053:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 4);
1054:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x1 = __PKHBT(b, a, 16);
1055:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1056:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1057:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1058:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x0 = __PKHBT(b, a, 16);
1059:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 4);
1060:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x1 = __PKHBT(a, b, 16);
1061:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1062:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
1063:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1064:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 4u;
1065:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1066:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
1067:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x0, c0, acc2);
1068:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1069:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
1070:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x1, c0, acc3);
1071:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1072:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       } while (--k);
1073:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1074:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* For the next MAC operations, SIMD is not used
1075:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * So, the 16 bit pointer if inputB, py is updated */
1076:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1077:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
1078:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
1079:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = srcBLen % 0x4u;
1080:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1081:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       if (k == 1u)
1082:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1083:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read y[srcBLen - 5] */
1084:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = *(py+1);
1085:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1086:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
1087:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1088:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 << 16u;
1089:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1090:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1091:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1092:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
1093:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1094:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
1095:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1096:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[7] */
1097:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *px;
1098:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(px+1);
1099:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px++;
1100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		x3 = __PKHBT(a, b, 16);
1104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		x3 = __PKHBT(b, a, 16);;
1108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
1113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
1114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
1115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x1, c0, acc2);
1116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
1117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       if (k == 2u)
1120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
1122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *py;
1123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(py+1);
1124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
1128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
1132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[7], x[8], x[9] */
1136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px;
1137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  b = *(px + 1);
1138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(a, b, 16);
1142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(b, a, 16);
1144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(b, a, 16);
1148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(a, b, 16);
1150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
1152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 2u;
1153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
1155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
1156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
1157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x3, c0, acc2);
1158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x2, c0, acc3);
1159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       if (k == 3u)
1162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
1164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *py;
1165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(py+1);
1166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
1170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
1174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[7], x[8], x[9] */
1178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px;
1179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  b = *(px + 1);
1180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(a, b, 16);
1184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(b, a, 16);
1186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(b, a, 16);
1190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(a, b, 16);
1192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
1194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
1196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
1197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
1198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x3, c0, acc2);
1199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x2, c0, acc3);
1200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read y[srcBLen - 7] */
1202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = *(py-1);
1203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
1204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 << 16u;
1206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
1209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
1210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[10] */
1212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *(px+2);
1213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(px+3);
1214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		x3 = __PKHBT(a, b, 16);
1218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		x3 = __PKHBT(b, a, 16);;
1222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 3u;
1226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
1228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLADX(x1, c0, acc0);
1229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLAD(x2, c0, acc1);
1230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
1231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
1232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the results in the accumulators in the destination buffer. */
1235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  *pOut++ = (q15_t)(acc0 >> 15);
1236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  *pOut++ = (q15_t)(acc1 >> 15);
1237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  *pOut++ = (q15_t)(acc2 >> 15);
1238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  *pOut++ = (q15_t)(acc3 >> 15);
1239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the pointer pIn1 index, count by 4 */
1241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count += 4u;
1242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
1244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
1245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
1246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
1248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
1249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
1252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
1253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = (uint32_t) blockSize2 % 0x4u;
1254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (blkCnt > 0u)
1256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Accumulator is made zero for every iteration */
1258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = 0;
1259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
1261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen >> 2u;
1262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
1264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while (k > 0u)
1266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
1267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
1268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
1274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
1275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
1276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
1278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** No loop unrolling is used. */
1279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen % 0x4u;
1280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while (k > 0u)
1282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
1283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
1284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
1287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
1288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
1289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
1291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *pOut++ = (q15_t) (sum >> 15);
1292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the pointer pIn1 index, count by 1 */
1294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count++;
1295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
1297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
1298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
1299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
1301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
1302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
1304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
1305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
1306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the srcBLen is not a multiple of 4,
1307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * the blockSize2 loop cannot be unrolled by 4 */
1308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = (uint32_t) blockSize2;
1309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (blkCnt > 0u)
1311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Accumulator is made zero for every iteration */
1313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = 0;
1314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* srcBLen number of MACS should be performed */
1316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen;
1317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while (k > 0u)
1319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
1320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulate */
1321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
1324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
1325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
1326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
1328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *pOut++ = (q15_t) (sum >> 15);
1329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the MAC count */
1331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count++;
1332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
1334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
1335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
1336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
1338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
1339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
1341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------
1344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage3
1345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------------*/
1346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[src
1348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[src
1349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....
1350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
1351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum +=  x[srcALen-1] * y[srcBLen-1]
1352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
1353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* In this stage the MAC operations are decreased by 1 for every iteration.
1355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        The count variable holds the number of MAC operations performed */
1356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = srcBLen - 1u;
1357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
1359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
1360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pSrc1;
1361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
1363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1u);
1364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pIn2 = pSrc2 - 1u;
1365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pIn2;
1366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* -------------------
1368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage3 process
1369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------*/
1370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
1372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* First part of this stage computes the MAC operations greater than 4 */
1373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Second part of this stage computes the MAC operations less than or equal to 4 */
1374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The first part of the stage starts here */
1376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     j = count >> 2u;
1377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while ((j > 0u) && (blockSize3 > 0))
1379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
1380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
1381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
1382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
1384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count >> 2u;
1385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
1387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	py++;
1389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while (k > 0u)
1391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
1392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Perform the multiply-accumulates */
1393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
1398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k--;
1399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
1400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.
1403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
1404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count % 0x4u;
1405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0u)
1407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Perform the multiply-accumulates */
1409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
1412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
1413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
1416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
1417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
1419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = ++pSrc1;
1420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = pIn2;
1421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the MAC count */
1423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count--;
1424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
1426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize3--;
1427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       j--;
1429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
1430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The second part of the stage starts here */
1432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* SIMD is not used for the next MAC operations,
1433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * so pointer py is updated to read only one sample at a time */
1434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = py + 1u;
1435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   while (blockSize3 > 0)
1437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
1438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
1439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
1440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
1442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count;
1443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0u)
1445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
1447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* sum +=  x[srcALen-1] * y[srcBLen-1] */
1448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
1451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
1452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
1455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
1456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
1458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = ++pSrc1;
1459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = pSrc2;
1460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the MAC count */
1462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count--;
1463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
1465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize3--;
1466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
1467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* set status as ARM_MATH_SUCCESS */
1469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     status = ARM_MATH_SUCCESS;
1470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   }
1471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   /* Return to application */
1473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   return (status);
1474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*     #ifndef UNALIGNED_SUPPORT_DISABLE      */
1476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** }
 2146              	 .loc 1 1476 0
 2147 120c 1846     	 mov r0,r3
 2148 120e 07F51E77 	 add r7,r7,#632
 2149              	.LCFI3:
 2150              	 .cfi_def_cfa_offset 8
 2151 1212 BD46     	 mov sp,r7
 2152              	.LCFI4:
 2153              	 .cfi_def_cfa_register 13
 2154              	 
 2155 1214 90BC     	 pop {r4,r7}
 2156              	.LCFI5:
 2157              	 .cfi_restore 7
 2158              	 .cfi_restore 4
 2159              	 .cfi_def_cfa_offset 0
 2160 1216 7047     	 bx lr
 2161              	 .cfi_endproc
 2162              	.LFE135:
 2164              	 .text
 2165              	.Letext0:
 2166              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2167              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2168              	 .file 5 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_partial_fast_q15.c
    {standard input}:20     .text.arm_conv_partial_fast_q15:00000000 $t
    {standard input}:25     .text.arm_conv_partial_fast_q15:00000000 arm_conv_partial_fast_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
