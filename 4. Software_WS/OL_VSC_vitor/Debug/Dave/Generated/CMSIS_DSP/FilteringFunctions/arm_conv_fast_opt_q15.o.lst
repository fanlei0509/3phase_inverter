   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_fast_opt_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_fast_opt_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_fast_opt_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_fast_opt_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Title:        arm_conv_fast_opt_q15.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Description:  Fast Q15 Convolution
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @addtogroup Conv
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in] srcALen length of the first input sequence.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in] srcBLen length of the second input sequence.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[out] *pDst points to the location where the output result is written.  Length srcALen+src
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in]  *pScratch1 points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, s
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in]  *pScratch2 points to scratch buffer of size min(srcALen, srcBLen).
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @return none.
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * \par Restrictions
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *  If the silicon does not support unaligned memory access enable the macro UNALIGNED_SUPPORT_DISA
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *	In this case input, output, scratch1 and scratch2 buffers should be aligned by 32-bit
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * \par
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * This fast version uses a 32-bit accumulator with 2.30 format.
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * The accumulator maintains full precision of the intermediate multiplication results
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * but provides only a single guard bit. There is no saturation on intermediate additions.
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Thus, if the accumulator overflows it wraps around and distorts the result.
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * The input signals should be scaled down to avoid intermediate overflows.
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Scale down the inputs by log2(min(srcALen, srcBLen)) (log2 is read as log to the base 2) times t
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * as maximum of min(srcALen, srcBLen) number of additions are carried internally.
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * The 2.30 accumulator is right shifted by 15 bits and then saturated to 1.15 format to yield the 
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * \par
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  * See <code>arm_conv_q15()</code> for a slower implementation of this function which uses 64-bit a
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****  */
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** void arm_conv_fast_opt_q15(
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t * pSrcA,
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   uint32_t srcALen,
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t * pSrcB,
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   uint32_t srcBLen,
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t * pDst,
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t * pScratch1,
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t * pScratch2)
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** {
  28              	 .loc 1 79 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 C2B0     	 sub sp,sp,#264
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 272
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 07F10800 	 add r0,r7,#8
  45 000c 0160     	 str r1,[r0]
  46 000e 391D     	 adds r1,r7,#4
  47 0010 0A60     	 str r2,[r1]
  48 0012 3A46     	 mov r2,r7
  49 0014 1360     	 str r3,[r2]
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q31_t acc0, acc1, acc2, acc3;                  /* Accumulators */
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q31_t x1, x2, x3;                              /* Temporary variables to hold state and coefficie
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q31_t y1, y2;                                  /* State variables */
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *pOut = pDst;                            /* output pointer */
  50              	 .loc 1 83 0
  51 0016 D7F81031 	 ldr r3,[r7,#272]
  52 001a 7B61     	 str r3,[r7,#20]
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch1 */
  53              	 .loc 1 84 0
  54 001c D7F81431 	 ldr r3,[r7,#276]
  55 0020 3B61     	 str r3,[r7,#16]
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *pScr2 = pScratch2;                      /* Temporary pointer for scratch1 */
  56              	 .loc 1 85 0
  57 0022 D7F81831 	 ldr r3,[r7,#280]
  58 0026 C7F8EC30 	 str r3,[r7,#236]
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *pIn1;                                   /* inputA pointer */
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *pIn2;                                   /* inputB pointer */
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   uint32_t j, k, blkCnt;                         /* loop counter */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   uint32_t tapCnt;                               /* loop count */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifdef UNALIGNED_SUPPORT_DISABLE
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t a, b;
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif	/*	#ifdef UNALIGNED_SUPPORT_DISABLE	*/
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* srcB is always made to slide across srcA. */
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   if (srcALen >= srcBLen)
  59              	 .loc 1 101 0
  60 002a 07F10802 	 add r2,r7,#8
  61 002e 3B46     	 mov r3,r7
  62 0030 1268     	 ldr r2,[r2]
  63 0032 1B68     	 ldr r3,[r3]
  64 0034 9A42     	 cmp r2,r3
  65 0036 07D3     	 bcc .L2
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputA pointer */
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn1 = pSrcA;
  66              	 .loc 1 104 0
  67 0038 FB68     	 ldr r3,[r7,#12]
  68 003a C7F8E830 	 str r3,[r7,#232]
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn2 = pSrcB;
  69              	 .loc 1 107 0
  70 003e 3B1D     	 adds r3,r7,#4
  71 0040 1B68     	 ldr r3,[r3]
  72 0042 C7F8E430 	 str r3,[r7,#228]
  73 0046 14E0     	 b .L3
  74              	.L2:
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   else
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputA pointer */
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn1 = pSrcB;
  75              	 .loc 1 112 0
  76 0048 3B1D     	 adds r3,r7,#4
  77 004a 1B68     	 ldr r3,[r3]
  78 004c C7F8E830 	 str r3,[r7,#232]
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn2 = pSrcA;
  79              	 .loc 1 115 0
  80 0050 FB68     	 ldr r3,[r7,#12]
  81 0052 C7F8E430 	 str r3,[r7,#228]
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     j = srcBLen;
  82              	 .loc 1 118 0
  83 0056 3B46     	 mov r3,r7
  84 0058 1B68     	 ldr r3,[r3]
  85 005a C7F8D030 	 str r3,[r7,#208]
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     srcBLen = srcALen;
  86              	 .loc 1 119 0
  87 005e 3B46     	 mov r3,r7
  88 0060 07F10802 	 add r2,r7,#8
  89 0064 1268     	 ldr r2,[r2]
  90 0066 1A60     	 str r2,[r3]
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     srcALen = j;
  91              	 .loc 1 120 0
  92 0068 07F10803 	 add r3,r7,#8
  93 006c D7F8D020 	 ldr r2,[r7,#208]
  94 0070 1A60     	 str r2,[r3]
  95              	.L3:
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Pointer to take end of scratch2 buffer */
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   pScr2 = pScratch2 + srcBLen - 1;
  96              	 .loc 1 124 0
  97 0072 3B46     	 mov r3,r7
  98 0074 1B68     	 ldr r3,[r3]
  99 0076 03F10043 	 add r3,r3,#-2147483648
 100 007a 013B     	 subs r3,r3,#1
 101 007c 5B00     	 lsls r3,r3,#1
 102 007e D7F81821 	 ldr r2,[r7,#280]
 103 0082 1344     	 add r3,r3,r2
 104 0084 C7F8EC30 	 str r3,[r7,#236]
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* points to smaller length sequence */
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   px = pIn2;
 105              	 .loc 1 127 0
 106 0088 D7F8E430 	 ldr r3,[r7,#228]
 107 008c C7F8E030 	 str r3,[r7,#224]
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = srcBLen >> 2u;
 108              	 .loc 1 130 0
 109 0090 3B46     	 mov r3,r7
 110 0092 1B68     	 ldr r3,[r3]
 111 0094 9B08     	 lsrs r3,r3,#2
 112 0096 C7F8DC30 	 str r3,[r7,#220]
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Copy smaller length input sequence in reverse order into second scratch buffer */
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 113              	 .loc 1 136 0
 114 009a 34E0     	 b .L4
 115              	.L5:
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner */
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr2-- = *px++;
 116              	 .loc 1 139 0
 117 009c D7F8EC30 	 ldr r3,[r7,#236]
 118 00a0 9A1E     	 subs r2,r3,#2
 119 00a2 C7F8EC20 	 str r2,[r7,#236]
 120 00a6 D7F8E020 	 ldr r2,[r7,#224]
 121 00aa 911C     	 adds r1,r2,#2
 122 00ac C7F8E010 	 str r1,[r7,#224]
 123 00b0 1288     	 ldrh r2,[r2]
 124 00b2 1A80     	 strh r2,[r3]
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr2-- = *px++;
 125              	 .loc 1 140 0
 126 00b4 D7F8EC30 	 ldr r3,[r7,#236]
 127 00b8 9A1E     	 subs r2,r3,#2
 128 00ba C7F8EC20 	 str r2,[r7,#236]
 129 00be D7F8E020 	 ldr r2,[r7,#224]
 130 00c2 911C     	 adds r1,r2,#2
 131 00c4 C7F8E010 	 str r1,[r7,#224]
 132 00c8 1288     	 ldrh r2,[r2]
 133 00ca 1A80     	 strh r2,[r3]
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr2-- = *px++;
 134              	 .loc 1 141 0
 135 00cc D7F8EC30 	 ldr r3,[r7,#236]
 136 00d0 9A1E     	 subs r2,r3,#2
 137 00d2 C7F8EC20 	 str r2,[r7,#236]
 138 00d6 D7F8E020 	 ldr r2,[r7,#224]
 139 00da 911C     	 adds r1,r2,#2
 140 00dc C7F8E010 	 str r1,[r7,#224]
 141 00e0 1288     	 ldrh r2,[r2]
 142 00e2 1A80     	 strh r2,[r3]
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr2-- = *px++;
 143              	 .loc 1 142 0
 144 00e4 D7F8EC30 	 ldr r3,[r7,#236]
 145 00e8 9A1E     	 subs r2,r3,#2
 146 00ea C7F8EC20 	 str r2,[r7,#236]
 147 00ee D7F8E020 	 ldr r2,[r7,#224]
 148 00f2 911C     	 adds r1,r2,#2
 149 00f4 C7F8E010 	 str r1,[r7,#224]
 150 00f8 1288     	 ldrh r2,[r2]
 151 00fa 1A80     	 strh r2,[r3]
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 152              	 .loc 1 145 0
 153 00fc D7F8DC30 	 ldr r3,[r7,#220]
 154 0100 013B     	 subs r3,r3,#1
 155 0102 C7F8DC30 	 str r3,[r7,#220]
 156              	.L4:
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 157              	 .loc 1 136 0
 158 0106 D7F8DC30 	 ldr r3,[r7,#220]
 159 010a 002B     	 cmp r3,#0
 160 010c C6D1     	 bne .L5
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** No loop unrolling is used. */
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = srcBLen % 0x4u;
 161              	 .loc 1 150 0
 162 010e 3B46     	 mov r3,r7
 163 0110 1B68     	 ldr r3,[r3]
 164 0112 03F00303 	 and r3,r3,#3
 165 0116 C7F8DC30 	 str r3,[r7,#220]
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 166              	 .loc 1 152 0
 167 011a 10E0     	 b .L6
 168              	.L7:
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr2-- = *px++;
 169              	 .loc 1 155 0
 170 011c D7F8EC30 	 ldr r3,[r7,#236]
 171 0120 9A1E     	 subs r2,r3,#2
 172 0122 C7F8EC20 	 str r2,[r7,#236]
 173 0126 D7F8E020 	 ldr r2,[r7,#224]
 174 012a 911C     	 adds r1,r2,#2
 175 012c C7F8E010 	 str r1,[r7,#224]
 176 0130 1288     	 ldrh r2,[r2]
 177 0132 1A80     	 strh r2,[r3]
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 178              	 .loc 1 158 0
 179 0134 D7F8DC30 	 ldr r3,[r7,#220]
 180 0138 013B     	 subs r3,r3,#1
 181 013a C7F8DC30 	 str r3,[r7,#220]
 182              	.L6:
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 183              	 .loc 1 152 0
 184 013e D7F8DC30 	 ldr r3,[r7,#220]
 185 0142 002B     	 cmp r3,#0
 186 0144 EAD1     	 bne .L7
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Initialze temporary scratch pointer */
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   pScr1 = pScratch1;
 187              	 .loc 1 162 0
 188 0146 D7F81431 	 ldr r3,[r7,#276]
 189 014a 3B61     	 str r3,[r7,#16]
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Assuming scratch1 buffer is aligned by 32-bit */
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Fill (srcBLen - 1u) zeros in scratch1 buffer */
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1u));
 190              	 .loc 1 166 0
 191 014c 3A69     	 ldr r2,[r7,#16]
 192 014e 3B46     	 mov r3,r7
 193 0150 1B68     	 ldr r3,[r3]
 194 0152 013B     	 subs r3,r3,#1
 195 0154 0020     	 movs r0,#0
 196 0156 1146     	 mov r1,r2
 197 0158 1A46     	 mov r2,r3
 198 015a FFF7FEFF 	 bl arm_fill_q15
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Update temporary scratch pointer */
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   pScr1 += (srcBLen - 1u);
 199              	 .loc 1 169 0
 200 015e 3A69     	 ldr r2,[r7,#16]
 201 0160 3B46     	 mov r3,r7
 202 0162 1B68     	 ldr r3,[r3]
 203 0164 03F10043 	 add r3,r3,#-2147483648
 204 0168 013B     	 subs r3,r3,#1
 205 016a 5B00     	 lsls r3,r3,#1
 206 016c 1344     	 add r3,r3,r2
 207 016e 3B61     	 str r3,[r7,#16]
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Copy bigger length sequence(srcALen) samples in scratch1 buffer */
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Copy (srcALen) samples in scratch buffer */
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   arm_copy_q15(pIn1, pScr1, srcALen);
 208              	 .loc 1 176 0
 209 0170 3A69     	 ldr r2,[r7,#16]
 210 0172 07F10803 	 add r3,r7,#8
 211 0176 D7F8E800 	 ldr r0,[r7,#232]
 212 017a 1146     	 mov r1,r2
 213 017c 1A68     	 ldr r2,[r3]
 214 017e FFF7FEFF 	 bl arm_copy_q15
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Update pointers */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   pScr1 += srcALen;
 215              	 .loc 1 179 0
 216 0182 3A69     	 ldr r2,[r7,#16]
 217 0184 07F10803 	 add r3,r7,#8
 218 0188 1B68     	 ldr r3,[r3]
 219 018a 5B00     	 lsls r3,r3,#1
 220 018c 1344     	 add r3,r3,r2
 221 018e 3B61     	 str r3,[r7,#16]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = srcALen >> 2u;
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner */
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = *pIn1++;
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = *pIn1++;
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = *pIn1++;
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = *pIn1++;
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** No loop unrolling is used. */
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = srcALen % 0x4u;
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = *pIn1++;
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Fill (srcBLen - 1u) zeros at end of scratch buffer */
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1u));
 222              	 .loc 1 219 0
 223 0190 3A69     	 ldr r2,[r7,#16]
 224 0192 3B46     	 mov r3,r7
 225 0194 1B68     	 ldr r3,[r3]
 226 0196 013B     	 subs r3,r3,#1
 227 0198 0020     	 movs r0,#0
 228 019a 1146     	 mov r1,r2
 229 019c 1A46     	 mov r2,r3
 230 019e FFF7FEFF 	 bl arm_fill_q15
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Update pointer */
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   pScr1 += (srcBLen - 1u);
 231              	 .loc 1 222 0
 232 01a2 3A69     	 ldr r2,[r7,#16]
 233 01a4 3B46     	 mov r3,r7
 234 01a6 1B68     	 ldr r3,[r3]
 235 01a8 03F10043 	 add r3,r3,#-2147483648
 236 01ac 013B     	 subs r3,r3,#1
 237 01ae 5B00     	 lsls r3,r3,#1
 238 01b0 1344     	 add r3,r3,r2
 239 01b2 3B61     	 str r3,[r7,#16]
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = (srcBLen - 1u) >> 2u;
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner */
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = 0;
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = 0;
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = 0;
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = 0;
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** No loop unrolling is used. */
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = (srcBLen - 1u) % 0x4u;
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = 0;
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Temporary pointer for scratch2 */
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   py = pScratch2;
 240              	 .loc 1 259 0
 241 01b4 D7F81831 	 ldr r3,[r7,#280]
 242 01b8 C7F8CC30 	 str r3,[r7,#204]
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Initialization of pIn2 pointer */
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   pIn2 = py;
 243              	 .loc 1 263 0
 244 01bc D7F8CC30 	 ldr r3,[r7,#204]
 245 01c0 C7F8E430 	 str r3,[r7,#228]
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* First part of the processing with loop unrolling process 4 data points at a time.
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** a second loop below process for the remaining 1 to 3 samples. */
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Actual convolution process starts here */
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   blkCnt = (srcALen + srcBLen - 1u) >> 2;
 246              	 .loc 1 269 0
 247 01c4 07F10802 	 add r2,r7,#8
 248 01c8 3B46     	 mov r3,r7
 249 01ca 1268     	 ldr r2,[r2]
 250 01cc 1B68     	 ldr r3,[r3]
 251 01ce 1344     	 add r3,r3,r2
 252 01d0 013B     	 subs r3,r3,#1
 253 01d2 9B08     	 lsrs r3,r3,#2
 254 01d4 C7F8D830 	 str r3,[r7,#216]
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (blkCnt > 0)
 255              	 .loc 1 271 0
 256 01d8 AFE1     	 b .L8
 257              	.L21:
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialze temporary scratch pointer as scratch1 */
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pScr1 = pScratch1;
 258              	 .loc 1 274 0
 259 01da D7F81431 	 ldr r3,[r7,#276]
 260 01de 3B61     	 str r3,[r7,#16]
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Clear Accumlators */
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     acc0 = 0;
 261              	 .loc 1 277 0
 262 01e0 0023     	 movs r3,#0
 263 01e2 C7F80431 	 str r3,[r7,#260]
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     acc1 = 0;
 264              	 .loc 1 278 0
 265 01e6 0023     	 movs r3,#0
 266 01e8 C7F80031 	 str r3,[r7,#256]
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     acc2 = 0;
 267              	 .loc 1 279 0
 268 01ec 0023     	 movs r3,#0
 269 01ee C7F8FC30 	 str r3,[r7,#252]
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     acc3 = 0;
 270              	 .loc 1 280 0
 271 01f2 0023     	 movs r3,#0
 272 01f4 C7F8F830 	 str r3,[r7,#248]
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Read two samples from scratch1 buffer */
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     x1 = *__SIMD32(pScr1)++;
 273              	 .loc 1 283 0
 274 01f8 07F11002 	 add r2,r7,#16
 275 01fc 1368     	 ldr r3,[r2]
 276 01fe 191D     	 adds r1,r3,#4
 277 0200 1160     	 str r1,[r2]
 278 0202 1B68     	 ldr r3,[r3]
 279 0204 C7F8F430 	 str r3,[r7,#244]
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Read next two samples from scratch1 buffer */
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     x2 = *__SIMD32(pScr1)++;
 280              	 .loc 1 286 0
 281 0208 07F11002 	 add r2,r7,#16
 282 020c 1368     	 ldr r3,[r2]
 283 020e 191D     	 adds r1,r3,#4
 284 0210 1160     	 str r1,[r2]
 285 0212 1B68     	 ldr r3,[r3]
 286 0214 C7F8F030 	 str r3,[r7,#240]
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     tapCnt = (srcBLen) >> 2u;
 287              	 .loc 1 288 0
 288 0218 3B46     	 mov r3,r7
 289 021a 1B68     	 ldr r3,[r3]
 290 021c 9B08     	 lsrs r3,r3,#2
 291 021e C7F8D430 	 str r3,[r7,#212]
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     while (tapCnt > 0u)
 292              	 .loc 1 290 0
 293 0222 D8E0     	 b .L9
 294              	.L18:
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Read four samples from smaller buffer */
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       y1 = _SIMD32_OFFSET(pIn2);
 295              	 .loc 1 296 0
 296 0224 D7F8E430 	 ldr r3,[r7,#228]
 297 0228 1B68     	 ldr r3,[r3]
 298 022a C7F8C830 	 str r3,[r7,#200]
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       y2 = _SIMD32_OFFSET(pIn2 + 2u);
 299              	 .loc 1 297 0
 300 022e D7F8E430 	 ldr r3,[r7,#228]
 301 0232 5B68     	 ldr r3,[r3,#4]
 302 0234 C7F8C430 	 str r3,[r7,#196]
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* multiply and accumlate */
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 = __SMLAD(x1, y1, acc0);
 303              	 .loc 1 300 0
 304 0238 D7F8F410 	 ldr r1,[r7,#244]
 305 023c D7F8C820 	 ldr r2,[r7,#200]
 306 0240 D7F80431 	 ldr r3,[r7,#260]
 307 0244 C7F89410 	 str r1,[r7,#148]
 308 0248 C7F89020 	 str r2,[r7,#144]
 309 024c C7F88C30 	 str r3,[r7,#140]
 310              	.LBB23:
 311              	.LBB24:
 312              	 .file 2 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.1
   5:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     02. February 2017
   6:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  36:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                     __asm
  37:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  39:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                  inline
  40:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  41:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  44:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  47:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  48:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  50:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  51:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  53:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  65:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  71:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  72:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  76:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  77:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  78:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  79:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  83:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  85:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0U);
 644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 734:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 735:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 739:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 740:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 744:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 747:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 751:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 753:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 755:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 756:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 758:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 764:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 766:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 767:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 768:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 769:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 773:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 774:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 776:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 779:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 780:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 781:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 783:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 784:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 785:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 787:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 788:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 789:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 791:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 792:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 793:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 795:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 796:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 797:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 799:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 800:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 802:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 803:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 807:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 808:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 810:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 813:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 814:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 815:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 817:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 818:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 819:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 820:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 821:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 822:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 827:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 828:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 830:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 832:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 833:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 834:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 835:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 836:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 841:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 843:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 845:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 846:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 848:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 849:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 850:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 851:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 852:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 853:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 858:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 859:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 861:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   {
 864:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 865:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 866:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     s--;
 867:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 868:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 870:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 871:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 872:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 873:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 874:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 875:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Count leading zeros
 876:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 877:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 878:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             number of leading zeros in value
 879:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 880:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CLZ             __builtin_clz
 881:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 882:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 883:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 884:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 885:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 886:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 887:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 888:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 889:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 890:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 891:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 892:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 893:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDREXB(volatile uint8_t *addr)
 894:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 895:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 896:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 897:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 898:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 899:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 900:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 901:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 902:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 903:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 904:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 905:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 906:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 907:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 908:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 909:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 910:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 911:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 912:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 913:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 914:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 915:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDREXH(volatile uint16_t *addr)
 916:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 917:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 918:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 920:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 921:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 922:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 923:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 924:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 925:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 926:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 927:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 928:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 929:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 930:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 931:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 932:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 933:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 934:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 935:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 936:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 937:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDREXW(volatile uint32_t *addr)
 938:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 939:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 940:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 941:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 942:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 943:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 944:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 945:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 946:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 947:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 948:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 949:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 950:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 951:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 952:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 953:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 954:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *a
 955:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 956:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 957:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 958:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 959:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 960:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 962:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 963:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 964:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 965:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 966:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 967:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 968:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 969:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 970:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 971:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXH(uint16_t value, volatile uint16_t 
 972:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 973:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 974:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 975:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 976:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 977:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 978:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 979:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 980:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 981:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 982:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 983:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 984:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 985:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 986:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 987:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 988:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t 
 989:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 990:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 991:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 992:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 993:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 994:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 995:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 996:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 997:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 998:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Remove the exclusive lock
 999:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1000:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1001:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __CLREX(void)
1002:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1003:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1004:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1005:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1006:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1007:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1008:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1009:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1010:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1011:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1012:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1013:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1014:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1015:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1016:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Signed Saturate
1017:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates a signed value.
1018:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1019:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1020:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1021:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1022:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1023:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1024:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1025:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1026:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1027:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1028:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1029:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1030:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1031:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Unsigned Saturate
1032:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates an unsigned value.
1033:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1034:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1035:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1036:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1037:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1038:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1039:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1040:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1041:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1042:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1043:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1044:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1045:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1046:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1047:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1048:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1049:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
1050:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
1051:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1052:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RRX(uint32_t value)
1053:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1054:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1055:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1056:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1057:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1058:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1059:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1060:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1061:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1062:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1063:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1064:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1065:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1066:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1067:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1068:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1069:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1070:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1071:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1072:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1073:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1074:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1075:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1076:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1077:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1078:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1079:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1080:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1081:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1082:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1083:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1084:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1085:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1086:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1087:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1088:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1089:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1090:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1091:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1092:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1093:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1094:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1095:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1096:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1097:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1098:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1099:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDRT(volatile uint32_t *ptr)
1112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAB(volatile uint8_t *ptr)
1169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAH(volatile uint16_t *ptr)
1184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDA(volatile uint32_t *ptr)
1199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *p
1297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t 
1314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *
1331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated SIMD instructions
1347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
1348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
1349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__ARM_FEATURE_DSP == 1)                             /* ToDo ARMCLANG: This should be ARCH >= A
1351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32
1651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTB16(uint32_t op1)
1673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTB16(uint32_t op1)
1689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32
1721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 313              	 .loc 2 1724 0
 314 0250 D7F89430 	 ldr r3,[r7,#148]
 315 0254 D7F89020 	 ldr r2,[r7,#144]
 316 0258 D7F88C10 	 ldr r1,[r7,#140]
 317              	
 318 025c 23FB0213 	 smlad r3,r3,r2,r1
 319              	
 320              	 .thumb
 321 0260 C7F88830 	 str r3,[r7,#136]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 322              	 .loc 2 1725 0
 323 0264 D7F88830 	 ldr r3,[r7,#136]
 324              	.LBE24:
 325              	.LBE23:
 326              	 .loc 1 300 0
 327 0268 C7F80431 	 str r3,[r7,#260]
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc2 = __SMLAD(x2, y1, acc2);
 328              	 .loc 1 301 0
 329 026c D7F8F010 	 ldr r1,[r7,#240]
 330 0270 D7F8C820 	 ldr r2,[r7,#200]
 331 0274 D7F8FC30 	 ldr r3,[r7,#252]
 332 0278 C7F88410 	 str r1,[r7,#132]
 333 027c C7F88020 	 str r2,[r7,#128]
 334 0280 FB67     	 str r3,[r7,#124]
 335              	.LBB25:
 336              	.LBB26:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 337              	 .loc 2 1724 0
 338 0282 D7F88430 	 ldr r3,[r7,#132]
 339 0286 D7F88020 	 ldr r2,[r7,#128]
 340 028a F96F     	 ldr r1,[r7,#124]
 341              	
 342 028c 23FB0213 	 smlad r3,r3,r2,r1
 343              	
 344              	 .thumb
 345 0290 BB67     	 str r3,[r7,#120]
 346              	 .loc 2 1725 0
 347 0292 BB6F     	 ldr r3,[r7,#120]
 348              	.LBE26:
 349              	.LBE25:
 350              	 .loc 1 301 0
 351 0294 C7F8FC30 	 str r3,[r7,#252]
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* pack input data */
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 352              	 .loc 1 305 0
 353 0298 D7F8F030 	 ldr r3,[r7,#240]
 354 029c 9AB2     	 uxth r2,r3
 355 029e D7F8F430 	 ldr r3,[r7,#244]
 356 02a2 1B0C     	 lsrs r3,r3,#16
 357 02a4 1B04     	 lsls r3,r3,#16
 358 02a6 1343     	 orrs r3,r3,r2
 359 02a8 C7F8C030 	 str r3,[r7,#192]
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* multiply and accumlate */
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y1, acc1);
 360              	 .loc 1 311 0
 361 02ac D7F8C010 	 ldr r1,[r7,#192]
 362 02b0 D7F8C820 	 ldr r2,[r7,#200]
 363 02b4 D7F80031 	 ldr r3,[r7,#256]
 364 02b8 7967     	 str r1,[r7,#116]
 365 02ba 3A67     	 str r2,[r7,#112]
 366 02bc FB66     	 str r3,[r7,#108]
 367              	.LBB27:
 368              	.LBB28:
1726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint3
1729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 369              	 .loc 2 1732 0
 370 02be 7B6F     	 ldr r3,[r7,#116]
 371 02c0 3A6F     	 ldr r2,[r7,#112]
 372 02c2 F96E     	 ldr r1,[r7,#108]
 373              	
 374 02c4 23FB1213 	 smladx r3,r3,r2,r1
 375              	
 376              	 .thumb
 377 02c8 BB66     	 str r3,[r7,#104]
1733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 378              	 .loc 2 1733 0
 379 02ca BB6E     	 ldr r3,[r7,#104]
 380              	.LBE28:
 381              	.LBE27:
 382              	 .loc 1 311 0
 383 02cc C7F80031 	 str r3,[r7,#256]
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Read next two samples from scratch1 buffer */
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x1 = _SIMD32_OFFSET(pScr1);
 384              	 .loc 1 314 0
 385 02d0 3B69     	 ldr r3,[r7,#16]
 386 02d2 1B68     	 ldr r3,[r3]
 387 02d4 C7F8F430 	 str r3,[r7,#244]
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* multiply and accumlate */
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 = __SMLAD(x2, y2, acc0);
 388              	 .loc 1 317 0
 389 02d8 D7F8F010 	 ldr r1,[r7,#240]
 390 02dc D7F8C420 	 ldr r2,[r7,#196]
 391 02e0 D7F80431 	 ldr r3,[r7,#260]
 392 02e4 7966     	 str r1,[r7,#100]
 393 02e6 3A66     	 str r2,[r7,#96]
 394 02e8 FB65     	 str r3,[r7,#92]
 395              	.LBB29:
 396              	.LBB30:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 397              	 .loc 2 1724 0
 398 02ea 7B6E     	 ldr r3,[r7,#100]
 399 02ec 3A6E     	 ldr r2,[r7,#96]
 400 02ee F96D     	 ldr r1,[r7,#92]
 401              	
 402 02f0 23FB0213 	 smlad r3,r3,r2,r1
 403              	
 404              	 .thumb
 405 02f4 BB65     	 str r3,[r7,#88]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 406              	 .loc 2 1725 0
 407 02f6 BB6D     	 ldr r3,[r7,#88]
 408              	.LBE30:
 409              	.LBE29:
 410              	 .loc 1 317 0
 411 02f8 C7F80431 	 str r3,[r7,#260]
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc2 = __SMLAD(x1, y2, acc2);
 412              	 .loc 1 318 0
 413 02fc D7F8F410 	 ldr r1,[r7,#244]
 414 0300 D7F8C420 	 ldr r2,[r7,#196]
 415 0304 D7F8FC30 	 ldr r3,[r7,#252]
 416 0308 7965     	 str r1,[r7,#84]
 417 030a 3A65     	 str r2,[r7,#80]
 418 030c FB64     	 str r3,[r7,#76]
 419              	.LBB31:
 420              	.LBB32:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 421              	 .loc 2 1724 0
 422 030e 7B6D     	 ldr r3,[r7,#84]
 423 0310 3A6D     	 ldr r2,[r7,#80]
 424 0312 F96C     	 ldr r1,[r7,#76]
 425              	
 426 0314 23FB0213 	 smlad r3,r3,r2,r1
 427              	
 428              	 .thumb
 429 0318 BB64     	 str r3,[r7,#72]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 430              	 .loc 2 1725 0
 431 031a BB6C     	 ldr r3,[r7,#72]
 432              	.LBE32:
 433              	.LBE31:
 434              	 .loc 1 318 0
 435 031c C7F8FC30 	 str r3,[r7,#252]
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* pack input data */
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 436              	 .loc 1 322 0
 437 0320 D7F8F430 	 ldr r3,[r7,#244]
 438 0324 9AB2     	 uxth r2,r3
 439 0326 D7F8F030 	 ldr r3,[r7,#240]
 440 032a 1B0C     	 lsrs r3,r3,#16
 441 032c 1B04     	 lsls r3,r3,#16
 442 032e 1343     	 orrs r3,r3,r2
 443 0330 C7F8C030 	 str r3,[r7,#192]
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y1, acc3);
 444              	 .loc 1 327 0
 445 0334 D7F8C010 	 ldr r1,[r7,#192]
 446 0338 D7F8C820 	 ldr r2,[r7,#200]
 447 033c D7F8F830 	 ldr r3,[r7,#248]
 448 0340 7964     	 str r1,[r7,#68]
 449 0342 3A64     	 str r2,[r7,#64]
 450 0344 FB63     	 str r3,[r7,#60]
 451              	.LBB33:
 452              	.LBB34:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 453              	 .loc 2 1732 0
 454 0346 7B6C     	 ldr r3,[r7,#68]
 455 0348 3A6C     	 ldr r2,[r7,#64]
 456 034a F96B     	 ldr r1,[r7,#60]
 457              	
 458 034c 23FB1213 	 smladx r3,r3,r2,r1
 459              	
 460              	 .thumb
 461 0350 BB63     	 str r3,[r7,#56]
 462              	 .loc 2 1733 0
 463 0352 BB6B     	 ldr r3,[r7,#56]
 464              	.LBE34:
 465              	.LBE33:
 466              	 .loc 1 327 0
 467 0354 C7F8F830 	 str r3,[r7,#248]
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y2, acc1);
 468              	 .loc 1 328 0
 469 0358 D7F8C010 	 ldr r1,[r7,#192]
 470 035c D7F8C420 	 ldr r2,[r7,#196]
 471 0360 D7F80031 	 ldr r3,[r7,#256]
 472 0364 7963     	 str r1,[r7,#52]
 473 0366 3A63     	 str r2,[r7,#48]
 474 0368 FB62     	 str r3,[r7,#44]
 475              	.LBB35:
 476              	.LBB36:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 477              	 .loc 2 1732 0
 478 036a 7B6B     	 ldr r3,[r7,#52]
 479 036c 3A6B     	 ldr r2,[r7,#48]
 480 036e F96A     	 ldr r1,[r7,#44]
 481              	
 482 0370 23FB1213 	 smladx r3,r3,r2,r1
 483              	
 484              	 .thumb
 485 0374 BB62     	 str r3,[r7,#40]
 486              	 .loc 2 1733 0
 487 0376 BB6A     	 ldr r3,[r7,#40]
 488              	.LBE36:
 489              	.LBE35:
 490              	 .loc 1 328 0
 491 0378 C7F80031 	 str r3,[r7,#256]
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x2 = _SIMD32_OFFSET(pScr1 + 2u);
 492              	 .loc 1 330 0
 493 037c 3B69     	 ldr r3,[r7,#16]
 494 037e 5B68     	 ldr r3,[r3,#4]
 495 0380 C7F8F030 	 str r3,[r7,#240]
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 496              	 .loc 1 333 0
 497 0384 D7F8F030 	 ldr r3,[r7,#240]
 498 0388 9AB2     	 uxth r2,r3
 499 038a D7F8F430 	 ldr r3,[r7,#244]
 500 038e 1B0C     	 lsrs r3,r3,#16
 501 0390 1B04     	 lsls r3,r3,#16
 502 0392 1343     	 orrs r3,r3,r2
 503 0394 C7F8C030 	 str r3,[r7,#192]
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y2, acc3);
 504              	 .loc 1 338 0
 505 0398 D7F8C010 	 ldr r1,[r7,#192]
 506 039c D7F8C420 	 ldr r2,[r7,#196]
 507 03a0 D7F8F830 	 ldr r3,[r7,#248]
 508 03a4 7962     	 str r1,[r7,#36]
 509 03a6 3A62     	 str r2,[r7,#32]
 510 03a8 FB61     	 str r3,[r7,#28]
 511              	.LBB37:
 512              	.LBB38:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 513              	 .loc 2 1732 0
 514 03aa 7B6A     	 ldr r3,[r7,#36]
 515 03ac 3A6A     	 ldr r2,[r7,#32]
 516 03ae F969     	 ldr r1,[r7,#28]
 517              	
 518 03b0 23FB1213 	 smladx r3,r3,r2,r1
 519              	
 520              	 .thumb
 521 03b4 BB61     	 str r3,[r7,#24]
 522              	 .loc 2 1733 0
 523 03b6 BB69     	 ldr r3,[r7,#24]
 524              	.LBE38:
 525              	.LBE37:
 526              	 .loc 1 338 0
 527 03b8 C7F8F830 	 str r3,[r7,#248]
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Read four samples from smaller buffer */
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  a = *pIn2;
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  b = *(pIn2 + 1);
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       y1 = __PKHBT(a, b, 16);
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       y1 = __PKHBT(b, a, 16);
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  a = *(pIn2 + 2);
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  b = *(pIn2 + 3);
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       y2 = __PKHBT(a, b, 16);
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       y2 = __PKHBT(b, a, 16);
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 = __SMLAD(x1, y1, acc0);
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc2 = __SMLAD(x2, y1, acc2);
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y1, acc1);
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  a = *pScr1;
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  b = *(pScr1 + 1);
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x1 = __PKHBT(a, b, 16);
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x1 = __PKHBT(b, a, 16);
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 = __SMLAD(x2, y2, acc0);
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc2 = __SMLAD(x1, y2, acc2);
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y1, acc3);
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y2, acc1);
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  a = *(pScr1 + 2);
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  b = *(pScr1 + 3);
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x2 = __PKHBT(a, b, 16);
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x2 = __PKHBT(b, a, 16);
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y2, acc3);
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* update scratch pointers */
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       pIn2 += 4u;
 528              	 .loc 1 415 0
 529 03bc D7F8E430 	 ldr r3,[r7,#228]
 530 03c0 0833     	 adds r3,r3,#8
 531 03c2 C7F8E430 	 str r3,[r7,#228]
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       pScr1 += 4u;
 532              	 .loc 1 416 0
 533 03c6 3B69     	 ldr r3,[r7,#16]
 534 03c8 0833     	 adds r3,r3,#8
 535 03ca 3B61     	 str r3,[r7,#16]
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Decrement the loop counter */
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       tapCnt--;
 536              	 .loc 1 420 0
 537 03cc D7F8D430 	 ldr r3,[r7,#212]
 538 03d0 013B     	 subs r3,r3,#1
 539 03d2 C7F8D430 	 str r3,[r7,#212]
 540              	.L9:
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 541              	 .loc 1 290 0
 542 03d6 D7F8D430 	 ldr r3,[r7,#212]
 543 03da 002B     	 cmp r3,#0
 544 03dc 7FF422AF 	 bne .L18
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     }
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Update scratch pointer for remaining samples of smaller length sequence */
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pScr1 -= 4u;
 545              	 .loc 1 424 0
 546 03e0 3B69     	 ldr r3,[r7,#16]
 547 03e2 083B     	 subs r3,r3,#8
 548 03e4 3B61     	 str r3,[r7,#16]
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* apply same above for remaining samples of smaller length sequence */
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     tapCnt = (srcBLen) & 3u;
 549              	 .loc 1 427 0
 550 03e6 3B46     	 mov r3,r7
 551 03e8 1B68     	 ldr r3,[r3]
 552 03ea 03F00303 	 and r3,r3,#3
 553 03ee C7F8D430 	 str r3,[r7,#212]
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     while (tapCnt > 0u)
 554              	 .loc 1 429 0
 555 03f2 4AE0     	 b .L19
 556              	.L20:
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* accumlate the results */
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2);
 557              	 .loc 1 433 0
 558 03f4 3B69     	 ldr r3,[r7,#16]
 559 03f6 9A1C     	 adds r2,r3,#2
 560 03f8 3A61     	 str r2,[r7,#16]
 561 03fa 1B88     	 ldrh r3,[r3]
 562 03fc 1BB2     	 sxth r3,r3
 563 03fe D7F8E420 	 ldr r2,[r7,#228]
 564 0402 1288     	 ldrh r2,[r2]
 565 0404 12B2     	 sxth r2,r2
 566 0406 02FB03F3 	 mul r3,r2,r3
 567 040a D7F80421 	 ldr r2,[r7,#260]
 568 040e 1344     	 add r3,r3,r2
 569 0410 C7F80431 	 str r3,[r7,#260]
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc1 += (*pScr1++ * *pIn2);
 570              	 .loc 1 434 0
 571 0414 3B69     	 ldr r3,[r7,#16]
 572 0416 9A1C     	 adds r2,r3,#2
 573 0418 3A61     	 str r2,[r7,#16]
 574 041a 1B88     	 ldrh r3,[r3]
 575 041c 1BB2     	 sxth r3,r3
 576 041e D7F8E420 	 ldr r2,[r7,#228]
 577 0422 1288     	 ldrh r2,[r2]
 578 0424 12B2     	 sxth r2,r2
 579 0426 02FB03F3 	 mul r3,r2,r3
 580 042a D7F80021 	 ldr r2,[r7,#256]
 581 042e 1344     	 add r3,r3,r2
 582 0430 C7F80031 	 str r3,[r7,#256]
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc2 += (*pScr1++ * *pIn2);
 583              	 .loc 1 435 0
 584 0434 3B69     	 ldr r3,[r7,#16]
 585 0436 9A1C     	 adds r2,r3,#2
 586 0438 3A61     	 str r2,[r7,#16]
 587 043a 1B88     	 ldrh r3,[r3]
 588 043c 1BB2     	 sxth r3,r3
 589 043e D7F8E420 	 ldr r2,[r7,#228]
 590 0442 1288     	 ldrh r2,[r2]
 591 0444 12B2     	 sxth r2,r2
 592 0446 02FB03F3 	 mul r3,r2,r3
 593 044a D7F8FC20 	 ldr r2,[r7,#252]
 594 044e 1344     	 add r3,r3,r2
 595 0450 C7F8FC30 	 str r3,[r7,#252]
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc3 += (*pScr1++ * *pIn2++);
 596              	 .loc 1 436 0
 597 0454 3B69     	 ldr r3,[r7,#16]
 598 0456 9A1C     	 adds r2,r3,#2
 599 0458 3A61     	 str r2,[r7,#16]
 600 045a 1B88     	 ldrh r3,[r3]
 601 045c 1AB2     	 sxth r2,r3
 602 045e D7F8E430 	 ldr r3,[r7,#228]
 603 0462 991C     	 adds r1,r3,#2
 604 0464 C7F8E410 	 str r1,[r7,#228]
 605 0468 1B88     	 ldrh r3,[r3]
 606 046a 1BB2     	 sxth r3,r3
 607 046c 03FB02F3 	 mul r3,r3,r2
 608 0470 D7F8F820 	 ldr r2,[r7,#248]
 609 0474 1344     	 add r3,r3,r2
 610 0476 C7F8F830 	 str r3,[r7,#248]
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       pScr1 -= 3u;
 611              	 .loc 1 438 0
 612 047a 3B69     	 ldr r3,[r7,#16]
 613 047c 063B     	 subs r3,r3,#6
 614 047e 3B61     	 str r3,[r7,#16]
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Decrement the loop counter */
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       tapCnt--;
 615              	 .loc 1 441 0
 616 0480 D7F8D430 	 ldr r3,[r7,#212]
 617 0484 013B     	 subs r3,r3,#1
 618 0486 C7F8D430 	 str r3,[r7,#212]
 619              	.L19:
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 620              	 .loc 1 429 0
 621 048a D7F8D430 	 ldr r3,[r7,#212]
 622 048e 002B     	 cmp r3,#0
 623 0490 B0D1     	 bne .L20
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     }
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     blkCnt--;
 624              	 .loc 1 444 0
 625 0492 D7F8D830 	 ldr r3,[r7,#216]
 626 0496 013B     	 subs r3,r3,#1
 627 0498 C7F8D830 	 str r3,[r7,#216]
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Store the results in the accumulators in the destination buffer. */
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *__SIMD32(pOut)++ =
 628              	 .loc 1 451 0
 629 049c 07F11402 	 add r2,r7,#20
 630 04a0 1368     	 ldr r3,[r2]
 631 04a2 191D     	 adds r1,r3,#4
 632 04a4 1160     	 str r1,[r2]
 633              	.LBB39:
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16);
 634              	 .loc 1 452 0
 635 04a6 D7F80421 	 ldr r2,[r7,#260]
 636 04aa D213     	 asrs r2,r2,#15
 637 04ac C7F8BC20 	 str r2,[r7,#188]
 638 04b0 D7F8BC20 	 ldr r2,[r7,#188]
 639              	
 640 04b4 02F30F02 	 ssat r2,#16,r2
 641              	
 642              	 .thumb
 643 04b8 C7F8B820 	 str r2,[r7,#184]
 644 04bc D7F8B820 	 ldr r2,[r7,#184]
 645              	.LBE39:
 646 04c0 91B2     	 uxth r1,r2
 647              	.LBB40:
 648 04c2 D7F80021 	 ldr r2,[r7,#256]
 649 04c6 D213     	 asrs r2,r2,#15
 650 04c8 C7F8B420 	 str r2,[r7,#180]
 651 04cc D7F8B420 	 ldr r2,[r7,#180]
 652              	
 653 04d0 02F30F02 	 ssat r2,#16,r2
 654              	
 655              	 .thumb
 656 04d4 C7F8B020 	 str r2,[r7,#176]
 657 04d8 D7F8B020 	 ldr r2,[r7,#176]
 658              	.LBE40:
 659 04dc 1204     	 lsls r2,r2,#16
 660 04de 0A43     	 orrs r2,r2,r1
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16);
 661              	 .loc 1 451 0
 662 04e0 1A60     	 str r2,[r3]
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *__SIMD32(pOut)++ =
 663              	 .loc 1 454 0
 664 04e2 07F11402 	 add r2,r7,#20
 665 04e6 1368     	 ldr r3,[r2]
 666 04e8 191D     	 adds r1,r3,#4
 667 04ea 1160     	 str r1,[r2]
 668              	.LBB41:
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc2 >> 15), 16), __SSAT((acc3 >> 15), 16), 16);
 669              	 .loc 1 455 0
 670 04ec D7F8FC20 	 ldr r2,[r7,#252]
 671 04f0 D213     	 asrs r2,r2,#15
 672 04f2 C7F8AC20 	 str r2,[r7,#172]
 673 04f6 D7F8AC20 	 ldr r2,[r7,#172]
 674              	
 675 04fa 02F30F02 	 ssat r2,#16,r2
 676              	
 677              	 .thumb
 678 04fe C7F8A820 	 str r2,[r7,#168]
 679 0502 D7F8A820 	 ldr r2,[r7,#168]
 680              	.LBE41:
 681 0506 91B2     	 uxth r1,r2
 682              	.LBB42:
 683 0508 D7F8F820 	 ldr r2,[r7,#248]
 684 050c D213     	 asrs r2,r2,#15
 685 050e C7F8A420 	 str r2,[r7,#164]
 686 0512 D7F8A420 	 ldr r2,[r7,#164]
 687              	
 688 0516 02F30F02 	 ssat r2,#16,r2
 689              	
 690              	 .thumb
 691 051a C7F8A020 	 str r2,[r7,#160]
 692 051e D7F8A020 	 ldr r2,[r7,#160]
 693              	.LBE42:
 694 0522 1204     	 lsls r2,r2,#16
 695 0524 0A43     	 orrs r2,r2,r1
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc2 >> 15), 16), __SSAT((acc3 >> 15), 16), 16);
 696              	 .loc 1 454 0
 697 0526 1A60     	 str r2,[r3]
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *__SIMD32(pOut)++ =
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc1 >> 15), 16), __SSAT((acc0 >> 15), 16), 16);
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *__SIMD32(pOut)++ =
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc3 >> 15), 16), __SSAT((acc2 >> 15), 16), 16);
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif /*      #ifndef ARM_MATH_BIG_ENDIAN       */
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn2 = py;
 698              	 .loc 1 471 0
 699 0528 D7F8CC30 	 ldr r3,[r7,#204]
 700 052c C7F8E430 	 str r3,[r7,#228]
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pScratch1 += 4u;
 701              	 .loc 1 473 0
 702 0530 D7F81431 	 ldr r3,[r7,#276]
 703 0534 0833     	 adds r3,r3,#8
 704 0536 C7F81431 	 str r3,[r7,#276]
 705              	.L8:
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 706              	 .loc 1 271 0
 707 053a D7F8D830 	 ldr r3,[r7,#216]
 708 053e 002B     	 cmp r3,#0
 709 0540 7FF44BAE 	 bne .L21
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   blkCnt = (srcALen + srcBLen - 1u) & 0x3;
 710              	 .loc 1 478 0
 711 0544 07F10802 	 add r2,r7,#8
 712 0548 3B46     	 mov r3,r7
 713 054a 1268     	 ldr r2,[r2]
 714 054c 1B68     	 ldr r3,[r3]
 715 054e 1344     	 add r3,r3,r2
 716 0550 013B     	 subs r3,r3,#1
 717 0552 03F00303 	 and r3,r3,#3
 718 0556 C7F8D830 	 str r3,[r7,#216]
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Calculate convolution for remaining samples of Bigger length sequence */
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (blkCnt > 0)
 719              	 .loc 1 481 0
 720 055a 7DE0     	 b .L22
 721              	.L27:
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialze temporary scratch pointer as scratch1 */
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pScr1 = pScratch1;
 722              	 .loc 1 484 0
 723 055c D7F81431 	 ldr r3,[r7,#276]
 724 0560 3B61     	 str r3,[r7,#16]
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Clear Accumlators */
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     acc0 = 0;
 725              	 .loc 1 487 0
 726 0562 0023     	 movs r3,#0
 727 0564 C7F80431 	 str r3,[r7,#260]
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     tapCnt = (srcBLen) >> 1u;
 728              	 .loc 1 489 0
 729 0568 3B46     	 mov r3,r7
 730 056a 1B68     	 ldr r3,[r3]
 731 056c 5B08     	 lsrs r3,r3,#1
 732 056e C7F8D430 	 str r3,[r7,#212]
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     while (tapCnt > 0u)
 733              	 .loc 1 491 0
 734 0572 2AE0     	 b .L23
 735              	.L24:
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2++);
 736              	 .loc 1 494 0
 737 0574 3B69     	 ldr r3,[r7,#16]
 738 0576 9A1C     	 adds r2,r3,#2
 739 0578 3A61     	 str r2,[r7,#16]
 740 057a 1B88     	 ldrh r3,[r3]
 741 057c 1AB2     	 sxth r2,r3
 742 057e D7F8E430 	 ldr r3,[r7,#228]
 743 0582 991C     	 adds r1,r3,#2
 744 0584 C7F8E410 	 str r1,[r7,#228]
 745 0588 1B88     	 ldrh r3,[r3]
 746 058a 1BB2     	 sxth r3,r3
 747 058c 03FB02F3 	 mul r3,r3,r2
 748 0590 D7F80421 	 ldr r2,[r7,#260]
 749 0594 1344     	 add r3,r3,r2
 750 0596 C7F80431 	 str r3,[r7,#260]
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2++);
 751              	 .loc 1 495 0
 752 059a 3B69     	 ldr r3,[r7,#16]
 753 059c 9A1C     	 adds r2,r3,#2
 754 059e 3A61     	 str r2,[r7,#16]
 755 05a0 1B88     	 ldrh r3,[r3]
 756 05a2 1AB2     	 sxth r2,r3
 757 05a4 D7F8E430 	 ldr r3,[r7,#228]
 758 05a8 991C     	 adds r1,r3,#2
 759 05aa C7F8E410 	 str r1,[r7,#228]
 760 05ae 1B88     	 ldrh r3,[r3]
 761 05b0 1BB2     	 sxth r3,r3
 762 05b2 03FB02F3 	 mul r3,r3,r2
 763 05b6 D7F80421 	 ldr r2,[r7,#260]
 764 05ba 1344     	 add r3,r3,r2
 765 05bc C7F80431 	 str r3,[r7,#260]
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Decrement the loop counter */
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       tapCnt--;
 766              	 .loc 1 498 0
 767 05c0 D7F8D430 	 ldr r3,[r7,#212]
 768 05c4 013B     	 subs r3,r3,#1
 769 05c6 C7F8D430 	 str r3,[r7,#212]
 770              	.L23:
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 771              	 .loc 1 491 0
 772 05ca D7F8D430 	 ldr r3,[r7,#212]
 773 05ce 002B     	 cmp r3,#0
 774 05d0 D0D1     	 bne .L24
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     }
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     tapCnt = (srcBLen) & 1u;
 775              	 .loc 1 501 0
 776 05d2 3B46     	 mov r3,r7
 777 05d4 1B68     	 ldr r3,[r3]
 778 05d6 03F00103 	 and r3,r3,#1
 779 05da C7F8D430 	 str r3,[r7,#212]
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* apply same above for remaining samples of smaller length sequence */
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     while (tapCnt > 0u)
 780              	 .loc 1 504 0
 781 05de 17E0     	 b .L25
 782              	.L26:
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* accumlate the results */
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2++);
 783              	 .loc 1 508 0
 784 05e0 3B69     	 ldr r3,[r7,#16]
 785 05e2 9A1C     	 adds r2,r3,#2
 786 05e4 3A61     	 str r2,[r7,#16]
 787 05e6 1B88     	 ldrh r3,[r3]
 788 05e8 1AB2     	 sxth r2,r3
 789 05ea D7F8E430 	 ldr r3,[r7,#228]
 790 05ee 991C     	 adds r1,r3,#2
 791 05f0 C7F8E410 	 str r1,[r7,#228]
 792 05f4 1B88     	 ldrh r3,[r3]
 793 05f6 1BB2     	 sxth r3,r3
 794 05f8 03FB02F3 	 mul r3,r3,r2
 795 05fc D7F80421 	 ldr r2,[r7,#260]
 796 0600 1344     	 add r3,r3,r2
 797 0602 C7F80431 	 str r3,[r7,#260]
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Decrement the loop counter */
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****       tapCnt--;
 798              	 .loc 1 511 0
 799 0606 D7F8D430 	 ldr r3,[r7,#212]
 800 060a 013B     	 subs r3,r3,#1
 801 060c C7F8D430 	 str r3,[r7,#212]
 802              	.L25:
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 803              	 .loc 1 504 0
 804 0610 D7F8D430 	 ldr r3,[r7,#212]
 805 0614 002B     	 cmp r3,#0
 806 0616 E3D1     	 bne .L26
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     }
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     blkCnt--;
 807              	 .loc 1 514 0
 808 0618 D7F8D830 	 ldr r3,[r7,#216]
 809 061c 013B     	 subs r3,r3,#1
 810 061e C7F8D830 	 str r3,[r7,#216]
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* The result is in 2.30 format.  Convert to 1.15 with saturation.
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****      ** Then store the output in the destination buffer. */
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pOut++ = (q15_t) (__SSAT((acc0 >> 15), 16));
 811              	 .loc 1 518 0
 812 0622 7B69     	 ldr r3,[r7,#20]
 813 0624 9A1C     	 adds r2,r3,#2
 814 0626 7A61     	 str r2,[r7,#20]
 815              	.LBB43:
 816 0628 D7F80421 	 ldr r2,[r7,#260]
 817 062c D213     	 asrs r2,r2,#15
 818 062e C7F89C20 	 str r2,[r7,#156]
 819 0632 D7F89C20 	 ldr r2,[r7,#156]
 820              	
 821 0636 02F30F02 	 ssat r2,#16,r2
 822              	
 823              	 .thumb
 824 063a C7F89820 	 str r2,[r7,#152]
 825 063e D7F89820 	 ldr r2,[r7,#152]
 826              	.LBE43:
 827 0642 92B2     	 uxth r2,r2
 828 0644 1A80     	 strh r2,[r3]
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn2 = py;
 829              	 .loc 1 521 0
 830 0646 D7F8CC30 	 ldr r3,[r7,#204]
 831 064a C7F8E430 	 str r3,[r7,#228]
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****     pScratch1 += 1u;
 832              	 .loc 1 523 0
 833 064e D7F81431 	 ldr r3,[r7,#276]
 834 0652 0233     	 adds r3,r3,#2
 835 0654 C7F81431 	 str r3,[r7,#276]
 836              	.L22:
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 837              	 .loc 1 481 0
 838 0658 D7F8D830 	 ldr r3,[r7,#216]
 839 065c 002B     	 cmp r3,#0
 840 065e 7FF47DAF 	 bne .L27
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_opt_q15.c **** }
 841              	 .loc 1 527 0
 842 0662 07F58477 	 add r7,r7,#264
 843              	.LCFI3:
 844              	 .cfi_def_cfa_offset 8
 845 0666 BD46     	 mov sp,r7
 846              	.LCFI4:
 847              	 .cfi_def_cfa_register 13
 848              	 
 849 0668 80BD     	 pop {r7,pc}
 850              	 .cfi_endproc
 851              	.LFE135:
 853 066a 00BF     	 .text
 854              	.Letext0:
 855              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 856              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 857              	 .file 5 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_fast_opt_q15.c
    {standard input}:20     .text.arm_conv_fast_opt_q15:00000000 $t
    {standard input}:25     .text.arm_conv_fast_opt_q15:00000000 arm_conv_fast_opt_q15
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
arm_fill_q15
arm_copy_q15
