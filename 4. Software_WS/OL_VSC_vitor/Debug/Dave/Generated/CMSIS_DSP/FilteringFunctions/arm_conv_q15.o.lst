   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * Title:        arm_conv_q15.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * Description:  Convolution of Q15 sequences
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @addtogroup Conv
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @brief Convolution of Q15 sequences.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @param[in] srcALen length of the first input sequence.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @param[in] srcBLen length of the second input sequence.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @param[out] *pDst points to the location where the output result is written.  Length srcALen+src
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @return none.
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * @details
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * \par
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * The function is implemented using a 64-bit internal accumulator.
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * Both inputs are in 1.15 format and multiplications yield a 2.30 result.
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * This approach provides 33 guard bits and there is no risk of overflow.
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * The 34.30 result is then truncated to 34.15 format by discarding the low 15 bits and then satura
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * \par
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * Refer to <code>arm_conv_fast_q15()</code> for a faster but less precise version of this function
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * \par
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  * Refer the function <code>arm_conv_opt_q15()</code> for a faster implementation of this function 
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  *
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****  */
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** void arm_conv_q15(
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t * pSrcA,
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   uint32_t srcALen,
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t * pSrcB,
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   uint32_t srcBLen,
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t * pDst)
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** {
  28              	 .loc 1 73 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 2DE9900F 	 push {r4,r7,r8,r9,r10,fp}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 24
  36              	 .cfi_offset 4,-24
  37              	 .cfi_offset 7,-20
  38              	 .cfi_offset 8,-16
  39              	 .cfi_offset 9,-12
  40              	 .cfi_offset 10,-8
  41              	 .cfi_offset 11,-4
  42 0004 ADF5836D 	 sub sp,sp,#1048
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 1072
  45 0008 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 000a 07F14C04 	 add r4,r7,#76
  49 000e 2060     	 str r0,[r4]
  50 0010 07F14800 	 add r0,r7,#72
  51 0014 0160     	 str r1,[r0]
  52 0016 07F14401 	 add r1,r7,#68
  53 001a 0A60     	 str r2,[r1]
  54 001c 07F14002 	 add r2,r7,#64
  55 0020 1360     	 str r3,[r2]
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #if (defined(ARM_MATH_CM7) || defined(ARM_MATH_CM4) || defined(ARM_MATH_CM3)) && !defined(UNALIGNED
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t *pIn1;                                   /* inputA pointer */
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t *pIn2;                                   /* inputB pointer */
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t *pOut = pDst;                            /* output pointer */
  56              	 .loc 1 81 0
  57 0022 07F5AE72 	 add r2,r7,#348
  58 0026 D7F83034 	 ldr r3,[r7,#1072]
  59 002a 1360     	 str r3,[r2]
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q63_t sum, acc0, acc1, acc2, acc3;             /* Accumulator */
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers */
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q31_t x0, x1, x2, x3, c0;                      /* Temporary variables to hold state and coefficie
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   uint32_t blockSize1, blockSize2, blockSize3, j, k, count, blkCnt;     /* loop counter */
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* srcB is always made to slide across srcA. */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   if (srcALen >= srcBLen)
  60              	 .loc 1 92 0
  61 002c 07F14802 	 add r2,r7,#72
  62 0030 07F14003 	 add r3,r7,#64
  63 0034 1268     	 ldr r2,[r2]
  64 0036 1B68     	 ldr r3,[r3]
  65 0038 9A42     	 cmp r2,r3
  66 003a 0AD3     	 bcc .L2
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Initialization of inputA pointer */
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     pIn1 = pSrcA;
  67              	 .loc 1 95 0
  68 003c 07F14C03 	 add r3,r7,#76
  69 0040 1B68     	 ldr r3,[r3]
  70 0042 C7F81434 	 str r3,[r7,#1044]
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Initialization of inputB pointer */
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     pIn2 = pSrcB;
  71              	 .loc 1 98 0
  72 0046 07F14403 	 add r3,r7,#68
  73 004a 1B68     	 ldr r3,[r3]
  74 004c C7F81034 	 str r3,[r7,#1040]
  75 0050 19E0     	 b .L3
  76              	.L2:
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   }
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   else
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Initialization of inputA pointer */
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     pIn1 = pSrcB;
  77              	 .loc 1 103 0
  78 0052 07F14403 	 add r3,r7,#68
  79 0056 1B68     	 ldr r3,[r3]
  80 0058 C7F81434 	 str r3,[r7,#1044]
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Initialization of inputB pointer */
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     pIn2 = pSrcA;
  81              	 .loc 1 106 0
  82 005c 07F14C03 	 add r3,r7,#76
  83 0060 1B68     	 ldr r3,[r3]
  84 0062 C7F81034 	 str r3,[r7,#1040]
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     j = srcBLen;
  85              	 .loc 1 109 0
  86 0066 07F14003 	 add r3,r7,#64
  87 006a 1B68     	 ldr r3,[r3]
  88 006c C7F8D033 	 str r3,[r7,#976]
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     srcBLen = srcALen;
  89              	 .loc 1 110 0
  90 0070 07F14002 	 add r2,r7,#64
  91 0074 07F14803 	 add r3,r7,#72
  92 0078 1B68     	 ldr r3,[r3]
  93 007a 1360     	 str r3,[r2]
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     srcALen = j;
  94              	 .loc 1 111 0
  95 007c 07F14802 	 add r2,r7,#72
  96 0080 D7F8D033 	 ldr r3,[r7,#976]
  97 0084 1360     	 str r3,[r2]
  98              	.L3:
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   }
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* The function is internally
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * divided into three stages according to the number of multiplications that has to be
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * taken place between inputA samples and inputB samples. In the first stage of the
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * algorithm, the multiplications increase by one for every iteration.
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * In the second stage of the algorithm, srcBLen number of multiplications are done.
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * In the third stage of the algorithm, the multiplications decrease by one
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * for every iteration. */
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* The algorithm is implemented in three stages.
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      The loop counters of each stage is initiated here. */
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   blockSize1 = srcBLen - 1u;
  99              	 .loc 1 125 0
 100 0086 07F14003 	 add r3,r7,#64
 101 008a 1B68     	 ldr r3,[r3]
 102 008c 013B     	 subs r3,r3,#1
 103 008e C7F8D833 	 str r3,[r7,#984]
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   blockSize2 = srcALen - (srcBLen - 1u);
 104              	 .loc 1 126 0
 105 0092 07F14802 	 add r2,r7,#72
 106 0096 07F14003 	 add r3,r7,#64
 107 009a 1268     	 ldr r2,[r2]
 108 009c 1B68     	 ldr r3,[r3]
 109 009e D31A     	 subs r3,r2,r3
 110 00a0 0133     	 adds r3,r3,#1
 111 00a2 C7F8C033 	 str r3,[r7,#960]
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* --------------------------
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * Initializations of stage1
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * -------------------------*/
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* sum = x[0] * y[0]
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * sum = x[0] * y[1] + x[1] * y[0]
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * ....
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    */
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      The count variable holds the number of MAC operations performed */
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   count = 1u;
 112              	 .loc 1 140 0
 113 00a6 0123     	 movs r3,#1
 114 00a8 C7F8C833 	 str r3,[r7,#968]
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Working pointer of inputA */
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   px = pIn1;
 115              	 .loc 1 143 0
 116 00ac 07F5AC72 	 add r2,r7,#344
 117 00b0 D7F81434 	 ldr r3,[r7,#1044]
 118 00b4 1360     	 str r3,[r2]
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Working pointer of inputB */
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   py = pIn2;
 119              	 .loc 1 146 0
 120 00b6 07F5AA72 	 add r2,r7,#340
 121 00ba D7F81034 	 ldr r3,[r7,#1040]
 122 00be 1360     	 str r3,[r2]
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* ------------------------
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * Stage1 process
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * ----------------------*/
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* For loop unrolling by 4, this stage is divided into two. */
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* First part of this stage computes the MAC operations less than 4 */
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* The first part of the stage starts here */
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   while ((count < 4u) && (blockSize1 > 0u))
 123              	 .loc 1 158 0
 124 00c0 8BE0     	 b .L4
 125              	.L9:
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Accumulator is made zero for every iteration */
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     sum = 0;
 126              	 .loc 1 161 0
 127 00c2 4FF00002 	 mov r2,#0
 128 00c6 4FF00003 	 mov r3,#0
 129 00ca 07F58161 	 add r1,r7,#1032
 130 00ce C1E90023 	 strd r2,[r1]
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Loop over number of MAC operations between
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      * inputA samples and inputB samples */
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     k = count;
 131              	 .loc 1 165 0
 132 00d2 D7F8C833 	 ldr r3,[r7,#968]
 133 00d6 C7F8CC33 	 str r3,[r7,#972]
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     while (k > 0u)
 134              	 .loc 1 167 0
 135 00da 44E0     	 b .L5
 136              	.L7:
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Perform the multiply-accumulates */
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       sum = __SMLALD(*px++, *py--, sum);
 137              	 .loc 1 170 0
 138 00dc 07F5AC73 	 add r3,r7,#344
 139 00e0 1968     	 ldr r1,[r3]
 140 00e2 8A1C     	 adds r2,r1,#2
 141 00e4 07F5AC73 	 add r3,r7,#344
 142 00e8 1A60     	 str r2,[r3]
 143 00ea 0B88     	 ldrh r3,[r1]
 144 00ec 18B2     	 sxth r0,r3
 145 00ee 07F5AA73 	 add r3,r7,#340
 146 00f2 1968     	 ldr r1,[r3]
 147 00f4 8A1E     	 subs r2,r1,#2
 148 00f6 07F5AA73 	 add r3,r7,#340
 149 00fa 1A60     	 str r2,[r3]
 150 00fc 0B88     	 ldrh r3,[r1]
 151 00fe 19B2     	 sxth r1,r3
 152 0100 07F58163 	 add r3,r7,#1032
 153 0104 D3E90023 	 ldrd r2,[r3]
 154 0108 C7F85C03 	 str r0,[r7,#860]
 155 010c C7F85813 	 str r1,[r7,#856]
 156 0110 07F55471 	 add r1,r7,#848
 157 0114 C1E90023 	 strd r2,[r1]
 158              	.LBB76:
 159              	.LBB77:
 160              	 .file 2 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.1
   5:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     02. February 2017
   6:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  36:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                     __asm
  37:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  39:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                  inline
  40:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  41:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  44:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  47:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  48:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  50:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  51:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  53:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  65:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  71:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  72:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  76:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  77:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  78:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  79:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  83:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  85:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0U);
 644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 734:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 735:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 739:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 740:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 744:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 747:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 751:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 753:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 755:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 756:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 758:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 764:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 766:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 767:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 768:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 769:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 773:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 774:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 776:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 779:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 780:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 781:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 783:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 784:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 785:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 787:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 788:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 789:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 791:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 792:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 793:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 795:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 796:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 797:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 799:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 800:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 802:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 803:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 807:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 808:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 810:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 813:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 814:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 815:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 817:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 818:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 819:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 820:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 821:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 822:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 827:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 828:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 830:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 832:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 833:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 834:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 835:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 836:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 841:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 843:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 845:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 846:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 848:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 849:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 850:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 851:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 852:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 853:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 858:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 859:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 861:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   {
 864:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 865:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 866:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     s--;
 867:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 868:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 870:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 871:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 872:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 873:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 874:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 875:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Count leading zeros
 876:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 877:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 878:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             number of leading zeros in value
 879:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 880:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CLZ             __builtin_clz
 881:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 882:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 883:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 884:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 885:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 886:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 887:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 888:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 889:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 890:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 891:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 892:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 893:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDREXB(volatile uint8_t *addr)
 894:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 895:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 896:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 897:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 898:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 899:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 900:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 901:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 902:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 903:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 904:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 905:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 906:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 907:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 908:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 909:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 910:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 911:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 912:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 913:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 914:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 915:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDREXH(volatile uint16_t *addr)
 916:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 917:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 918:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 920:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 921:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 922:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 923:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 924:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 925:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 926:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 927:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 928:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 929:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 930:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 931:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 932:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 933:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 934:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 935:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 936:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 937:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDREXW(volatile uint32_t *addr)
 938:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 939:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 940:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 941:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 942:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 943:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 944:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 945:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 946:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 947:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 948:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 949:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 950:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 951:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 952:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 953:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 954:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *a
 955:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 956:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 957:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 958:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 959:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 960:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 962:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 963:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 964:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 965:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 966:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 967:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 968:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 969:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 970:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 971:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXH(uint16_t value, volatile uint16_t 
 972:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 973:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 974:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 975:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 976:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 977:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 978:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 979:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 980:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 981:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 982:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 983:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 984:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 985:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 986:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 987:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 988:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t 
 989:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 990:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 991:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 992:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 993:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 994:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 995:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 996:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 997:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 998:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Remove the exclusive lock
 999:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1000:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1001:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __CLREX(void)
1002:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1003:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1004:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1005:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1006:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1007:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1008:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1009:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1010:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1011:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1012:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1013:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1014:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1015:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1016:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Signed Saturate
1017:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates a signed value.
1018:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1019:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1020:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1021:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1022:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1023:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1024:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1025:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1026:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1027:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1028:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1029:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1030:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1031:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Unsigned Saturate
1032:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates an unsigned value.
1033:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1034:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1035:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1036:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1037:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1038:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1039:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1040:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1041:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1042:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1043:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1044:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1045:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1046:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1047:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1048:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1049:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
1050:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
1051:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1052:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RRX(uint32_t value)
1053:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1054:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1055:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1056:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1057:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1058:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1059:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1060:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1061:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1062:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1063:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1064:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1065:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1066:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1067:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1068:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1069:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1070:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1071:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1072:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1073:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1074:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1075:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1076:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1077:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1078:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1079:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1080:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1081:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1082:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1083:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1084:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1085:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1086:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1087:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1088:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1089:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1090:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1091:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1092:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1093:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1094:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1095:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1096:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1097:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1098:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1099:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDRT(volatile uint32_t *ptr)
1112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAB(volatile uint8_t *ptr)
1169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAH(volatile uint16_t *ptr)
1184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDA(volatile uint32_t *ptr)
1199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *p
1297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t 
1314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *
1331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated SIMD instructions
1347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
1348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
1349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__ARM_FEATURE_DSP == 1)                             /* ToDo ARMCLANG: This should be ARCH >= A
1351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32
1651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTB16(uint32_t op1)
1673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTB16(uint32_t op1)
1689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32
1721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint3
1729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1734:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1735:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1736:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint6
1737:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1738:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   union llreg_u{
1739:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t w32[2];
1740:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint64_t w64;
1741:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   } llr;
1742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   llr.w64 = acc;
 161              	 .loc 2 1742 0
 162 0118 07F15001 	 add r1,r7,#80
 163 011c 07F55473 	 add r3,r7,#848
 164 0120 D3E90023 	 ldrd r2,[r3]
 165 0124 C1E90023 	 strd r2,[r1]
1743:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1744:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
1745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (o
 166              	 .loc 2 1745 0
 167 0128 07F15003 	 add r3,r7,#80
 168 012c 1A68     	 ldr r2,[r3]
 169 012e 07F15003 	 add r3,r7,#80
 170 0132 5968     	 ldr r1,[r3,#4]
 171 0134 D7F85C03 	 ldr r0,[r7,#860]
 172 0138 D7F85833 	 ldr r3,[r7,#856]
 173              	
 174 013c C0FBC321 	 smlald r2,r1,r0,r3
 175              	
 176              	 .thumb
 177 0140 07F15003 	 add r3,r7,#80
 178 0144 1A60     	 str r2,[r3]
 179 0146 07F15003 	 add r3,r7,#80
 180 014a 5960     	 str r1,[r3,#4]
1746:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
1747:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (o
1748:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1749:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(llr.w64);
 181              	 .loc 2 1750 0
 182 014c 07F15003 	 add r3,r7,#80
 183 0150 D3E90023 	 ldrd r2,[r3]
 184              	.LBE77:
 185              	.LBE76:
 186              	 .loc 1 170 0
 187 0154 07F58161 	 add r1,r7,#1032
 188 0158 C1E90023 	 strd r2,[r1]
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Decrement the loop counter */
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k--;
 189              	 .loc 1 173 0
 190 015c D7F8CC33 	 ldr r3,[r7,#972]
 191 0160 013B     	 subs r3,r3,#1
 192 0162 C7F8CC33 	 str r3,[r7,#972]
 193              	.L5:
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 194              	 .loc 1 167 0
 195 0166 D7F8CC33 	 ldr r3,[r7,#972]
 196 016a 002B     	 cmp r3,#0
 197 016c B6D1     	 bne .L7
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     }
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 198              	 .loc 1 177 0
 199 016e 07F5AE73 	 add r3,r7,#348
 200 0172 1968     	 ldr r1,[r3]
 201 0174 8A1C     	 adds r2,r1,#2
 202 0176 07F5AE73 	 add r3,r7,#348
 203 017a 1A60     	 str r2,[r3]
 204              	.LBB78:
 205 017c 07F58163 	 add r3,r7,#1032
 206 0180 D3E90023 	 ldrd r2,[r3]
 207 0184 4FEAD238 	 lsr r8,r2,#15
 208 0188 48EA4348 	 orr r8,r8,r3,lsl#17
 209 018c 4FEAE339 	 asr r9,r3,#15
 210 0190 4346     	 mov r3,r8
 211 0192 C7F8BC33 	 str r3,[r7,#956]
 212 0196 D7F8BC33 	 ldr r3,[r7,#956]
 213              	
 214 019a 03F30F03 	 ssat r3,#16,r3
 215              	
 216              	 .thumb
 217 019e C7F8B833 	 str r3,[r7,#952]
 218 01a2 D7F8B833 	 ldr r3,[r7,#952]
 219              	.LBE78:
 220 01a6 9BB2     	 uxth r3,r3
 221 01a8 0B80     	 strh r3,[r1]
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     py = pIn2 + count;
 222              	 .loc 1 180 0
 223 01aa D7F8C833 	 ldr r3,[r7,#968]
 224 01ae 5A00     	 lsls r2,r3,#1
 225 01b0 D7F81034 	 ldr r3,[r7,#1040]
 226 01b4 1A44     	 add r2,r2,r3
 227 01b6 07F5AA73 	 add r3,r7,#340
 228 01ba 1A60     	 str r2,[r3]
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     px = pIn1;
 229              	 .loc 1 181 0
 230 01bc 07F5AC72 	 add r2,r7,#344
 231 01c0 D7F81434 	 ldr r3,[r7,#1044]
 232 01c4 1360     	 str r3,[r2]
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Increment the MAC count */
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     count++;
 233              	 .loc 1 184 0
 234 01c6 D7F8C833 	 ldr r3,[r7,#968]
 235 01ca 0133     	 adds r3,r3,#1
 236 01cc C7F8C833 	 str r3,[r7,#968]
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Decrement the loop counter */
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     blockSize1--;
 237              	 .loc 1 187 0
 238 01d0 D7F8D833 	 ldr r3,[r7,#984]
 239 01d4 013B     	 subs r3,r3,#1
 240 01d6 C7F8D833 	 str r3,[r7,#984]
 241              	.L4:
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 242              	 .loc 1 158 0
 243 01da D7F8C833 	 ldr r3,[r7,#968]
 244 01de 032B     	 cmp r3,#3
 245 01e0 04D8     	 bhi .L8
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 246              	 .loc 1 158 0 is_stmt 0 discriminator 1
 247 01e2 D7F8D833 	 ldr r3,[r7,#984]
 248 01e6 002B     	 cmp r3,#0
 249 01e8 7FF46BAF 	 bne .L9
 250              	.L8:
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   }
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* The second part of the stage starts here */
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* The internal loop, over count, is unrolled by 4 */
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* To, read the last two inputB samples using SIMD:
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   py = py - 1;
 251              	 .loc 1 194 0 is_stmt 1
 252 01ec 07F5AA73 	 add r3,r7,#340
 253 01f0 1B68     	 ldr r3,[r3]
 254 01f2 9A1E     	 subs r2,r3,#2
 255 01f4 07F5AA73 	 add r3,r7,#340
 256 01f8 1A60     	 str r2,[r3]
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   while (blockSize1 > 0u)
 257              	 .loc 1 196 0
 258 01fa 21E1     	 b .L10
 259              	.L18:
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Accumulator is made zero for every iteration */
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     sum = 0;
 260              	 .loc 1 199 0
 261 01fc 4FF00002 	 mov r2,#0
 262 0200 4FF00003 	 mov r3,#0
 263 0204 07F58161 	 add r1,r7,#1032
 264 0208 C1E90023 	 strd r2,[r1]
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     k = count >> 2u;
 265              	 .loc 1 202 0
 266 020c D7F8C833 	 ldr r3,[r7,#968]
 267 0210 9B08     	 lsrs r3,r3,#2
 268 0212 C7F8CC33 	 str r3,[r7,#972]
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     while (k > 0u)
 269              	 .loc 1 206 0
 270 0216 7CE0     	 b .L11
 271              	.L14:
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Perform the multiply-accumulates */
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* x[0], x[1] are multiplied with y[srcBLen - 1], y[srcBLen - 2] respectively */
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       sum = __SMLALDX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 272              	 .loc 1 210 0
 273 0218 07F5AC71 	 add r1,r7,#344
 274 021c 0A68     	 ldr r2,[r1]
 275 021e 131D     	 adds r3,r2,#4
 276 0220 0B60     	 str r3,[r1]
 277 0222 1368     	 ldr r3,[r2]
 278 0224 1846     	 mov r0,r3
 279 0226 07F5AA71 	 add r1,r7,#340
 280 022a 0A68     	 ldr r2,[r1]
 281 022c 131F     	 subs r3,r2,#4
 282 022e 0B60     	 str r3,[r1]
 283 0230 1368     	 ldr r3,[r2]
 284 0232 1946     	 mov r1,r3
 285 0234 07F58163 	 add r3,r7,#1032
 286 0238 D3E90023 	 ldrd r2,[r3]
 287 023c C7F84C03 	 str r0,[r7,#844]
 288 0240 C7F84813 	 str r1,[r7,#840]
 289 0244 07F55071 	 add r1,r7,#832
 290 0248 C1E90023 	 strd r2,[r1]
 291              	.LBB79:
 292              	.LBB80:
1751:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1752:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1753:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint64_t __SMLALDX (uint32_t op1, uint32_t op2, uint
1754:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1755:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   union llreg_u{
1756:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t w32[2];
1757:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint64_t w64;
1758:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   } llr;
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   llr.w64 = acc;
 293              	 .loc 2 1759 0
 294 024c 07F15801 	 add r1,r7,#88
 295 0250 07F55073 	 add r3,r7,#832
 296 0254 D3E90023 	 ldrd r2,[r3]
 297 0258 C1E90023 	 strd r2,[r1]
1760:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1761:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (
 298              	 .loc 2 1762 0
 299 025c 07F15803 	 add r3,r7,#88
 300 0260 1A68     	 ldr r2,[r3]
 301 0262 07F15803 	 add r3,r7,#88
 302 0266 5968     	 ldr r1,[r3,#4]
 303 0268 D7F84C03 	 ldr r0,[r7,#844]
 304 026c D7F84833 	 ldr r3,[r7,#840]
 305              	
 306 0270 C0FBD321 	 smlaldx r2,r1,r0,r3
 307              	
 308              	 .thumb
 309 0274 07F15803 	 add r3,r7,#88
 310 0278 1A60     	 str r2,[r3]
 311 027a 07F15803 	 add r3,r7,#88
 312 027e 5960     	 str r1,[r3,#4]
1763:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
1764:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (
1765:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1766:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1767:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(llr.w64);
 313              	 .loc 2 1767 0
 314 0280 07F15803 	 add r3,r7,#88
 315 0284 D3E90023 	 ldrd r2,[r3]
 316              	.LBE80:
 317              	.LBE79:
 318              	 .loc 1 210 0
 319 0288 07F58161 	 add r1,r7,#1032
 320 028c C1E90023 	 strd r2,[r1]
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* x[2], x[3] are multiplied with y[srcBLen - 3], y[srcBLen - 4] respectively */
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       sum = __SMLALDX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 321              	 .loc 1 212 0
 322 0290 07F5AC71 	 add r1,r7,#344
 323 0294 0A68     	 ldr r2,[r1]
 324 0296 131D     	 adds r3,r2,#4
 325 0298 0B60     	 str r3,[r1]
 326 029a 1368     	 ldr r3,[r2]
 327 029c 1846     	 mov r0,r3
 328 029e 07F5AA71 	 add r1,r7,#340
 329 02a2 0A68     	 ldr r2,[r1]
 330 02a4 131F     	 subs r3,r2,#4
 331 02a6 0B60     	 str r3,[r1]
 332 02a8 1368     	 ldr r3,[r2]
 333 02aa 1946     	 mov r1,r3
 334 02ac 07F58163 	 add r3,r7,#1032
 335 02b0 D3E90023 	 ldrd r2,[r3]
 336 02b4 C7F83C03 	 str r0,[r7,#828]
 337 02b8 C7F83813 	 str r1,[r7,#824]
 338 02bc 07F54C71 	 add r1,r7,#816
 339 02c0 C1E90023 	 strd r2,[r1]
 340              	.LBB81:
 341              	.LBB82:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 342              	 .loc 2 1759 0
 343 02c4 07F16001 	 add r1,r7,#96
 344 02c8 07F54C73 	 add r3,r7,#816
 345 02cc D3E90023 	 ldrd r2,[r3]
 346 02d0 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 347              	 .loc 2 1762 0
 348 02d4 07F16003 	 add r3,r7,#96
 349 02d8 1A68     	 ldr r2,[r3]
 350 02da 07F16003 	 add r3,r7,#96
 351 02de 5968     	 ldr r1,[r3,#4]
 352 02e0 D7F83C03 	 ldr r0,[r7,#828]
 353 02e4 D7F83833 	 ldr r3,[r7,#824]
 354              	
 355 02e8 C0FBD321 	 smlaldx r2,r1,r0,r3
 356              	
 357              	 .thumb
 358 02ec 07F16003 	 add r3,r7,#96
 359 02f0 1A60     	 str r2,[r3]
 360 02f2 07F16003 	 add r3,r7,#96
 361 02f6 5960     	 str r1,[r3,#4]
 362              	 .loc 2 1767 0
 363 02f8 07F16003 	 add r3,r7,#96
 364 02fc D3E90023 	 ldrd r2,[r3]
 365              	.LBE82:
 366              	.LBE81:
 367              	 .loc 1 212 0
 368 0300 07F58161 	 add r1,r7,#1032
 369 0304 C1E90023 	 strd r2,[r1]
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Decrement the loop counter */
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k--;
 370              	 .loc 1 215 0
 371 0308 D7F8CC33 	 ldr r3,[r7,#972]
 372 030c 013B     	 subs r3,r3,#1
 373 030e C7F8CC33 	 str r3,[r7,#972]
 374              	.L11:
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 375              	 .loc 1 206 0
 376 0312 D7F8CC33 	 ldr r3,[r7,#972]
 377 0316 002B     	 cmp r3,#0
 378 0318 7FF47EAF 	 bne .L14
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     }
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* For the next MAC operations, the pointer py is used without SIMD
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      * So, py is incremented by 1 */
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     py = py + 1u;
 379              	 .loc 1 220 0
 380 031c 07F5AA73 	 add r3,r7,#340
 381 0320 1B68     	 ldr r3,[r3]
 382 0322 9A1C     	 adds r2,r3,#2
 383 0324 07F5AA73 	 add r3,r7,#340
 384 0328 1A60     	 str r2,[r3]
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      ** No loop unrolling is used. */
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     k = count % 0x4u;
 385              	 .loc 1 224 0
 386 032a D7F8C833 	 ldr r3,[r7,#968]
 387 032e 03F00303 	 and r3,r3,#3
 388 0332 C7F8CC33 	 str r3,[r7,#972]
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     while (k > 0u)
 389              	 .loc 1 226 0
 390 0336 44E0     	 b .L15
 391              	.L17:
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Perform the multiply-accumulates */
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       sum = __SMLALD(*px++, *py--, sum);
 392              	 .loc 1 229 0
 393 0338 07F5AC73 	 add r3,r7,#344
 394 033c 1968     	 ldr r1,[r3]
 395 033e 8A1C     	 adds r2,r1,#2
 396 0340 07F5AC73 	 add r3,r7,#344
 397 0344 1A60     	 str r2,[r3]
 398 0346 0B88     	 ldrh r3,[r1]
 399 0348 18B2     	 sxth r0,r3
 400 034a 07F5AA73 	 add r3,r7,#340
 401 034e 1968     	 ldr r1,[r3]
 402 0350 8A1E     	 subs r2,r1,#2
 403 0352 07F5AA73 	 add r3,r7,#340
 404 0356 1A60     	 str r2,[r3]
 405 0358 0B88     	 ldrh r3,[r1]
 406 035a 19B2     	 sxth r1,r3
 407 035c 07F58163 	 add r3,r7,#1032
 408 0360 D3E90023 	 ldrd r2,[r3]
 409 0364 C7F82C03 	 str r0,[r7,#812]
 410 0368 C7F82813 	 str r1,[r7,#808]
 411 036c 07F54871 	 add r1,r7,#800
 412 0370 C1E90023 	 strd r2,[r1]
 413              	.LBB83:
 414              	.LBB84:
1742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 415              	 .loc 2 1742 0
 416 0374 07F16801 	 add r1,r7,#104
 417 0378 07F54873 	 add r3,r7,#800
 418 037c D3E90023 	 ldrd r2,[r3]
 419 0380 C1E90023 	 strd r2,[r1]
1745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 420              	 .loc 2 1745 0
 421 0384 07F16803 	 add r3,r7,#104
 422 0388 1A68     	 ldr r2,[r3]
 423 038a 07F16803 	 add r3,r7,#104
 424 038e 5968     	 ldr r1,[r3,#4]
 425 0390 D7F82C03 	 ldr r0,[r7,#812]
 426 0394 D7F82833 	 ldr r3,[r7,#808]
 427              	
 428 0398 C0FBC321 	 smlald r2,r1,r0,r3
 429              	
 430              	 .thumb
 431 039c 07F16803 	 add r3,r7,#104
 432 03a0 1A60     	 str r2,[r3]
 433 03a2 07F16803 	 add r3,r7,#104
 434 03a6 5960     	 str r1,[r3,#4]
1750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 435              	 .loc 2 1750 0
 436 03a8 07F16803 	 add r3,r7,#104
 437 03ac D3E90023 	 ldrd r2,[r3]
 438              	.LBE84:
 439              	.LBE83:
 440              	 .loc 1 229 0
 441 03b0 07F58161 	 add r1,r7,#1032
 442 03b4 C1E90023 	 strd r2,[r1]
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Decrement the loop counter */
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k--;
 443              	 .loc 1 232 0
 444 03b8 D7F8CC33 	 ldr r3,[r7,#972]
 445 03bc 013B     	 subs r3,r3,#1
 446 03be C7F8CC33 	 str r3,[r7,#972]
 447              	.L15:
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 448              	 .loc 1 226 0
 449 03c2 D7F8CC33 	 ldr r3,[r7,#972]
 450 03c6 002B     	 cmp r3,#0
 451 03c8 B6D1     	 bne .L17
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     }
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 452              	 .loc 1 236 0
 453 03ca 07F5AE73 	 add r3,r7,#348
 454 03ce 1968     	 ldr r1,[r3]
 455 03d0 8A1C     	 adds r2,r1,#2
 456 03d2 07F5AE73 	 add r3,r7,#348
 457 03d6 1A60     	 str r2,[r3]
 458              	.LBB85:
 459 03d8 07F58163 	 add r3,r7,#1032
 460 03dc D3E90023 	 ldrd r2,[r3]
 461 03e0 D00B     	 lsrs r0,r2,#15
 462 03e2 B863     	 str r0,[r7,#56]
 463 03e4 B86B     	 ldr r0,[r7,#56]
 464 03e6 40EA4340 	 orr r0,r0,r3,lsl#17
 465 03ea B863     	 str r0,[r7,#56]
 466 03ec DB13     	 asrs r3,r3,#15
 467 03ee FB63     	 str r3,[r7,#60]
 468 03f0 BB6B     	 ldr r3,[r7,#56]
 469 03f2 C7F8B433 	 str r3,[r7,#948]
 470 03f6 D7F8B433 	 ldr r3,[r7,#948]
 471              	
 472 03fa 03F30F03 	 ssat r3,#16,r3
 473              	
 474              	 .thumb
 475 03fe C7F8B033 	 str r3,[r7,#944]
 476 0402 D7F8B033 	 ldr r3,[r7,#944]
 477              	.LBE85:
 478 0406 9BB2     	 uxth r3,r3
 479 0408 0B80     	 strh r3,[r1]
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     py = pIn2 + (count - 1u);
 480              	 .loc 1 239 0
 481 040a D7F8C833 	 ldr r3,[r7,#968]
 482 040e 03F10043 	 add r3,r3,#-2147483648
 483 0412 013B     	 subs r3,r3,#1
 484 0414 5A00     	 lsls r2,r3,#1
 485 0416 D7F81034 	 ldr r3,[r7,#1040]
 486 041a 1A44     	 add r2,r2,r3
 487 041c 07F5AA73 	 add r3,r7,#340
 488 0420 1A60     	 str r2,[r3]
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     px = pIn1;
 489              	 .loc 1 240 0
 490 0422 07F5AC72 	 add r2,r7,#344
 491 0426 D7F81434 	 ldr r3,[r7,#1044]
 492 042a 1360     	 str r3,[r2]
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Increment the MAC count */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     count++;
 493              	 .loc 1 243 0
 494 042c D7F8C833 	 ldr r3,[r7,#968]
 495 0430 0133     	 adds r3,r3,#1
 496 0432 C7F8C833 	 str r3,[r7,#968]
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Decrement the loop counter */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     blockSize1--;
 497              	 .loc 1 246 0
 498 0436 D7F8D833 	 ldr r3,[r7,#984]
 499 043a 013B     	 subs r3,r3,#1
 500 043c C7F8D833 	 str r3,[r7,#984]
 501              	.L10:
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 502              	 .loc 1 196 0
 503 0440 D7F8D833 	 ldr r3,[r7,#984]
 504 0444 002B     	 cmp r3,#0
 505 0446 7FF4D9AE 	 bne .L18
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   }
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* --------------------------
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * Initializations of stage2
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * ------------------------*/
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * ....
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y[0
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    */
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Working pointer of inputA */
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   px = pIn1;
 506              	 .loc 1 260 0
 507 044a 07F5AC72 	 add r2,r7,#344
 508 044e D7F81434 	 ldr r3,[r7,#1044]
 509 0452 1360     	 str r3,[r2]
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Working pointer of inputB */
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 510              	 .loc 1 263 0
 511 0454 07F14003 	 add r3,r7,#64
 512 0458 1B68     	 ldr r3,[r3]
 513 045a 03F10043 	 add r3,r3,#-2147483648
 514 045e 013B     	 subs r3,r3,#1
 515 0460 5A00     	 lsls r2,r3,#1
 516 0462 D7F81034 	 ldr r3,[r7,#1040]
 517 0466 1344     	 add r3,r3,r2
 518 0468 C7F8AC33 	 str r3,[r7,#940]
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   py = pSrc2;
 519              	 .loc 1 264 0
 520 046c 07F5AA72 	 add r2,r7,#340
 521 0470 D7F8AC33 	 ldr r3,[r7,#940]
 522 0474 1360     	 str r3,[r2]
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* count is the index by which the pointer pIn1 to be incremented */
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   count = 0u;
 523              	 .loc 1 267 0
 524 0476 0023     	 movs r3,#0
 525 0478 C7F8C833 	 str r3,[r7,#968]
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* --------------------
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * Stage2 process
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * -------------------*/
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * So, to loop unroll over blockSize2,
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * srcBLen should be greater than or equal to 4 */
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   if (srcBLen >= 4u)
 526              	 .loc 1 277 0
 527 047c 07F14003 	 add r3,r7,#64
 528 0480 1B68     	 ldr r3,[r3]
 529 0482 032B     	 cmp r3,#3
 530 0484 40F2AD87 	 bls .L19
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Loop unroll over blockSize2, by 4 */
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     blkCnt = blockSize2 >> 2u;
 531              	 .loc 1 280 0
 532 0488 D7F8C033 	 ldr r3,[r7,#960]
 533 048c 9B08     	 lsrs r3,r3,#2
 534 048e C7F8C433 	 str r3,[r7,#964]
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     while (blkCnt > 0u)
 535              	 .loc 1 282 0
 536 0492 00F088BE 	 b .L20
 537              	.L49:
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       py = py - 1u;
 538              	 .loc 1 284 0
 539 0496 07F5AA73 	 add r3,r7,#340
 540 049a 1B68     	 ldr r3,[r3]
 541 049c 9A1E     	 subs r2,r3,#2
 542 049e 07F5AA73 	 add r3,r7,#340
 543 04a2 1A60     	 str r2,[r3]
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Set all accumulators to zero */
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       acc0 = 0;
 544              	 .loc 1 287 0
 545 04a4 4FF00002 	 mov r2,#0
 546 04a8 4FF00003 	 mov r3,#0
 547 04ac 07F58061 	 add r1,r7,#1024
 548 04b0 C1E90023 	 strd r2,[r1]
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       acc1 = 0;
 549              	 .loc 1 288 0
 550 04b4 4FF00002 	 mov r2,#0
 551 04b8 4FF00003 	 mov r3,#0
 552 04bc 07F57E71 	 add r1,r7,#1016
 553 04c0 C1E90023 	 strd r2,[r1]
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       acc2 = 0;
 554              	 .loc 1 289 0
 555 04c4 4FF00002 	 mov r2,#0
 556 04c8 4FF00003 	 mov r3,#0
 557 04cc 07F57C71 	 add r1,r7,#1008
 558 04d0 C1E90023 	 strd r2,[r1]
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       acc3 = 0;
 559              	 .loc 1 290 0
 560 04d4 4FF00002 	 mov r2,#0
 561 04d8 4FF00003 	 mov r3,#0
 562 04dc 07F57A71 	 add r1,r7,#1000
 563 04e0 C1E90023 	 strd r2,[r1]
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* read x[0], x[1] samples */
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       x0 = *__SIMD32(px);
 564              	 .loc 1 294 0
 565 04e4 07F5AC73 	 add r3,r7,#344
 566 04e8 1B68     	 ldr r3,[r3]
 567 04ea 1B68     	 ldr r3,[r3]
 568 04ec C7F8E033 	 str r3,[r7,#992]
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* read x[1], x[2] samples */
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       x1 = _SIMD32_OFFSET(px+1);
 569              	 .loc 1 296 0
 570 04f0 07F5AC73 	 add r3,r7,#344
 571 04f4 1B68     	 ldr r3,[r3]
 572 04f6 D3F80230 	 ldr r3,[r3,#2]
 573 04fa C7F8DC33 	 str r3,[r7,#988]
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       px+= 2u;
 574              	 .loc 1 297 0
 575 04fe 07F5AC73 	 add r3,r7,#344
 576 0502 1B68     	 ldr r3,[r3]
 577 0504 1A1D     	 adds r2,r3,#4
 578 0506 07F5AC73 	 add r3,r7,#344
 579 050a 1A60     	 str r2,[r3]
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k = srcBLen >> 2u;
 580              	 .loc 1 301 0
 581 050c 07F14003 	 add r3,r7,#64
 582 0510 1B68     	 ldr r3,[r3]
 583 0512 9B08     	 lsrs r3,r3,#2
 584 0514 C7F8CC33 	 str r3,[r7,#972]
 585              	.L29:
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       do
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read the last two inputB samples using SIMD:
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****          * y[srcBLen - 1] and y[srcBLen - 2] */
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         c0 = *__SIMD32(py)--;
 586              	 .loc 1 309 0 discriminator 1
 587 0518 07F5AA71 	 add r1,r7,#340
 588 051c 0A68     	 ldr r2,[r1]
 589 051e 131F     	 subs r3,r2,#4
 590 0520 0B60     	 str r3,[r1]
 591 0522 1368     	 ldr r3,[r2]
 592 0524 C7F8A833 	 str r3,[r7,#936]
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc0 = __SMLALDX(x0, c0, acc0);
 593              	 .loc 1 312 0 discriminator 1
 594 0528 D7F8E033 	 ldr r3,[r7,#992]
 595 052c D7F8A823 	 ldr r2,[r7,#936]
 596 0530 07F58061 	 add r1,r7,#1024
 597 0534 D1E90001 	 ldrd r0,[r1]
 598 0538 C7F81C33 	 str r3,[r7,#796]
 599 053c 07F54673 	 add r3,r7,#792
 600 0540 1A60     	 str r2,[r3]
 601 0542 07F54473 	 add r3,r7,#784
 602 0546 C3E90001 	 strd r0,[r3]
 603              	.LBB86:
 604              	.LBB87:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 605              	 .loc 2 1759 0 discriminator 1
 606 054a 07F17001 	 add r1,r7,#112
 607 054e 07F54473 	 add r3,r7,#784
 608 0552 D3E90023 	 ldrd r2,[r3]
 609 0556 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 610              	 .loc 2 1762 0 discriminator 1
 611 055a 07F17003 	 add r3,r7,#112
 612 055e 1A68     	 ldr r2,[r3]
 613 0560 07F17003 	 add r3,r7,#112
 614 0564 5968     	 ldr r1,[r3,#4]
 615 0566 D7F81C03 	 ldr r0,[r7,#796]
 616 056a 07F54673 	 add r3,r7,#792
 617 056e 1B68     	 ldr r3,[r3]
 618              	
 619 0570 C0FBD321 	 smlaldx r2,r1,r0,r3
 620              	
 621              	 .thumb
 622 0574 07F17003 	 add r3,r7,#112
 623 0578 1A60     	 str r2,[r3]
 624 057a 07F17003 	 add r3,r7,#112
 625 057e 5960     	 str r1,[r3,#4]
 626              	 .loc 2 1767 0 discriminator 1
 627 0580 07F17003 	 add r3,r7,#112
 628 0584 D3E90023 	 ldrd r2,[r3]
 629              	.LBE87:
 630              	.LBE86:
 631              	 .loc 1 312 0 discriminator 1
 632 0588 07F58061 	 add r1,r7,#1024
 633 058c C1E90023 	 strd r2,[r1]
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc1 = __SMLALDX(x1, c0, acc1);
 634              	 .loc 1 315 0 discriminator 1
 635 0590 D7F8DC23 	 ldr r2,[r7,#988]
 636 0594 D7F8A843 	 ldr r4,[r7,#936]
 637 0598 07F57E73 	 add r3,r7,#1016
 638 059c D3E90001 	 ldrd r0,[r3]
 639 05a0 07F54373 	 add r3,r7,#780
 640 05a4 1A60     	 str r2,[r3]
 641 05a6 07F54273 	 add r3,r7,#776
 642 05aa 1C60     	 str r4,[r3]
 643 05ac 07F54073 	 add r3,r7,#768
 644 05b0 C3E90001 	 strd r0,[r3]
 645              	.LBB88:
 646              	.LBB89:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647              	 .loc 2 1759 0 discriminator 1
 648 05b4 07F17801 	 add r1,r7,#120
 649 05b8 07F54073 	 add r3,r7,#768
 650 05bc D3E90023 	 ldrd r2,[r3]
 651 05c0 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 652              	 .loc 2 1762 0 discriminator 1
 653 05c4 07F17803 	 add r3,r7,#120
 654 05c8 1A68     	 ldr r2,[r3]
 655 05ca 07F17803 	 add r3,r7,#120
 656 05ce 5968     	 ldr r1,[r3,#4]
 657 05d0 07F54373 	 add r3,r7,#780
 658 05d4 1868     	 ldr r0,[r3]
 659 05d6 07F54273 	 add r3,r7,#776
 660 05da 1B68     	 ldr r3,[r3]
 661              	
 662 05dc C0FBD321 	 smlaldx r2,r1,r0,r3
 663              	
 664              	 .thumb
 665 05e0 07F17803 	 add r3,r7,#120
 666 05e4 1A60     	 str r2,[r3]
 667 05e6 07F17803 	 add r3,r7,#120
 668 05ea 5960     	 str r1,[r3,#4]
 669              	 .loc 2 1767 0 discriminator 1
 670 05ec 07F17803 	 add r3,r7,#120
 671 05f0 D3E90023 	 ldrd r2,[r3]
 672              	.LBE89:
 673              	.LBE88:
 674              	 .loc 1 315 0 discriminator 1
 675 05f4 07F57E71 	 add r1,r7,#1016
 676 05f8 C1E90023 	 strd r2,[r1]
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read x[2], x[3] */
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         x2 = *__SIMD32(px);
 677              	 .loc 1 318 0 discriminator 1
 678 05fc 07F5AC73 	 add r3,r7,#344
 679 0600 1B68     	 ldr r3,[r3]
 680 0602 1B68     	 ldr r3,[r3]
 681 0604 C7F8A433 	 str r3,[r7,#932]
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read x[3], x[4] */
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         x3 = _SIMD32_OFFSET(px+1);
 682              	 .loc 1 321 0 discriminator 1
 683 0608 07F5AC73 	 add r3,r7,#344
 684 060c 1B68     	 ldr r3,[r3]
 685 060e D3F80230 	 ldr r3,[r3,#2]
 686 0612 C7F8A033 	 str r3,[r7,#928]
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc2 = __SMLALDX(x2, c0, acc2);
 687              	 .loc 1 324 0 discriminator 1
 688 0616 D7F8A423 	 ldr r2,[r7,#932]
 689 061a D7F8A843 	 ldr r4,[r7,#936]
 690 061e 07F57C73 	 add r3,r7,#1008
 691 0622 D3E90001 	 ldrd r0,[r3]
 692 0626 07F53F73 	 add r3,r7,#764
 693 062a 1A60     	 str r2,[r3]
 694 062c 07F53E73 	 add r3,r7,#760
 695 0630 1C60     	 str r4,[r3]
 696 0632 07F53C73 	 add r3,r7,#752
 697 0636 C3E90001 	 strd r0,[r3]
 698              	.LBB90:
 699              	.LBB91:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 700              	 .loc 2 1759 0 discriminator 1
 701 063a 07F18001 	 add r1,r7,#128
 702 063e 07F53C73 	 add r3,r7,#752
 703 0642 D3E90023 	 ldrd r2,[r3]
 704 0646 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 705              	 .loc 2 1762 0 discriminator 1
 706 064a 07F18003 	 add r3,r7,#128
 707 064e 1A68     	 ldr r2,[r3]
 708 0650 07F18003 	 add r3,r7,#128
 709 0654 5968     	 ldr r1,[r3,#4]
 710 0656 07F53F73 	 add r3,r7,#764
 711 065a 1868     	 ldr r0,[r3]
 712 065c 07F53E73 	 add r3,r7,#760
 713 0660 1B68     	 ldr r3,[r3]
 714              	
 715 0662 C0FBD321 	 smlaldx r2,r1,r0,r3
 716              	
 717              	 .thumb
 718 0666 07F18003 	 add r3,r7,#128
 719 066a 1A60     	 str r2,[r3]
 720 066c 07F18003 	 add r3,r7,#128
 721 0670 5960     	 str r1,[r3,#4]
 722              	 .loc 2 1767 0 discriminator 1
 723 0672 07F18003 	 add r3,r7,#128
 724 0676 D3E90023 	 ldrd r2,[r3]
 725              	.LBE91:
 726              	.LBE90:
 727              	 .loc 1 324 0 discriminator 1
 728 067a 07F57C71 	 add r1,r7,#1008
 729 067e C1E90023 	 strd r2,[r1]
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc3 = __SMLALDX(x3, c0, acc3);
 730              	 .loc 1 327 0 discriminator 1
 731 0682 D7F8A023 	 ldr r2,[r7,#928]
 732 0686 D7F8A843 	 ldr r4,[r7,#936]
 733 068a 07F57A73 	 add r3,r7,#1000
 734 068e D3E90001 	 ldrd r0,[r3]
 735 0692 07F53B73 	 add r3,r7,#748
 736 0696 1A60     	 str r2,[r3]
 737 0698 07F53A73 	 add r3,r7,#744
 738 069c 1C60     	 str r4,[r3]
 739 069e 07F53873 	 add r3,r7,#736
 740 06a2 C3E90001 	 strd r0,[r3]
 741              	.LBB92:
 742              	.LBB93:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 743              	 .loc 2 1759 0 discriminator 1
 744 06a6 07F18801 	 add r1,r7,#136
 745 06aa 07F53873 	 add r3,r7,#736
 746 06ae D3E90023 	 ldrd r2,[r3]
 747 06b2 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 748              	 .loc 2 1762 0 discriminator 1
 749 06b6 07F18803 	 add r3,r7,#136
 750 06ba 1A68     	 ldr r2,[r3]
 751 06bc 07F18803 	 add r3,r7,#136
 752 06c0 5968     	 ldr r1,[r3,#4]
 753 06c2 07F53B73 	 add r3,r7,#748
 754 06c6 1868     	 ldr r0,[r3]
 755 06c8 07F53A73 	 add r3,r7,#744
 756 06cc 1B68     	 ldr r3,[r3]
 757              	
 758 06ce C0FBD321 	 smlaldx r2,r1,r0,r3
 759              	
 760              	 .thumb
 761 06d2 07F18803 	 add r3,r7,#136
 762 06d6 1A60     	 str r2,[r3]
 763 06d8 07F18803 	 add r3,r7,#136
 764 06dc 5960     	 str r1,[r3,#4]
 765              	 .loc 2 1767 0 discriminator 1
 766 06de 07F18803 	 add r3,r7,#136
 767 06e2 D3E90023 	 ldrd r2,[r3]
 768              	.LBE93:
 769              	.LBE92:
 770              	 .loc 1 327 0 discriminator 1
 771 06e6 07F57A71 	 add r1,r7,#1000
 772 06ea C1E90023 	 strd r2,[r1]
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read y[srcBLen - 3] and y[srcBLen - 4] */
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         c0 = *__SIMD32(py)--;
 773              	 .loc 1 330 0 discriminator 1
 774 06ee 07F5AA71 	 add r1,r7,#340
 775 06f2 0A68     	 ldr r2,[r1]
 776 06f4 131F     	 subs r3,r2,#4
 777 06f6 0B60     	 str r3,[r1]
 778 06f8 1368     	 ldr r3,[r2]
 779 06fa C7F8A833 	 str r3,[r7,#936]
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc0 = __SMLALDX(x2, c0, acc0);
 780              	 .loc 1 333 0 discriminator 1
 781 06fe D7F8A423 	 ldr r2,[r7,#932]
 782 0702 D7F8A843 	 ldr r4,[r7,#936]
 783 0706 07F58063 	 add r3,r7,#1024
 784 070a D3E90001 	 ldrd r0,[r3]
 785 070e 07F53773 	 add r3,r7,#732
 786 0712 1A60     	 str r2,[r3]
 787 0714 07F53673 	 add r3,r7,#728
 788 0718 1C60     	 str r4,[r3]
 789 071a 07F53473 	 add r3,r7,#720
 790 071e C3E90001 	 strd r0,[r3]
 791              	.LBB94:
 792              	.LBB95:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 793              	 .loc 2 1759 0 discriminator 1
 794 0722 07F19001 	 add r1,r7,#144
 795 0726 07F53473 	 add r3,r7,#720
 796 072a D3E90023 	 ldrd r2,[r3]
 797 072e C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 798              	 .loc 2 1762 0 discriminator 1
 799 0732 07F19003 	 add r3,r7,#144
 800 0736 1A68     	 ldr r2,[r3]
 801 0738 07F19003 	 add r3,r7,#144
 802 073c 5968     	 ldr r1,[r3,#4]
 803 073e 07F53773 	 add r3,r7,#732
 804 0742 1868     	 ldr r0,[r3]
 805 0744 07F53673 	 add r3,r7,#728
 806 0748 1B68     	 ldr r3,[r3]
 807              	
 808 074a C0FBD321 	 smlaldx r2,r1,r0,r3
 809              	
 810              	 .thumb
 811 074e 07F19003 	 add r3,r7,#144
 812 0752 1A60     	 str r2,[r3]
 813 0754 07F19003 	 add r3,r7,#144
 814 0758 5960     	 str r1,[r3,#4]
 815              	 .loc 2 1767 0 discriminator 1
 816 075a 07F19003 	 add r3,r7,#144
 817 075e D3E90023 	 ldrd r2,[r3]
 818              	.LBE95:
 819              	.LBE94:
 820              	 .loc 1 333 0 discriminator 1
 821 0762 07F58061 	 add r1,r7,#1024
 822 0766 C1E90023 	 strd r2,[r1]
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc1 = __SMLALDX(x3, c0, acc1);
 823              	 .loc 1 336 0 discriminator 1
 824 076a D7F8A023 	 ldr r2,[r7,#928]
 825 076e D7F8A843 	 ldr r4,[r7,#936]
 826 0772 07F57E73 	 add r3,r7,#1016
 827 0776 D3E90001 	 ldrd r0,[r3]
 828 077a 07F53373 	 add r3,r7,#716
 829 077e 1A60     	 str r2,[r3]
 830 0780 07F53273 	 add r3,r7,#712
 831 0784 1C60     	 str r4,[r3]
 832 0786 07F53073 	 add r3,r7,#704
 833 078a C3E90001 	 strd r0,[r3]
 834              	.LBB96:
 835              	.LBB97:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 836              	 .loc 2 1759 0 discriminator 1
 837 078e 07F19801 	 add r1,r7,#152
 838 0792 07F53073 	 add r3,r7,#704
 839 0796 D3E90023 	 ldrd r2,[r3]
 840 079a C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 841              	 .loc 2 1762 0 discriminator 1
 842 079e 07F19803 	 add r3,r7,#152
 843 07a2 1A68     	 ldr r2,[r3]
 844 07a4 07F19803 	 add r3,r7,#152
 845 07a8 5968     	 ldr r1,[r3,#4]
 846 07aa 07F53373 	 add r3,r7,#716
 847 07ae 1868     	 ldr r0,[r3]
 848 07b0 07F53273 	 add r3,r7,#712
 849 07b4 1B68     	 ldr r3,[r3]
 850              	
 851 07b6 C0FBD321 	 smlaldx r2,r1,r0,r3
 852              	
 853              	 .thumb
 854 07ba 07F19803 	 add r3,r7,#152
 855 07be 1A60     	 str r2,[r3]
 856 07c0 07F19803 	 add r3,r7,#152
 857 07c4 5960     	 str r1,[r3,#4]
 858              	 .loc 2 1767 0 discriminator 1
 859 07c6 07F19803 	 add r3,r7,#152
 860 07ca D3E90023 	 ldrd r2,[r3]
 861              	.LBE97:
 862              	.LBE96:
 863              	 .loc 1 336 0 discriminator 1
 864 07ce 07F57E71 	 add r1,r7,#1016
 865 07d2 C1E90023 	 strd r2,[r1]
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read x[4], x[5] */
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         x0 = _SIMD32_OFFSET(px+2);
 866              	 .loc 1 339 0 discriminator 1
 867 07d6 07F5AC73 	 add r3,r7,#344
 868 07da 1B68     	 ldr r3,[r3]
 869 07dc 5B68     	 ldr r3,[r3,#4]
 870 07de C7F8E033 	 str r3,[r7,#992]
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read x[5], x[6] */
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         x1 = _SIMD32_OFFSET(px+3);
 871              	 .loc 1 342 0 discriminator 1
 872 07e2 07F5AC73 	 add r3,r7,#344
 873 07e6 1B68     	 ldr r3,[r3]
 874 07e8 D3F80630 	 ldr r3,[r3,#6]
 875 07ec C7F8DC33 	 str r3,[r7,#988]
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         px += 4u;
 876              	 .loc 1 343 0 discriminator 1
 877 07f0 07F5AC73 	 add r3,r7,#344
 878 07f4 1B68     	 ldr r3,[r3]
 879 07f6 03F10802 	 add r2,r3,#8
 880 07fa 07F5AC73 	 add r3,r7,#344
 881 07fe 1A60     	 str r2,[r3]
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc2 = __SMLALDX(x0, c0, acc2);
 882              	 .loc 1 346 0 discriminator 1
 883 0800 D7F8E023 	 ldr r2,[r7,#992]
 884 0804 D7F8A843 	 ldr r4,[r7,#936]
 885 0808 07F57C73 	 add r3,r7,#1008
 886 080c D3E90001 	 ldrd r0,[r3]
 887 0810 07F52F73 	 add r3,r7,#700
 888 0814 1A60     	 str r2,[r3]
 889 0816 07F52E73 	 add r3,r7,#696
 890 081a 1C60     	 str r4,[r3]
 891 081c 07F52C73 	 add r3,r7,#688
 892 0820 C3E90001 	 strd r0,[r3]
 893              	.LBB98:
 894              	.LBB99:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 895              	 .loc 2 1759 0 discriminator 1
 896 0824 07F1A001 	 add r1,r7,#160
 897 0828 07F52C73 	 add r3,r7,#688
 898 082c D3E90023 	 ldrd r2,[r3]
 899 0830 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 900              	 .loc 2 1762 0 discriminator 1
 901 0834 07F1A003 	 add r3,r7,#160
 902 0838 1A68     	 ldr r2,[r3]
 903 083a 07F1A003 	 add r3,r7,#160
 904 083e 5968     	 ldr r1,[r3,#4]
 905 0840 07F52F73 	 add r3,r7,#700
 906 0844 1868     	 ldr r0,[r3]
 907 0846 07F52E73 	 add r3,r7,#696
 908 084a 1B68     	 ldr r3,[r3]
 909              	
 910 084c C0FBD321 	 smlaldx r2,r1,r0,r3
 911              	
 912              	 .thumb
 913 0850 07F1A003 	 add r3,r7,#160
 914 0854 1A60     	 str r2,[r3]
 915 0856 07F1A003 	 add r3,r7,#160
 916 085a 5960     	 str r1,[r3,#4]
 917              	 .loc 2 1767 0 discriminator 1
 918 085c 07F1A003 	 add r3,r7,#160
 919 0860 D3E90023 	 ldrd r2,[r3]
 920              	.LBE99:
 921              	.LBE98:
 922              	 .loc 1 346 0 discriminator 1
 923 0864 07F57C71 	 add r1,r7,#1008
 924 0868 C1E90023 	 strd r2,[r1]
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc3 = __SMLALDX(x1, c0, acc3);
 925              	 .loc 1 349 0 discriminator 1
 926 086c D7F8DC23 	 ldr r2,[r7,#988]
 927 0870 D7F8A843 	 ldr r4,[r7,#936]
 928 0874 07F57A73 	 add r3,r7,#1000
 929 0878 D3E90001 	 ldrd r0,[r3]
 930 087c 07F52B73 	 add r3,r7,#684
 931 0880 1A60     	 str r2,[r3]
 932 0882 07F52A73 	 add r3,r7,#680
 933 0886 1C60     	 str r4,[r3]
 934 0888 07F52873 	 add r3,r7,#672
 935 088c C3E90001 	 strd r0,[r3]
 936              	.LBB100:
 937              	.LBB101:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 938              	 .loc 2 1759 0 discriminator 1
 939 0890 07F1A801 	 add r1,r7,#168
 940 0894 07F52873 	 add r3,r7,#672
 941 0898 D3E90023 	 ldrd r2,[r3]
 942 089c C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 943              	 .loc 2 1762 0 discriminator 1
 944 08a0 07F1A803 	 add r3,r7,#168
 945 08a4 1A68     	 ldr r2,[r3]
 946 08a6 07F1A803 	 add r3,r7,#168
 947 08aa 5968     	 ldr r1,[r3,#4]
 948 08ac 07F52B73 	 add r3,r7,#684
 949 08b0 1868     	 ldr r0,[r3]
 950 08b2 07F52A73 	 add r3,r7,#680
 951 08b6 1B68     	 ldr r3,[r3]
 952              	
 953 08b8 C0FBD321 	 smlaldx r2,r1,r0,r3
 954              	
 955              	 .thumb
 956 08bc 07F1A803 	 add r3,r7,#168
 957 08c0 1A60     	 str r2,[r3]
 958 08c2 07F1A803 	 add r3,r7,#168
 959 08c6 5960     	 str r1,[r3,#4]
 960              	 .loc 2 1767 0 discriminator 1
 961 08c8 07F1A803 	 add r3,r7,#168
 962 08cc D3E90023 	 ldrd r2,[r3]
 963              	.LBE101:
 964              	.LBE100:
 965              	 .loc 1 349 0 discriminator 1
 966 08d0 07F57A71 	 add r1,r7,#1000
 967 08d4 C1E90023 	 strd r2,[r1]
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       } while (--k);
 968              	 .loc 1 351 0 discriminator 1
 969 08d8 D7F8CC33 	 ldr r3,[r7,#972]
 970 08dc 013B     	 subs r3,r3,#1
 971 08de C7F8CC33 	 str r3,[r7,#972]
 972 08e2 D7F8CC33 	 ldr r3,[r7,#972]
 973 08e6 002B     	 cmp r3,#0
 974 08e8 7FF416AE 	 bne .L29
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* For the next MAC operations, SIMD is not used
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****        * So, the 16 bit pointer if inputB, py is updated */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****        ** No loop unrolling is used. */
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k = srcBLen % 0x4u;
 975              	 .loc 1 358 0
 976 08ec 07F14003 	 add r3,r7,#64
 977 08f0 1B68     	 ldr r3,[r3]
 978 08f2 03F00303 	 and r3,r3,#3
 979 08f6 C7F8CC33 	 str r3,[r7,#972]
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       if (k == 1u)
 980              	 .loc 1 360 0
 981 08fa D7F8CC33 	 ldr r3,[r7,#972]
 982 08fe 012B     	 cmp r3,#1
 983 0900 40F0F280 	 bne .L30
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read y[srcBLen - 5] */
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         c0 = *(py+1);
 984              	 .loc 1 363 0
 985 0904 07F5AA73 	 add r3,r7,#340
 986 0908 1B68     	 ldr r3,[r3]
 987 090a 0233     	 adds r3,r3,#2
 988 090c 1B88     	 ldrh r3,[r3]
 989 090e 1BB2     	 sxth r3,r3
 990 0910 C7F8A833 	 str r3,[r7,#936]
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         c0 = c0 << 16u;
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #else
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         c0 = c0 & 0x0000FFFF;
 991              	 .loc 1 371 0
 992 0914 D7F8A833 	 ldr r3,[r7,#936]
 993 0918 9BB2     	 uxth r3,r3
 994 091a C7F8A833 	 str r3,[r7,#936]
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read x[7] */
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         x3 = *__SIMD32(px);
 995              	 .loc 1 375 0
 996 091e 07F5AC73 	 add r3,r7,#344
 997 0922 1B68     	 ldr r3,[r3]
 998 0924 1B68     	 ldr r3,[r3]
 999 0926 C7F8A033 	 str r3,[r7,#928]
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         px++;
 1000              	 .loc 1 376 0
 1001 092a 07F5AC73 	 add r3,r7,#344
 1002 092e 1B68     	 ldr r3,[r3]
 1003 0930 9A1C     	 adds r2,r3,#2
 1004 0932 07F5AC73 	 add r3,r7,#344
 1005 0936 1A60     	 str r2,[r3]
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Perform the multiply-accumulates */
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc0 = __SMLALD(x0, c0, acc0);
 1006              	 .loc 1 379 0
 1007 0938 D7F8E023 	 ldr r2,[r7,#992]
 1008 093c D7F8A843 	 ldr r4,[r7,#936]
 1009 0940 07F58063 	 add r3,r7,#1024
 1010 0944 D3E90001 	 ldrd r0,[r3]
 1011 0948 07F52773 	 add r3,r7,#668
 1012 094c 1A60     	 str r2,[r3]
 1013 094e 07F52673 	 add r3,r7,#664
 1014 0952 1C60     	 str r4,[r3]
 1015 0954 07F52473 	 add r3,r7,#656
 1016 0958 C3E90001 	 strd r0,[r3]
 1017              	.LBB102:
 1018              	.LBB103:
1742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1019              	 .loc 2 1742 0
 1020 095c 07F1B001 	 add r1,r7,#176
 1021 0960 07F52473 	 add r3,r7,#656
 1022 0964 D3E90023 	 ldrd r2,[r3]
 1023 0968 C1E90023 	 strd r2,[r1]
1745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1024              	 .loc 2 1745 0
 1025 096c 07F1B003 	 add r3,r7,#176
 1026 0970 1A68     	 ldr r2,[r3]
 1027 0972 07F1B003 	 add r3,r7,#176
 1028 0976 5968     	 ldr r1,[r3,#4]
 1029 0978 07F52773 	 add r3,r7,#668
 1030 097c 1868     	 ldr r0,[r3]
 1031 097e 07F52673 	 add r3,r7,#664
 1032 0982 1B68     	 ldr r3,[r3]
 1033              	
 1034 0984 C0FBC321 	 smlald r2,r1,r0,r3
 1035              	
 1036              	 .thumb
 1037 0988 07F1B003 	 add r3,r7,#176
 1038 098c 1A60     	 str r2,[r3]
 1039 098e 07F1B003 	 add r3,r7,#176
 1040 0992 5960     	 str r1,[r3,#4]
1750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1041              	 .loc 2 1750 0
 1042 0994 07F1B003 	 add r3,r7,#176
 1043 0998 D3E90023 	 ldrd r2,[r3]
 1044              	.LBE103:
 1045              	.LBE102:
 1046              	 .loc 1 379 0
 1047 099c 07F58061 	 add r1,r7,#1024
 1048 09a0 C1E90023 	 strd r2,[r1]
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc1 = __SMLALD(x1, c0, acc1);
 1049              	 .loc 1 380 0
 1050 09a4 D7F8DC23 	 ldr r2,[r7,#988]
 1051 09a8 D7F8A843 	 ldr r4,[r7,#936]
 1052 09ac 07F57E73 	 add r3,r7,#1016
 1053 09b0 D3E90001 	 ldrd r0,[r3]
 1054 09b4 07F52373 	 add r3,r7,#652
 1055 09b8 1A60     	 str r2,[r3]
 1056 09ba 07F52273 	 add r3,r7,#648
 1057 09be 1C60     	 str r4,[r3]
 1058 09c0 07F52073 	 add r3,r7,#640
 1059 09c4 C3E90001 	 strd r0,[r3]
 1060              	.LBB104:
 1061              	.LBB105:
1742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1062              	 .loc 2 1742 0
 1063 09c8 07F1B801 	 add r1,r7,#184
 1064 09cc 07F52073 	 add r3,r7,#640
 1065 09d0 D3E90023 	 ldrd r2,[r3]
 1066 09d4 C1E90023 	 strd r2,[r1]
1745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1067              	 .loc 2 1745 0
 1068 09d8 07F1B803 	 add r3,r7,#184
 1069 09dc 1A68     	 ldr r2,[r3]
 1070 09de 07F1B803 	 add r3,r7,#184
 1071 09e2 5968     	 ldr r1,[r3,#4]
 1072 09e4 07F52373 	 add r3,r7,#652
 1073 09e8 1868     	 ldr r0,[r3]
 1074 09ea 07F52273 	 add r3,r7,#648
 1075 09ee 1B68     	 ldr r3,[r3]
 1076              	
 1077 09f0 C0FBC321 	 smlald r2,r1,r0,r3
 1078              	
 1079              	 .thumb
 1080 09f4 07F1B803 	 add r3,r7,#184
 1081 09f8 1A60     	 str r2,[r3]
 1082 09fa 07F1B803 	 add r3,r7,#184
 1083 09fe 5960     	 str r1,[r3,#4]
1750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1084              	 .loc 2 1750 0
 1085 0a00 07F1B803 	 add r3,r7,#184
 1086 0a04 D3E90023 	 ldrd r2,[r3]
 1087              	.LBE105:
 1088              	.LBE104:
 1089              	 .loc 1 380 0
 1090 0a08 07F57E71 	 add r1,r7,#1016
 1091 0a0c C1E90023 	 strd r2,[r1]
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc2 = __SMLALDX(x1, c0, acc2);
 1092              	 .loc 1 381 0
 1093 0a10 D7F8DC23 	 ldr r2,[r7,#988]
 1094 0a14 D7F8A843 	 ldr r4,[r7,#936]
 1095 0a18 07F57C73 	 add r3,r7,#1008
 1096 0a1c D3E90001 	 ldrd r0,[r3]
 1097 0a20 07F51F73 	 add r3,r7,#636
 1098 0a24 1A60     	 str r2,[r3]
 1099 0a26 07F51E73 	 add r3,r7,#632
 1100 0a2a 1C60     	 str r4,[r3]
 1101 0a2c 07F51C73 	 add r3,r7,#624
 1102 0a30 C3E90001 	 strd r0,[r3]
 1103              	.LBB106:
 1104              	.LBB107:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1105              	 .loc 2 1759 0
 1106 0a34 07F1C001 	 add r1,r7,#192
 1107 0a38 07F51C73 	 add r3,r7,#624
 1108 0a3c D3E90023 	 ldrd r2,[r3]
 1109 0a40 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1110              	 .loc 2 1762 0
 1111 0a44 07F1C003 	 add r3,r7,#192
 1112 0a48 1A68     	 ldr r2,[r3]
 1113 0a4a 07F1C003 	 add r3,r7,#192
 1114 0a4e 5968     	 ldr r1,[r3,#4]
 1115 0a50 07F51F73 	 add r3,r7,#636
 1116 0a54 1868     	 ldr r0,[r3]
 1117 0a56 07F51E73 	 add r3,r7,#632
 1118 0a5a 1B68     	 ldr r3,[r3]
 1119              	
 1120 0a5c C0FBD321 	 smlaldx r2,r1,r0,r3
 1121              	
 1122              	 .thumb
 1123 0a60 07F1C003 	 add r3,r7,#192
 1124 0a64 1A60     	 str r2,[r3]
 1125 0a66 07F1C003 	 add r3,r7,#192
 1126 0a6a 5960     	 str r1,[r3,#4]
 1127              	 .loc 2 1767 0
 1128 0a6c 07F1C003 	 add r3,r7,#192
 1129 0a70 D3E90023 	 ldrd r2,[r3]
 1130              	.LBE107:
 1131              	.LBE106:
 1132              	 .loc 1 381 0
 1133 0a74 07F57C71 	 add r1,r7,#1008
 1134 0a78 C1E90023 	 strd r2,[r1]
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc3 = __SMLALDX(x3, c0, acc3);
 1135              	 .loc 1 382 0
 1136 0a7c D7F8A023 	 ldr r2,[r7,#928]
 1137 0a80 D7F8A843 	 ldr r4,[r7,#936]
 1138 0a84 07F57A73 	 add r3,r7,#1000
 1139 0a88 D3E90001 	 ldrd r0,[r3]
 1140 0a8c 07F51B73 	 add r3,r7,#620
 1141 0a90 1A60     	 str r2,[r3]
 1142 0a92 07F51A73 	 add r3,r7,#616
 1143 0a96 1C60     	 str r4,[r3]
 1144 0a98 07F51873 	 add r3,r7,#608
 1145 0a9c C3E90001 	 strd r0,[r3]
 1146              	.LBB108:
 1147              	.LBB109:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1148              	 .loc 2 1759 0
 1149 0aa0 07F1C801 	 add r1,r7,#200
 1150 0aa4 07F51873 	 add r3,r7,#608
 1151 0aa8 D3E90023 	 ldrd r2,[r3]
 1152 0aac C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1153              	 .loc 2 1762 0
 1154 0ab0 07F1C803 	 add r3,r7,#200
 1155 0ab4 1A68     	 ldr r2,[r3]
 1156 0ab6 07F1C803 	 add r3,r7,#200
 1157 0aba 5968     	 ldr r1,[r3,#4]
 1158 0abc 07F51B73 	 add r3,r7,#620
 1159 0ac0 1868     	 ldr r0,[r3]
 1160 0ac2 07F51A73 	 add r3,r7,#616
 1161 0ac6 1B68     	 ldr r3,[r3]
 1162              	
 1163 0ac8 C0FBD321 	 smlaldx r2,r1,r0,r3
 1164              	
 1165              	 .thumb
 1166 0acc 07F1C803 	 add r3,r7,#200
 1167 0ad0 1A60     	 str r2,[r3]
 1168 0ad2 07F1C803 	 add r3,r7,#200
 1169 0ad6 5960     	 str r1,[r3,#4]
 1170              	 .loc 2 1767 0
 1171 0ad8 07F1C803 	 add r3,r7,#200
 1172 0adc D3E90023 	 ldrd r2,[r3]
 1173              	.LBE109:
 1174              	.LBE108:
 1175              	 .loc 1 382 0
 1176 0ae0 07F57A71 	 add r1,r7,#1000
 1177 0ae4 C1E90023 	 strd r2,[r1]
 1178              	.L30:
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       }
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       if (k == 2u)
 1179              	 .loc 1 385 0
 1180 0ae8 D7F8CC33 	 ldr r3,[r7,#972]
 1181 0aec 022B     	 cmp r3,#2
 1182 0aee 40F0F280 	 bne .L35
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         c0 = _SIMD32_OFFSET(py);
 1183              	 .loc 1 388 0
 1184 0af2 07F5AA73 	 add r3,r7,#340
 1185 0af6 1B68     	 ldr r3,[r3]
 1186 0af8 1B68     	 ldr r3,[r3]
 1187 0afa C7F8A833 	 str r3,[r7,#936]
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read x[7], x[8] */
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         x3 = *__SIMD32(px);
 1188              	 .loc 1 391 0
 1189 0afe 07F5AC73 	 add r3,r7,#344
 1190 0b02 1B68     	 ldr r3,[r3]
 1191 0b04 1B68     	 ldr r3,[r3]
 1192 0b06 C7F8A033 	 str r3,[r7,#928]
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read x[9] */
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         x2 = _SIMD32_OFFSET(px+1);
 1193              	 .loc 1 394 0
 1194 0b0a 07F5AC73 	 add r3,r7,#344
 1195 0b0e 1B68     	 ldr r3,[r3]
 1196 0b10 D3F80230 	 ldr r3,[r3,#2]
 1197 0b14 C7F8A433 	 str r3,[r7,#932]
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         px += 2u;
 1198              	 .loc 1 395 0
 1199 0b18 07F5AC73 	 add r3,r7,#344
 1200 0b1c 1B68     	 ldr r3,[r3]
 1201 0b1e 1A1D     	 adds r2,r3,#4
 1202 0b20 07F5AC73 	 add r3,r7,#344
 1203 0b24 1A60     	 str r2,[r3]
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Perform the multiply-accumulates */
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc0 = __SMLALDX(x0, c0, acc0);
 1204              	 .loc 1 398 0
 1205 0b26 D7F8E023 	 ldr r2,[r7,#992]
 1206 0b2a D7F8A843 	 ldr r4,[r7,#936]
 1207 0b2e 07F58063 	 add r3,r7,#1024
 1208 0b32 D3E90001 	 ldrd r0,[r3]
 1209 0b36 07F51773 	 add r3,r7,#604
 1210 0b3a 1A60     	 str r2,[r3]
 1211 0b3c 07F51673 	 add r3,r7,#600
 1212 0b40 1C60     	 str r4,[r3]
 1213 0b42 07F51473 	 add r3,r7,#592
 1214 0b46 C3E90001 	 strd r0,[r3]
 1215              	.LBB110:
 1216              	.LBB111:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1217              	 .loc 2 1759 0
 1218 0b4a 07F1D001 	 add r1,r7,#208
 1219 0b4e 07F51473 	 add r3,r7,#592
 1220 0b52 D3E90023 	 ldrd r2,[r3]
 1221 0b56 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1222              	 .loc 2 1762 0
 1223 0b5a 07F1D003 	 add r3,r7,#208
 1224 0b5e 1A68     	 ldr r2,[r3]
 1225 0b60 07F1D003 	 add r3,r7,#208
 1226 0b64 5968     	 ldr r1,[r3,#4]
 1227 0b66 07F51773 	 add r3,r7,#604
 1228 0b6a 1868     	 ldr r0,[r3]
 1229 0b6c 07F51673 	 add r3,r7,#600
 1230 0b70 1B68     	 ldr r3,[r3]
 1231              	
 1232 0b72 C0FBD321 	 smlaldx r2,r1,r0,r3
 1233              	
 1234              	 .thumb
 1235 0b76 07F1D003 	 add r3,r7,#208
 1236 0b7a 1A60     	 str r2,[r3]
 1237 0b7c 07F1D003 	 add r3,r7,#208
 1238 0b80 5960     	 str r1,[r3,#4]
 1239              	 .loc 2 1767 0
 1240 0b82 07F1D003 	 add r3,r7,#208
 1241 0b86 D3E90023 	 ldrd r2,[r3]
 1242              	.LBE111:
 1243              	.LBE110:
 1244              	 .loc 1 398 0
 1245 0b8a 07F58061 	 add r1,r7,#1024
 1246 0b8e C1E90023 	 strd r2,[r1]
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc1 = __SMLALDX(x1, c0, acc1);
 1247              	 .loc 1 399 0
 1248 0b92 D7F8DC23 	 ldr r2,[r7,#988]
 1249 0b96 D7F8A843 	 ldr r4,[r7,#936]
 1250 0b9a 07F57E73 	 add r3,r7,#1016
 1251 0b9e D3E90001 	 ldrd r0,[r3]
 1252 0ba2 07F51373 	 add r3,r7,#588
 1253 0ba6 1A60     	 str r2,[r3]
 1254 0ba8 07F51273 	 add r3,r7,#584
 1255 0bac 1C60     	 str r4,[r3]
 1256 0bae 07F51073 	 add r3,r7,#576
 1257 0bb2 C3E90001 	 strd r0,[r3]
 1258              	.LBB112:
 1259              	.LBB113:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1260              	 .loc 2 1759 0
 1261 0bb6 07F1D801 	 add r1,r7,#216
 1262 0bba 07F51073 	 add r3,r7,#576
 1263 0bbe D3E90023 	 ldrd r2,[r3]
 1264 0bc2 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1265              	 .loc 2 1762 0
 1266 0bc6 07F1D803 	 add r3,r7,#216
 1267 0bca 1A68     	 ldr r2,[r3]
 1268 0bcc 07F1D803 	 add r3,r7,#216
 1269 0bd0 5968     	 ldr r1,[r3,#4]
 1270 0bd2 07F51373 	 add r3,r7,#588
 1271 0bd6 1868     	 ldr r0,[r3]
 1272 0bd8 07F51273 	 add r3,r7,#584
 1273 0bdc 1B68     	 ldr r3,[r3]
 1274              	
 1275 0bde C0FBD321 	 smlaldx r2,r1,r0,r3
 1276              	
 1277              	 .thumb
 1278 0be2 07F1D803 	 add r3,r7,#216
 1279 0be6 1A60     	 str r2,[r3]
 1280 0be8 07F1D803 	 add r3,r7,#216
 1281 0bec 5960     	 str r1,[r3,#4]
 1282              	 .loc 2 1767 0
 1283 0bee 07F1D803 	 add r3,r7,#216
 1284 0bf2 D3E90023 	 ldrd r2,[r3]
 1285              	.LBE113:
 1286              	.LBE112:
 1287              	 .loc 1 399 0
 1288 0bf6 07F57E71 	 add r1,r7,#1016
 1289 0bfa C1E90023 	 strd r2,[r1]
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc2 = __SMLALDX(x3, c0, acc2);
 1290              	 .loc 1 400 0
 1291 0bfe D7F8A023 	 ldr r2,[r7,#928]
 1292 0c02 D7F8A843 	 ldr r4,[r7,#936]
 1293 0c06 07F57C73 	 add r3,r7,#1008
 1294 0c0a D3E90001 	 ldrd r0,[r3]
 1295 0c0e 07F50F73 	 add r3,r7,#572
 1296 0c12 1A60     	 str r2,[r3]
 1297 0c14 07F50E73 	 add r3,r7,#568
 1298 0c18 1C60     	 str r4,[r3]
 1299 0c1a 07F50C73 	 add r3,r7,#560
 1300 0c1e C3E90001 	 strd r0,[r3]
 1301              	.LBB114:
 1302              	.LBB115:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1303              	 .loc 2 1759 0
 1304 0c22 07F1E001 	 add r1,r7,#224
 1305 0c26 07F50C73 	 add r3,r7,#560
 1306 0c2a D3E90023 	 ldrd r2,[r3]
 1307 0c2e C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1308              	 .loc 2 1762 0
 1309 0c32 07F1E003 	 add r3,r7,#224
 1310 0c36 1A68     	 ldr r2,[r3]
 1311 0c38 07F1E003 	 add r3,r7,#224
 1312 0c3c 5968     	 ldr r1,[r3,#4]
 1313 0c3e 07F50F73 	 add r3,r7,#572
 1314 0c42 1868     	 ldr r0,[r3]
 1315 0c44 07F50E73 	 add r3,r7,#568
 1316 0c48 1B68     	 ldr r3,[r3]
 1317              	
 1318 0c4a C0FBD321 	 smlaldx r2,r1,r0,r3
 1319              	
 1320              	 .thumb
 1321 0c4e 07F1E003 	 add r3,r7,#224
 1322 0c52 1A60     	 str r2,[r3]
 1323 0c54 07F1E003 	 add r3,r7,#224
 1324 0c58 5960     	 str r1,[r3,#4]
 1325              	 .loc 2 1767 0
 1326 0c5a 07F1E003 	 add r3,r7,#224
 1327 0c5e D3E90023 	 ldrd r2,[r3]
 1328              	.LBE115:
 1329              	.LBE114:
 1330              	 .loc 1 400 0
 1331 0c62 07F57C71 	 add r1,r7,#1008
 1332 0c66 C1E90023 	 strd r2,[r1]
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc3 = __SMLALDX(x2, c0, acc3);
 1333              	 .loc 1 401 0
 1334 0c6a D7F8A423 	 ldr r2,[r7,#932]
 1335 0c6e D7F8A843 	 ldr r4,[r7,#936]
 1336 0c72 07F57A73 	 add r3,r7,#1000
 1337 0c76 D3E90001 	 ldrd r0,[r3]
 1338 0c7a 07F50B73 	 add r3,r7,#556
 1339 0c7e 1A60     	 str r2,[r3]
 1340 0c80 07F50A73 	 add r3,r7,#552
 1341 0c84 1C60     	 str r4,[r3]
 1342 0c86 07F50873 	 add r3,r7,#544
 1343 0c8a C3E90001 	 strd r0,[r3]
 1344              	.LBB116:
 1345              	.LBB117:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1346              	 .loc 2 1759 0
 1347 0c8e 07F1E801 	 add r1,r7,#232
 1348 0c92 07F50873 	 add r3,r7,#544
 1349 0c96 D3E90023 	 ldrd r2,[r3]
 1350 0c9a C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1351              	 .loc 2 1762 0
 1352 0c9e 07F1E803 	 add r3,r7,#232
 1353 0ca2 1A68     	 ldr r2,[r3]
 1354 0ca4 07F1E803 	 add r3,r7,#232
 1355 0ca8 5968     	 ldr r1,[r3,#4]
 1356 0caa 07F50B73 	 add r3,r7,#556
 1357 0cae 1868     	 ldr r0,[r3]
 1358 0cb0 07F50A73 	 add r3,r7,#552
 1359 0cb4 1B68     	 ldr r3,[r3]
 1360              	
 1361 0cb6 C0FBD321 	 smlaldx r2,r1,r0,r3
 1362              	
 1363              	 .thumb
 1364 0cba 07F1E803 	 add r3,r7,#232
 1365 0cbe 1A60     	 str r2,[r3]
 1366 0cc0 07F1E803 	 add r3,r7,#232
 1367 0cc4 5960     	 str r1,[r3,#4]
 1368              	 .loc 2 1767 0
 1369 0cc6 07F1E803 	 add r3,r7,#232
 1370 0cca D3E90023 	 ldrd r2,[r3]
 1371              	.LBE117:
 1372              	.LBE116:
 1373              	 .loc 1 401 0
 1374 0cce 07F57A71 	 add r1,r7,#1000
 1375 0cd2 C1E90023 	 strd r2,[r1]
 1376              	.L35:
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       }
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       if (k == 3u)
 1377              	 .loc 1 404 0
 1378 0cd6 D7F8CC33 	 ldr r3,[r7,#972]
 1379 0cda 032B     	 cmp r3,#3
 1380 0cdc 40F0DD81 	 bne .L40
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         c0 = _SIMD32_OFFSET(py);
 1381              	 .loc 1 407 0
 1382 0ce0 07F5AA73 	 add r3,r7,#340
 1383 0ce4 1B68     	 ldr r3,[r3]
 1384 0ce6 1B68     	 ldr r3,[r3]
 1385 0ce8 C7F8A833 	 str r3,[r7,#936]
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read x[7], x[8] */
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         x3 = *__SIMD32(px);
 1386              	 .loc 1 410 0
 1387 0cec 07F5AC73 	 add r3,r7,#344
 1388 0cf0 1B68     	 ldr r3,[r3]
 1389 0cf2 1B68     	 ldr r3,[r3]
 1390 0cf4 C7F8A033 	 str r3,[r7,#928]
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read x[9] */
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         x2 = _SIMD32_OFFSET(px+1);
 1391              	 .loc 1 413 0
 1392 0cf8 07F5AC73 	 add r3,r7,#344
 1393 0cfc 1B68     	 ldr r3,[r3]
 1394 0cfe D3F80230 	 ldr r3,[r3,#2]
 1395 0d02 C7F8A433 	 str r3,[r7,#932]
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Perform the multiply-accumulates */
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc0 = __SMLALDX(x0, c0, acc0);
 1396              	 .loc 1 416 0
 1397 0d06 D7F8E023 	 ldr r2,[r7,#992]
 1398 0d0a D7F8A843 	 ldr r4,[r7,#936]
 1399 0d0e 07F58063 	 add r3,r7,#1024
 1400 0d12 D3E90001 	 ldrd r0,[r3]
 1401 0d16 07F50773 	 add r3,r7,#540
 1402 0d1a 1A60     	 str r2,[r3]
 1403 0d1c 07F50673 	 add r3,r7,#536
 1404 0d20 1C60     	 str r4,[r3]
 1405 0d22 07F50473 	 add r3,r7,#528
 1406 0d26 C3E90001 	 strd r0,[r3]
 1407              	.LBB118:
 1408              	.LBB119:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1409              	 .loc 2 1759 0
 1410 0d2a 07F1F001 	 add r1,r7,#240
 1411 0d2e 07F50473 	 add r3,r7,#528
 1412 0d32 D3E90023 	 ldrd r2,[r3]
 1413 0d36 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1414              	 .loc 2 1762 0
 1415 0d3a 07F1F003 	 add r3,r7,#240
 1416 0d3e 1A68     	 ldr r2,[r3]
 1417 0d40 07F1F003 	 add r3,r7,#240
 1418 0d44 5968     	 ldr r1,[r3,#4]
 1419 0d46 07F50773 	 add r3,r7,#540
 1420 0d4a 1868     	 ldr r0,[r3]
 1421 0d4c 07F50673 	 add r3,r7,#536
 1422 0d50 1B68     	 ldr r3,[r3]
 1423              	
 1424 0d52 C0FBD321 	 smlaldx r2,r1,r0,r3
 1425              	
 1426              	 .thumb
 1427 0d56 07F1F003 	 add r3,r7,#240
 1428 0d5a 1A60     	 str r2,[r3]
 1429 0d5c 07F1F003 	 add r3,r7,#240
 1430 0d60 5960     	 str r1,[r3,#4]
 1431              	 .loc 2 1767 0
 1432 0d62 07F1F003 	 add r3,r7,#240
 1433 0d66 D3E90023 	 ldrd r2,[r3]
 1434              	.LBE119:
 1435              	.LBE118:
 1436              	 .loc 1 416 0
 1437 0d6a 07F58061 	 add r1,r7,#1024
 1438 0d6e C1E90023 	 strd r2,[r1]
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc1 = __SMLALDX(x1, c0, acc1);
 1439              	 .loc 1 417 0
 1440 0d72 D7F8DC23 	 ldr r2,[r7,#988]
 1441 0d76 D7F8A843 	 ldr r4,[r7,#936]
 1442 0d7a 07F57E73 	 add r3,r7,#1016
 1443 0d7e D3E90001 	 ldrd r0,[r3]
 1444 0d82 07F50373 	 add r3,r7,#524
 1445 0d86 1A60     	 str r2,[r3]
 1446 0d88 07F50273 	 add r3,r7,#520
 1447 0d8c 1C60     	 str r4,[r3]
 1448 0d8e 07F50073 	 add r3,r7,#512
 1449 0d92 C3E90001 	 strd r0,[r3]
 1450              	.LBB120:
 1451              	.LBB121:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1452              	 .loc 2 1759 0
 1453 0d96 07F1F801 	 add r1,r7,#248
 1454 0d9a 07F50073 	 add r3,r7,#512
 1455 0d9e D3E90023 	 ldrd r2,[r3]
 1456 0da2 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1457              	 .loc 2 1762 0
 1458 0da6 07F1F803 	 add r3,r7,#248
 1459 0daa 1A68     	 ldr r2,[r3]
 1460 0dac 07F1F803 	 add r3,r7,#248
 1461 0db0 5968     	 ldr r1,[r3,#4]
 1462 0db2 07F50373 	 add r3,r7,#524
 1463 0db6 1868     	 ldr r0,[r3]
 1464 0db8 07F50273 	 add r3,r7,#520
 1465 0dbc 1B68     	 ldr r3,[r3]
 1466              	
 1467 0dbe C0FBD321 	 smlaldx r2,r1,r0,r3
 1468              	
 1469              	 .thumb
 1470 0dc2 07F1F803 	 add r3,r7,#248
 1471 0dc6 1A60     	 str r2,[r3]
 1472 0dc8 07F1F803 	 add r3,r7,#248
 1473 0dcc 5960     	 str r1,[r3,#4]
 1474              	 .loc 2 1767 0
 1475 0dce 07F1F803 	 add r3,r7,#248
 1476 0dd2 D3E90023 	 ldrd r2,[r3]
 1477              	.LBE121:
 1478              	.LBE120:
 1479              	 .loc 1 417 0
 1480 0dd6 07F57E71 	 add r1,r7,#1016
 1481 0dda C1E90023 	 strd r2,[r1]
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc2 = __SMLALDX(x3, c0, acc2);
 1482              	 .loc 1 418 0
 1483 0dde D7F8A023 	 ldr r2,[r7,#928]
 1484 0de2 D7F8A843 	 ldr r4,[r7,#936]
 1485 0de6 07F57C73 	 add r3,r7,#1008
 1486 0dea D3E90001 	 ldrd r0,[r3]
 1487 0dee 07F5FE73 	 add r3,r7,#508
 1488 0df2 1A60     	 str r2,[r3]
 1489 0df4 07F5FC73 	 add r3,r7,#504
 1490 0df8 1C60     	 str r4,[r3]
 1491 0dfa 07F5F873 	 add r3,r7,#496
 1492 0dfe C3E90001 	 strd r0,[r3]
 1493              	.LBB122:
 1494              	.LBB123:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1495              	 .loc 2 1759 0
 1496 0e02 07F58071 	 add r1,r7,#256
 1497 0e06 07F5F873 	 add r3,r7,#496
 1498 0e0a D3E90023 	 ldrd r2,[r3]
 1499 0e0e C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1500              	 .loc 2 1762 0
 1501 0e12 07F58073 	 add r3,r7,#256
 1502 0e16 1A68     	 ldr r2,[r3]
 1503 0e18 07F58073 	 add r3,r7,#256
 1504 0e1c 5968     	 ldr r1,[r3,#4]
 1505 0e1e 07F5FE73 	 add r3,r7,#508
 1506 0e22 1868     	 ldr r0,[r3]
 1507 0e24 07F5FC73 	 add r3,r7,#504
 1508 0e28 1B68     	 ldr r3,[r3]
 1509              	
 1510 0e2a C0FBD321 	 smlaldx r2,r1,r0,r3
 1511              	
 1512              	 .thumb
 1513 0e2e 07F58073 	 add r3,r7,#256
 1514 0e32 1A60     	 str r2,[r3]
 1515 0e34 07F58073 	 add r3,r7,#256
 1516 0e38 5960     	 str r1,[r3,#4]
 1517              	 .loc 2 1767 0
 1518 0e3a 07F58073 	 add r3,r7,#256
 1519 0e3e D3E90023 	 ldrd r2,[r3]
 1520              	.LBE123:
 1521              	.LBE122:
 1522              	 .loc 1 418 0
 1523 0e42 07F57C71 	 add r1,r7,#1008
 1524 0e46 C1E90023 	 strd r2,[r1]
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc3 = __SMLALDX(x2, c0, acc3);
 1525              	 .loc 1 419 0
 1526 0e4a D7F8A423 	 ldr r2,[r7,#932]
 1527 0e4e D7F8A843 	 ldr r4,[r7,#936]
 1528 0e52 07F57A73 	 add r3,r7,#1000
 1529 0e56 D3E90001 	 ldrd r0,[r3]
 1530 0e5a 07F5F673 	 add r3,r7,#492
 1531 0e5e 1A60     	 str r2,[r3]
 1532 0e60 07F5F473 	 add r3,r7,#488
 1533 0e64 1C60     	 str r4,[r3]
 1534 0e66 07F5F073 	 add r3,r7,#480
 1535 0e6a C3E90001 	 strd r0,[r3]
 1536              	.LBB124:
 1537              	.LBB125:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1538              	 .loc 2 1759 0
 1539 0e6e 07F58471 	 add r1,r7,#264
 1540 0e72 07F5F073 	 add r3,r7,#480
 1541 0e76 D3E90023 	 ldrd r2,[r3]
 1542 0e7a C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1543              	 .loc 2 1762 0
 1544 0e7e 07F58473 	 add r3,r7,#264
 1545 0e82 1A68     	 ldr r2,[r3]
 1546 0e84 07F58473 	 add r3,r7,#264
 1547 0e88 5968     	 ldr r1,[r3,#4]
 1548 0e8a 07F5F673 	 add r3,r7,#492
 1549 0e8e 1868     	 ldr r0,[r3]
 1550 0e90 07F5F473 	 add r3,r7,#488
 1551 0e94 1B68     	 ldr r3,[r3]
 1552              	
 1553 0e96 C0FBD321 	 smlaldx r2,r1,r0,r3
 1554              	
 1555              	 .thumb
 1556 0e9a 07F58473 	 add r3,r7,#264
 1557 0e9e 1A60     	 str r2,[r3]
 1558 0ea0 07F58473 	 add r3,r7,#264
 1559 0ea4 5960     	 str r1,[r3,#4]
 1560              	 .loc 2 1767 0
 1561 0ea6 07F58473 	 add r3,r7,#264
 1562 0eaa D3E90023 	 ldrd r2,[r3]
 1563              	.LBE125:
 1564              	.LBE124:
 1565              	 .loc 1 419 0
 1566 0eae 07F57A71 	 add r1,r7,#1000
 1567 0eb2 C1E90023 	 strd r2,[r1]
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         c0 = *(py-1);
 1568              	 .loc 1 421 0
 1569 0eb6 07F5AA73 	 add r3,r7,#340
 1570 0eba 1B68     	 ldr r3,[r3]
 1571 0ebc 023B     	 subs r3,r3,#2
 1572 0ebe 1B88     	 ldrh r3,[r3]
 1573 0ec0 1BB2     	 sxth r3,r3
 1574 0ec2 C7F8A833 	 str r3,[r7,#936]
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         c0 = c0 << 16u;
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #else
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         c0 = c0 & 0x0000FFFF;
 1575              	 .loc 1 428 0
 1576 0ec6 D7F8A833 	 ldr r3,[r7,#936]
 1577 0eca 9BB2     	 uxth r3,r3
 1578 0ecc C7F8A833 	 str r3,[r7,#936]
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Read x[10] */
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         x3 =  _SIMD32_OFFSET(px+2);
 1579              	 .loc 1 431 0
 1580 0ed0 07F5AC73 	 add r3,r7,#344
 1581 0ed4 1B68     	 ldr r3,[r3]
 1582 0ed6 5B68     	 ldr r3,[r3,#4]
 1583 0ed8 C7F8A033 	 str r3,[r7,#928]
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         px += 3u;
 1584              	 .loc 1 432 0
 1585 0edc 07F5AC73 	 add r3,r7,#344
 1586 0ee0 1B68     	 ldr r3,[r3]
 1587 0ee2 9A1D     	 adds r2,r3,#6
 1588 0ee4 07F5AC73 	 add r3,r7,#344
 1589 0ee8 1A60     	 str r2,[r3]
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Perform the multiply-accumulates */
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc0 = __SMLALDX(x1, c0, acc0);
 1590              	 .loc 1 435 0
 1591 0eea D7F8DC23 	 ldr r2,[r7,#988]
 1592 0eee D7F8A843 	 ldr r4,[r7,#936]
 1593 0ef2 07F58063 	 add r3,r7,#1024
 1594 0ef6 D3E90001 	 ldrd r0,[r3]
 1595 0efa 07F5EE73 	 add r3,r7,#476
 1596 0efe 1A60     	 str r2,[r3]
 1597 0f00 07F5EC73 	 add r3,r7,#472
 1598 0f04 1C60     	 str r4,[r3]
 1599 0f06 07F5E873 	 add r3,r7,#464
 1600 0f0a C3E90001 	 strd r0,[r3]
 1601              	.LBB126:
 1602              	.LBB127:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1603              	 .loc 2 1759 0
 1604 0f0e 07F58871 	 add r1,r7,#272
 1605 0f12 07F5E873 	 add r3,r7,#464
 1606 0f16 D3E90023 	 ldrd r2,[r3]
 1607 0f1a C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1608              	 .loc 2 1762 0
 1609 0f1e 07F58873 	 add r3,r7,#272
 1610 0f22 1A68     	 ldr r2,[r3]
 1611 0f24 07F58873 	 add r3,r7,#272
 1612 0f28 5968     	 ldr r1,[r3,#4]
 1613 0f2a 07F5EE73 	 add r3,r7,#476
 1614 0f2e 1868     	 ldr r0,[r3]
 1615 0f30 07F5EC73 	 add r3,r7,#472
 1616 0f34 1B68     	 ldr r3,[r3]
 1617              	
 1618 0f36 C0FBD321 	 smlaldx r2,r1,r0,r3
 1619              	
 1620              	 .thumb
 1621 0f3a 07F58873 	 add r3,r7,#272
 1622 0f3e 1A60     	 str r2,[r3]
 1623 0f40 07F58873 	 add r3,r7,#272
 1624 0f44 5960     	 str r1,[r3,#4]
 1625              	 .loc 2 1767 0
 1626 0f46 07F58873 	 add r3,r7,#272
 1627 0f4a D3E90023 	 ldrd r2,[r3]
 1628              	.LBE127:
 1629              	.LBE126:
 1630              	 .loc 1 435 0
 1631 0f4e 07F58061 	 add r1,r7,#1024
 1632 0f52 C1E90023 	 strd r2,[r1]
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc1 = __SMLALD(x2, c0, acc1);
 1633              	 .loc 1 436 0
 1634 0f56 D7F8A423 	 ldr r2,[r7,#932]
 1635 0f5a D7F8A843 	 ldr r4,[r7,#936]
 1636 0f5e 07F57E73 	 add r3,r7,#1016
 1637 0f62 D3E90001 	 ldrd r0,[r3]
 1638 0f66 07F5E673 	 add r3,r7,#460
 1639 0f6a 1A60     	 str r2,[r3]
 1640 0f6c 07F5E473 	 add r3,r7,#456
 1641 0f70 1C60     	 str r4,[r3]
 1642 0f72 07F5E073 	 add r3,r7,#448
 1643 0f76 C3E90001 	 strd r0,[r3]
 1644              	.LBB128:
 1645              	.LBB129:
1742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1646              	 .loc 2 1742 0
 1647 0f7a 07F58C71 	 add r1,r7,#280
 1648 0f7e 07F5E073 	 add r3,r7,#448
 1649 0f82 D3E90023 	 ldrd r2,[r3]
 1650 0f86 C1E90023 	 strd r2,[r1]
1745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1651              	 .loc 2 1745 0
 1652 0f8a 07F58C73 	 add r3,r7,#280
 1653 0f8e 1A68     	 ldr r2,[r3]
 1654 0f90 07F58C73 	 add r3,r7,#280
 1655 0f94 5968     	 ldr r1,[r3,#4]
 1656 0f96 07F5E673 	 add r3,r7,#460
 1657 0f9a 1868     	 ldr r0,[r3]
 1658 0f9c 07F5E473 	 add r3,r7,#456
 1659 0fa0 1B68     	 ldr r3,[r3]
 1660              	
 1661 0fa2 C0FBC321 	 smlald r2,r1,r0,r3
 1662              	
 1663              	 .thumb
 1664 0fa6 07F58C73 	 add r3,r7,#280
 1665 0faa 1A60     	 str r2,[r3]
 1666 0fac 07F58C73 	 add r3,r7,#280
 1667 0fb0 5960     	 str r1,[r3,#4]
1750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1668              	 .loc 2 1750 0
 1669 0fb2 07F58C73 	 add r3,r7,#280
 1670 0fb6 D3E90023 	 ldrd r2,[r3]
 1671              	.LBE129:
 1672              	.LBE128:
 1673              	 .loc 1 436 0
 1674 0fba 07F57E71 	 add r1,r7,#1016
 1675 0fbe C1E90023 	 strd r2,[r1]
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc2 = __SMLALDX(x2, c0, acc2);
 1676              	 .loc 1 437 0
 1677 0fc2 D7F8A423 	 ldr r2,[r7,#932]
 1678 0fc6 D7F8A843 	 ldr r4,[r7,#936]
 1679 0fca 07F57C73 	 add r3,r7,#1008
 1680 0fce D3E90001 	 ldrd r0,[r3]
 1681 0fd2 07F5DE73 	 add r3,r7,#444
 1682 0fd6 1A60     	 str r2,[r3]
 1683 0fd8 07F5DC73 	 add r3,r7,#440
 1684 0fdc 1C60     	 str r4,[r3]
 1685 0fde 07F5D873 	 add r3,r7,#432
 1686 0fe2 C3E90001 	 strd r0,[r3]
 1687              	.LBB130:
 1688              	.LBB131:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1689              	 .loc 2 1759 0
 1690 0fe6 07F59071 	 add r1,r7,#288
 1691 0fea 07F5D873 	 add r3,r7,#432
 1692 0fee D3E90023 	 ldrd r2,[r3]
 1693 0ff2 C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1694              	 .loc 2 1762 0
 1695 0ff6 07F59073 	 add r3,r7,#288
 1696 0ffa 1A68     	 ldr r2,[r3]
 1697 0ffc 07F59073 	 add r3,r7,#288
 1698 1000 5968     	 ldr r1,[r3,#4]
 1699 1002 07F5DE73 	 add r3,r7,#444
 1700 1006 1868     	 ldr r0,[r3]
 1701 1008 07F5DC73 	 add r3,r7,#440
 1702 100c 1B68     	 ldr r3,[r3]
 1703              	
 1704 100e C0FBD321 	 smlaldx r2,r1,r0,r3
 1705              	
 1706              	 .thumb
 1707 1012 07F59073 	 add r3,r7,#288
 1708 1016 1A60     	 str r2,[r3]
 1709 1018 07F59073 	 add r3,r7,#288
 1710 101c 5960     	 str r1,[r3,#4]
 1711              	 .loc 2 1767 0
 1712 101e 07F59073 	 add r3,r7,#288
 1713 1022 D3E90023 	 ldrd r2,[r3]
 1714              	.LBE131:
 1715              	.LBE130:
 1716              	 .loc 1 437 0
 1717 1026 07F57C71 	 add r1,r7,#1008
 1718 102a C1E90023 	 strd r2,[r1]
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         acc3 = __SMLALDX(x3, c0, acc3);
 1719              	 .loc 1 438 0
 1720 102e D7F8A023 	 ldr r2,[r7,#928]
 1721 1032 D7F8A843 	 ldr r4,[r7,#936]
 1722 1036 07F57A73 	 add r3,r7,#1000
 1723 103a D3E90001 	 ldrd r0,[r3]
 1724 103e 07F5D673 	 add r3,r7,#428
 1725 1042 1A60     	 str r2,[r3]
 1726 1044 07F5D473 	 add r3,r7,#424
 1727 1048 1C60     	 str r4,[r3]
 1728 104a 07F5D073 	 add r3,r7,#416
 1729 104e C3E90001 	 strd r0,[r3]
 1730              	.LBB132:
 1731              	.LBB133:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1732              	 .loc 2 1759 0
 1733 1052 07F59471 	 add r1,r7,#296
 1734 1056 07F5D073 	 add r3,r7,#416
 1735 105a D3E90023 	 ldrd r2,[r3]
 1736 105e C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1737              	 .loc 2 1762 0
 1738 1062 07F59473 	 add r3,r7,#296
 1739 1066 1A68     	 ldr r2,[r3]
 1740 1068 07F59473 	 add r3,r7,#296
 1741 106c 5968     	 ldr r1,[r3,#4]
 1742 106e 07F5D673 	 add r3,r7,#428
 1743 1072 1868     	 ldr r0,[r3]
 1744 1074 07F5D473 	 add r3,r7,#424
 1745 1078 1B68     	 ldr r3,[r3]
 1746              	
 1747 107a C0FBD321 	 smlaldx r2,r1,r0,r3
 1748              	
 1749              	 .thumb
 1750 107e 07F59473 	 add r3,r7,#296
 1751 1082 1A60     	 str r2,[r3]
 1752 1084 07F59473 	 add r3,r7,#296
 1753 1088 5960     	 str r1,[r3,#4]
 1754              	 .loc 2 1767 0
 1755 108a 07F59473 	 add r3,r7,#296
 1756 108e D3E90023 	 ldrd r2,[r3]
 1757              	.LBE133:
 1758              	.LBE132:
 1759              	 .loc 1 438 0
 1760 1092 07F57A71 	 add r1,r7,#1000
 1761 1096 C1E90023 	 strd r2,[r1]
 1762              	.L40:
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       }
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Store the results in the accumulators in the destination buffer. */
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #ifndef  ARM_MATH_BIG_ENDIAN
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       *__SIMD32(pOut)++ =
 1763              	 .loc 1 446 0
 1764 109a 07F5AE72 	 add r2,r7,#348
 1765 109e 1068     	 ldr r0,[r2]
 1766 10a0 031D     	 adds r3,r0,#4
 1767 10a2 1360     	 str r3,[r2]
 1768              	.LBB134:
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16);
 1769              	 .loc 1 447 0
 1770 10a4 07F58063 	 add r3,r7,#1024
 1771 10a8 D3E90023 	 ldrd r2,[r3]
 1772 10ac D10B     	 lsrs r1,r2,#15
 1773 10ae 3963     	 str r1,[r7,#48]
 1774 10b0 396B     	 ldr r1,[r7,#48]
 1775 10b2 41EA4341 	 orr r1,r1,r3,lsl#17
 1776 10b6 3963     	 str r1,[r7,#48]
 1777 10b8 DB13     	 asrs r3,r3,#15
 1778 10ba 7B63     	 str r3,[r7,#52]
 1779 10bc 3B6B     	 ldr r3,[r7,#48]
 1780 10be C7F89C33 	 str r3,[r7,#924]
 1781 10c2 D7F89C33 	 ldr r3,[r7,#924]
 1782              	
 1783 10c6 03F30F03 	 ssat r3,#16,r3
 1784              	
 1785              	 .thumb
 1786 10ca C7F89833 	 str r3,[r7,#920]
 1787 10ce D7F89833 	 ldr r3,[r7,#920]
 1788              	.LBE134:
 1789 10d2 99B2     	 uxth r1,r3
 1790              	.LBB135:
 1791 10d4 07F57E73 	 add r3,r7,#1016
 1792 10d8 D3E90023 	 ldrd r2,[r3]
 1793 10dc D40B     	 lsrs r4,r2,#15
 1794 10de BC62     	 str r4,[r7,#40]
 1795 10e0 BC6A     	 ldr r4,[r7,#40]
 1796 10e2 44EA4344 	 orr r4,r4,r3,lsl#17
 1797 10e6 BC62     	 str r4,[r7,#40]
 1798 10e8 DB13     	 asrs r3,r3,#15
 1799 10ea FB62     	 str r3,[r7,#44]
 1800 10ec BB6A     	 ldr r3,[r7,#40]
 1801 10ee C7F89433 	 str r3,[r7,#916]
 1802 10f2 D7F89433 	 ldr r3,[r7,#916]
 1803              	
 1804 10f6 03F30F03 	 ssat r3,#16,r3
 1805              	
 1806              	 .thumb
 1807 10fa C7F89033 	 str r3,[r7,#912]
 1808 10fe D7F89033 	 ldr r3,[r7,#912]
 1809              	.LBE135:
 1810 1102 1B04     	 lsls r3,r3,#16
 1811 1104 0B43     	 orrs r3,r3,r1
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16);
 1812              	 .loc 1 446 0
 1813 1106 0360     	 str r3,[r0]
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       *__SIMD32(pOut)++ =
 1814              	 .loc 1 448 0
 1815 1108 07F5AE72 	 add r2,r7,#348
 1816 110c 1068     	 ldr r0,[r2]
 1817 110e 031D     	 adds r3,r0,#4
 1818 1110 1360     	 str r3,[r2]
 1819              	.LBB136:
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         __PKHBT(__SSAT((acc2 >> 15), 16), __SSAT((acc3 >> 15), 16), 16);
 1820              	 .loc 1 449 0
 1821 1112 07F57C73 	 add r3,r7,#1008
 1822 1116 D3E90023 	 ldrd r2,[r3]
 1823 111a D10B     	 lsrs r1,r2,#15
 1824 111c 3962     	 str r1,[r7,#32]
 1825 111e 396A     	 ldr r1,[r7,#32]
 1826 1120 41EA4341 	 orr r1,r1,r3,lsl#17
 1827 1124 3962     	 str r1,[r7,#32]
 1828 1126 DB13     	 asrs r3,r3,#15
 1829 1128 7B62     	 str r3,[r7,#36]
 1830 112a 3B6A     	 ldr r3,[r7,#32]
 1831 112c C7F88C33 	 str r3,[r7,#908]
 1832 1130 D7F88C33 	 ldr r3,[r7,#908]
 1833              	
 1834 1134 03F30F03 	 ssat r3,#16,r3
 1835              	
 1836              	 .thumb
 1837 1138 C7F88833 	 str r3,[r7,#904]
 1838 113c D7F88833 	 ldr r3,[r7,#904]
 1839              	.LBE136:
 1840 1140 99B2     	 uxth r1,r3
 1841              	.LBB137:
 1842 1142 07F57A73 	 add r3,r7,#1000
 1843 1146 D3E90023 	 ldrd r2,[r3]
 1844 114a D40B     	 lsrs r4,r2,#15
 1845 114c BC61     	 str r4,[r7,#24]
 1846 114e BC69     	 ldr r4,[r7,#24]
 1847 1150 44EA4344 	 orr r4,r4,r3,lsl#17
 1848 1154 BC61     	 str r4,[r7,#24]
 1849 1156 DB13     	 asrs r3,r3,#15
 1850 1158 FB61     	 str r3,[r7,#28]
 1851 115a BB69     	 ldr r3,[r7,#24]
 1852 115c C7F88433 	 str r3,[r7,#900]
 1853 1160 D7F88433 	 ldr r3,[r7,#900]
 1854              	
 1855 1164 03F30F03 	 ssat r3,#16,r3
 1856              	
 1857              	 .thumb
 1858 1168 C7F88033 	 str r3,[r7,#896]
 1859 116c D7F88033 	 ldr r3,[r7,#896]
 1860              	.LBE137:
 1861 1170 1B04     	 lsls r3,r3,#16
 1862 1172 0B43     	 orrs r3,r3,r1
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       *__SIMD32(pOut)++ =
 1863              	 .loc 1 448 0
 1864 1174 0360     	 str r3,[r0]
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #else
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       *__SIMD32(pOut)++ =
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         __PKHBT(__SSAT((acc1 >> 15), 16), __SSAT((acc0 >> 15), 16), 16);
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       *__SIMD32(pOut)++ =
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         __PKHBT(__SSAT((acc3 >> 15), 16), __SSAT((acc2 >> 15), 16), 16);
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #endif /*      #ifndef  ARM_MATH_BIG_ENDIAN    */
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Increment the pointer pIn1 index, count by 4 */
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       count += 4u;
 1865              	 .loc 1 461 0
 1866 1176 D7F8C833 	 ldr r3,[r7,#968]
 1867 117a 0433     	 adds r3,r3,#4
 1868 117c C7F8C833 	 str r3,[r7,#968]
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       px = pIn1 + count;
 1869              	 .loc 1 464 0
 1870 1180 D7F8C833 	 ldr r3,[r7,#968]
 1871 1184 5A00     	 lsls r2,r3,#1
 1872 1186 D7F81434 	 ldr r3,[r7,#1044]
 1873 118a 1A44     	 add r2,r2,r3
 1874 118c 07F5AC73 	 add r3,r7,#344
 1875 1190 1A60     	 str r2,[r3]
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       py = pSrc2;
 1876              	 .loc 1 465 0
 1877 1192 07F5AA72 	 add r2,r7,#340
 1878 1196 D7F8AC33 	 ldr r3,[r7,#940]
 1879 119a 1360     	 str r3,[r2]
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****        /* Decrement the loop counter */
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       blkCnt--;
 1880              	 .loc 1 468 0
 1881 119c D7F8C433 	 ldr r3,[r7,#964]
 1882 11a0 013B     	 subs r3,r3,#1
 1883 11a2 C7F8C433 	 str r3,[r7,#964]
 1884              	.L20:
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 1885              	 .loc 1 282 0
 1886 11a6 D7F8C433 	 ldr r3,[r7,#964]
 1887 11aa 002B     	 cmp r3,#0
 1888 11ac 7FF473A9 	 bne .L49
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     }
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      ** No loop unrolling is used. */
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     blkCnt = blockSize2 % 0x4u;
 1889              	 .loc 1 473 0
 1890 11b0 D7F8C033 	 ldr r3,[r7,#960]
 1891 11b4 03F00303 	 and r3,r3,#3
 1892 11b8 C7F8C433 	 str r3,[r7,#964]
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     while (blkCnt > 0u)
 1893              	 .loc 1 475 0
 1894 11bc 0BE1     	 b .L50
 1895              	.L55:
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Accumulator is made zero for every iteration */
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       sum = 0;
 1896              	 .loc 1 478 0
 1897 11be 4FF00002 	 mov r2,#0
 1898 11c2 4FF00003 	 mov r3,#0
 1899 11c6 07F58161 	 add r1,r7,#1032
 1900 11ca C1E90023 	 strd r2,[r1]
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k = srcBLen >> 2u;
 1901              	 .loc 1 481 0
 1902 11ce 07F14003 	 add r3,r7,#64
 1903 11d2 1B68     	 ldr r3,[r3]
 1904 11d4 9B08     	 lsrs r3,r3,#2
 1905 11d6 C7F8CC33 	 str r3,[r7,#972]
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       while (k > 0u)
 1906              	 .loc 1 485 0
 1907 11da 8CE0     	 b .L51
 1908              	.L52:
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Perform the multiply-accumulates */
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         sum += (q63_t) ((q31_t) * px++ * *py--);
 1909              	 .loc 1 488 0
 1910 11dc 07F5AC73 	 add r3,r7,#344
 1911 11e0 1B68     	 ldr r3,[r3]
 1912 11e2 991C     	 adds r1,r3,#2
 1913 11e4 07F5AC72 	 add r2,r7,#344
 1914 11e8 1160     	 str r1,[r2]
 1915 11ea 1B88     	 ldrh r3,[r3]
 1916 11ec 1AB2     	 sxth r2,r3
 1917 11ee 07F5AA73 	 add r3,r7,#340
 1918 11f2 1B68     	 ldr r3,[r3]
 1919 11f4 981E     	 subs r0,r3,#2
 1920 11f6 07F5AA71 	 add r1,r7,#340
 1921 11fa 0860     	 str r0,[r1]
 1922 11fc 1B88     	 ldrh r3,[r3]
 1923 11fe 1BB2     	 sxth r3,r3
 1924 1200 03FB02F3 	 mul r3,r3,r2
 1925 1204 1A46     	 mov r2,r3
 1926 1206 4FEAE273 	 asr r3,r2,#31
 1927 120a 07F58161 	 add r1,r7,#1032
 1928 120e D1E90001 	 ldrd r0,[r1]
 1929 1212 1218     	 adds r2,r2,r0
 1930 1214 43EB0103 	 adc r3,r3,r1
 1931 1218 07F58161 	 add r1,r7,#1032
 1932 121c C1E90023 	 strd r2,[r1]
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         sum += (q63_t) ((q31_t) * px++ * *py--);
 1933              	 .loc 1 489 0
 1934 1220 07F5AC73 	 add r3,r7,#344
 1935 1224 1B68     	 ldr r3,[r3]
 1936 1226 991C     	 adds r1,r3,#2
 1937 1228 07F5AC72 	 add r2,r7,#344
 1938 122c 1160     	 str r1,[r2]
 1939 122e 1B88     	 ldrh r3,[r3]
 1940 1230 1AB2     	 sxth r2,r3
 1941 1232 07F5AA73 	 add r3,r7,#340
 1942 1236 1B68     	 ldr r3,[r3]
 1943 1238 981E     	 subs r0,r3,#2
 1944 123a 07F5AA71 	 add r1,r7,#340
 1945 123e 0860     	 str r0,[r1]
 1946 1240 1B88     	 ldrh r3,[r3]
 1947 1242 1BB2     	 sxth r3,r3
 1948 1244 03FB02F3 	 mul r3,r3,r2
 1949 1248 1A46     	 mov r2,r3
 1950 124a 4FEAE273 	 asr r3,r2,#31
 1951 124e 07F58161 	 add r1,r7,#1032
 1952 1252 D1E90001 	 ldrd r0,[r1]
 1953 1256 1218     	 adds r2,r2,r0
 1954 1258 43EB0103 	 adc r3,r3,r1
 1955 125c 07F58161 	 add r1,r7,#1032
 1956 1260 C1E90023 	 strd r2,[r1]
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         sum += (q63_t) ((q31_t) * px++ * *py--);
 1957              	 .loc 1 490 0
 1958 1264 07F5AC73 	 add r3,r7,#344
 1959 1268 1B68     	 ldr r3,[r3]
 1960 126a 991C     	 adds r1,r3,#2
 1961 126c 07F5AC72 	 add r2,r7,#344
 1962 1270 1160     	 str r1,[r2]
 1963 1272 1B88     	 ldrh r3,[r3]
 1964 1274 1AB2     	 sxth r2,r3
 1965 1276 07F5AA73 	 add r3,r7,#340
 1966 127a 1B68     	 ldr r3,[r3]
 1967 127c 981E     	 subs r0,r3,#2
 1968 127e 07F5AA71 	 add r1,r7,#340
 1969 1282 0860     	 str r0,[r1]
 1970 1284 1B88     	 ldrh r3,[r3]
 1971 1286 1BB2     	 sxth r3,r3
 1972 1288 03FB02F3 	 mul r3,r3,r2
 1973 128c 1A46     	 mov r2,r3
 1974 128e 4FEAE273 	 asr r3,r2,#31
 1975 1292 07F58161 	 add r1,r7,#1032
 1976 1296 D1E90001 	 ldrd r0,[r1]
 1977 129a 1218     	 adds r2,r2,r0
 1978 129c 43EB0103 	 adc r3,r3,r1
 1979 12a0 07F58161 	 add r1,r7,#1032
 1980 12a4 C1E90023 	 strd r2,[r1]
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         sum += (q63_t) ((q31_t) * px++ * *py--);
 1981              	 .loc 1 491 0
 1982 12a8 07F5AC73 	 add r3,r7,#344
 1983 12ac 1B68     	 ldr r3,[r3]
 1984 12ae 991C     	 adds r1,r3,#2
 1985 12b0 07F5AC72 	 add r2,r7,#344
 1986 12b4 1160     	 str r1,[r2]
 1987 12b6 1B88     	 ldrh r3,[r3]
 1988 12b8 1AB2     	 sxth r2,r3
 1989 12ba 07F5AA73 	 add r3,r7,#340
 1990 12be 1B68     	 ldr r3,[r3]
 1991 12c0 981E     	 subs r0,r3,#2
 1992 12c2 07F5AA71 	 add r1,r7,#340
 1993 12c6 0860     	 str r0,[r1]
 1994 12c8 1B88     	 ldrh r3,[r3]
 1995 12ca 1BB2     	 sxth r3,r3
 1996 12cc 03FB02F3 	 mul r3,r3,r2
 1997 12d0 1A46     	 mov r2,r3
 1998 12d2 4FEAE273 	 asr r3,r2,#31
 1999 12d6 07F58161 	 add r1,r7,#1032
 2000 12da D1E90001 	 ldrd r0,[r1]
 2001 12de 1218     	 adds r2,r2,r0
 2002 12e0 43EB0103 	 adc r3,r3,r1
 2003 12e4 07F58161 	 add r1,r7,#1032
 2004 12e8 C1E90023 	 strd r2,[r1]
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Decrement the loop counter */
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         k--;
 2005              	 .loc 1 494 0
 2006 12ec D7F8CC33 	 ldr r3,[r7,#972]
 2007 12f0 013B     	 subs r3,r3,#1
 2008 12f2 C7F8CC33 	 str r3,[r7,#972]
 2009              	.L51:
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 2010              	 .loc 1 485 0
 2011 12f6 D7F8CC33 	 ldr r3,[r7,#972]
 2012 12fa 002B     	 cmp r3,#0
 2013 12fc 7FF46EAF 	 bne .L52
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       }
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****        ** No loop unrolling is used. */
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k = srcBLen % 0x4u;
 2014              	 .loc 1 499 0
 2015 1300 07F14003 	 add r3,r7,#64
 2016 1304 1B68     	 ldr r3,[r3]
 2017 1306 03F00303 	 and r3,r3,#3
 2018 130a C7F8CC33 	 str r3,[r7,#972]
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       while (k > 0u)
 2019              	 .loc 1 501 0
 2020 130e 26E0     	 b .L53
 2021              	.L54:
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Perform the multiply-accumulates */
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         sum += (q63_t) ((q31_t) * px++ * *py--);
 2022              	 .loc 1 504 0
 2023 1310 07F5AC73 	 add r3,r7,#344
 2024 1314 1B68     	 ldr r3,[r3]
 2025 1316 991C     	 adds r1,r3,#2
 2026 1318 07F5AC72 	 add r2,r7,#344
 2027 131c 1160     	 str r1,[r2]
 2028 131e 1B88     	 ldrh r3,[r3]
 2029 1320 1AB2     	 sxth r2,r3
 2030 1322 07F5AA73 	 add r3,r7,#340
 2031 1326 1B68     	 ldr r3,[r3]
 2032 1328 981E     	 subs r0,r3,#2
 2033 132a 07F5AA71 	 add r1,r7,#340
 2034 132e 0860     	 str r0,[r1]
 2035 1330 1B88     	 ldrh r3,[r3]
 2036 1332 1BB2     	 sxth r3,r3
 2037 1334 03FB02F3 	 mul r3,r3,r2
 2038 1338 1A46     	 mov r2,r3
 2039 133a 4FEAE273 	 asr r3,r2,#31
 2040 133e 07F58161 	 add r1,r7,#1032
 2041 1342 D1E90001 	 ldrd r0,[r1]
 2042 1346 1218     	 adds r2,r2,r0
 2043 1348 43EB0103 	 adc r3,r3,r1
 2044 134c 07F58161 	 add r1,r7,#1032
 2045 1350 C1E90023 	 strd r2,[r1]
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Decrement the loop counter */
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         k--;
 2046              	 .loc 1 507 0
 2047 1354 D7F8CC33 	 ldr r3,[r7,#972]
 2048 1358 013B     	 subs r3,r3,#1
 2049 135a C7F8CC33 	 str r3,[r7,#972]
 2050              	.L53:
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 2051              	 .loc 1 501 0
 2052 135e D7F8CC33 	 ldr r3,[r7,#972]
 2053 1362 002B     	 cmp r3,#0
 2054 1364 D4D1     	 bne .L54
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       }
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       *pOut++ = (q15_t) (__SSAT(sum >> 15, 16));
 2055              	 .loc 1 511 0
 2056 1366 07F5AE73 	 add r3,r7,#348
 2057 136a 1968     	 ldr r1,[r3]
 2058 136c 8A1C     	 adds r2,r1,#2
 2059 136e 07F5AE73 	 add r3,r7,#348
 2060 1372 1A60     	 str r2,[r3]
 2061              	.LBB138:
 2062 1374 07F58163 	 add r3,r7,#1032
 2063 1378 D3E90023 	 ldrd r2,[r3]
 2064 137c D00B     	 lsrs r0,r2,#15
 2065 137e 3861     	 str r0,[r7,#16]
 2066 1380 3869     	 ldr r0,[r7,#16]
 2067 1382 40EA4340 	 orr r0,r0,r3,lsl#17
 2068 1386 3861     	 str r0,[r7,#16]
 2069 1388 DB13     	 asrs r3,r3,#15
 2070 138a 7B61     	 str r3,[r7,#20]
 2071 138c 3B69     	 ldr r3,[r7,#16]
 2072 138e C7F87C33 	 str r3,[r7,#892]
 2073 1392 D7F87C33 	 ldr r3,[r7,#892]
 2074              	
 2075 1396 03F30F03 	 ssat r3,#16,r3
 2076              	
 2077              	 .thumb
 2078 139a C7F87833 	 str r3,[r7,#888]
 2079 139e D7F87833 	 ldr r3,[r7,#888]
 2080              	.LBE138:
 2081 13a2 9BB2     	 uxth r3,r3
 2082 13a4 0B80     	 strh r3,[r1]
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Increment the pointer pIn1 index, count by 1 */
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       count++;
 2083              	 .loc 1 514 0
 2084 13a6 D7F8C833 	 ldr r3,[r7,#968]
 2085 13aa 0133     	 adds r3,r3,#1
 2086 13ac C7F8C833 	 str r3,[r7,#968]
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       px = pIn1 + count;
 2087              	 .loc 1 517 0
 2088 13b0 D7F8C833 	 ldr r3,[r7,#968]
 2089 13b4 5B00     	 lsls r3,r3,#1
 2090 13b6 D7F81424 	 ldr r2,[r7,#1044]
 2091 13ba 1A44     	 add r2,r2,r3
 2092 13bc 07F5AC73 	 add r3,r7,#344
 2093 13c0 1A60     	 str r2,[r3]
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       py = pSrc2;
 2094              	 .loc 1 518 0
 2095 13c2 07F5AA73 	 add r3,r7,#340
 2096 13c6 D7F8AC23 	 ldr r2,[r7,#940]
 2097 13ca 1A60     	 str r2,[r3]
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Decrement the loop counter */
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       blkCnt--;
 2098              	 .loc 1 521 0
 2099 13cc D7F8C433 	 ldr r3,[r7,#964]
 2100 13d0 013B     	 subs r3,r3,#1
 2101 13d2 C7F8C433 	 str r3,[r7,#964]
 2102              	.L50:
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 2103              	 .loc 1 475 0
 2104 13d6 D7F8C433 	 ldr r3,[r7,#964]
 2105 13da 002B     	 cmp r3,#0
 2106 13dc 7FF4EFAE 	 bne .L55
 2107 13e0 77E0     	 b .L56
 2108              	.L19:
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     }
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   }
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   else
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* If the srcBLen is not a multiple of 4,
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      * the blockSize2 loop cannot be unrolled by 4 */
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     blkCnt = blockSize2;
 2109              	 .loc 1 528 0
 2110 13e2 D7F8C033 	 ldr r3,[r7,#960]
 2111 13e6 C7F8C433 	 str r3,[r7,#964]
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     while (blkCnt > 0u)
 2112              	 .loc 1 530 0
 2113 13ea 6EE0     	 b .L57
 2114              	.L60:
 531:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 532:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Accumulator is made zero for every iteration */
 533:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       sum = 0;
 2115              	 .loc 1 533 0
 2116 13ec 4FF00002 	 mov r2,#0
 2117 13f0 4FF00003 	 mov r3,#0
 2118 13f4 07F58161 	 add r1,r7,#1032
 2119 13f8 C1E90023 	 strd r2,[r1]
 534:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 535:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* srcBLen number of MACS should be performed */
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k = srcBLen;
 2120              	 .loc 1 536 0
 2121 13fc 07F14003 	 add r3,r7,#64
 2122 1400 1B68     	 ldr r3,[r3]
 2123 1402 C7F8CC33 	 str r3,[r7,#972]
 537:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       while (k > 0u)
 2124              	 .loc 1 538 0
 2125 1406 26E0     	 b .L58
 2126              	.L59:
 539:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 540:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Perform the multiply-accumulate */
 541:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         sum += (q63_t) ((q31_t) * px++ * *py--);
 2127              	 .loc 1 541 0
 2128 1408 07F5AC73 	 add r3,r7,#344
 2129 140c 1B68     	 ldr r3,[r3]
 2130 140e 991C     	 adds r1,r3,#2
 2131 1410 07F5AC72 	 add r2,r7,#344
 2132 1414 1160     	 str r1,[r2]
 2133 1416 1B88     	 ldrh r3,[r3]
 2134 1418 1AB2     	 sxth r2,r3
 2135 141a 07F5AA73 	 add r3,r7,#340
 2136 141e 1B68     	 ldr r3,[r3]
 2137 1420 981E     	 subs r0,r3,#2
 2138 1422 07F5AA71 	 add r1,r7,#340
 2139 1426 0860     	 str r0,[r1]
 2140 1428 1B88     	 ldrh r3,[r3]
 2141 142a 1BB2     	 sxth r3,r3
 2142 142c 03FB02F3 	 mul r3,r3,r2
 2143 1430 1A46     	 mov r2,r3
 2144 1432 4FEAE273 	 asr r3,r2,#31
 2145 1436 07F58161 	 add r1,r7,#1032
 2146 143a D1E90001 	 ldrd r0,[r1]
 2147 143e 1218     	 adds r2,r2,r0
 2148 1440 43EB0103 	 adc r3,r3,r1
 2149 1444 07F58161 	 add r1,r7,#1032
 2150 1448 C1E90023 	 strd r2,[r1]
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 543:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* Decrement the loop counter */
 544:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         k--;
 2151              	 .loc 1 544 0
 2152 144c D7F8CC33 	 ldr r3,[r7,#972]
 2153 1450 013B     	 subs r3,r3,#1
 2154 1452 C7F8CC33 	 str r3,[r7,#972]
 2155              	.L58:
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 2156              	 .loc 1 538 0
 2157 1456 D7F8CC33 	 ldr r3,[r7,#972]
 2158 145a 002B     	 cmp r3,#0
 2159 145c D4D1     	 bne .L59
 545:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       }
 546:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 548:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       *pOut++ = (q15_t) (__SSAT(sum >> 15, 16));
 2160              	 .loc 1 548 0
 2161 145e 07F5AE73 	 add r3,r7,#348
 2162 1462 1968     	 ldr r1,[r3]
 2163 1464 8A1C     	 adds r2,r1,#2
 2164 1466 07F5AE73 	 add r3,r7,#348
 2165 146a 1A60     	 str r2,[r3]
 2166              	.LBB139:
 2167 146c 07F58163 	 add r3,r7,#1032
 2168 1470 D3E90023 	 ldrd r2,[r3]
 2169 1474 4FEAD23A 	 lsr r10,r2,#15
 2170 1478 4AEA434A 	 orr r10,r10,r3,lsl#17
 2171 147c 4FEAE33B 	 asr fp,r3,#15
 2172 1480 5346     	 mov r3,r10
 2173 1482 C7F87433 	 str r3,[r7,#884]
 2174 1486 D7F87433 	 ldr r3,[r7,#884]
 2175              	
 2176 148a 03F30F03 	 ssat r3,#16,r3
 2177              	
 2178              	 .thumb
 2179 148e C7F87033 	 str r3,[r7,#880]
 2180 1492 D7F87033 	 ldr r3,[r7,#880]
 2181              	.LBE139:
 2182 1496 9BB2     	 uxth r3,r3
 2183 1498 0B80     	 strh r3,[r1]
 549:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 550:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Increment the MAC count */
 551:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       count++;
 2184              	 .loc 1 551 0
 2185 149a D7F8C833 	 ldr r3,[r7,#968]
 2186 149e 0133     	 adds r3,r3,#1
 2187 14a0 C7F8C833 	 str r3,[r7,#968]
 552:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 553:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 554:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       px = pIn1 + count;
 2188              	 .loc 1 554 0
 2189 14a4 D7F8C833 	 ldr r3,[r7,#968]
 2190 14a8 5B00     	 lsls r3,r3,#1
 2191 14aa D7F81424 	 ldr r2,[r7,#1044]
 2192 14ae 1A44     	 add r2,r2,r3
 2193 14b0 07F5AC73 	 add r3,r7,#344
 2194 14b4 1A60     	 str r2,[r3]
 555:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       py = pSrc2;
 2195              	 .loc 1 555 0
 2196 14b6 07F5AA73 	 add r3,r7,#340
 2197 14ba D7F8AC23 	 ldr r2,[r7,#940]
 2198 14be 1A60     	 str r2,[r3]
 556:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Decrement the loop counter */
 558:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       blkCnt--;
 2199              	 .loc 1 558 0
 2200 14c0 D7F8C433 	 ldr r3,[r7,#964]
 2201 14c4 013B     	 subs r3,r3,#1
 2202 14c6 C7F8C433 	 str r3,[r7,#964]
 2203              	.L57:
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 2204              	 .loc 1 530 0
 2205 14ca D7F8C433 	 ldr r3,[r7,#964]
 2206 14ce 002B     	 cmp r3,#0
 2207 14d0 8CD1     	 bne .L60
 2208              	.L56:
 559:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     }
 560:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   }
 561:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 562:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 563:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* --------------------------
 564:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * Initializations of stage3
 565:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * -------------------------*/
 566:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 567:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[srcAL
 568:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[srcAL
 569:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * ....
 570:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 571:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * sum +=  x[srcALen-1] * y[srcBLen-1]
 572:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    */
 573:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 574:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
 575:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      The blockSize3 variable holds the number of MAC operations performed */
 576:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 577:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   blockSize3 = srcBLen - 1u;
 2209              	 .loc 1 577 0
 2210 14d2 07F14003 	 add r3,r7,#64
 2211 14d6 1B68     	 ldr r3,[r3]
 2212 14d8 013B     	 subs r3,r3,#1
 2213 14da C7F8D433 	 str r3,[r7,#980]
 578:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 579:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Working pointer of inputA */
 580:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
 2214              	 .loc 1 580 0
 2215 14de 07F14802 	 add r2,r7,#72
 2216 14e2 07F14003 	 add r3,r7,#64
 2217 14e6 1268     	 ldr r2,[r2]
 2218 14e8 1B68     	 ldr r3,[r3]
 2219 14ea D31A     	 subs r3,r2,r3
 2220 14ec 0133     	 adds r3,r3,#1
 2221 14ee 5B00     	 lsls r3,r3,#1
 2222 14f0 D7F81424 	 ldr r2,[r7,#1044]
 2223 14f4 1344     	 add r3,r3,r2
 2224 14f6 C7F8E433 	 str r3,[r7,#996]
 581:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   px = pSrc1;
 2225              	 .loc 1 581 0
 2226 14fa 07F5AC73 	 add r3,r7,#344
 2227 14fe D7F8E423 	 ldr r2,[r7,#996]
 2228 1502 1A60     	 str r2,[r3]
 582:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 583:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Working pointer of inputB */
 584:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 2229              	 .loc 1 584 0
 2230 1504 07F14003 	 add r3,r7,#64
 2231 1508 1B68     	 ldr r3,[r3]
 2232 150a 03F10043 	 add r3,r3,#-2147483648
 2233 150e 013B     	 subs r3,r3,#1
 2234 1510 5B00     	 lsls r3,r3,#1
 2235 1512 D7F81024 	 ldr r2,[r7,#1040]
 2236 1516 1344     	 add r3,r3,r2
 2237 1518 C7F8AC33 	 str r3,[r7,#940]
 585:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   pIn2 = pSrc2 - 1u;
 2238              	 .loc 1 585 0
 2239 151c D7F8AC33 	 ldr r3,[r7,#940]
 2240 1520 023B     	 subs r3,r3,#2
 2241 1522 C7F81034 	 str r3,[r7,#1040]
 586:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   py = pIn2;
 2242              	 .loc 1 586 0
 2243 1526 07F5AA73 	 add r3,r7,#340
 2244 152a D7F81024 	 ldr r2,[r7,#1040]
 2245 152e 1A60     	 str r2,[r3]
 587:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 588:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* -------------------
 589:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * Stage3 process
 590:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * ------------------*/
 591:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 592:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* For loop unrolling by 4, this stage is divided into two. */
 593:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* First part of this stage computes the MAC operations greater than 4 */
 594:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Second part of this stage computes the MAC operations less than or equal to 4 */
 595:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 596:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* The first part of the stage starts here */
 597:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   j = blockSize3 >> 2u;
 2246              	 .loc 1 597 0
 2247 1530 D7F8D433 	 ldr r3,[r7,#980]
 2248 1534 9B08     	 lsrs r3,r3,#2
 2249 1536 C7F8D033 	 str r3,[r7,#976]
 598:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 599:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   while ((j > 0u) && (blockSize3 > 0u))
 2250              	 .loc 1 599 0
 2251 153a 2EE1     	 b .L61
 2252              	.L70:
 600:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 601:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Accumulator is made zero for every iteration */
 602:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     sum = 0;
 2253              	 .loc 1 602 0
 2254 153c 4FF00002 	 mov r2,#0
 2255 1540 4FF00003 	 mov r3,#0
 2256 1544 07F58161 	 add r1,r7,#1032
 2257 1548 C1E90023 	 strd r2,[r1]
 603:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 604:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 605:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     k = blockSize3 >> 2u;
 2258              	 .loc 1 605 0
 2259 154c D7F8D433 	 ldr r3,[r7,#980]
 2260 1550 9B08     	 lsrs r3,r3,#2
 2261 1552 C7F8CC33 	 str r3,[r7,#972]
 606:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 607:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 608:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 609:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     while (k > 0u)
 2262              	 .loc 1 609 0
 2263 1556 86E0     	 b .L62
 2264              	.L65:
 610:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 611:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* x[srcALen - srcBLen + 1], x[srcALen - srcBLen + 2] are multiplied
 612:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****        * with y[srcBLen - 1], y[srcBLen - 2] respectively */
 613:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       sum = __SMLALDX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 2265              	 .loc 1 613 0
 2266 1558 07F5AC72 	 add r2,r7,#344
 2267 155c 1368     	 ldr r3,[r2]
 2268 155e 191D     	 adds r1,r3,#4
 2269 1560 1160     	 str r1,[r2]
 2270 1562 1B68     	 ldr r3,[r3]
 2271 1564 1C46     	 mov r4,r3
 2272 1566 07F5AA72 	 add r2,r7,#340
 2273 156a 1368     	 ldr r3,[r2]
 2274 156c 191F     	 subs r1,r3,#4
 2275 156e 1160     	 str r1,[r2]
 2276 1570 1B68     	 ldr r3,[r3]
 2277 1572 1846     	 mov r0,r3
 2278 1574 07F58163 	 add r3,r7,#1032
 2279 1578 D3E90023 	 ldrd r2,[r3]
 2280 157c 07F5CE71 	 add r1,r7,#412
 2281 1580 0C60     	 str r4,[r1]
 2282 1582 07F5CC71 	 add r1,r7,#408
 2283 1586 0860     	 str r0,[r1]
 2284 1588 07F5C871 	 add r1,r7,#400
 2285 158c C1E90023 	 strd r2,[r1]
 2286              	.LBB140:
 2287              	.LBB141:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 2288              	 .loc 2 1759 0
 2289 1590 07F59871 	 add r1,r7,#304
 2290 1594 07F5C873 	 add r3,r7,#400
 2291 1598 D3E90023 	 ldrd r2,[r3]
 2292 159c C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 2293              	 .loc 2 1762 0
 2294 15a0 07F59873 	 add r3,r7,#304
 2295 15a4 1A68     	 ldr r2,[r3]
 2296 15a6 07F59873 	 add r3,r7,#304
 2297 15aa 5C68     	 ldr r4,[r3,#4]
 2298 15ac 07F5CE73 	 add r3,r7,#412
 2299 15b0 1968     	 ldr r1,[r3]
 2300 15b2 07F5CC73 	 add r3,r7,#408
 2301 15b6 1868     	 ldr r0,[r3]
 2302 15b8 2346     	 mov r3,r4
 2303              	
 2304 15ba C1FBD023 	 smlaldx r2,r3,r1,r0
 2305              	
 2306              	 .thumb
 2307 15be 07F59871 	 add r1,r7,#304
 2308 15c2 0A60     	 str r2,[r1]
 2309 15c4 07F59872 	 add r2,r7,#304
 2310 15c8 5360     	 str r3,[r2,#4]
 2311              	 .loc 2 1767 0
 2312 15ca 07F59873 	 add r3,r7,#304
 2313 15ce D3E90023 	 ldrd r2,[r3]
 2314              	.LBE141:
 2315              	.LBE140:
 2316              	 .loc 1 613 0
 2317 15d2 07F58161 	 add r1,r7,#1032
 2318 15d6 C1E90023 	 strd r2,[r1]
 614:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* x[srcALen - srcBLen + 3], x[srcALen - srcBLen + 4] are multiplied
 615:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****        * with y[srcBLen - 3], y[srcBLen - 4] respectively */
 616:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       sum = __SMLALDX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 2319              	 .loc 1 616 0
 2320 15da 07F5AC72 	 add r2,r7,#344
 2321 15de 1368     	 ldr r3,[r2]
 2322 15e0 191D     	 adds r1,r3,#4
 2323 15e2 1160     	 str r1,[r2]
 2324 15e4 1B68     	 ldr r3,[r3]
 2325 15e6 1C46     	 mov r4,r3
 2326 15e8 07F5AA72 	 add r2,r7,#340
 2327 15ec 1368     	 ldr r3,[r2]
 2328 15ee 191F     	 subs r1,r3,#4
 2329 15f0 1160     	 str r1,[r2]
 2330 15f2 1B68     	 ldr r3,[r3]
 2331 15f4 1846     	 mov r0,r3
 2332 15f6 07F58163 	 add r3,r7,#1032
 2333 15fa D3E90023 	 ldrd r2,[r3]
 2334 15fe 07F5C671 	 add r1,r7,#396
 2335 1602 0C60     	 str r4,[r1]
 2336 1604 07F5C471 	 add r1,r7,#392
 2337 1608 0860     	 str r0,[r1]
 2338 160a 07F5C071 	 add r1,r7,#384
 2339 160e C1E90023 	 strd r2,[r1]
 2340              	.LBB142:
 2341              	.LBB143:
1759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 2342              	 .loc 2 1759 0
 2343 1612 07F59C71 	 add r1,r7,#312
 2344 1616 07F5C073 	 add r3,r7,#384
 2345 161a D3E90023 	 ldrd r2,[r3]
 2346 161e C1E90023 	 strd r2,[r1]
1762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 2347              	 .loc 2 1762 0
 2348 1622 07F59C73 	 add r3,r7,#312
 2349 1626 1A68     	 ldr r2,[r3]
 2350 1628 07F59C73 	 add r3,r7,#312
 2351 162c 5C68     	 ldr r4,[r3,#4]
 2352 162e 07F5C673 	 add r3,r7,#396
 2353 1632 1968     	 ldr r1,[r3]
 2354 1634 07F5C473 	 add r3,r7,#392
 2355 1638 1868     	 ldr r0,[r3]
 2356 163a 2346     	 mov r3,r4
 2357              	
 2358 163c C1FBD023 	 smlaldx r2,r3,r1,r0
 2359              	
 2360              	 .thumb
 2361 1640 07F59C71 	 add r1,r7,#312
 2362 1644 0A60     	 str r2,[r1]
 2363 1646 07F59C72 	 add r2,r7,#312
 2364 164a 5360     	 str r3,[r2,#4]
 2365              	 .loc 2 1767 0
 2366 164c 07F59C73 	 add r3,r7,#312
 2367 1650 D3E90023 	 ldrd r2,[r3]
 2368              	.LBE143:
 2369              	.LBE142:
 2370              	 .loc 1 616 0
 2371 1654 07F58161 	 add r1,r7,#1032
 2372 1658 C1E90023 	 strd r2,[r1]
 617:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 618:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Decrement the loop counter */
 619:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k--;
 2373              	 .loc 1 619 0
 2374 165c D7F8CC33 	 ldr r3,[r7,#972]
 2375 1660 013B     	 subs r3,r3,#1
 2376 1662 C7F8CC33 	 str r3,[r7,#972]
 2377              	.L62:
 609:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 2378              	 .loc 1 609 0
 2379 1666 D7F8CC33 	 ldr r3,[r7,#972]
 2380 166a 002B     	 cmp r3,#0
 2381 166c 7FF474AF 	 bne .L65
 620:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     }
 621:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 622:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* For the next MAC operations, the pointer py is used without SIMD
 623:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      * So, py is incremented by 1 */
 624:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     py = py + 1u;
 2382              	 .loc 1 624 0
 2383 1670 07F5AA73 	 add r3,r7,#340
 2384 1674 1B68     	 ldr r3,[r3]
 2385 1676 9A1C     	 adds r2,r3,#2
 2386 1678 07F5AA73 	 add r3,r7,#340
 2387 167c 1A60     	 str r2,[r3]
 625:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 626:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* If the blockSize3 is not a multiple of 4, compute any remaining MACs here.
 627:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****      ** No loop unrolling is used. */
 628:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     k = blockSize3 % 0x4u;
 2388              	 .loc 1 628 0
 2389 167e D7F8D433 	 ldr r3,[r7,#980]
 2390 1682 03F00303 	 and r3,r3,#3
 2391 1686 C7F8CC33 	 str r3,[r7,#972]
 629:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 630:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     while (k > 0u)
 2392              	 .loc 1 630 0
 2393 168a 49E0     	 b .L66
 2394              	.L68:
 631:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 632:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* sum += x[srcALen - srcBLen + 5] * y[srcBLen - 5] */
 633:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       sum = __SMLALD(*px++, *py--, sum);
 2395              	 .loc 1 633 0
 2396 168c 07F5AC73 	 add r3,r7,#344
 2397 1690 1B68     	 ldr r3,[r3]
 2398 1692 991C     	 adds r1,r3,#2
 2399 1694 07F5AC72 	 add r2,r7,#344
 2400 1698 1160     	 str r1,[r2]
 2401 169a 1B88     	 ldrh r3,[r3]
 2402 169c 1CB2     	 sxth r4,r3
 2403 169e 07F5AA73 	 add r3,r7,#340
 2404 16a2 1B68     	 ldr r3,[r3]
 2405 16a4 991E     	 subs r1,r3,#2
 2406 16a6 07F5AA72 	 add r2,r7,#340
 2407 16aa 1160     	 str r1,[r2]
 2408 16ac 1B88     	 ldrh r3,[r3]
 2409 16ae 18B2     	 sxth r0,r3
 2410 16b0 07F58163 	 add r3,r7,#1032
 2411 16b4 D3E90023 	 ldrd r2,[r3]
 2412 16b8 07F5BE71 	 add r1,r7,#380
 2413 16bc 0C60     	 str r4,[r1]
 2414 16be 07F5BC71 	 add r1,r7,#376
 2415 16c2 0860     	 str r0,[r1]
 2416 16c4 07F5B871 	 add r1,r7,#368
 2417 16c8 C1E90023 	 strd r2,[r1]
 2418              	.LBB144:
 2419              	.LBB145:
1742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 2420              	 .loc 2 1742 0
 2421 16cc 07F5A071 	 add r1,r7,#320
 2422 16d0 07F5B873 	 add r3,r7,#368
 2423 16d4 D3E90023 	 ldrd r2,[r3]
 2424 16d8 C1E90023 	 strd r2,[r1]
1745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 2425              	 .loc 2 1745 0
 2426 16dc 07F5A073 	 add r3,r7,#320
 2427 16e0 1A68     	 ldr r2,[r3]
 2428 16e2 07F5A073 	 add r3,r7,#320
 2429 16e6 5C68     	 ldr r4,[r3,#4]
 2430 16e8 07F5BE73 	 add r3,r7,#380
 2431 16ec 1968     	 ldr r1,[r3]
 2432 16ee 07F5BC73 	 add r3,r7,#376
 2433 16f2 1868     	 ldr r0,[r3]
 2434 16f4 2346     	 mov r3,r4
 2435              	
 2436 16f6 C1FBC023 	 smlald r2,r3,r1,r0
 2437              	
 2438              	 .thumb
 2439 16fa 07F5A071 	 add r1,r7,#320
 2440 16fe 0A60     	 str r2,[r1]
 2441 1700 07F5A072 	 add r2,r7,#320
 2442 1704 5360     	 str r3,[r2,#4]
1750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 2443              	 .loc 2 1750 0
 2444 1706 07F5A073 	 add r3,r7,#320
 2445 170a D3E90023 	 ldrd r2,[r3]
 2446              	.LBE145:
 2447              	.LBE144:
 2448              	 .loc 1 633 0
 2449 170e 07F58161 	 add r1,r7,#1032
 2450 1712 C1E90023 	 strd r2,[r1]
 634:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 635:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Decrement the loop counter */
 636:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k--;
 2451              	 .loc 1 636 0
 2452 1716 D7F8CC33 	 ldr r3,[r7,#972]
 2453 171a 013B     	 subs r3,r3,#1
 2454 171c C7F8CC33 	 str r3,[r7,#972]
 2455              	.L66:
 630:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 2456              	 .loc 1 630 0
 2457 1720 D7F8CC33 	 ldr r3,[r7,#972]
 2458 1724 002B     	 cmp r3,#0
 2459 1726 B1D1     	 bne .L68
 637:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     }
 638:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 639:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 640:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 2460              	 .loc 1 640 0
 2461 1728 07F5AE73 	 add r3,r7,#348
 2462 172c 1968     	 ldr r1,[r3]
 2463 172e 8A1C     	 adds r2,r1,#2
 2464 1730 07F5AE73 	 add r3,r7,#348
 2465 1734 1A60     	 str r2,[r3]
 2466              	.LBB146:
 2467 1736 07F58163 	 add r3,r7,#1032
 2468 173a D3E90023 	 ldrd r2,[r3]
 2469 173e D00B     	 lsrs r0,r2,#15
 2470 1740 B860     	 str r0,[r7,#8]
 2471 1742 B868     	 ldr r0,[r7,#8]
 2472 1744 40EA4340 	 orr r0,r0,r3,lsl#17
 2473 1748 B860     	 str r0,[r7,#8]
 2474 174a DB13     	 asrs r3,r3,#15
 2475 174c FB60     	 str r3,[r7,#12]
 2476 174e BB68     	 ldr r3,[r7,#8]
 2477 1750 C7F86C33 	 str r3,[r7,#876]
 2478 1754 D7F86C33 	 ldr r3,[r7,#876]
 2479              	
 2480 1758 03F30F03 	 ssat r3,#16,r3
 2481              	
 2482              	 .thumb
 2483 175c C7F86833 	 str r3,[r7,#872]
 2484 1760 D7F86833 	 ldr r3,[r7,#872]
 2485              	.LBE146:
 2486 1764 9BB2     	 uxth r3,r3
 2487 1766 0B80     	 strh r3,[r1]
 641:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 642:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 643:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     px = ++pSrc1;
 2488              	 .loc 1 643 0
 2489 1768 D7F8E433 	 ldr r3,[r7,#996]
 2490 176c 0233     	 adds r3,r3,#2
 2491 176e C7F8E433 	 str r3,[r7,#996]
 2492 1772 07F5AC73 	 add r3,r7,#344
 2493 1776 D7F8E423 	 ldr r2,[r7,#996]
 2494 177a 1A60     	 str r2,[r3]
 644:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     py = pIn2;
 2495              	 .loc 1 644 0
 2496 177c 07F5AA73 	 add r3,r7,#340
 2497 1780 D7F81024 	 ldr r2,[r7,#1040]
 2498 1784 1A60     	 str r2,[r3]
 645:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 646:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Decrement the loop counter */
 647:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     blockSize3--;
 2499              	 .loc 1 647 0
 2500 1786 D7F8D433 	 ldr r3,[r7,#980]
 2501 178a 013B     	 subs r3,r3,#1
 2502 178c C7F8D433 	 str r3,[r7,#980]
 648:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 649:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     j--;
 2503              	 .loc 1 649 0
 2504 1790 D7F8D033 	 ldr r3,[r7,#976]
 2505 1794 013B     	 subs r3,r3,#1
 2506 1796 C7F8D033 	 str r3,[r7,#976]
 2507              	.L61:
 599:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 2508              	 .loc 1 599 0
 2509 179a D7F8D033 	 ldr r3,[r7,#976]
 2510 179e 002B     	 cmp r3,#0
 2511 17a0 04D0     	 beq .L69
 599:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 2512              	 .loc 1 599 0 is_stmt 0 discriminator 1
 2513 17a2 D7F8D433 	 ldr r3,[r7,#980]
 2514 17a6 002B     	 cmp r3,#0
 2515 17a8 7FF4C8AE 	 bne .L70
 2516              	.L69:
 650:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   }
 651:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 652:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* The second part of the stage starts here */
 653:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* SIMD is not used for the next MAC operations,
 654:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****    * so pointer py is updated to read only one sample at a time */
 655:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   py = py + 1u;
 2517              	 .loc 1 655 0 is_stmt 1
 2518 17ac 07F5AA73 	 add r3,r7,#340
 2519 17b0 1B68     	 ldr r3,[r3]
 2520 17b2 9A1C     	 adds r2,r3,#2
 2521 17b4 07F5AA73 	 add r3,r7,#340
 2522 17b8 1A60     	 str r2,[r3]
 656:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 657:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   while (blockSize3 > 0u)
 2523              	 .loc 1 657 0
 2524 17ba 8EE0     	 b .L71
 2525              	.L75:
 658:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 659:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Accumulator is made zero for every iteration */
 660:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     sum = 0;
 2526              	 .loc 1 660 0
 2527 17bc 4FF00002 	 mov r2,#0
 2528 17c0 4FF00003 	 mov r3,#0
 2529 17c4 07F58161 	 add r1,r7,#1032
 2530 17c8 C1E90023 	 strd r2,[r1]
 661:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 662:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 663:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     k = blockSize3;
 2531              	 .loc 1 663 0
 2532 17cc D7F8D433 	 ldr r3,[r7,#980]
 2533 17d0 C7F8CC33 	 str r3,[r7,#972]
 664:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 665:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     while (k > 0u)
 2534              	 .loc 1 665 0
 2535 17d4 49E0     	 b .L72
 2536              	.L74:
 666:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 667:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Perform the multiply-accumulates */
 668:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 669:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       sum = __SMLALD(*px++, *py--, sum);
 2537              	 .loc 1 669 0
 2538 17d6 07F5AC73 	 add r3,r7,#344
 2539 17da 1B68     	 ldr r3,[r3]
 2540 17dc 991C     	 adds r1,r3,#2
 2541 17de 07F5AC72 	 add r2,r7,#344
 2542 17e2 1160     	 str r1,[r2]
 2543 17e4 1B88     	 ldrh r3,[r3]
 2544 17e6 1CB2     	 sxth r4,r3
 2545 17e8 07F5AA73 	 add r3,r7,#340
 2546 17ec 1B68     	 ldr r3,[r3]
 2547 17ee 991E     	 subs r1,r3,#2
 2548 17f0 07F5AA72 	 add r2,r7,#340
 2549 17f4 1160     	 str r1,[r2]
 2550 17f6 1B88     	 ldrh r3,[r3]
 2551 17f8 18B2     	 sxth r0,r3
 2552 17fa 07F58163 	 add r3,r7,#1032
 2553 17fe D3E90023 	 ldrd r2,[r3]
 2554 1802 07F5B671 	 add r1,r7,#364
 2555 1806 0C60     	 str r4,[r1]
 2556 1808 07F5B471 	 add r1,r7,#360
 2557 180c 0860     	 str r0,[r1]
 2558 180e 07F5B071 	 add r1,r7,#352
 2559 1812 C1E90023 	 strd r2,[r1]
 2560              	.LBB147:
 2561              	.LBB148:
1742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 2562              	 .loc 2 1742 0
 2563 1816 07F5A471 	 add r1,r7,#328
 2564 181a 07F5B073 	 add r3,r7,#352
 2565 181e D3E90023 	 ldrd r2,[r3]
 2566 1822 C1E90023 	 strd r2,[r1]
1745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 2567              	 .loc 2 1745 0
 2568 1826 07F5A473 	 add r3,r7,#328
 2569 182a 1A68     	 ldr r2,[r3]
 2570 182c 07F5A473 	 add r3,r7,#328
 2571 1830 5C68     	 ldr r4,[r3,#4]
 2572 1832 07F5B673 	 add r3,r7,#364
 2573 1836 1968     	 ldr r1,[r3]
 2574 1838 07F5B473 	 add r3,r7,#360
 2575 183c 1868     	 ldr r0,[r3]
 2576 183e 2346     	 mov r3,r4
 2577              	
 2578 1840 C1FBC023 	 smlald r2,r3,r1,r0
 2579              	
 2580              	 .thumb
 2581 1844 07F5A471 	 add r1,r7,#328
 2582 1848 0A60     	 str r2,[r1]
 2583 184a 07F5A472 	 add r2,r7,#328
 2584 184e 5360     	 str r3,[r2,#4]
1750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 2585              	 .loc 2 1750 0
 2586 1850 07F5A473 	 add r3,r7,#328
 2587 1854 D3E90023 	 ldrd r2,[r3]
 2588              	.LBE148:
 2589              	.LBE147:
 2590              	 .loc 1 669 0
 2591 1858 07F58161 	 add r1,r7,#1032
 2592 185c C1E90023 	 strd r2,[r1]
 670:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 671:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Decrement the loop counter */
 672:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       k--;
 2593              	 .loc 1 672 0
 2594 1860 D7F8CC33 	 ldr r3,[r7,#972]
 2595 1864 013B     	 subs r3,r3,#1
 2596 1866 C7F8CC33 	 str r3,[r7,#972]
 2597              	.L72:
 665:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 2598              	 .loc 1 665 0
 2599 186a D7F8CC33 	 ldr r3,[r7,#972]
 2600 186e 002B     	 cmp r3,#0
 2601 1870 B1D1     	 bne .L74
 673:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     }
 674:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 675:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 676:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 2602              	 .loc 1 676 0
 2603 1872 07F5AE73 	 add r3,r7,#348
 2604 1876 1968     	 ldr r1,[r3]
 2605 1878 8A1C     	 adds r2,r1,#2
 2606 187a 07F5AE73 	 add r3,r7,#348
 2607 187e 1A60     	 str r2,[r3]
 2608              	.LBB149:
 2609 1880 07F58163 	 add r3,r7,#1032
 2610 1884 D3E90023 	 ldrd r2,[r3]
 2611 1888 D00B     	 lsrs r0,r2,#15
 2612 188a 3860     	 str r0,[r7]
 2613 188c 3868     	 ldr r0,[r7]
 2614 188e 40EA4340 	 orr r0,r0,r3,lsl#17
 2615 1892 3860     	 str r0,[r7]
 2616 1894 DB13     	 asrs r3,r3,#15
 2617 1896 7B60     	 str r3,[r7,#4]
 2618 1898 3B68     	 ldr r3,[r7]
 2619 189a C7F86433 	 str r3,[r7,#868]
 2620 189e D7F86433 	 ldr r3,[r7,#868]
 2621              	
 2622 18a2 03F30F03 	 ssat r3,#16,r3
 2623              	
 2624              	 .thumb
 2625 18a6 C7F86033 	 str r3,[r7,#864]
 2626 18aa D7F86033 	 ldr r3,[r7,#864]
 2627              	.LBE149:
 2628 18ae 9BB2     	 uxth r3,r3
 2629 18b0 0B80     	 strh r3,[r1]
 677:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 678:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 679:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     px = ++pSrc1;
 2630              	 .loc 1 679 0
 2631 18b2 D7F8E433 	 ldr r3,[r7,#996]
 2632 18b6 0233     	 adds r3,r3,#2
 2633 18b8 C7F8E433 	 str r3,[r7,#996]
 2634 18bc 07F5AC73 	 add r3,r7,#344
 2635 18c0 D7F8E423 	 ldr r2,[r7,#996]
 2636 18c4 1A60     	 str r2,[r3]
 680:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     py = pSrc2;
 2637              	 .loc 1 680 0
 2638 18c6 07F5AA73 	 add r3,r7,#340
 2639 18ca D7F8AC23 	 ldr r2,[r7,#940]
 2640 18ce 1A60     	 str r2,[r3]
 681:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 682:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Decrement the loop counter */
 683:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     blockSize3--;
 2641              	 .loc 1 683 0
 2642 18d0 D7F8D433 	 ldr r3,[r7,#980]
 2643 18d4 013B     	 subs r3,r3,#1
 2644 18d6 C7F8D433 	 str r3,[r7,#980]
 2645              	.L71:
 657:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 2646              	 .loc 1 657 0
 2647 18da D7F8D433 	 ldr r3,[r7,#980]
 2648 18de 002B     	 cmp r3,#0
 2649 18e0 7FF46CAF 	 bne .L75
 684:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   }
 685:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 686:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #else
 687:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 688:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** /* Run the below code for Cortex-M0 */
 689:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 690:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t *pIn1 = pSrcA;                           /* input pointer */
 691:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q15_t *pIn2 = pSrcB;                           /* coefficient pointer */
 692:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   q63_t sum;                                     /* Accumulator */
 693:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   uint32_t i, j;                                 /* loop counter */
 694:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 695:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   /* Loop to calculate output of convolution for output length number of times */
 696:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   for (i = 0; i < (srcALen + srcBLen - 1); i++)
 697:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   {
 698:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Initialize sum with zero to carry on MAC operations */
 699:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     sum = 0;
 700:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 701:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Loop to perform MAC operations according to convolution equation */
 702:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     for (j = 0; j <= i; j++)
 703:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     {
 704:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       /* Check the array limitations */
 705:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       if (((i - j) < srcBLen) && (j < srcALen))
 706:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       {
 707:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         /* z[i] += x[i-j] * y[j] */
 708:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****         sum += (q31_t) pIn1[j] * (pIn2[i - j]);
 709:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****       }
 710:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     }
 711:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 712:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     /* Store the output in the destination buffer */
 713:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****     pDst[i] = (q15_t) __SSAT((sum >> 15u), 16u);
 714:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c ****   }
 715:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 716:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** #endif /* #if (defined(ARM_MATH_CM7) || defined(ARM_MATH_CM4) || defined(ARM_MATH_CM3)) && !defined
 717:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** 
 718:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q15.c **** }
 2650              	 .loc 1 718 0
 2651 18e4 07F58367 	 add r7,r7,#1048
 2652              	.LCFI3:
 2653              	 .cfi_def_cfa_offset 24
 2654 18e8 BD46     	 mov sp,r7
 2655              	.LCFI4:
 2656              	 .cfi_def_cfa_register 13
 2657              	 
 2658 18ea BDE8900F 	 pop {r4,r7,r8,r9,r10,fp}
 2659              	.LCFI5:
 2660              	 .cfi_restore 11
 2661              	 .cfi_restore 10
 2662              	 .cfi_restore 9
 2663              	 .cfi_restore 8
 2664              	 .cfi_restore 7
 2665              	 .cfi_restore 4
 2666              	 .cfi_def_cfa_offset 0
 2667 18ee 7047     	 bx lr
 2668              	 .cfi_endproc
 2669              	.LFE135:
 2671              	 .text
 2672              	.Letext0:
 2673              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2674              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2675              	 .file 5 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_q15.c
    {standard input}:20     .text.arm_conv_q15:00000000 $t
    {standard input}:25     .text.arm_conv_q15:00000000 arm_conv_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
