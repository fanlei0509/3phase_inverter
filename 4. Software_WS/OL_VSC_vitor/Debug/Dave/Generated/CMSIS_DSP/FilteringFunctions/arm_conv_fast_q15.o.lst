   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_fast_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_fast_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_fast_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_fast_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * Title:        arm_conv_fast_q15.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * Description:  Fast Q15 Convolution
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * @addtogroup Conv
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * @param[in] srcALen length of the first input sequence.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * @param[in] srcBLen length of the second input sequence.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * @param[out] *pDst points to the location where the output result is written.  Length srcALen+src
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * @return none.
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  *
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  *
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * \par
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * This fast version uses a 32-bit accumulator with 2.30 format.
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * The accumulator maintains full precision of the intermediate multiplication results
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * but provides only a single guard bit. There is no saturation on intermediate additions.
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * Thus, if the accumulator overflows it wraps around and distorts the result.
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * The input signals should be scaled down to avoid intermediate overflows.
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * Scale down the inputs by log2(min(srcALen, srcBLen)) (log2 is read as log to the base 2) times t
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * as maximum of min(srcALen, srcBLen) number of additions are carried internally.
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * The 2.30 accumulator is right shifted by 15 bits and then saturated to 1.15 format to yield the 
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  *
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * \par
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  * See <code>arm_conv_q15()</code> for a slower implementation of this function which uses 64-bit a
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  */
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** void arm_conv_fast_q15(
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t * pSrcA,
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   uint32_t srcALen,
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t * pSrcB,
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   uint32_t srcBLen,
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t * pDst)
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** {
  28              	 .loc 1 71 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 90B4     	 push {r4,r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 4,-8
  37              	 .cfi_offset 7,-4
  38 0002 ADF51C7D 	 sub sp,sp,#624
  39              	.LCFI1:
  40              	 .cfi_def_cfa_offset 632
  41 0006 00AF     	 add r7,sp,#0
  42              	.LCFI2:
  43              	 .cfi_def_cfa_register 7
  44 0008 07F10C04 	 add r4,r7,#12
  45 000c 2060     	 str r0,[r4]
  46 000e 07F10800 	 add r0,r7,#8
  47 0012 0160     	 str r1,[r0]
  48 0014 391D     	 adds r1,r7,#4
  49 0016 0A60     	 str r2,[r1]
  50 0018 3A46     	 mov r2,r7
  51 001a 1360     	 str r3,[r2]
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *pIn1;                                   /* inputA pointer */
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *pIn2;                                   /* inputB pointer */
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *pOut = pDst;                            /* output pointer */
  52              	 .loc 1 75 0
  53 001c 07F11803 	 add r3,r7,#24
  54 0020 D7F87822 	 ldr r2,[r7,#632]
  55 0024 1A60     	 str r2,[r3]
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulator */
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers */
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q31_t x0, x1, x2, x3, c0;                      /* Temporary variables to hold state and coefficie
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   uint32_t blockSize1, blockSize2, blockSize3, j, k, count, blkCnt;     /* loop counter */
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* srcB is always made to slide across srcA. */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   if (srcALen >= srcBLen)
  56              	 .loc 1 86 0
  57 0026 07F10802 	 add r2,r7,#8
  58 002a 3B46     	 mov r3,r7
  59 002c 1268     	 ldr r2,[r2]
  60 002e 1B68     	 ldr r3,[r3]
  61 0030 9A42     	 cmp r2,r3
  62 0032 09D3     	 bcc .L2
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputA pointer */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     pIn1 = pSrcA;
  63              	 .loc 1 89 0
  64 0034 07F10C03 	 add r3,r7,#12
  65 0038 1B68     	 ldr r3,[r3]
  66 003a C7F86C32 	 str r3,[r7,#620]
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputB pointer */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     pIn2 = pSrcB;
  67              	 .loc 1 92 0
  68 003e 3B1D     	 adds r3,r7,#4
  69 0040 1B68     	 ldr r3,[r3]
  70 0042 C7F86832 	 str r3,[r7,#616]
  71 0046 16E0     	 b .L3
  72              	.L2:
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   else
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputA pointer */
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     pIn1 = pSrcB;
  73              	 .loc 1 97 0
  74 0048 3B1D     	 adds r3,r7,#4
  75 004a 1B68     	 ldr r3,[r3]
  76 004c C7F86C32 	 str r3,[r7,#620]
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputB pointer */
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     pIn2 = pSrcA;
  77              	 .loc 1 100 0
  78 0050 07F10C03 	 add r3,r7,#12
  79 0054 1B68     	 ldr r3,[r3]
  80 0056 C7F86832 	 str r3,[r7,#616]
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     j = srcBLen;
  81              	 .loc 1 103 0
  82 005a 3B46     	 mov r3,r7
  83 005c 1B68     	 ldr r3,[r3]
  84 005e C7F83C32 	 str r3,[r7,#572]
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     srcBLen = srcALen;
  85              	 .loc 1 104 0
  86 0062 3B46     	 mov r3,r7
  87 0064 07F10802 	 add r2,r7,#8
  88 0068 1268     	 ldr r2,[r2]
  89 006a 1A60     	 str r2,[r3]
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     srcALen = j;
  90              	 .loc 1 105 0
  91 006c 07F10803 	 add r3,r7,#8
  92 0070 D7F83C22 	 ldr r2,[r7,#572]
  93 0074 1A60     	 str r2,[r3]
  94              	.L3:
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The function is internally
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * divided into three stages according to the number of multiplications that has to be
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * taken place between inputA samples and inputB samples. In the first stage of the
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * algorithm, the multiplications increase by one for every iteration.
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * In the second stage of the algorithm, srcBLen number of multiplications are done.
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * In the third stage of the algorithm, the multiplications decrease by one
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * for every iteration. */
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The algorithm is implemented in three stages.
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      The loop counters of each stage is initiated here. */
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   blockSize1 = srcBLen - 1u;
  95              	 .loc 1 119 0
  96 0076 3B46     	 mov r3,r7
  97 0078 1B68     	 ldr r3,[r3]
  98 007a 013B     	 subs r3,r3,#1
  99 007c C7F84432 	 str r3,[r7,#580]
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   blockSize2 = srcALen - (srcBLen - 1u);
 100              	 .loc 1 120 0
 101 0080 07F10802 	 add r2,r7,#8
 102 0084 3B46     	 mov r3,r7
 103 0086 1268     	 ldr r2,[r2]
 104 0088 1B68     	 ldr r3,[r3]
 105 008a D31A     	 subs r3,r2,r3
 106 008c 0133     	 adds r3,r3,#1
 107 008e C7F82C32 	 str r3,[r7,#556]
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   blockSize3 = blockSize1;
 108              	 .loc 1 121 0
 109 0092 D7F84432 	 ldr r3,[r7,#580]
 110 0096 C7F84032 	 str r3,[r7,#576]
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------------
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Initializations of stage1
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * -------------------------*/
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* sum = x[0] * y[0]
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[0] * y[1] + x[1] * y[0]
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ....
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    */
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      The count variable holds the number of MAC operations performed */
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   count = 1u;
 111              	 .loc 1 135 0
 112 009a 0123     	 movs r3,#1
 113 009c C7F83432 	 str r3,[r7,#564]
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputA */
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   px = pIn1;
 114              	 .loc 1 138 0
 115 00a0 07F11403 	 add r3,r7,#20
 116 00a4 D7F86C22 	 ldr r2,[r7,#620]
 117 00a8 1A60     	 str r2,[r3]
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputB */
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   py = pIn2;
 118              	 .loc 1 141 0
 119 00aa 07F11003 	 add r3,r7,#16
 120 00ae D7F86822 	 ldr r2,[r7,#616]
 121 00b2 1A60     	 str r2,[r3]
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* ------------------------
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Stage1 process
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ----------------------*/
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* For loop unrolling by 4, this stage is divided into two. */
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* First part of this stage computes the MAC operations less than 4 */
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The first part of the stage starts here */
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   while ((count < 4u) && (blockSize1 > 0u))
 122              	 .loc 1 153 0
 123 00b4 5CE0     	 b .L4
 124              	.L9:
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
 125              	 .loc 1 156 0
 126 00b6 0023     	 movs r3,#0
 127 00b8 C7F86432 	 str r3,[r7,#612]
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Loop over number of MAC operations between
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      * inputA samples and inputB samples */
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = count;
 128              	 .loc 1 160 0
 129 00bc D7F83432 	 ldr r3,[r7,#564]
 130 00c0 C7F83832 	 str r3,[r7,#568]
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
 131              	 .loc 1 162 0
 132 00c4 2CE0     	 b .L5
 133              	.L7:
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLAD(*px++, *py--, sum);
 134              	 .loc 1 165 0
 135 00c6 07F11403 	 add r3,r7,#20
 136 00ca 1B68     	 ldr r3,[r3]
 137 00cc 991C     	 adds r1,r3,#2
 138 00ce 07F11402 	 add r2,r7,#20
 139 00d2 1160     	 str r1,[r2]
 140 00d4 1B88     	 ldrh r3,[r3]
 141 00d6 19B2     	 sxth r1,r3
 142 00d8 07F11003 	 add r3,r7,#16
 143 00dc 1B68     	 ldr r3,[r3]
 144 00de 981E     	 subs r0,r3,#2
 145 00e0 07F11002 	 add r2,r7,#16
 146 00e4 1060     	 str r0,[r2]
 147 00e6 1B88     	 ldrh r3,[r3]
 148 00e8 1AB2     	 sxth r2,r3
 149 00ea D7F86432 	 ldr r3,[r7,#612]
 150 00ee C7F81812 	 str r1,[r7,#536]
 151 00f2 C7F81422 	 str r2,[r7,#532]
 152 00f6 C7F81032 	 str r3,[r7,#528]
 153              	.LBB66:
 154              	.LBB67:
 155              	 .file 2 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.1
   5:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     02. February 2017
   6:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  36:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                     __asm
  37:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  39:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                  inline
  40:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  41:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  44:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  47:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  48:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  50:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  51:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  53:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  65:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  71:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  72:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  76:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  77:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  78:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  79:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  83:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  85:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0U);
 644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 734:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 735:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 739:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 740:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 744:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 747:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 751:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 753:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 755:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 756:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 758:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 764:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 766:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 767:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 768:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 769:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 773:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 774:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 776:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 779:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 780:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 781:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 783:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 784:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 785:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 787:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 788:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 789:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 791:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 792:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 793:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 795:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 796:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 797:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 799:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 800:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 802:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 803:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 807:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 808:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 810:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 813:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 814:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 815:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 817:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 818:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 819:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 820:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 821:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 822:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 827:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 828:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 830:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 832:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 833:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 834:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 835:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 836:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 841:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 843:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 845:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 846:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 848:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 849:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 850:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 851:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 852:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 853:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 858:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 859:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 861:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   {
 864:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 865:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 866:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     s--;
 867:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 868:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 870:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 871:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 872:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 873:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 874:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 875:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Count leading zeros
 876:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 877:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 878:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             number of leading zeros in value
 879:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 880:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CLZ             __builtin_clz
 881:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 882:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 883:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 884:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 885:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 886:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 887:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 888:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 889:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 890:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 891:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 892:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 893:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDREXB(volatile uint8_t *addr)
 894:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 895:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 896:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 897:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 898:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 899:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 900:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 901:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 902:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 903:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 904:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 905:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 906:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 907:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 908:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 909:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 910:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 911:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 912:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 913:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 914:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 915:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDREXH(volatile uint16_t *addr)
 916:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 917:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 918:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 920:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 921:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 922:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 923:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 924:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 925:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 926:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 927:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 928:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 929:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 930:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 931:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 932:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 933:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 934:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 935:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 936:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 937:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDREXW(volatile uint32_t *addr)
 938:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 939:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 940:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 941:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 942:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 943:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 944:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 945:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 946:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 947:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 948:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 949:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 950:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 951:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 952:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 953:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 954:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *a
 955:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 956:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 957:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 958:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 959:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 960:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 962:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 963:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 964:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 965:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 966:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 967:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 968:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 969:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 970:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 971:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXH(uint16_t value, volatile uint16_t 
 972:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 973:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 974:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 975:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 976:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 977:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 978:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 979:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 980:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 981:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 982:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 983:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 984:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 985:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 986:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 987:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 988:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t 
 989:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 990:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 991:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 992:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 993:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 994:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 995:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 996:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 997:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 998:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Remove the exclusive lock
 999:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1000:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1001:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __CLREX(void)
1002:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1003:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1004:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1005:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1006:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1007:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1008:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1009:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1010:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1011:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1012:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1013:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1014:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1015:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1016:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Signed Saturate
1017:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates a signed value.
1018:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1019:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1020:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1021:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1022:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1023:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1024:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1025:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1026:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1027:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1028:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1029:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1030:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1031:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Unsigned Saturate
1032:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates an unsigned value.
1033:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1034:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1035:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1036:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1037:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1038:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1039:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1040:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1041:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1042:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1043:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1044:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1045:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1046:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1047:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1048:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1049:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
1050:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
1051:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1052:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RRX(uint32_t value)
1053:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1054:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1055:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1056:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1057:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1058:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1059:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1060:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1061:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1062:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1063:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1064:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1065:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1066:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1067:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1068:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1069:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1070:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1071:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1072:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1073:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1074:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1075:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1076:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1077:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1078:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1079:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1080:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1081:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1082:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1083:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1084:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1085:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1086:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1087:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1088:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1089:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1090:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1091:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1092:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1093:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1094:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1095:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1096:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1097:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1098:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1099:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDRT(volatile uint32_t *ptr)
1112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAB(volatile uint8_t *ptr)
1169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAH(volatile uint16_t *ptr)
1184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDA(volatile uint32_t *ptr)
1199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *p
1297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t 
1314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *
1331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated SIMD instructions
1347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
1348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
1349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__ARM_FEATURE_DSP == 1)                             /* ToDo ARMCLANG: This should be ARCH >= A
1351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32
1651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTB16(uint32_t op1)
1673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTB16(uint32_t op1)
1689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32
1721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 156              	 .loc 2 1724 0
 157 00fa D7F81832 	 ldr r3,[r7,#536]
 158 00fe D7F81422 	 ldr r2,[r7,#532]
 159 0102 D7F81012 	 ldr r1,[r7,#528]
 160              	
 161 0106 23FB0213 	 smlad r3,r3,r2,r1
 162              	
 163              	 .thumb
 164 010a C7F80C32 	 str r3,[r7,#524]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 165              	 .loc 2 1725 0
 166 010e D7F80C32 	 ldr r3,[r7,#524]
 167              	.LBE67:
 168              	.LBE66:
 169              	 .loc 1 165 0
 170 0112 C7F86432 	 str r3,[r7,#612]
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 171              	 .loc 1 168 0
 172 0116 D7F83832 	 ldr r3,[r7,#568]
 173 011a 013B     	 subs r3,r3,#1
 174 011c C7F83832 	 str r3,[r7,#568]
 175              	.L5:
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 176              	 .loc 1 162 0
 177 0120 D7F83832 	 ldr r3,[r7,#568]
 178 0124 002B     	 cmp r3,#0
 179 0126 CED1     	 bne .L7
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
 180              	 .loc 1 172 0
 181 0128 07F11803 	 add r3,r7,#24
 182 012c 1B68     	 ldr r3,[r3]
 183 012e 991C     	 adds r1,r3,#2
 184 0130 07F11802 	 add r2,r7,#24
 185 0134 1160     	 str r1,[r2]
 186 0136 D7F86422 	 ldr r2,[r7,#612]
 187 013a D213     	 asrs r2,r2,#15
 188 013c 92B2     	 uxth r2,r2
 189 013e 1A80     	 strh r2,[r3]
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     py = pIn2 + count;
 190              	 .loc 1 175 0
 191 0140 D7F83432 	 ldr r3,[r7,#564]
 192 0144 5B00     	 lsls r3,r3,#1
 193 0146 D7F86822 	 ldr r2,[r7,#616]
 194 014a 1A44     	 add r2,r2,r3
 195 014c 07F11003 	 add r3,r7,#16
 196 0150 1A60     	 str r2,[r3]
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     px = pIn1;
 197              	 .loc 1 176 0
 198 0152 07F11403 	 add r3,r7,#20
 199 0156 D7F86C22 	 ldr r2,[r7,#620]
 200 015a 1A60     	 str r2,[r3]
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Increment the MAC count */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     count++;
 201              	 .loc 1 179 0
 202 015c D7F83432 	 ldr r3,[r7,#564]
 203 0160 0133     	 adds r3,r3,#1
 204 0162 C7F83432 	 str r3,[r7,#564]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement the loop counter */
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize1--;
 205              	 .loc 1 182 0
 206 0166 D7F84432 	 ldr r3,[r7,#580]
 207 016a 013B     	 subs r3,r3,#1
 208 016c C7F84432 	 str r3,[r7,#580]
 209              	.L4:
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 210              	 .loc 1 153 0
 211 0170 D7F83432 	 ldr r3,[r7,#564]
 212 0174 032B     	 cmp r3,#3
 213 0176 03D8     	 bhi .L8
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 214              	 .loc 1 153 0 is_stmt 0 discriminator 1
 215 0178 D7F84432 	 ldr r3,[r7,#580]
 216 017c 002B     	 cmp r3,#0
 217 017e 9AD1     	 bne .L9
 218              	.L8:
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The second part of the stage starts here */
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The internal loop, over count, is unrolled by 4 */
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* To, read the last two inputB samples using SIMD:
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   py = py - 1;
 219              	 .loc 1 189 0 is_stmt 1
 220 0180 07F11003 	 add r3,r7,#16
 221 0184 1B68     	 ldr r3,[r3]
 222 0186 9A1E     	 subs r2,r3,#2
 223 0188 07F11003 	 add r3,r7,#16
 224 018c 1A60     	 str r2,[r3]
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   while (blockSize1 > 0u)
 225              	 .loc 1 191 0
 226 018e BFE0     	 b .L10
 227              	.L18:
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
 228              	 .loc 1 194 0
 229 0190 0023     	 movs r3,#0
 230 0192 C7F86432 	 str r3,[r7,#612]
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = count >> 2u;
 231              	 .loc 1 197 0
 232 0196 D7F83432 	 ldr r3,[r7,#564]
 233 019a 9B08     	 lsrs r3,r3,#2
 234 019c C7F83832 	 str r3,[r7,#568]
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
 235              	 .loc 1 201 0
 236 01a0 4CE0     	 b .L11
 237              	.L14:
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* x[0], x[1] are multiplied with y[srcBLen - 1], y[srcBLen - 2] respectively */
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 238              	 .loc 1 205 0
 239 01a2 07F11402 	 add r2,r7,#20
 240 01a6 1368     	 ldr r3,[r2]
 241 01a8 191D     	 adds r1,r3,#4
 242 01aa 1160     	 str r1,[r2]
 243 01ac 1B68     	 ldr r3,[r3]
 244 01ae 1846     	 mov r0,r3
 245 01b0 07F11002 	 add r2,r7,#16
 246 01b4 1368     	 ldr r3,[r2]
 247 01b6 191F     	 subs r1,r3,#4
 248 01b8 1160     	 str r1,[r2]
 249 01ba 1B68     	 ldr r3,[r3]
 250 01bc 1A46     	 mov r2,r3
 251 01be D7F86432 	 ldr r3,[r7,#612]
 252 01c2 C7F80802 	 str r0,[r7,#520]
 253 01c6 C7F80422 	 str r2,[r7,#516]
 254 01ca C7F80032 	 str r3,[r7,#512]
 255              	.LBB68:
 256              	.LBB69:
1726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint3
1729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 257              	 .loc 2 1732 0
 258 01ce D7F80832 	 ldr r3,[r7,#520]
 259 01d2 D7F80422 	 ldr r2,[r7,#516]
 260 01d6 D7F80012 	 ldr r1,[r7,#512]
 261              	
 262 01da 23FB1213 	 smladx r3,r3,r2,r1
 263              	
 264              	 .thumb
 265 01de C7F8FC31 	 str r3,[r7,#508]
1733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 266              	 .loc 2 1733 0
 267 01e2 D7F8FC31 	 ldr r3,[r7,#508]
 268              	.LBE69:
 269              	.LBE68:
 270              	 .loc 1 205 0
 271 01e6 C7F86432 	 str r3,[r7,#612]
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* x[2], x[3] are multiplied with y[srcBLen - 3], y[srcBLen - 4] respectively */
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 272              	 .loc 1 207 0
 273 01ea 07F11402 	 add r2,r7,#20
 274 01ee 1368     	 ldr r3,[r2]
 275 01f0 191D     	 adds r1,r3,#4
 276 01f2 1160     	 str r1,[r2]
 277 01f4 1B68     	 ldr r3,[r3]
 278 01f6 1846     	 mov r0,r3
 279 01f8 07F11002 	 add r2,r7,#16
 280 01fc 1368     	 ldr r3,[r2]
 281 01fe 191F     	 subs r1,r3,#4
 282 0200 1160     	 str r1,[r2]
 283 0202 1B68     	 ldr r3,[r3]
 284 0204 1A46     	 mov r2,r3
 285 0206 D7F86432 	 ldr r3,[r7,#612]
 286 020a C7F8F801 	 str r0,[r7,#504]
 287 020e C7F8F421 	 str r2,[r7,#500]
 288 0212 C7F8F031 	 str r3,[r7,#496]
 289              	.LBB70:
 290              	.LBB71:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 291              	 .loc 2 1732 0
 292 0216 D7F8F831 	 ldr r3,[r7,#504]
 293 021a D7F8F421 	 ldr r2,[r7,#500]
 294 021e D7F8F011 	 ldr r1,[r7,#496]
 295              	
 296 0222 23FB1213 	 smladx r3,r3,r2,r1
 297              	
 298              	 .thumb
 299 0226 C7F8EC31 	 str r3,[r7,#492]
 300              	 .loc 2 1733 0
 301 022a D7F8EC31 	 ldr r3,[r7,#492]
 302              	.LBE71:
 303              	.LBE70:
 304              	 .loc 1 207 0
 305 022e C7F86432 	 str r3,[r7,#612]
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 306              	 .loc 1 210 0
 307 0232 D7F83832 	 ldr r3,[r7,#568]
 308 0236 013B     	 subs r3,r3,#1
 309 0238 C7F83832 	 str r3,[r7,#568]
 310              	.L11:
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 311              	 .loc 1 201 0
 312 023c D7F83832 	 ldr r3,[r7,#568]
 313 0240 002B     	 cmp r3,#0
 314 0242 AED1     	 bne .L14
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* For the next MAC operations, the pointer py is used without SIMD
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      * So, py is incremented by 1 */
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     py = py + 1u;
 315              	 .loc 1 215 0
 316 0244 07F11003 	 add r3,r7,#16
 317 0248 1B68     	 ldr r3,[r3]
 318 024a 9A1C     	 adds r2,r3,#2
 319 024c 07F11003 	 add r3,r7,#16
 320 0250 1A60     	 str r2,[r3]
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      ** No loop unrolling is used. */
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = count % 0x4u;
 321              	 .loc 1 219 0
 322 0252 D7F83432 	 ldr r3,[r7,#564]
 323 0256 03F00303 	 and r3,r3,#3
 324 025a C7F83832 	 str r3,[r7,#568]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
 325              	 .loc 1 221 0
 326 025e 2CE0     	 b .L15
 327              	.L17:
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLAD(*px++, *py--, sum);
 328              	 .loc 1 224 0
 329 0260 07F11403 	 add r3,r7,#20
 330 0264 1B68     	 ldr r3,[r3]
 331 0266 991C     	 adds r1,r3,#2
 332 0268 07F11402 	 add r2,r7,#20
 333 026c 1160     	 str r1,[r2]
 334 026e 1B88     	 ldrh r3,[r3]
 335 0270 19B2     	 sxth r1,r3
 336 0272 07F11003 	 add r3,r7,#16
 337 0276 1B68     	 ldr r3,[r3]
 338 0278 981E     	 subs r0,r3,#2
 339 027a 07F11002 	 add r2,r7,#16
 340 027e 1060     	 str r0,[r2]
 341 0280 1B88     	 ldrh r3,[r3]
 342 0282 1AB2     	 sxth r2,r3
 343 0284 D7F86432 	 ldr r3,[r7,#612]
 344 0288 C7F8E811 	 str r1,[r7,#488]
 345 028c C7F8E421 	 str r2,[r7,#484]
 346 0290 C7F8E031 	 str r3,[r7,#480]
 347              	.LBB72:
 348              	.LBB73:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 349              	 .loc 2 1724 0
 350 0294 D7F8E831 	 ldr r3,[r7,#488]
 351 0298 D7F8E421 	 ldr r2,[r7,#484]
 352 029c D7F8E011 	 ldr r1,[r7,#480]
 353              	
 354 02a0 23FB0213 	 smlad r3,r3,r2,r1
 355              	
 356              	 .thumb
 357 02a4 C7F8DC31 	 str r3,[r7,#476]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 358              	 .loc 2 1725 0
 359 02a8 D7F8DC31 	 ldr r3,[r7,#476]
 360              	.LBE73:
 361              	.LBE72:
 362              	 .loc 1 224 0
 363 02ac C7F86432 	 str r3,[r7,#612]
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 364              	 .loc 1 227 0
 365 02b0 D7F83832 	 ldr r3,[r7,#568]
 366 02b4 013B     	 subs r3,r3,#1
 367 02b6 C7F83832 	 str r3,[r7,#568]
 368              	.L15:
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 369              	 .loc 1 221 0
 370 02ba D7F83832 	 ldr r3,[r7,#568]
 371 02be 002B     	 cmp r3,#0
 372 02c0 CED1     	 bne .L17
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
 373              	 .loc 1 231 0
 374 02c2 07F11803 	 add r3,r7,#24
 375 02c6 1B68     	 ldr r3,[r3]
 376 02c8 991C     	 adds r1,r3,#2
 377 02ca 07F11802 	 add r2,r7,#24
 378 02ce 1160     	 str r1,[r2]
 379 02d0 D7F86422 	 ldr r2,[r7,#612]
 380 02d4 D213     	 asrs r2,r2,#15
 381 02d6 92B2     	 uxth r2,r2
 382 02d8 1A80     	 strh r2,[r3]
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     py = pIn2 + (count - 1u);
 383              	 .loc 1 234 0
 384 02da D7F83432 	 ldr r3,[r7,#564]
 385 02de 03F10043 	 add r3,r3,#-2147483648
 386 02e2 013B     	 subs r3,r3,#1
 387 02e4 5B00     	 lsls r3,r3,#1
 388 02e6 D7F86822 	 ldr r2,[r7,#616]
 389 02ea 1A44     	 add r2,r2,r3
 390 02ec 07F11003 	 add r3,r7,#16
 391 02f0 1A60     	 str r2,[r3]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     px = pIn1;
 392              	 .loc 1 235 0
 393 02f2 07F11403 	 add r3,r7,#20
 394 02f6 D7F86C22 	 ldr r2,[r7,#620]
 395 02fa 1A60     	 str r2,[r3]
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Increment the MAC count */
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     count++;
 396              	 .loc 1 238 0
 397 02fc D7F83432 	 ldr r3,[r7,#564]
 398 0300 0133     	 adds r3,r3,#1
 399 0302 C7F83432 	 str r3,[r7,#564]
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement the loop counter */
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize1--;
 400              	 .loc 1 241 0
 401 0306 D7F84432 	 ldr r3,[r7,#580]
 402 030a 013B     	 subs r3,r3,#1
 403 030c C7F84432 	 str r3,[r7,#580]
 404              	.L10:
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 405              	 .loc 1 191 0
 406 0310 D7F84432 	 ldr r3,[r7,#580]
 407 0314 002B     	 cmp r3,#0
 408 0316 7FF43BAF 	 bne .L18
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------------
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Initializations of stage2
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ------------------------*/
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ....
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y[0
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    */
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputA */
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   px = pIn1;
 409              	 .loc 1 255 0
 410 031a 07F11403 	 add r3,r7,#20
 411 031e D7F86C22 	 ldr r2,[r7,#620]
 412 0322 1A60     	 str r2,[r3]
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputB */
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 413              	 .loc 1 258 0
 414 0324 3B46     	 mov r3,r7
 415 0326 1B68     	 ldr r3,[r3]
 416 0328 03F10043 	 add r3,r3,#-2147483648
 417 032c 013B     	 subs r3,r3,#1
 418 032e 5B00     	 lsls r3,r3,#1
 419 0330 D7F86822 	 ldr r2,[r7,#616]
 420 0334 1344     	 add r3,r3,r2
 421 0336 C7F82832 	 str r3,[r7,#552]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   py = pSrc2;
 422              	 .loc 1 259 0
 423 033a 07F11003 	 add r3,r7,#16
 424 033e D7F82822 	 ldr r2,[r7,#552]
 425 0342 1A60     	 str r2,[r3]
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* count is the index by which the pointer pIn1 to be incremented */
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   count = 0u;
 426              	 .loc 1 262 0
 427 0344 0023     	 movs r3,#0
 428 0346 C7F83432 	 str r3,[r7,#564]
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Stage2 process
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * -------------------*/
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * So, to loop unroll over blockSize2,
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * srcBLen should be greater than or equal to 4 */
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   if (srcBLen >= 4u)
 429              	 .loc 1 272 0
 430 034a 3B46     	 mov r3,r7
 431 034c 1B68     	 ldr r3,[r3]
 432 034e 032B     	 cmp r3,#3
 433 0350 40F2EC84 	 bls .L19
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Loop unroll over blockSize2, by 4 */
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blkCnt = blockSize2 >> 2u;
 434              	 .loc 1 275 0
 435 0354 D7F82C32 	 ldr r3,[r7,#556]
 436 0358 9B08     	 lsrs r3,r3,#2
 437 035a C7F83032 	 str r3,[r7,#560]
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (blkCnt > 0u)
 438              	 .loc 1 277 0
 439 035e 00F010BC 	 b .L20
 440              	.L49:
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       py = py - 1u;
 441              	 .loc 1 279 0
 442 0362 07F11003 	 add r3,r7,#16
 443 0366 1B68     	 ldr r3,[r3]
 444 0368 9A1E     	 subs r2,r3,#2
 445 036a 07F11003 	 add r3,r7,#16
 446 036e 1A60     	 str r2,[r3]
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Set all accumulators to zero */
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       acc0 = 0;
 447              	 .loc 1 282 0
 448 0370 0023     	 movs r3,#0
 449 0372 C7F86032 	 str r3,[r7,#608]
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       acc1 = 0;
 450              	 .loc 1 283 0
 451 0376 0023     	 movs r3,#0
 452 0378 C7F85C32 	 str r3,[r7,#604]
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       acc2 = 0;
 453              	 .loc 1 284 0
 454 037c 0023     	 movs r3,#0
 455 037e C7F85832 	 str r3,[r7,#600]
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       acc3 = 0;
 456              	 .loc 1 285 0
 457 0382 0023     	 movs r3,#0
 458 0384 C7F85432 	 str r3,[r7,#596]
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* read x[0], x[1] samples */
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       x0 = *__SIMD32(px);
 459              	 .loc 1 289 0
 460 0388 07F11403 	 add r3,r7,#20
 461 038c 1B68     	 ldr r3,[r3]
 462 038e 1B68     	 ldr r3,[r3]
 463 0390 C7F84C32 	 str r3,[r7,#588]
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* read x[1], x[2] samples */
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       x1 = _SIMD32_OFFSET(px+1);
 464              	 .loc 1 291 0
 465 0394 07F11403 	 add r3,r7,#20
 466 0398 1B68     	 ldr r3,[r3]
 467 039a D3F80230 	 ldr r3,[r3,#2]
 468 039e C7F84832 	 str r3,[r7,#584]
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  px+= 2u;
 469              	 .loc 1 292 0
 470 03a2 07F11403 	 add r3,r7,#20
 471 03a6 1B68     	 ldr r3,[r3]
 472 03a8 1A1D     	 adds r2,r3,#4
 473 03aa 07F11403 	 add r3,r7,#20
 474 03ae 1A60     	 str r2,[r3]
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen >> 2u;
 475              	 .loc 1 296 0
 476 03b0 3B46     	 mov r3,r7
 477 03b2 1B68     	 ldr r3,[r3]
 478 03b4 9B08     	 lsrs r3,r3,#2
 479 03b6 C7F83832 	 str r3,[r7,#568]
 480              	.L29:
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       do
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read the last two inputB samples using SIMD:
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****          * y[srcBLen - 1] and y[srcBLen - 2] */
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = *__SIMD32(py)--;
 481              	 .loc 1 304 0 discriminator 1
 482 03ba 07F11002 	 add r2,r7,#16
 483 03be 1368     	 ldr r3,[r2]
 484 03c0 191F     	 subs r1,r3,#4
 485 03c2 1160     	 str r1,[r2]
 486 03c4 1B68     	 ldr r3,[r3]
 487 03c6 C7F82432 	 str r3,[r7,#548]
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
 488              	 .loc 1 307 0 discriminator 1
 489 03ca D7F84C12 	 ldr r1,[r7,#588]
 490 03ce D7F82422 	 ldr r2,[r7,#548]
 491 03d2 D7F86032 	 ldr r3,[r7,#608]
 492 03d6 C7F8D811 	 str r1,[r7,#472]
 493 03da C7F8D421 	 str r2,[r7,#468]
 494 03de C7F8D031 	 str r3,[r7,#464]
 495              	.LBB74:
 496              	.LBB75:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 497              	 .loc 2 1732 0 discriminator 1
 498 03e2 D7F8D831 	 ldr r3,[r7,#472]
 499 03e6 D7F8D421 	 ldr r2,[r7,#468]
 500 03ea D7F8D011 	 ldr r1,[r7,#464]
 501              	
 502 03ee 23FB1213 	 smladx r3,r3,r2,r1
 503              	
 504              	 .thumb
 505 03f2 C7F8CC31 	 str r3,[r7,#460]
 506              	 .loc 2 1733 0 discriminator 1
 507 03f6 D7F8CC31 	 ldr r3,[r7,#460]
 508              	.LBE75:
 509              	.LBE74:
 510              	 .loc 1 307 0 discriminator 1
 511 03fa C7F86032 	 str r3,[r7,#608]
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
 512              	 .loc 1 310 0 discriminator 1
 513 03fe D7F84812 	 ldr r1,[r7,#584]
 514 0402 D7F82422 	 ldr r2,[r7,#548]
 515 0406 D7F85C32 	 ldr r3,[r7,#604]
 516 040a C7F8C811 	 str r1,[r7,#456]
 517 040e C7F8C421 	 str r2,[r7,#452]
 518 0412 C7F8C031 	 str r3,[r7,#448]
 519              	.LBB76:
 520              	.LBB77:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 521              	 .loc 2 1732 0 discriminator 1
 522 0416 D7F8C831 	 ldr r3,[r7,#456]
 523 041a D7F8C421 	 ldr r2,[r7,#452]
 524 041e D7F8C011 	 ldr r1,[r7,#448]
 525              	
 526 0422 23FB1213 	 smladx r3,r3,r2,r1
 527              	
 528              	 .thumb
 529 0426 C7F8BC31 	 str r3,[r7,#444]
 530              	 .loc 2 1733 0 discriminator 1
 531 042a D7F8BC31 	 ldr r3,[r7,#444]
 532              	.LBE77:
 533              	.LBE76:
 534              	 .loc 1 310 0 discriminator 1
 535 042e C7F85C32 	 str r3,[r7,#604]
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[2], x[3] */
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         x2 = *__SIMD32(px);
 536              	 .loc 1 313 0 discriminator 1
 537 0432 07F11403 	 add r3,r7,#20
 538 0436 1B68     	 ldr r3,[r3]
 539 0438 1B68     	 ldr r3,[r3]
 540 043a C7F82032 	 str r3,[r7,#544]
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[3], x[4] */
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         x3 = _SIMD32_OFFSET(px+1);
 541              	 .loc 1 316 0 discriminator 1
 542 043e 07F11403 	 add r3,r7,#20
 543 0442 1B68     	 ldr r3,[r3]
 544 0444 D3F80230 	 ldr r3,[r3,#2]
 545 0448 C7F81C32 	 str r3,[r7,#540]
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
 546              	 .loc 1 319 0 discriminator 1
 547 044c D7F82012 	 ldr r1,[r7,#544]
 548 0450 D7F82422 	 ldr r2,[r7,#548]
 549 0454 D7F85832 	 ldr r3,[r7,#600]
 550 0458 C7F8B811 	 str r1,[r7,#440]
 551 045c C7F8B421 	 str r2,[r7,#436]
 552 0460 C7F8B031 	 str r3,[r7,#432]
 553              	.LBB78:
 554              	.LBB79:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 555              	 .loc 2 1732 0 discriminator 1
 556 0464 D7F8B831 	 ldr r3,[r7,#440]
 557 0468 D7F8B421 	 ldr r2,[r7,#436]
 558 046c D7F8B011 	 ldr r1,[r7,#432]
 559              	
 560 0470 23FB1213 	 smladx r3,r3,r2,r1
 561              	
 562              	 .thumb
 563 0474 C7F8AC31 	 str r3,[r7,#428]
 564              	 .loc 2 1733 0 discriminator 1
 565 0478 D7F8AC31 	 ldr r3,[r7,#428]
 566              	.LBE79:
 567              	.LBE78:
 568              	 .loc 1 319 0 discriminator 1
 569 047c C7F85832 	 str r3,[r7,#600]
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
 570              	 .loc 1 322 0 discriminator 1
 571 0480 D7F81C12 	 ldr r1,[r7,#540]
 572 0484 D7F82422 	 ldr r2,[r7,#548]
 573 0488 D7F85432 	 ldr r3,[r7,#596]
 574 048c C7F8A811 	 str r1,[r7,#424]
 575 0490 C7F8A421 	 str r2,[r7,#420]
 576 0494 C7F8A031 	 str r3,[r7,#416]
 577              	.LBB80:
 578              	.LBB81:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 579              	 .loc 2 1732 0 discriminator 1
 580 0498 D7F8A831 	 ldr r3,[r7,#424]
 581 049c D7F8A421 	 ldr r2,[r7,#420]
 582 04a0 D7F8A011 	 ldr r1,[r7,#416]
 583              	
 584 04a4 23FB1213 	 smladx r3,r3,r2,r1
 585              	
 586              	 .thumb
 587 04a8 C7F89C31 	 str r3,[r7,#412]
 588              	 .loc 2 1733 0 discriminator 1
 589 04ac D7F89C31 	 ldr r3,[r7,#412]
 590              	.LBE81:
 591              	.LBE80:
 592              	 .loc 1 322 0 discriminator 1
 593 04b0 C7F85432 	 str r3,[r7,#596]
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 3] and y[srcBLen - 4] */
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = *__SIMD32(py)--;
 594              	 .loc 1 325 0 discriminator 1
 595 04b4 07F11002 	 add r2,r7,#16
 596 04b8 1368     	 ldr r3,[r2]
 597 04ba 191F     	 subs r1,r3,#4
 598 04bc 1160     	 str r1,[r2]
 599 04be 1B68     	 ldr r3,[r3]
 600 04c0 C7F82432 	 str r3,[r7,#548]
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x2, c0, acc0);
 601              	 .loc 1 328 0 discriminator 1
 602 04c4 D7F82012 	 ldr r1,[r7,#544]
 603 04c8 D7F82422 	 ldr r2,[r7,#548]
 604 04cc D7F86032 	 ldr r3,[r7,#608]
 605 04d0 C7F89811 	 str r1,[r7,#408]
 606 04d4 C7F89421 	 str r2,[r7,#404]
 607 04d8 C7F89031 	 str r3,[r7,#400]
 608              	.LBB82:
 609              	.LBB83:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 610              	 .loc 2 1732 0 discriminator 1
 611 04dc D7F89831 	 ldr r3,[r7,#408]
 612 04e0 D7F89421 	 ldr r2,[r7,#404]
 613 04e4 D7F89011 	 ldr r1,[r7,#400]
 614              	
 615 04e8 23FB1213 	 smladx r3,r3,r2,r1
 616              	
 617              	 .thumb
 618 04ec C7F88C31 	 str r3,[r7,#396]
 619              	 .loc 2 1733 0 discriminator 1
 620 04f0 D7F88C31 	 ldr r3,[r7,#396]
 621              	.LBE83:
 622              	.LBE82:
 623              	 .loc 1 328 0 discriminator 1
 624 04f4 C7F86032 	 str r3,[r7,#608]
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x3, c0, acc1);
 625              	 .loc 1 331 0 discriminator 1
 626 04f8 D7F81C12 	 ldr r1,[r7,#540]
 627 04fc D7F82422 	 ldr r2,[r7,#548]
 628 0500 D7F85C32 	 ldr r3,[r7,#604]
 629 0504 C7F88811 	 str r1,[r7,#392]
 630 0508 C7F88421 	 str r2,[r7,#388]
 631 050c C7F88031 	 str r3,[r7,#384]
 632              	.LBB84:
 633              	.LBB85:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 634              	 .loc 2 1732 0 discriminator 1
 635 0510 D7F88831 	 ldr r3,[r7,#392]
 636 0514 D7F88421 	 ldr r2,[r7,#388]
 637 0518 D7F88011 	 ldr r1,[r7,#384]
 638              	
 639 051c 23FB1213 	 smladx r3,r3,r2,r1
 640              	
 641              	 .thumb
 642 0520 C7F87C31 	 str r3,[r7,#380]
 643              	 .loc 2 1733 0 discriminator 1
 644 0524 D7F87C31 	 ldr r3,[r7,#380]
 645              	.LBE85:
 646              	.LBE84:
 647              	 .loc 1 331 0 discriminator 1
 648 0528 C7F85C32 	 str r3,[r7,#604]
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[4], x[5] */
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         x0 = _SIMD32_OFFSET(px+2);
 649              	 .loc 1 334 0 discriminator 1
 650 052c 07F11403 	 add r3,r7,#20
 651 0530 1B68     	 ldr r3,[r3]
 652 0532 5B68     	 ldr r3,[r3,#4]
 653 0534 C7F84C32 	 str r3,[r7,#588]
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[5], x[6] */
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         x1 = _SIMD32_OFFSET(px+3);
 654              	 .loc 1 337 0 discriminator 1
 655 0538 07F11403 	 add r3,r7,#20
 656 053c 1B68     	 ldr r3,[r3]
 657 053e D3F80630 	 ldr r3,[r3,#6]
 658 0542 C7F84832 	 str r3,[r7,#584]
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		px += 4u;
 659              	 .loc 1 338 0 discriminator 1
 660 0546 07F11403 	 add r3,r7,#20
 661 054a 1B68     	 ldr r3,[r3]
 662 054c 03F10802 	 add r2,r3,#8
 663 0550 07F11403 	 add r3,r7,#20
 664 0554 1A60     	 str r2,[r3]
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x0, c0, acc2);
 665              	 .loc 1 341 0 discriminator 1
 666 0556 D7F84C12 	 ldr r1,[r7,#588]
 667 055a D7F82432 	 ldr r3,[r7,#548]
 668 055e D7F85822 	 ldr r2,[r7,#600]
 669 0562 C7F87811 	 str r1,[r7,#376]
 670 0566 C7F87431 	 str r3,[r7,#372]
 671 056a 07F5B873 	 add r3,r7,#368
 672 056e 1A60     	 str r2,[r3]
 673              	.LBB86:
 674              	.LBB87:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 675              	 .loc 2 1732 0 discriminator 1
 676 0570 D7F87831 	 ldr r3,[r7,#376]
 677 0574 D7F87421 	 ldr r2,[r7,#372]
 678 0578 07F5B871 	 add r1,r7,#368
 679 057c 0968     	 ldr r1,[r1]
 680              	
 681 057e 23FB1212 	 smladx r2,r3,r2,r1
 682              	
 683              	 .thumb
 684 0582 07F5B673 	 add r3,r7,#364
 685 0586 1A60     	 str r2,[r3]
 686              	 .loc 2 1733 0 discriminator 1
 687 0588 07F5B673 	 add r3,r7,#364
 688 058c 1B68     	 ldr r3,[r3]
 689              	.LBE87:
 690              	.LBE86:
 691              	 .loc 1 341 0 discriminator 1
 692 058e C7F85832 	 str r3,[r7,#600]
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x1, c0, acc3);
 693              	 .loc 1 344 0 discriminator 1
 694 0592 D7F84802 	 ldr r0,[r7,#584]
 695 0596 D7F82412 	 ldr r1,[r7,#548]
 696 059a D7F85422 	 ldr r2,[r7,#596]
 697 059e 07F5B473 	 add r3,r7,#360
 698 05a2 1860     	 str r0,[r3]
 699 05a4 07F5B273 	 add r3,r7,#356
 700 05a8 1960     	 str r1,[r3]
 701 05aa 07F5B073 	 add r3,r7,#352
 702 05ae 1A60     	 str r2,[r3]
 703              	.LBB88:
 704              	.LBB89:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 705              	 .loc 2 1732 0 discriminator 1
 706 05b0 07F5B473 	 add r3,r7,#360
 707 05b4 1B68     	 ldr r3,[r3]
 708 05b6 07F5B272 	 add r2,r7,#356
 709 05ba 1268     	 ldr r2,[r2]
 710 05bc 07F5B071 	 add r1,r7,#352
 711 05c0 0968     	 ldr r1,[r1]
 712              	
 713 05c2 23FB1212 	 smladx r2,r3,r2,r1
 714              	
 715              	 .thumb
 716 05c6 07F5AE73 	 add r3,r7,#348
 717 05ca 1A60     	 str r2,[r3]
 718              	 .loc 2 1733 0 discriminator 1
 719 05cc 07F5AE73 	 add r3,r7,#348
 720 05d0 1B68     	 ldr r3,[r3]
 721              	.LBE89:
 722              	.LBE88:
 723              	 .loc 1 344 0 discriminator 1
 724 05d2 C7F85432 	 str r3,[r7,#596]
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       } while (--k);
 725              	 .loc 1 346 0 discriminator 1
 726 05d6 D7F83832 	 ldr r3,[r7,#568]
 727 05da 013B     	 subs r3,r3,#1
 728 05dc C7F83832 	 str r3,[r7,#568]
 729 05e0 D7F83832 	 ldr r3,[r7,#568]
 730 05e4 002B     	 cmp r3,#0
 731 05e6 7FF4E8AE 	 bne .L29
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* For the next MAC operations, SIMD is not used
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        * So, the 16 bit pointer if inputB, py is updated */
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        ** No loop unrolling is used. */
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen % 0x4u;
 732              	 .loc 1 353 0
 733 05ea 3B46     	 mov r3,r7
 734 05ec 1B68     	 ldr r3,[r3]
 735 05ee 03F00303 	 and r3,r3,#3
 736 05f2 C7F83832 	 str r3,[r7,#568]
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       if (k == 1u)
 737              	 .loc 1 355 0
 738 05f6 D7F83832 	 ldr r3,[r7,#568]
 739 05fa 012B     	 cmp r3,#1
 740 05fc 40F0A280 	 bne .L30
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 5] */
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = *(py+1);
 741              	 .loc 1 358 0
 742 0600 07F11003 	 add r3,r7,#16
 743 0604 1B68     	 ldr r3,[r3]
 744 0606 0233     	 adds r3,r3,#2
 745 0608 1B88     	 ldrh r3,[r3]
 746 060a 1BB2     	 sxth r3,r3
 747 060c C7F82432 	 str r3,[r7,#548]
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 << 16u;
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 748              	 .loc 1 366 0
 749 0610 D7F82432 	 ldr r3,[r7,#548]
 750 0614 9BB2     	 uxth r3,r3
 751 0616 C7F82432 	 str r3,[r7,#548]
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[7] */
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         x3 = *__SIMD32(px);
 752              	 .loc 1 371 0
 753 061a 07F11403 	 add r3,r7,#20
 754 061e 1B68     	 ldr r3,[r3]
 755 0620 1B68     	 ldr r3,[r3]
 756 0622 C7F81C32 	 str r3,[r7,#540]
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		px++;
 757              	 .loc 1 372 0
 758 0626 07F11403 	 add r3,r7,#20
 759 062a 1B68     	 ldr r3,[r3]
 760 062c 9A1C     	 adds r2,r3,#2
 761 062e 07F11403 	 add r3,r7,#20
 762 0632 1A60     	 str r2,[r3]
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
 763              	 .loc 1 375 0
 764 0634 D7F84C02 	 ldr r0,[r7,#588]
 765 0638 D7F82412 	 ldr r1,[r7,#548]
 766 063c D7F86022 	 ldr r2,[r7,#608]
 767 0640 07F5AC73 	 add r3,r7,#344
 768 0644 1860     	 str r0,[r3]
 769 0646 07F5AA73 	 add r3,r7,#340
 770 064a 1960     	 str r1,[r3]
 771 064c 07F5A873 	 add r3,r7,#336
 772 0650 1A60     	 str r2,[r3]
 773              	.LBB90:
 774              	.LBB91:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 775              	 .loc 2 1724 0
 776 0652 07F5AC73 	 add r3,r7,#344
 777 0656 1B68     	 ldr r3,[r3]
 778 0658 07F5AA72 	 add r2,r7,#340
 779 065c 1268     	 ldr r2,[r2]
 780 065e 07F5A871 	 add r1,r7,#336
 781 0662 0968     	 ldr r1,[r1]
 782              	
 783 0664 23FB0212 	 smlad r2,r3,r2,r1
 784              	
 785              	 .thumb
 786 0668 07F5A673 	 add r3,r7,#332
 787 066c 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 788              	 .loc 2 1725 0
 789 066e 07F5A673 	 add r3,r7,#332
 790 0672 1B68     	 ldr r3,[r3]
 791              	.LBE91:
 792              	.LBE90:
 793              	 .loc 1 375 0
 794 0674 C7F86032 	 str r3,[r7,#608]
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
 795              	 .loc 1 376 0
 796 0678 D7F84802 	 ldr r0,[r7,#584]
 797 067c D7F82412 	 ldr r1,[r7,#548]
 798 0680 D7F85C22 	 ldr r2,[r7,#604]
 799 0684 07F5A473 	 add r3,r7,#328
 800 0688 1860     	 str r0,[r3]
 801 068a 07F5A273 	 add r3,r7,#324
 802 068e 1960     	 str r1,[r3]
 803 0690 07F5A073 	 add r3,r7,#320
 804 0694 1A60     	 str r2,[r3]
 805              	.LBB92:
 806              	.LBB93:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 807              	 .loc 2 1724 0
 808 0696 07F5A473 	 add r3,r7,#328
 809 069a 1B68     	 ldr r3,[r3]
 810 069c 07F5A272 	 add r2,r7,#324
 811 06a0 1268     	 ldr r2,[r2]
 812 06a2 07F5A071 	 add r1,r7,#320
 813 06a6 0968     	 ldr r1,[r1]
 814              	
 815 06a8 23FB0212 	 smlad r2,r3,r2,r1
 816              	
 817              	 .thumb
 818 06ac 07F59E73 	 add r3,r7,#316
 819 06b0 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 820              	 .loc 2 1725 0
 821 06b2 07F59E73 	 add r3,r7,#316
 822 06b6 1B68     	 ldr r3,[r3]
 823              	.LBE93:
 824              	.LBE92:
 825              	 .loc 1 376 0
 826 06b8 C7F85C32 	 str r3,[r7,#604]
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x1, c0, acc2);
 827              	 .loc 1 377 0
 828 06bc D7F84802 	 ldr r0,[r7,#584]
 829 06c0 D7F82412 	 ldr r1,[r7,#548]
 830 06c4 D7F85822 	 ldr r2,[r7,#600]
 831 06c8 07F59C73 	 add r3,r7,#312
 832 06cc 1860     	 str r0,[r3]
 833 06ce 07F59A73 	 add r3,r7,#308
 834 06d2 1960     	 str r1,[r3]
 835 06d4 07F59873 	 add r3,r7,#304
 836 06d8 1A60     	 str r2,[r3]
 837              	.LBB94:
 838              	.LBB95:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 839              	 .loc 2 1732 0
 840 06da 07F59C73 	 add r3,r7,#312
 841 06de 1B68     	 ldr r3,[r3]
 842 06e0 07F59A72 	 add r2,r7,#308
 843 06e4 1268     	 ldr r2,[r2]
 844 06e6 07F59871 	 add r1,r7,#304
 845 06ea 0968     	 ldr r1,[r1]
 846              	
 847 06ec 23FB1212 	 smladx r2,r3,r2,r1
 848              	
 849              	 .thumb
 850 06f0 07F59673 	 add r3,r7,#300
 851 06f4 1A60     	 str r2,[r3]
 852              	 .loc 2 1733 0
 853 06f6 07F59673 	 add r3,r7,#300
 854 06fa 1B68     	 ldr r3,[r3]
 855              	.LBE95:
 856              	.LBE94:
 857              	 .loc 1 377 0
 858 06fc C7F85832 	 str r3,[r7,#600]
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
 859              	 .loc 1 378 0
 860 0700 D7F81C02 	 ldr r0,[r7,#540]
 861 0704 D7F82412 	 ldr r1,[r7,#548]
 862 0708 D7F85422 	 ldr r2,[r7,#596]
 863 070c 07F59473 	 add r3,r7,#296
 864 0710 1860     	 str r0,[r3]
 865 0712 07F59273 	 add r3,r7,#292
 866 0716 1960     	 str r1,[r3]
 867 0718 07F59073 	 add r3,r7,#288
 868 071c 1A60     	 str r2,[r3]
 869              	.LBB96:
 870              	.LBB97:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 871              	 .loc 2 1732 0
 872 071e 07F59473 	 add r3,r7,#296
 873 0722 1B68     	 ldr r3,[r3]
 874 0724 07F59272 	 add r2,r7,#292
 875 0728 1268     	 ldr r2,[r2]
 876 072a 07F59071 	 add r1,r7,#288
 877 072e 0968     	 ldr r1,[r1]
 878              	
 879 0730 23FB1212 	 smladx r2,r3,r2,r1
 880              	
 881              	 .thumb
 882 0734 07F58E73 	 add r3,r7,#284
 883 0738 1A60     	 str r2,[r3]
 884              	 .loc 2 1733 0
 885 073a 07F58E73 	 add r3,r7,#284
 886 073e 1B68     	 ldr r3,[r3]
 887              	.LBE97:
 888              	.LBE96:
 889              	 .loc 1 378 0
 890 0740 C7F85432 	 str r3,[r7,#596]
 891              	.L30:
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       if (k == 2u)
 892              	 .loc 1 381 0
 893 0744 D7F83832 	 ldr r3,[r7,#568]
 894 0748 022B     	 cmp r3,#2
 895 074a 40F0A280 	 bne .L35
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = _SIMD32_OFFSET(py);
 896              	 .loc 1 384 0
 897 074e 07F11003 	 add r3,r7,#16
 898 0752 1B68     	 ldr r3,[r3]
 899 0754 1B68     	 ldr r3,[r3]
 900 0756 C7F82432 	 str r3,[r7,#548]
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[7], x[8] */
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         x3 = *__SIMD32(px);
 901              	 .loc 1 387 0
 902 075a 07F11403 	 add r3,r7,#20
 903 075e 1B68     	 ldr r3,[r3]
 904 0760 1B68     	 ldr r3,[r3]
 905 0762 C7F81C32 	 str r3,[r7,#540]
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[9] */
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         x2 = _SIMD32_OFFSET(px+1);
 906              	 .loc 1 390 0
 907 0766 07F11403 	 add r3,r7,#20
 908 076a 1B68     	 ldr r3,[r3]
 909 076c D3F80230 	 ldr r3,[r3,#2]
 910 0770 C7F82032 	 str r3,[r7,#544]
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		px += 2u;
 911              	 .loc 1 391 0
 912 0774 07F11403 	 add r3,r7,#20
 913 0778 1B68     	 ldr r3,[r3]
 914 077a 1A1D     	 adds r2,r3,#4
 915 077c 07F11403 	 add r3,r7,#20
 916 0780 1A60     	 str r2,[r3]
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
 917              	 .loc 1 394 0
 918 0782 D7F84C02 	 ldr r0,[r7,#588]
 919 0786 D7F82412 	 ldr r1,[r7,#548]
 920 078a D7F86022 	 ldr r2,[r7,#608]
 921 078e 07F58C73 	 add r3,r7,#280
 922 0792 1860     	 str r0,[r3]
 923 0794 07F58A73 	 add r3,r7,#276
 924 0798 1960     	 str r1,[r3]
 925 079a 07F58873 	 add r3,r7,#272
 926 079e 1A60     	 str r2,[r3]
 927              	.LBB98:
 928              	.LBB99:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 929              	 .loc 2 1732 0
 930 07a0 07F58C73 	 add r3,r7,#280
 931 07a4 1B68     	 ldr r3,[r3]
 932 07a6 07F58A72 	 add r2,r7,#276
 933 07aa 1268     	 ldr r2,[r2]
 934 07ac 07F58871 	 add r1,r7,#272
 935 07b0 0968     	 ldr r1,[r1]
 936              	
 937 07b2 23FB1212 	 smladx r2,r3,r2,r1
 938              	
 939              	 .thumb
 940 07b6 07F58673 	 add r3,r7,#268
 941 07ba 1A60     	 str r2,[r3]
 942              	 .loc 2 1733 0
 943 07bc 07F58673 	 add r3,r7,#268
 944 07c0 1B68     	 ldr r3,[r3]
 945              	.LBE99:
 946              	.LBE98:
 947              	 .loc 1 394 0
 948 07c2 C7F86032 	 str r3,[r7,#608]
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
 949              	 .loc 1 395 0
 950 07c6 D7F84802 	 ldr r0,[r7,#584]
 951 07ca D7F82412 	 ldr r1,[r7,#548]
 952 07ce D7F85C22 	 ldr r2,[r7,#604]
 953 07d2 07F58473 	 add r3,r7,#264
 954 07d6 1860     	 str r0,[r3]
 955 07d8 07F58273 	 add r3,r7,#260
 956 07dc 1960     	 str r1,[r3]
 957 07de 07F58073 	 add r3,r7,#256
 958 07e2 1A60     	 str r2,[r3]
 959              	.LBB100:
 960              	.LBB101:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 961              	 .loc 2 1732 0
 962 07e4 07F58473 	 add r3,r7,#264
 963 07e8 1B68     	 ldr r3,[r3]
 964 07ea 07F58272 	 add r2,r7,#260
 965 07ee 1268     	 ldr r2,[r2]
 966 07f0 07F58071 	 add r1,r7,#256
 967 07f4 0968     	 ldr r1,[r1]
 968              	
 969 07f6 23FB1212 	 smladx r2,r3,r2,r1
 970              	
 971              	 .thumb
 972 07fa 07F1FC03 	 add r3,r7,#252
 973 07fe 1A60     	 str r2,[r3]
 974              	 .loc 2 1733 0
 975 0800 07F1FC03 	 add r3,r7,#252
 976 0804 1B68     	 ldr r3,[r3]
 977              	.LBE101:
 978              	.LBE100:
 979              	 .loc 1 395 0
 980 0806 C7F85C32 	 str r3,[r7,#604]
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x3, c0, acc2);
 981              	 .loc 1 396 0
 982 080a D7F81C02 	 ldr r0,[r7,#540]
 983 080e D7F82412 	 ldr r1,[r7,#548]
 984 0812 D7F85822 	 ldr r2,[r7,#600]
 985 0816 07F1F803 	 add r3,r7,#248
 986 081a 1860     	 str r0,[r3]
 987 081c 07F1F403 	 add r3,r7,#244
 988 0820 1960     	 str r1,[r3]
 989 0822 07F1F003 	 add r3,r7,#240
 990 0826 1A60     	 str r2,[r3]
 991              	.LBB102:
 992              	.LBB103:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 993              	 .loc 2 1732 0
 994 0828 07F1F803 	 add r3,r7,#248
 995 082c 1B68     	 ldr r3,[r3]
 996 082e 07F1F402 	 add r2,r7,#244
 997 0832 1268     	 ldr r2,[r2]
 998 0834 07F1F001 	 add r1,r7,#240
 999 0838 0968     	 ldr r1,[r1]
 1000              	
 1001 083a 23FB1212 	 smladx r2,r3,r2,r1
 1002              	
 1003              	 .thumb
 1004 083e 07F1EC03 	 add r3,r7,#236
 1005 0842 1A60     	 str r2,[r3]
 1006              	 .loc 2 1733 0
 1007 0844 07F1EC03 	 add r3,r7,#236
 1008 0848 1B68     	 ldr r3,[r3]
 1009              	.LBE103:
 1010              	.LBE102:
 1011              	 .loc 1 396 0
 1012 084a C7F85832 	 str r3,[r7,#600]
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x2, c0, acc3);
 1013              	 .loc 1 397 0
 1014 084e D7F82002 	 ldr r0,[r7,#544]
 1015 0852 D7F82412 	 ldr r1,[r7,#548]
 1016 0856 D7F85422 	 ldr r2,[r7,#596]
 1017 085a 07F1E803 	 add r3,r7,#232
 1018 085e 1860     	 str r0,[r3]
 1019 0860 07F1E403 	 add r3,r7,#228
 1020 0864 1960     	 str r1,[r3]
 1021 0866 07F1E003 	 add r3,r7,#224
 1022 086a 1A60     	 str r2,[r3]
 1023              	.LBB104:
 1024              	.LBB105:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1025              	 .loc 2 1732 0
 1026 086c 07F1E803 	 add r3,r7,#232
 1027 0870 1B68     	 ldr r3,[r3]
 1028 0872 07F1E402 	 add r2,r7,#228
 1029 0876 1268     	 ldr r2,[r2]
 1030 0878 07F1E001 	 add r1,r7,#224
 1031 087c 0968     	 ldr r1,[r1]
 1032              	
 1033 087e 23FB1212 	 smladx r2,r3,r2,r1
 1034              	
 1035              	 .thumb
 1036 0882 07F1DC03 	 add r3,r7,#220
 1037 0886 1A60     	 str r2,[r3]
 1038              	 .loc 2 1733 0
 1039 0888 07F1DC03 	 add r3,r7,#220
 1040 088c 1B68     	 ldr r3,[r3]
 1041              	.LBE105:
 1042              	.LBE104:
 1043              	 .loc 1 397 0
 1044 088e C7F85432 	 str r3,[r7,#596]
 1045              	.L35:
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       if (k == 3u)
 1046              	 .loc 1 400 0
 1047 0892 D7F83832 	 ldr r3,[r7,#568]
 1048 0896 032B     	 cmp r3,#3
 1049 0898 40F03D81 	 bne .L40
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = _SIMD32_OFFSET(py);
 1050              	 .loc 1 403 0
 1051 089c 07F11003 	 add r3,r7,#16
 1052 08a0 1B68     	 ldr r3,[r3]
 1053 08a2 1B68     	 ldr r3,[r3]
 1054 08a4 C7F82432 	 str r3,[r7,#548]
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[7], x[8] */
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         x3 = *__SIMD32(px);
 1055              	 .loc 1 406 0
 1056 08a8 07F11403 	 add r3,r7,#20
 1057 08ac 1B68     	 ldr r3,[r3]
 1058 08ae 1B68     	 ldr r3,[r3]
 1059 08b0 C7F81C32 	 str r3,[r7,#540]
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[9] */
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         x2 = _SIMD32_OFFSET(px+1);
 1060              	 .loc 1 409 0
 1061 08b4 07F11403 	 add r3,r7,#20
 1062 08b8 1B68     	 ldr r3,[r3]
 1063 08ba D3F80230 	 ldr r3,[r3,#2]
 1064 08be C7F82032 	 str r3,[r7,#544]
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
 1065              	 .loc 1 412 0
 1066 08c2 D7F84C02 	 ldr r0,[r7,#588]
 1067 08c6 D7F82412 	 ldr r1,[r7,#548]
 1068 08ca D7F86022 	 ldr r2,[r7,#608]
 1069 08ce 07F1D803 	 add r3,r7,#216
 1070 08d2 1860     	 str r0,[r3]
 1071 08d4 07F1D403 	 add r3,r7,#212
 1072 08d8 1960     	 str r1,[r3]
 1073 08da 07F1D003 	 add r3,r7,#208
 1074 08de 1A60     	 str r2,[r3]
 1075              	.LBB106:
 1076              	.LBB107:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1077              	 .loc 2 1732 0
 1078 08e0 07F1D803 	 add r3,r7,#216
 1079 08e4 1B68     	 ldr r3,[r3]
 1080 08e6 07F1D402 	 add r2,r7,#212
 1081 08ea 1268     	 ldr r2,[r2]
 1082 08ec 07F1D001 	 add r1,r7,#208
 1083 08f0 0968     	 ldr r1,[r1]
 1084              	
 1085 08f2 23FB1212 	 smladx r2,r3,r2,r1
 1086              	
 1087              	 .thumb
 1088 08f6 07F1CC03 	 add r3,r7,#204
 1089 08fa 1A60     	 str r2,[r3]
 1090              	 .loc 2 1733 0
 1091 08fc 07F1CC03 	 add r3,r7,#204
 1092 0900 1B68     	 ldr r3,[r3]
 1093              	.LBE107:
 1094              	.LBE106:
 1095              	 .loc 1 412 0
 1096 0902 C7F86032 	 str r3,[r7,#608]
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
 1097              	 .loc 1 413 0
 1098 0906 D7F84802 	 ldr r0,[r7,#584]
 1099 090a D7F82412 	 ldr r1,[r7,#548]
 1100 090e D7F85C22 	 ldr r2,[r7,#604]
 1101 0912 07F1C803 	 add r3,r7,#200
 1102 0916 1860     	 str r0,[r3]
 1103 0918 07F1C403 	 add r3,r7,#196
 1104 091c 1960     	 str r1,[r3]
 1105 091e 07F1C003 	 add r3,r7,#192
 1106 0922 1A60     	 str r2,[r3]
 1107              	.LBB108:
 1108              	.LBB109:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1109              	 .loc 2 1732 0
 1110 0924 07F1C803 	 add r3,r7,#200
 1111 0928 1B68     	 ldr r3,[r3]
 1112 092a 07F1C402 	 add r2,r7,#196
 1113 092e 1268     	 ldr r2,[r2]
 1114 0930 07F1C001 	 add r1,r7,#192
 1115 0934 0968     	 ldr r1,[r1]
 1116              	
 1117 0936 23FB1212 	 smladx r2,r3,r2,r1
 1118              	
 1119              	 .thumb
 1120 093a 07F1BC03 	 add r3,r7,#188
 1121 093e 1A60     	 str r2,[r3]
 1122              	 .loc 2 1733 0
 1123 0940 07F1BC03 	 add r3,r7,#188
 1124 0944 1B68     	 ldr r3,[r3]
 1125              	.LBE109:
 1126              	.LBE108:
 1127              	 .loc 1 413 0
 1128 0946 C7F85C32 	 str r3,[r7,#604]
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x3, c0, acc2);
 1129              	 .loc 1 414 0
 1130 094a D7F81C02 	 ldr r0,[r7,#540]
 1131 094e D7F82412 	 ldr r1,[r7,#548]
 1132 0952 D7F85822 	 ldr r2,[r7,#600]
 1133 0956 07F1B803 	 add r3,r7,#184
 1134 095a 1860     	 str r0,[r3]
 1135 095c 07F1B403 	 add r3,r7,#180
 1136 0960 1960     	 str r1,[r3]
 1137 0962 07F1B003 	 add r3,r7,#176
 1138 0966 1A60     	 str r2,[r3]
 1139              	.LBB110:
 1140              	.LBB111:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1141              	 .loc 2 1732 0
 1142 0968 07F1B803 	 add r3,r7,#184
 1143 096c 1B68     	 ldr r3,[r3]
 1144 096e 07F1B402 	 add r2,r7,#180
 1145 0972 1268     	 ldr r2,[r2]
 1146 0974 07F1B001 	 add r1,r7,#176
 1147 0978 0968     	 ldr r1,[r1]
 1148              	
 1149 097a 23FB1212 	 smladx r2,r3,r2,r1
 1150              	
 1151              	 .thumb
 1152 097e 07F1AC03 	 add r3,r7,#172
 1153 0982 1A60     	 str r2,[r3]
 1154              	 .loc 2 1733 0
 1155 0984 07F1AC03 	 add r3,r7,#172
 1156 0988 1B68     	 ldr r3,[r3]
 1157              	.LBE111:
 1158              	.LBE110:
 1159              	 .loc 1 414 0
 1160 098a C7F85832 	 str r3,[r7,#600]
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x2, c0, acc3);
 1161              	 .loc 1 415 0
 1162 098e D7F82002 	 ldr r0,[r7,#544]
 1163 0992 D7F82412 	 ldr r1,[r7,#548]
 1164 0996 D7F85422 	 ldr r2,[r7,#596]
 1165 099a 07F1A803 	 add r3,r7,#168
 1166 099e 1860     	 str r0,[r3]
 1167 09a0 07F1A403 	 add r3,r7,#164
 1168 09a4 1960     	 str r1,[r3]
 1169 09a6 07F1A003 	 add r3,r7,#160
 1170 09aa 1A60     	 str r2,[r3]
 1171              	.LBB112:
 1172              	.LBB113:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1173              	 .loc 2 1732 0
 1174 09ac 07F1A803 	 add r3,r7,#168
 1175 09b0 1B68     	 ldr r3,[r3]
 1176 09b2 07F1A402 	 add r2,r7,#164
 1177 09b6 1268     	 ldr r2,[r2]
 1178 09b8 07F1A001 	 add r1,r7,#160
 1179 09bc 0968     	 ldr r1,[r1]
 1180              	
 1181 09be 23FB1212 	 smladx r2,r3,r2,r1
 1182              	
 1183              	 .thumb
 1184 09c2 07F19C03 	 add r3,r7,#156
 1185 09c6 1A60     	 str r2,[r3]
 1186              	 .loc 2 1733 0
 1187 09c8 07F19C03 	 add r3,r7,#156
 1188 09cc 1B68     	 ldr r3,[r3]
 1189              	.LBE113:
 1190              	.LBE112:
 1191              	 .loc 1 415 0
 1192 09ce C7F85432 	 str r3,[r7,#596]
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 7] */
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		c0 = *(py-1);
 1193              	 .loc 1 418 0
 1194 09d2 07F11003 	 add r3,r7,#16
 1195 09d6 1B68     	 ldr r3,[r3]
 1196 09d8 023B     	 subs r3,r3,#2
 1197 09da 1B88     	 ldrh r3,[r3]
 1198 09dc 1BB2     	 sxth r3,r3
 1199 09de C7F82432 	 str r3,[r7,#548]
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 << 16u;
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 1200              	 .loc 1 424 0
 1201 09e2 D7F82432 	 ldr r3,[r7,#548]
 1202 09e6 9BB2     	 uxth r3,r3
 1203 09e8 C7F82432 	 str r3,[r7,#548]
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[10] */
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         x3 =  _SIMD32_OFFSET(px+2);
 1204              	 .loc 1 428 0
 1205 09ec 07F11403 	 add r3,r7,#20
 1206 09f0 1B68     	 ldr r3,[r3]
 1207 09f2 5B68     	 ldr r3,[r3,#4]
 1208 09f4 C7F81C32 	 str r3,[r7,#540]
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		px += 3u;
 1209              	 .loc 1 429 0
 1210 09f8 07F11403 	 add r3,r7,#20
 1211 09fc 1B68     	 ldr r3,[r3]
 1212 09fe 9A1D     	 adds r2,r3,#6
 1213 0a00 07F11403 	 add r3,r7,#20
 1214 0a04 1A60     	 str r2,[r3]
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x1, c0, acc0);
 1215              	 .loc 1 432 0
 1216 0a06 D7F84802 	 ldr r0,[r7,#584]
 1217 0a0a D7F82412 	 ldr r1,[r7,#548]
 1218 0a0e D7F86022 	 ldr r2,[r7,#608]
 1219 0a12 07F19803 	 add r3,r7,#152
 1220 0a16 1860     	 str r0,[r3]
 1221 0a18 07F19403 	 add r3,r7,#148
 1222 0a1c 1960     	 str r1,[r3]
 1223 0a1e 07F19003 	 add r3,r7,#144
 1224 0a22 1A60     	 str r2,[r3]
 1225              	.LBB114:
 1226              	.LBB115:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1227              	 .loc 2 1732 0
 1228 0a24 07F19803 	 add r3,r7,#152
 1229 0a28 1B68     	 ldr r3,[r3]
 1230 0a2a 07F19402 	 add r2,r7,#148
 1231 0a2e 1268     	 ldr r2,[r2]
 1232 0a30 07F19001 	 add r1,r7,#144
 1233 0a34 0968     	 ldr r1,[r1]
 1234              	
 1235 0a36 23FB1212 	 smladx r2,r3,r2,r1
 1236              	
 1237              	 .thumb
 1238 0a3a 07F18C03 	 add r3,r7,#140
 1239 0a3e 1A60     	 str r2,[r3]
 1240              	 .loc 2 1733 0
 1241 0a40 07F18C03 	 add r3,r7,#140
 1242 0a44 1B68     	 ldr r3,[r3]
 1243              	.LBE115:
 1244              	.LBE114:
 1245              	 .loc 1 432 0
 1246 0a46 C7F86032 	 str r3,[r7,#608]
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLAD(x2, c0, acc1);
 1247              	 .loc 1 433 0
 1248 0a4a D7F82002 	 ldr r0,[r7,#544]
 1249 0a4e D7F82412 	 ldr r1,[r7,#548]
 1250 0a52 D7F85C22 	 ldr r2,[r7,#604]
 1251 0a56 07F18803 	 add r3,r7,#136
 1252 0a5a 1860     	 str r0,[r3]
 1253 0a5c 07F18403 	 add r3,r7,#132
 1254 0a60 1960     	 str r1,[r3]
 1255 0a62 07F18003 	 add r3,r7,#128
 1256 0a66 1A60     	 str r2,[r3]
 1257              	.LBB116:
 1258              	.LBB117:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1259              	 .loc 2 1724 0
 1260 0a68 07F18803 	 add r3,r7,#136
 1261 0a6c 1B68     	 ldr r3,[r3]
 1262 0a6e 07F18402 	 add r2,r7,#132
 1263 0a72 1268     	 ldr r2,[r2]
 1264 0a74 07F18001 	 add r1,r7,#128
 1265 0a78 0968     	 ldr r1,[r1]
 1266              	
 1267 0a7a 23FB0212 	 smlad r2,r3,r2,r1
 1268              	
 1269              	 .thumb
 1270 0a7e 07F17C03 	 add r3,r7,#124
 1271 0a82 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1272              	 .loc 2 1725 0
 1273 0a84 07F17C03 	 add r3,r7,#124
 1274 0a88 1B68     	 ldr r3,[r3]
 1275              	.LBE117:
 1276              	.LBE116:
 1277              	 .loc 1 433 0
 1278 0a8a C7F85C32 	 str r3,[r7,#604]
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
 1279              	 .loc 1 434 0
 1280 0a8e D7F82002 	 ldr r0,[r7,#544]
 1281 0a92 D7F82412 	 ldr r1,[r7,#548]
 1282 0a96 D7F85822 	 ldr r2,[r7,#600]
 1283 0a9a 07F17803 	 add r3,r7,#120
 1284 0a9e 1860     	 str r0,[r3]
 1285 0aa0 07F17403 	 add r3,r7,#116
 1286 0aa4 1960     	 str r1,[r3]
 1287 0aa6 07F17003 	 add r3,r7,#112
 1288 0aaa 1A60     	 str r2,[r3]
 1289              	.LBB118:
 1290              	.LBB119:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1291              	 .loc 2 1732 0
 1292 0aac 07F17803 	 add r3,r7,#120
 1293 0ab0 1B68     	 ldr r3,[r3]
 1294 0ab2 07F17402 	 add r2,r7,#116
 1295 0ab6 1268     	 ldr r2,[r2]
 1296 0ab8 07F17001 	 add r1,r7,#112
 1297 0abc 0968     	 ldr r1,[r1]
 1298              	
 1299 0abe 23FB1212 	 smladx r2,r3,r2,r1
 1300              	
 1301              	 .thumb
 1302 0ac2 07F16C03 	 add r3,r7,#108
 1303 0ac6 1A60     	 str r2,[r3]
 1304              	 .loc 2 1733 0
 1305 0ac8 07F16C03 	 add r3,r7,#108
 1306 0acc 1B68     	 ldr r3,[r3]
 1307              	.LBE119:
 1308              	.LBE118:
 1309              	 .loc 1 434 0
 1310 0ace C7F85832 	 str r3,[r7,#600]
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
 1311              	 .loc 1 435 0
 1312 0ad2 D7F81C02 	 ldr r0,[r7,#540]
 1313 0ad6 D7F82412 	 ldr r1,[r7,#548]
 1314 0ada D7F85422 	 ldr r2,[r7,#596]
 1315 0ade 07F16803 	 add r3,r7,#104
 1316 0ae2 1860     	 str r0,[r3]
 1317 0ae4 07F16403 	 add r3,r7,#100
 1318 0ae8 1960     	 str r1,[r3]
 1319 0aea 07F16003 	 add r3,r7,#96
 1320 0aee 1A60     	 str r2,[r3]
 1321              	.LBB120:
 1322              	.LBB121:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1323              	 .loc 2 1732 0
 1324 0af0 07F16803 	 add r3,r7,#104
 1325 0af4 1B68     	 ldr r3,[r3]
 1326 0af6 07F16402 	 add r2,r7,#100
 1327 0afa 1268     	 ldr r2,[r2]
 1328 0afc 07F16001 	 add r1,r7,#96
 1329 0b00 0968     	 ldr r1,[r1]
 1330              	
 1331 0b02 23FB1212 	 smladx r2,r3,r2,r1
 1332              	
 1333              	 .thumb
 1334 0b06 07F15C03 	 add r3,r7,#92
 1335 0b0a 1A60     	 str r2,[r3]
 1336              	 .loc 2 1733 0
 1337 0b0c 07F15C03 	 add r3,r7,#92
 1338 0b10 1B68     	 ldr r3,[r3]
 1339              	.LBE121:
 1340              	.LBE120:
 1341              	 .loc 1 435 0
 1342 0b12 C7F85432 	 str r3,[r7,#596]
 1343              	.L40:
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Store the results in the accumulators in the destination buffer. */
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       *__SIMD32(pOut)++ = __PKHBT((acc0 >> 15), (acc1 >> 15), 16);
 1344              	 .loc 1 441 0
 1345 0b16 07F11802 	 add r2,r7,#24
 1346 0b1a 1368     	 ldr r3,[r2]
 1347 0b1c 191D     	 adds r1,r3,#4
 1348 0b1e 1160     	 str r1,[r2]
 1349 0b20 D7F86022 	 ldr r2,[r7,#608]
 1350 0b24 D213     	 asrs r2,r2,#15
 1351 0b26 91B2     	 uxth r1,r2
 1352 0b28 D7F85C22 	 ldr r2,[r7,#604]
 1353 0b2c D213     	 asrs r2,r2,#15
 1354 0b2e 1204     	 lsls r2,r2,#16
 1355 0b30 0A43     	 orrs r2,r2,r1
 1356 0b32 1A60     	 str r2,[r3]
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       *__SIMD32(pOut)++ = __PKHBT((acc2 >> 15), (acc3 >> 15), 16);
 1357              	 .loc 1 442 0
 1358 0b34 07F11802 	 add r2,r7,#24
 1359 0b38 1368     	 ldr r3,[r2]
 1360 0b3a 191D     	 adds r1,r3,#4
 1361 0b3c 1160     	 str r1,[r2]
 1362 0b3e D7F85822 	 ldr r2,[r7,#600]
 1363 0b42 D213     	 asrs r2,r2,#15
 1364 0b44 91B2     	 uxth r1,r2
 1365 0b46 D7F85422 	 ldr r2,[r7,#596]
 1366 0b4a D213     	 asrs r2,r2,#15
 1367 0b4c 1204     	 lsls r2,r2,#16
 1368 0b4e 0A43     	 orrs r2,r2,r1
 1369 0b50 1A60     	 str r2,[r3]
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       *__SIMD32(pOut)++ = __PKHBT((acc1 >> 15), (acc0 >> 15), 16);
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       *__SIMD32(pOut)++ = __PKHBT((acc3 >> 15), (acc2 >> 15), 16);
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif /*      #ifndef  ARM_MATH_BIG_ENDIAN    */
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Increment the pointer pIn1 index, count by 4 */
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       count += 4u;
 1370              	 .loc 1 452 0
 1371 0b52 D7F83432 	 ldr r3,[r7,#564]
 1372 0b56 0433     	 adds r3,r3,#4
 1373 0b58 C7F83432 	 str r3,[r7,#564]
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       px = pIn1 + count;
 1374              	 .loc 1 455 0
 1375 0b5c D7F83432 	 ldr r3,[r7,#564]
 1376 0b60 5B00     	 lsls r3,r3,#1
 1377 0b62 D7F86C22 	 ldr r2,[r7,#620]
 1378 0b66 1A44     	 add r2,r2,r3
 1379 0b68 07F11403 	 add r3,r7,#20
 1380 0b6c 1A60     	 str r2,[r3]
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       py = pSrc2;
 1381              	 .loc 1 456 0
 1382 0b6e 07F11003 	 add r3,r7,#16
 1383 0b72 D7F82822 	 ldr r2,[r7,#552]
 1384 0b76 1A60     	 str r2,[r3]
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       blkCnt--;
 1385              	 .loc 1 459 0
 1386 0b78 D7F83032 	 ldr r3,[r7,#560]
 1387 0b7c 013B     	 subs r3,r3,#1
 1388 0b7e C7F83032 	 str r3,[r7,#560]
 1389              	.L20:
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 1390              	 .loc 1 277 0
 1391 0b82 D7F83032 	 ldr r3,[r7,#560]
 1392 0b86 002B     	 cmp r3,#0
 1393 0b88 7FF4EBAB 	 bne .L49
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      ** No loop unrolling is used. */
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blkCnt = blockSize2 % 0x4u;
 1394              	 .loc 1 464 0
 1395 0b8c D7F82C32 	 ldr r3,[r7,#556]
 1396 0b90 03F00303 	 and r3,r3,#3
 1397 0b94 C7F83032 	 str r3,[r7,#560]
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (blkCnt > 0u)
 1398              	 .loc 1 466 0
 1399 0b98 C2E0     	 b .L50
 1400              	.L55:
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = 0;
 1401              	 .loc 1 469 0
 1402 0b9a 0023     	 movs r3,#0
 1403 0b9c C7F86432 	 str r3,[r7,#612]
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen >> 2u;
 1404              	 .loc 1 472 0
 1405 0ba0 3B46     	 mov r3,r7
 1406 0ba2 1B68     	 ldr r3,[r3]
 1407 0ba4 9B08     	 lsrs r3,r3,#2
 1408 0ba6 C7F83832 	 str r3,[r7,#568]
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       while (k > 0u)
 1409              	 .loc 1 476 0
 1410 0baa 68E0     	 b .L51
 1411              	.L52:
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 1412              	 .loc 1 479 0
 1413 0bac 07F11403 	 add r3,r7,#20
 1414 0bb0 1B68     	 ldr r3,[r3]
 1415 0bb2 991C     	 adds r1,r3,#2
 1416 0bb4 07F11402 	 add r2,r7,#20
 1417 0bb8 1160     	 str r1,[r2]
 1418 0bba 1B88     	 ldrh r3,[r3]
 1419 0bbc 1AB2     	 sxth r2,r3
 1420 0bbe 07F11003 	 add r3,r7,#16
 1421 0bc2 1B68     	 ldr r3,[r3]
 1422 0bc4 981E     	 subs r0,r3,#2
 1423 0bc6 07F11001 	 add r1,r7,#16
 1424 0bca 0860     	 str r0,[r1]
 1425 0bcc 1B88     	 ldrh r3,[r3]
 1426 0bce 1BB2     	 sxth r3,r3
 1427 0bd0 03FB02F3 	 mul r3,r3,r2
 1428 0bd4 D7F86422 	 ldr r2,[r7,#612]
 1429 0bd8 1344     	 add r3,r3,r2
 1430 0bda C7F86432 	 str r3,[r7,#612]
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 1431              	 .loc 1 480 0
 1432 0bde 07F11403 	 add r3,r7,#20
 1433 0be2 1B68     	 ldr r3,[r3]
 1434 0be4 991C     	 adds r1,r3,#2
 1435 0be6 07F11402 	 add r2,r7,#20
 1436 0bea 1160     	 str r1,[r2]
 1437 0bec 1B88     	 ldrh r3,[r3]
 1438 0bee 1AB2     	 sxth r2,r3
 1439 0bf0 07F11003 	 add r3,r7,#16
 1440 0bf4 1B68     	 ldr r3,[r3]
 1441 0bf6 981E     	 subs r0,r3,#2
 1442 0bf8 07F11001 	 add r1,r7,#16
 1443 0bfc 0860     	 str r0,[r1]
 1444 0bfe 1B88     	 ldrh r3,[r3]
 1445 0c00 1BB2     	 sxth r3,r3
 1446 0c02 03FB02F3 	 mul r3,r3,r2
 1447 0c06 D7F86422 	 ldr r2,[r7,#612]
 1448 0c0a 1344     	 add r3,r3,r2
 1449 0c0c C7F86432 	 str r3,[r7,#612]
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 1450              	 .loc 1 481 0
 1451 0c10 07F11403 	 add r3,r7,#20
 1452 0c14 1B68     	 ldr r3,[r3]
 1453 0c16 991C     	 adds r1,r3,#2
 1454 0c18 07F11402 	 add r2,r7,#20
 1455 0c1c 1160     	 str r1,[r2]
 1456 0c1e 1B88     	 ldrh r3,[r3]
 1457 0c20 1AB2     	 sxth r2,r3
 1458 0c22 07F11003 	 add r3,r7,#16
 1459 0c26 1B68     	 ldr r3,[r3]
 1460 0c28 981E     	 subs r0,r3,#2
 1461 0c2a 07F11001 	 add r1,r7,#16
 1462 0c2e 0860     	 str r0,[r1]
 1463 0c30 1B88     	 ldrh r3,[r3]
 1464 0c32 1BB2     	 sxth r3,r3
 1465 0c34 03FB02F3 	 mul r3,r3,r2
 1466 0c38 D7F86422 	 ldr r2,[r7,#612]
 1467 0c3c 1344     	 add r3,r3,r2
 1468 0c3e C7F86432 	 str r3,[r7,#612]
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 1469              	 .loc 1 482 0
 1470 0c42 07F11403 	 add r3,r7,#20
 1471 0c46 1B68     	 ldr r3,[r3]
 1472 0c48 991C     	 adds r1,r3,#2
 1473 0c4a 07F11402 	 add r2,r7,#20
 1474 0c4e 1160     	 str r1,[r2]
 1475 0c50 1B88     	 ldrh r3,[r3]
 1476 0c52 1AB2     	 sxth r2,r3
 1477 0c54 07F11003 	 add r3,r7,#16
 1478 0c58 1B68     	 ldr r3,[r3]
 1479 0c5a 981E     	 subs r0,r3,#2
 1480 0c5c 07F11001 	 add r1,r7,#16
 1481 0c60 0860     	 str r0,[r1]
 1482 0c62 1B88     	 ldrh r3,[r3]
 1483 0c64 1BB2     	 sxth r3,r3
 1484 0c66 03FB02F3 	 mul r3,r3,r2
 1485 0c6a D7F86422 	 ldr r2,[r7,#612]
 1486 0c6e 1344     	 add r3,r3,r2
 1487 0c70 C7F86432 	 str r3,[r7,#612]
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Decrement the loop counter */
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         k--;
 1488              	 .loc 1 485 0
 1489 0c74 D7F83832 	 ldr r3,[r7,#568]
 1490 0c78 013B     	 subs r3,r3,#1
 1491 0c7a C7F83832 	 str r3,[r7,#568]
 1492              	.L51:
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 1493              	 .loc 1 476 0
 1494 0c7e D7F83832 	 ldr r3,[r7,#568]
 1495 0c82 002B     	 cmp r3,#0
 1496 0c84 92D1     	 bne .L52
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        ** No loop unrolling is used. */
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen % 0x4u;
 1497              	 .loc 1 490 0
 1498 0c86 3B46     	 mov r3,r7
 1499 0c88 1B68     	 ldr r3,[r3]
 1500 0c8a 03F00303 	 and r3,r3,#3
 1501 0c8e C7F83832 	 str r3,[r7,#568]
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       while (k > 0u)
 1502              	 .loc 1 492 0
 1503 0c92 1DE0     	 b .L53
 1504              	.L54:
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 1505              	 .loc 1 495 0
 1506 0c94 07F11403 	 add r3,r7,#20
 1507 0c98 1B68     	 ldr r3,[r3]
 1508 0c9a 991C     	 adds r1,r3,#2
 1509 0c9c 07F11402 	 add r2,r7,#20
 1510 0ca0 1160     	 str r1,[r2]
 1511 0ca2 1B88     	 ldrh r3,[r3]
 1512 0ca4 1AB2     	 sxth r2,r3
 1513 0ca6 07F11003 	 add r3,r7,#16
 1514 0caa 1B68     	 ldr r3,[r3]
 1515 0cac 981E     	 subs r0,r3,#2
 1516 0cae 07F11001 	 add r1,r7,#16
 1517 0cb2 0860     	 str r0,[r1]
 1518 0cb4 1B88     	 ldrh r3,[r3]
 1519 0cb6 1BB2     	 sxth r3,r3
 1520 0cb8 03FB02F3 	 mul r3,r3,r2
 1521 0cbc D7F86422 	 ldr r2,[r7,#612]
 1522 0cc0 1344     	 add r3,r3,r2
 1523 0cc2 C7F86432 	 str r3,[r7,#612]
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Decrement the loop counter */
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         k--;
 1524              	 .loc 1 498 0
 1525 0cc6 D7F83832 	 ldr r3,[r7,#568]
 1526 0cca 013B     	 subs r3,r3,#1
 1527 0ccc C7F83832 	 str r3,[r7,#568]
 1528              	.L53:
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 1529              	 .loc 1 492 0
 1530 0cd0 D7F83832 	 ldr r3,[r7,#568]
 1531 0cd4 002B     	 cmp r3,#0
 1532 0cd6 DDD1     	 bne .L54
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 1533              	 .loc 1 502 0
 1534 0cd8 07F11803 	 add r3,r7,#24
 1535 0cdc 1B68     	 ldr r3,[r3]
 1536 0cde 991C     	 adds r1,r3,#2
 1537 0ce0 07F11802 	 add r2,r7,#24
 1538 0ce4 1160     	 str r1,[r2]
 1539 0ce6 D7F86422 	 ldr r2,[r7,#612]
 1540 0cea D213     	 asrs r2,r2,#15
 1541 0cec 92B2     	 uxth r2,r2
 1542 0cee 1A80     	 strh r2,[r3]
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Increment the pointer pIn1 index, count by 1 */
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       count++;
 1543              	 .loc 1 505 0
 1544 0cf0 D7F83432 	 ldr r3,[r7,#564]
 1545 0cf4 0133     	 adds r3,r3,#1
 1546 0cf6 C7F83432 	 str r3,[r7,#564]
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       px = pIn1 + count;
 1547              	 .loc 1 508 0
 1548 0cfa D7F83432 	 ldr r3,[r7,#564]
 1549 0cfe 5B00     	 lsls r3,r3,#1
 1550 0d00 D7F86C22 	 ldr r2,[r7,#620]
 1551 0d04 1A44     	 add r2,r2,r3
 1552 0d06 07F11403 	 add r3,r7,#20
 1553 0d0a 1A60     	 str r2,[r3]
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       py = pSrc2;
 1554              	 .loc 1 509 0
 1555 0d0c 07F11003 	 add r3,r7,#16
 1556 0d10 D7F82822 	 ldr r2,[r7,#552]
 1557 0d14 1A60     	 str r2,[r3]
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       blkCnt--;
 1558              	 .loc 1 512 0
 1559 0d16 D7F83032 	 ldr r3,[r7,#560]
 1560 0d1a 013B     	 subs r3,r3,#1
 1561 0d1c C7F83032 	 str r3,[r7,#560]
 1562              	.L50:
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 1563              	 .loc 1 466 0
 1564 0d20 D7F83032 	 ldr r3,[r7,#560]
 1565 0d24 002B     	 cmp r3,#0
 1566 0d26 7FF438AF 	 bne .L55
 1567 0d2a 56E0     	 b .L56
 1568              	.L19:
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   else
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the srcBLen is not a multiple of 4,
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      * the blockSize2 loop cannot be unrolled by 4 */
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blkCnt = blockSize2;
 1569              	 .loc 1 519 0
 1570 0d2c D7F82C32 	 ldr r3,[r7,#556]
 1571 0d30 C7F83032 	 str r3,[r7,#560]
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (blkCnt > 0u)
 1572              	 .loc 1 521 0
 1573 0d34 4DE0     	 b .L57
 1574              	.L60:
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = 0;
 1575              	 .loc 1 524 0
 1576 0d36 0023     	 movs r3,#0
 1577 0d38 C7F86432 	 str r3,[r7,#612]
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* srcBLen number of MACS should be performed */
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen;
 1578              	 .loc 1 527 0
 1579 0d3c 3B46     	 mov r3,r7
 1580 0d3e 1B68     	 ldr r3,[r3]
 1581 0d40 C7F83832 	 str r3,[r7,#568]
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       while (k > 0u)
 1582              	 .loc 1 529 0
 1583 0d44 1DE0     	 b .L58
 1584              	.L59:
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 531:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulate */
 532:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 1585              	 .loc 1 532 0
 1586 0d46 07F11403 	 add r3,r7,#20
 1587 0d4a 1B68     	 ldr r3,[r3]
 1588 0d4c 991C     	 adds r1,r3,#2
 1589 0d4e 07F11402 	 add r2,r7,#20
 1590 0d52 1160     	 str r1,[r2]
 1591 0d54 1B88     	 ldrh r3,[r3]
 1592 0d56 1AB2     	 sxth r2,r3
 1593 0d58 07F11003 	 add r3,r7,#16
 1594 0d5c 1B68     	 ldr r3,[r3]
 1595 0d5e 981E     	 subs r0,r3,#2
 1596 0d60 07F11001 	 add r1,r7,#16
 1597 0d64 0860     	 str r0,[r1]
 1598 0d66 1B88     	 ldrh r3,[r3]
 1599 0d68 1BB2     	 sxth r3,r3
 1600 0d6a 03FB02F3 	 mul r3,r3,r2
 1601 0d6e D7F86422 	 ldr r2,[r7,#612]
 1602 0d72 1344     	 add r3,r3,r2
 1603 0d74 C7F86432 	 str r3,[r7,#612]
 533:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 534:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Decrement the loop counter */
 535:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         k--;
 1604              	 .loc 1 535 0
 1605 0d78 D7F83832 	 ldr r3,[r7,#568]
 1606 0d7c 013B     	 subs r3,r3,#1
 1607 0d7e C7F83832 	 str r3,[r7,#568]
 1608              	.L58:
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 1609              	 .loc 1 529 0
 1610 0d82 D7F83832 	 ldr r3,[r7,#568]
 1611 0d86 002B     	 cmp r3,#0
 1612 0d88 DDD1     	 bne .L59
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
 537:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 539:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 1613              	 .loc 1 539 0
 1614 0d8a 07F11803 	 add r3,r7,#24
 1615 0d8e 1B68     	 ldr r3,[r3]
 1616 0d90 991C     	 adds r1,r3,#2
 1617 0d92 07F11802 	 add r2,r7,#24
 1618 0d96 1160     	 str r1,[r2]
 1619 0d98 D7F86422 	 ldr r2,[r7,#612]
 1620 0d9c D213     	 asrs r2,r2,#15
 1621 0d9e 92B2     	 uxth r2,r2
 1622 0da0 1A80     	 strh r2,[r3]
 540:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 541:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Increment the MAC count */
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       count++;
 1623              	 .loc 1 542 0
 1624 0da2 D7F83432 	 ldr r3,[r7,#564]
 1625 0da6 0133     	 adds r3,r3,#1
 1626 0da8 C7F83432 	 str r3,[r7,#564]
 543:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 544:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 545:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       px = pIn1 + count;
 1627              	 .loc 1 545 0
 1628 0dac D7F83432 	 ldr r3,[r7,#564]
 1629 0db0 5B00     	 lsls r3,r3,#1
 1630 0db2 D7F86C22 	 ldr r2,[r7,#620]
 1631 0db6 1A44     	 add r2,r2,r3
 1632 0db8 07F11403 	 add r3,r7,#20
 1633 0dbc 1A60     	 str r2,[r3]
 546:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       py = pSrc2;
 1634              	 .loc 1 546 0
 1635 0dbe 07F11003 	 add r3,r7,#16
 1636 0dc2 D7F82822 	 ldr r2,[r7,#552]
 1637 0dc6 1A60     	 str r2,[r3]
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 548:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 549:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       blkCnt--;
 1638              	 .loc 1 549 0
 1639 0dc8 D7F83032 	 ldr r3,[r7,#560]
 1640 0dcc 013B     	 subs r3,r3,#1
 1641 0dce C7F83032 	 str r3,[r7,#560]
 1642              	.L57:
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 1643              	 .loc 1 521 0
 1644 0dd2 D7F83032 	 ldr r3,[r7,#560]
 1645 0dd6 002B     	 cmp r3,#0
 1646 0dd8 ADD1     	 bne .L60
 1647              	.L56:
 550:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 551:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 552:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 553:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 554:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------------
 555:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Initializations of stage3
 556:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * -------------------------*/
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 558:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[srcAL
 559:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[srcAL
 560:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ....
 561:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 562:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum +=  x[srcALen-1] * y[srcBLen-1]
 563:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    */
 564:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 565:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
 566:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      The blockSize3 variable holds the number of MAC operations performed */
 567:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 568:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputA */
 569:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
 1648              	 .loc 1 569 0
 1649 0dda 07F10802 	 add r2,r7,#8
 1650 0dde 3B46     	 mov r3,r7
 1651 0de0 1268     	 ldr r2,[r2]
 1652 0de2 1B68     	 ldr r3,[r3]
 1653 0de4 D31A     	 subs r3,r2,r3
 1654 0de6 0133     	 adds r3,r3,#1
 1655 0de8 5B00     	 lsls r3,r3,#1
 1656 0dea D7F86C22 	 ldr r2,[r7,#620]
 1657 0dee 1344     	 add r3,r3,r2
 1658 0df0 C7F85032 	 str r3,[r7,#592]
 570:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   px = pSrc1;
 1659              	 .loc 1 570 0
 1660 0df4 07F11403 	 add r3,r7,#20
 1661 0df8 D7F85022 	 ldr r2,[r7,#592]
 1662 0dfc 1A60     	 str r2,[r3]
 571:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 572:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputB */
 573:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 1663              	 .loc 1 573 0
 1664 0dfe 3B46     	 mov r3,r7
 1665 0e00 1B68     	 ldr r3,[r3]
 1666 0e02 03F10043 	 add r3,r3,#-2147483648
 1667 0e06 013B     	 subs r3,r3,#1
 1668 0e08 5B00     	 lsls r3,r3,#1
 1669 0e0a D7F86822 	 ldr r2,[r7,#616]
 1670 0e0e 1344     	 add r3,r3,r2
 1671 0e10 C7F82832 	 str r3,[r7,#552]
 574:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   pIn2 = pSrc2 - 1u;
 1672              	 .loc 1 574 0
 1673 0e14 D7F82832 	 ldr r3,[r7,#552]
 1674 0e18 023B     	 subs r3,r3,#2
 1675 0e1a C7F86832 	 str r3,[r7,#616]
 575:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   py = pIn2;
 1676              	 .loc 1 575 0
 1677 0e1e 07F11003 	 add r3,r7,#16
 1678 0e22 D7F86822 	 ldr r2,[r7,#616]
 1679 0e26 1A60     	 str r2,[r3]
 576:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 577:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* -------------------
 578:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Stage3 process
 579:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ------------------*/
 580:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 581:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* For loop unrolling by 4, this stage is divided into two. */
 582:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* First part of this stage computes the MAC operations greater than 4 */
 583:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Second part of this stage computes the MAC operations less than or equal to 4 */
 584:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 585:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The first part of the stage starts here */
 586:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   j = blockSize3 >> 2u;
 1680              	 .loc 1 586 0
 1681 0e28 D7F84032 	 ldr r3,[r7,#576]
 1682 0e2c 9B08     	 lsrs r3,r3,#2
 1683 0e2e C7F83C32 	 str r3,[r7,#572]
 587:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 588:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   while ((j > 0u) && (blockSize3 > 0u))
 1684              	 .loc 1 588 0
 1685 0e32 D5E0     	 b .L61
 1686              	.L70:
 589:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 590:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 591:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
 1687              	 .loc 1 591 0
 1688 0e34 0023     	 movs r3,#0
 1689 0e36 C7F86432 	 str r3,[r7,#612]
 592:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 593:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 594:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = blockSize3 >> 2u;
 1690              	 .loc 1 594 0
 1691 0e3a D7F84032 	 ldr r3,[r7,#576]
 1692 0e3e 9B08     	 lsrs r3,r3,#2
 1693 0e40 C7F83832 	 str r3,[r7,#568]
 595:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 596:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 597:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 598:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
 1694              	 .loc 1 598 0
 1695 0e44 5CE0     	 b .L62
 1696              	.L65:
 599:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 600:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* x[srcALen - srcBLen + 1], x[srcALen - srcBLen + 2] are multiplied
 601:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        * with y[srcBLen - 1], y[srcBLen - 2] respectively */
 602:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 1697              	 .loc 1 602 0
 1698 0e46 07F11402 	 add r2,r7,#20
 1699 0e4a 1368     	 ldr r3,[r2]
 1700 0e4c 191D     	 adds r1,r3,#4
 1701 0e4e 1160     	 str r1,[r2]
 1702 0e50 1B68     	 ldr r3,[r3]
 1703 0e52 1846     	 mov r0,r3
 1704 0e54 07F11002 	 add r2,r7,#16
 1705 0e58 1368     	 ldr r3,[r2]
 1706 0e5a 191F     	 subs r1,r3,#4
 1707 0e5c 1160     	 str r1,[r2]
 1708 0e5e 1B68     	 ldr r3,[r3]
 1709 0e60 1946     	 mov r1,r3
 1710 0e62 D7F86422 	 ldr r2,[r7,#612]
 1711 0e66 07F15803 	 add r3,r7,#88
 1712 0e6a 1860     	 str r0,[r3]
 1713 0e6c 07F15403 	 add r3,r7,#84
 1714 0e70 1960     	 str r1,[r3]
 1715 0e72 07F15003 	 add r3,r7,#80
 1716 0e76 1A60     	 str r2,[r3]
 1717              	.LBB122:
 1718              	.LBB123:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1719              	 .loc 2 1732 0
 1720 0e78 07F15803 	 add r3,r7,#88
 1721 0e7c 1B68     	 ldr r3,[r3]
 1722 0e7e 07F15402 	 add r2,r7,#84
 1723 0e82 1268     	 ldr r2,[r2]
 1724 0e84 07F15001 	 add r1,r7,#80
 1725 0e88 0968     	 ldr r1,[r1]
 1726              	
 1727 0e8a 23FB1212 	 smladx r2,r3,r2,r1
 1728              	
 1729              	 .thumb
 1730 0e8e 07F14C03 	 add r3,r7,#76
 1731 0e92 1A60     	 str r2,[r3]
 1732              	 .loc 2 1733 0
 1733 0e94 07F14C03 	 add r3,r7,#76
 1734 0e98 1B68     	 ldr r3,[r3]
 1735              	.LBE123:
 1736              	.LBE122:
 1737              	 .loc 1 602 0
 1738 0e9a C7F86432 	 str r3,[r7,#612]
 603:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* x[srcALen - srcBLen + 3], x[srcALen - srcBLen + 4] are multiplied
 604:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        * with y[srcBLen - 3], y[srcBLen - 4] respectively */
 605:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 1739              	 .loc 1 605 0
 1740 0e9e 07F11402 	 add r2,r7,#20
 1741 0ea2 1368     	 ldr r3,[r2]
 1742 0ea4 191D     	 adds r1,r3,#4
 1743 0ea6 1160     	 str r1,[r2]
 1744 0ea8 1B68     	 ldr r3,[r3]
 1745 0eaa 1846     	 mov r0,r3
 1746 0eac 07F11002 	 add r2,r7,#16
 1747 0eb0 1368     	 ldr r3,[r2]
 1748 0eb2 191F     	 subs r1,r3,#4
 1749 0eb4 1160     	 str r1,[r2]
 1750 0eb6 1B68     	 ldr r3,[r3]
 1751 0eb8 1946     	 mov r1,r3
 1752 0eba D7F86422 	 ldr r2,[r7,#612]
 1753 0ebe 07F14803 	 add r3,r7,#72
 1754 0ec2 1860     	 str r0,[r3]
 1755 0ec4 07F14403 	 add r3,r7,#68
 1756 0ec8 1960     	 str r1,[r3]
 1757 0eca 07F14003 	 add r3,r7,#64
 1758 0ece 1A60     	 str r2,[r3]
 1759              	.LBB124:
 1760              	.LBB125:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1761              	 .loc 2 1732 0
 1762 0ed0 07F14803 	 add r3,r7,#72
 1763 0ed4 1B68     	 ldr r3,[r3]
 1764 0ed6 07F14402 	 add r2,r7,#68
 1765 0eda 1268     	 ldr r2,[r2]
 1766 0edc 07F14001 	 add r1,r7,#64
 1767 0ee0 0968     	 ldr r1,[r1]
 1768              	
 1769 0ee2 23FB1212 	 smladx r2,r3,r2,r1
 1770              	
 1771              	 .thumb
 1772 0ee6 07F13C03 	 add r3,r7,#60
 1773 0eea 1A60     	 str r2,[r3]
 1774              	 .loc 2 1733 0
 1775 0eec 07F13C03 	 add r3,r7,#60
 1776 0ef0 1B68     	 ldr r3,[r3]
 1777              	.LBE125:
 1778              	.LBE124:
 1779              	 .loc 1 605 0
 1780 0ef2 C7F86432 	 str r3,[r7,#612]
 606:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 607:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 608:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 1781              	 .loc 1 608 0
 1782 0ef6 D7F83832 	 ldr r3,[r7,#568]
 1783 0efa 013B     	 subs r3,r3,#1
 1784 0efc C7F83832 	 str r3,[r7,#568]
 1785              	.L62:
 598:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 1786              	 .loc 1 598 0
 1787 0f00 D7F83832 	 ldr r3,[r7,#568]
 1788 0f04 002B     	 cmp r3,#0
 1789 0f06 9ED1     	 bne .L65
 609:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 610:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 611:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* For the next MAC operations, the pointer py is used without SIMD
 612:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      * So, py is incremented by 1 */
 613:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     py = py + 1u;
 1790              	 .loc 1 613 0
 1791 0f08 07F11003 	 add r3,r7,#16
 1792 0f0c 1B68     	 ldr r3,[r3]
 1793 0f0e 9A1C     	 adds r2,r3,#2
 1794 0f10 07F11003 	 add r3,r7,#16
 1795 0f14 1A60     	 str r2,[r3]
 614:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 615:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the blockSize3 is not a multiple of 4, compute any remaining MACs here.
 616:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      ** No loop unrolling is used. */
 617:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = blockSize3 % 0x4u;
 1796              	 .loc 1 617 0
 1797 0f16 D7F84032 	 ldr r3,[r7,#576]
 1798 0f1a 03F00303 	 and r3,r3,#3
 1799 0f1e C7F83832 	 str r3,[r7,#568]
 618:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 619:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
 1800              	 .loc 1 619 0
 1801 0f22 34E0     	 b .L66
 1802              	.L68:
 620:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 621:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* sum += x[srcALen - srcBLen + 5] * y[srcBLen - 5] */
 622:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLAD(*px++, *py--, sum);
 1803              	 .loc 1 622 0
 1804 0f24 07F11403 	 add r3,r7,#20
 1805 0f28 1B68     	 ldr r3,[r3]
 1806 0f2a 991C     	 adds r1,r3,#2
 1807 0f2c 07F11402 	 add r2,r7,#20
 1808 0f30 1160     	 str r1,[r2]
 1809 0f32 1B88     	 ldrh r3,[r3]
 1810 0f34 18B2     	 sxth r0,r3
 1811 0f36 07F11003 	 add r3,r7,#16
 1812 0f3a 1B68     	 ldr r3,[r3]
 1813 0f3c 991E     	 subs r1,r3,#2
 1814 0f3e 07F11002 	 add r2,r7,#16
 1815 0f42 1160     	 str r1,[r2]
 1816 0f44 1B88     	 ldrh r3,[r3]
 1817 0f46 19B2     	 sxth r1,r3
 1818 0f48 D7F86422 	 ldr r2,[r7,#612]
 1819 0f4c 07F13803 	 add r3,r7,#56
 1820 0f50 1860     	 str r0,[r3]
 1821 0f52 07F13403 	 add r3,r7,#52
 1822 0f56 1960     	 str r1,[r3]
 1823 0f58 07F13003 	 add r3,r7,#48
 1824 0f5c 1A60     	 str r2,[r3]
 1825              	.LBB126:
 1826              	.LBB127:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1827              	 .loc 2 1724 0
 1828 0f5e 07F13803 	 add r3,r7,#56
 1829 0f62 1B68     	 ldr r3,[r3]
 1830 0f64 07F13402 	 add r2,r7,#52
 1831 0f68 1268     	 ldr r2,[r2]
 1832 0f6a 07F13001 	 add r1,r7,#48
 1833 0f6e 0968     	 ldr r1,[r1]
 1834              	
 1835 0f70 23FB0212 	 smlad r2,r3,r2,r1
 1836              	
 1837              	 .thumb
 1838 0f74 07F12C03 	 add r3,r7,#44
 1839 0f78 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1840              	 .loc 2 1725 0
 1841 0f7a 07F12C03 	 add r3,r7,#44
 1842 0f7e 1B68     	 ldr r3,[r3]
 1843              	.LBE127:
 1844              	.LBE126:
 1845              	 .loc 1 622 0
 1846 0f80 C7F86432 	 str r3,[r7,#612]
 623:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 624:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 625:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 1847              	 .loc 1 625 0
 1848 0f84 D7F83832 	 ldr r3,[r7,#568]
 1849 0f88 013B     	 subs r3,r3,#1
 1850 0f8a C7F83832 	 str r3,[r7,#568]
 1851              	.L66:
 619:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 1852              	 .loc 1 619 0
 1853 0f8e D7F83832 	 ldr r3,[r7,#568]
 1854 0f92 002B     	 cmp r3,#0
 1855 0f94 C6D1     	 bne .L68
 626:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 627:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 628:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 629:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
 1856              	 .loc 1 629 0
 1857 0f96 07F11803 	 add r3,r7,#24
 1858 0f9a 1B68     	 ldr r3,[r3]
 1859 0f9c 991C     	 adds r1,r3,#2
 1860 0f9e 07F11802 	 add r2,r7,#24
 1861 0fa2 1160     	 str r1,[r2]
 1862 0fa4 D7F86422 	 ldr r2,[r7,#612]
 1863 0fa8 D213     	 asrs r2,r2,#15
 1864 0faa 92B2     	 uxth r2,r2
 1865 0fac 1A80     	 strh r2,[r3]
 630:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 631:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 632:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     px = ++pSrc1;
 1866              	 .loc 1 632 0
 1867 0fae D7F85032 	 ldr r3,[r7,#592]
 1868 0fb2 0233     	 adds r3,r3,#2
 1869 0fb4 C7F85032 	 str r3,[r7,#592]
 1870 0fb8 07F11403 	 add r3,r7,#20
 1871 0fbc D7F85022 	 ldr r2,[r7,#592]
 1872 0fc0 1A60     	 str r2,[r3]
 633:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     py = pIn2;
 1873              	 .loc 1 633 0
 1874 0fc2 07F11003 	 add r3,r7,#16
 1875 0fc6 D7F86822 	 ldr r2,[r7,#616]
 1876 0fca 1A60     	 str r2,[r3]
 634:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 635:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement the loop counter */
 636:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize3--;
 1877              	 .loc 1 636 0
 1878 0fcc D7F84032 	 ldr r3,[r7,#576]
 1879 0fd0 013B     	 subs r3,r3,#1
 1880 0fd2 C7F84032 	 str r3,[r7,#576]
 637:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 638:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     j--;
 1881              	 .loc 1 638 0
 1882 0fd6 D7F83C32 	 ldr r3,[r7,#572]
 1883 0fda 013B     	 subs r3,r3,#1
 1884 0fdc C7F83C32 	 str r3,[r7,#572]
 1885              	.L61:
 588:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 1886              	 .loc 1 588 0
 1887 0fe0 D7F83C32 	 ldr r3,[r7,#572]
 1888 0fe4 002B     	 cmp r3,#0
 1889 0fe6 04D0     	 beq .L69
 588:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 1890              	 .loc 1 588 0 is_stmt 0 discriminator 1
 1891 0fe8 D7F84032 	 ldr r3,[r7,#576]
 1892 0fec 002B     	 cmp r3,#0
 1893 0fee 7FF421AF 	 bne .L70
 1894              	.L69:
 639:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 640:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 641:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The second part of the stage starts here */
 642:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* SIMD is not used for the next MAC operations,
 643:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * so pointer py is updated to read only one sample at a time */
 644:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   py = py + 1u;
 1895              	 .loc 1 644 0 is_stmt 1
 1896 0ff2 07F11003 	 add r3,r7,#16
 1897 0ff6 1B68     	 ldr r3,[r3]
 1898 0ff8 9A1C     	 adds r2,r3,#2
 1899 0ffa 07F11003 	 add r3,r7,#16
 1900 0ffe 1A60     	 str r2,[r3]
 645:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 646:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   while (blockSize3 > 0u)
 1901              	 .loc 1 646 0
 1902 1000 60E0     	 b .L71
 1903              	.L75:
 647:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 648:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 649:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
 1904              	 .loc 1 649 0
 1905 1002 0023     	 movs r3,#0
 1906 1004 C7F86432 	 str r3,[r7,#612]
 650:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 651:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 652:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = blockSize3;
 1907              	 .loc 1 652 0
 1908 1008 D7F84032 	 ldr r3,[r7,#576]
 1909 100c C7F83832 	 str r3,[r7,#568]
 653:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 654:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
 1910              	 .loc 1 654 0
 1911 1010 34E0     	 b .L72
 1912              	.L74:
 655:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 656:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 657:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 658:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLAD(*px++, *py--, sum);
 1913              	 .loc 1 658 0
 1914 1012 07F11403 	 add r3,r7,#20
 1915 1016 1B68     	 ldr r3,[r3]
 1916 1018 991C     	 adds r1,r3,#2
 1917 101a 07F11402 	 add r2,r7,#20
 1918 101e 1160     	 str r1,[r2]
 1919 1020 1B88     	 ldrh r3,[r3]
 1920 1022 18B2     	 sxth r0,r3
 1921 1024 07F11003 	 add r3,r7,#16
 1922 1028 1B68     	 ldr r3,[r3]
 1923 102a 991E     	 subs r1,r3,#2
 1924 102c 07F11002 	 add r2,r7,#16
 1925 1030 1160     	 str r1,[r2]
 1926 1032 1B88     	 ldrh r3,[r3]
 1927 1034 19B2     	 sxth r1,r3
 1928 1036 D7F86422 	 ldr r2,[r7,#612]
 1929 103a 07F12803 	 add r3,r7,#40
 1930 103e 1860     	 str r0,[r3]
 1931 1040 07F12403 	 add r3,r7,#36
 1932 1044 1960     	 str r1,[r3]
 1933 1046 07F12003 	 add r3,r7,#32
 1934 104a 1A60     	 str r2,[r3]
 1935              	.LBB128:
 1936              	.LBB129:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1937              	 .loc 2 1724 0
 1938 104c 07F12803 	 add r3,r7,#40
 1939 1050 1B68     	 ldr r3,[r3]
 1940 1052 07F12402 	 add r2,r7,#36
 1941 1056 1268     	 ldr r2,[r2]
 1942 1058 07F12001 	 add r1,r7,#32
 1943 105c 0968     	 ldr r1,[r1]
 1944              	
 1945 105e 23FB0212 	 smlad r2,r3,r2,r1
 1946              	
 1947              	 .thumb
 1948 1062 07F11C03 	 add r3,r7,#28
 1949 1066 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1950              	 .loc 2 1725 0
 1951 1068 07F11C03 	 add r3,r7,#28
 1952 106c 1B68     	 ldr r3,[r3]
 1953              	.LBE129:
 1954              	.LBE128:
 1955              	 .loc 1 658 0
 1956 106e C7F86432 	 str r3,[r7,#612]
 659:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 660:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 661:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 1957              	 .loc 1 661 0
 1958 1072 D7F83832 	 ldr r3,[r7,#568]
 1959 1076 013B     	 subs r3,r3,#1
 1960 1078 C7F83832 	 str r3,[r7,#568]
 1961              	.L72:
 654:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 1962              	 .loc 1 654 0
 1963 107c D7F83832 	 ldr r3,[r7,#568]
 1964 1080 002B     	 cmp r3,#0
 1965 1082 C6D1     	 bne .L74
 662:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 663:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 664:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 665:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
 1966              	 .loc 1 665 0
 1967 1084 07F11803 	 add r3,r7,#24
 1968 1088 1B68     	 ldr r3,[r3]
 1969 108a 991C     	 adds r1,r3,#2
 1970 108c 07F11802 	 add r2,r7,#24
 1971 1090 1160     	 str r1,[r2]
 1972 1092 D7F86422 	 ldr r2,[r7,#612]
 1973 1096 D213     	 asrs r2,r2,#15
 1974 1098 92B2     	 uxth r2,r2
 1975 109a 1A80     	 strh r2,[r3]
 666:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 667:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 668:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     px = ++pSrc1;
 1976              	 .loc 1 668 0
 1977 109c D7F85032 	 ldr r3,[r7,#592]
 1978 10a0 0233     	 adds r3,r3,#2
 1979 10a2 C7F85032 	 str r3,[r7,#592]
 1980 10a6 07F11403 	 add r3,r7,#20
 1981 10aa D7F85022 	 ldr r2,[r7,#592]
 1982 10ae 1A60     	 str r2,[r3]
 669:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     py = pSrc2;
 1983              	 .loc 1 669 0
 1984 10b0 07F11003 	 add r3,r7,#16
 1985 10b4 D7F82822 	 ldr r2,[r7,#552]
 1986 10b8 1A60     	 str r2,[r3]
 670:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 671:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement the loop counter */
 672:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize3--;
 1987              	 .loc 1 672 0
 1988 10ba D7F84032 	 ldr r3,[r7,#576]
 1989 10be 013B     	 subs r3,r3,#1
 1990 10c0 C7F84032 	 str r3,[r7,#576]
 1991              	.L71:
 646:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 1992              	 .loc 1 646 0
 1993 10c4 D7F84032 	 ldr r3,[r7,#576]
 1994 10c8 002B     	 cmp r3,#0
 1995 10ca 9AD1     	 bne .L75
 673:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 674:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 675:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
 676:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *pIn1;                                   /* inputA pointer */
 677:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *pIn2;                                   /* inputB pointer */
 678:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *pOut = pDst;                            /* output pointer */
 679:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulator */
 680:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
 681:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
 682:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers */
 683:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q31_t x0, x1, x2, x3, c0;                      /* Temporary variables to hold state and coefficie
 684:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   uint32_t blockSize1, blockSize2, blockSize3, j, k, count, blkCnt;     /* loop counter */
 685:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   q15_t a, b;
 686:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 687:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
 688:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* srcB is always made to slide across srcA. */
 689:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
 690:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   if (srcALen >= srcBLen)
 691:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 692:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputA pointer */
 693:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     pIn1 = pSrcA;
 694:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 695:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputB pointer */
 696:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     pIn2 = pSrcB;
 697:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 698:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   else
 699:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 700:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputA pointer */
 701:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     pIn1 = pSrcB;
 702:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 703:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputB pointer */
 704:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     pIn2 = pSrcA;
 705:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 706:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 707:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     j = srcBLen;
 708:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     srcBLen = srcALen;
 709:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     srcALen = j;
 710:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 711:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 712:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 713:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The function is internally
 714:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * divided into three stages according to the number of multiplications that has to be
 715:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * taken place between inputA samples and inputB samples. In the first stage of the
 716:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * algorithm, the multiplications increase by one for every iteration.
 717:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * In the second stage of the algorithm, srcBLen number of multiplications are done.
 718:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * In the third stage of the algorithm, the multiplications decrease by one
 719:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * for every iteration. */
 720:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 721:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The algorithm is implemented in three stages.
 722:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      The loop counters of each stage is initiated here. */
 723:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   blockSize1 = srcBLen - 1u;
 724:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   blockSize2 = srcALen - (srcBLen - 1u);
 725:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   blockSize3 = blockSize1;
 726:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 727:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------------
 728:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Initializations of stage1
 729:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * -------------------------*/
 730:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 731:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* sum = x[0] * y[0]
 732:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[0] * y[1] + x[1] * y[0]
 733:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ....
 734:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 735:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    */
 736:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 737:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
 738:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      The count variable holds the number of MAC operations performed */
 739:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   count = 1u;
 740:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 741:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputA */
 742:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   px = pIn1;
 743:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 744:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputB */
 745:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   py = pIn2;
 746:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 747:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 748:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* ------------------------
 749:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Stage1 process
 750:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ----------------------*/
 751:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 752:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* For loop unrolling by 4, this stage is divided into two. */
 753:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* First part of this stage computes the MAC operations less than 4 */
 754:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 755:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 756:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The first part of the stage starts here */
 757:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   while ((count < 4u) && (blockSize1 > 0u))
 758:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 759:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 760:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
 761:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 762:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Loop over number of MAC operations between
 763:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      * inputA samples and inputB samples */
 764:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = count;
 765:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 766:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
 767:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 768:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 769:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum += ((q31_t) * px++ * *py--);
 770:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 771:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 772:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 773:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 774:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 775:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 776:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
 777:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 778:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 779:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     py = pIn2 + count;
 780:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     px = pIn1;
 781:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 782:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Increment the MAC count */
 783:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     count++;
 784:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 785:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement the loop counter */
 786:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize1--;
 787:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 788:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 789:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The second part of the stage starts here */
 790:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The internal loop, over count, is unrolled by 4 */
 791:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* To, read the last two inputB samples using SIMD:
 792:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 793:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   py = py - 1;
 794:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 795:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   while (blockSize1 > 0u)
 796:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 797:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 798:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
 799:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 800:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 801:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = count >> 2u;
 802:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 803:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 804:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 805:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	py++;
 806:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 807:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
 808:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 809:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 810:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 811:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 812:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 813:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 814:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 815:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 816:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 817:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 818:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 819:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 820:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      ** No loop unrolling is used. */
 821:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = count % 0x4u;
 822:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 823:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
 824:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 825:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 826:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum += ((q31_t) * px++ * *py--);
 827:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 828:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 829:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 830:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
 831:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 832:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 833:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
 834:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 835:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 836:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     py = pIn2 + (count - 1u);
 837:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     px = pIn1;
 838:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 839:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Increment the MAC count */
 840:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     count++;
 841:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 842:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement the loop counter */
 843:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize1--;
 844:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
 845:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 846:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------------
 847:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Initializations of stage2
 848:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ------------------------*/
 849:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 850:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 851:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 852:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ....
 853:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y[0
 854:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    */
 855:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 856:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputA */
 857:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   px = pIn1;
 858:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 859:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputB */
 860:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 861:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   py = pSrc2;
 862:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 863:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* count is the index by which the pointer pIn1 to be incremented */
 864:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   count = 0u;
 865:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 866:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 867:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------
 868:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Stage2 process
 869:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * -------------------*/
 870:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 871:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 872:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * So, to loop unroll over blockSize2,
 873:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * srcBLen should be greater than or equal to 4 */
 874:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   if (srcBLen >= 4u)
 875:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
 876:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Loop unroll over blockSize2, by 4 */
 877:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blkCnt = blockSize2 >> 2u;
 878:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 879:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (blkCnt > 0u)
 880:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
 881:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       py = py - 1u;
 882:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 883:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Set all accumulators to zero */
 884:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       acc0 = 0;
 885:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       acc1 = 0;
 886:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       acc2 = 0;
 887:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       acc3 = 0;
 888:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 889:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* read x[0], x[1] samples */
 890:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *px++;
 891:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  b = *px++;
 892:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 893:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 894:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 895:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x0 = __PKHBT(a, b, 16);
 896:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *px;
 897:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x1 = __PKHBT(b, a, 16);
 898:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 899:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
 900:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 901:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x0 = __PKHBT(b, a, 16);
 902:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *px;
 903:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x1 = __PKHBT(a, b, 16);
 904:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 905:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
 906:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 907:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 908:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen >> 2u;
 909:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 910:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 911:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 912:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       do
 913:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
 914:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read the last two inputB samples using SIMD:
 915:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****          * y[srcBLen - 1] and y[srcBLen - 2] */
 916:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		a = *py;
 917:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		b = *(py+1);
 918:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		py -= 2;
 919:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 920:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 921:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 922:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
 923:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 924:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
 925:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 926:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
 927:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 928:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
 929:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 930:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
 931:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
 932:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 933:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
 934:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
 935:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 936:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *px;
 937:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  b = *(px + 1);
 938:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 939:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 940:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 941:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x2 = __PKHBT(a, b, 16);
 942:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *(px + 2);
 943:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x3 = __PKHBT(b, a, 16);
 944:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 945:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
 946:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 947:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x2 = __PKHBT(b, a, 16);
 948:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *(px + 2);
 949:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x3 = __PKHBT(a, b, 16);
 950:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 951:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
 952:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 953:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
 954:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
 955:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 956:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
 957:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
 958:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 959:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 3] and y[srcBLen - 4] */
 960:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		a = *py;
 961:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		b = *(py+1);
 962:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		py -= 2;
 963:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 964:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 965:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 966:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
 967:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 968:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
 969:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 970:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
 971:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 972:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
 973:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 974:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
 975:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x2, c0, acc0);
 976:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 977:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
 978:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x3, c0, acc1);
 979:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 980:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[4], x[5], x[6] */
 981:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *(px + 2);
 982:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  b = *(px + 3);
 983:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 984:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 985:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 986:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x0 = __PKHBT(a, b, 16);
 987:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *(px + 4);
 988:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x1 = __PKHBT(b, a, 16);
 989:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 990:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
 991:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 992:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x0 = __PKHBT(b, a, 16);
 993:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *(px + 4);
 994:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x1 = __PKHBT(a, b, 16);
 995:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 996:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
 997:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
 998:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		px += 4u;
 999:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1000:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
1001:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x0, c0, acc2);
1002:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1003:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
1004:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x1, c0, acc3);
1005:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1006:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       } while (--k);
1007:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1008:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* For the next MAC operations, SIMD is not used
1009:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        * So, the 16 bit pointer if inputB, py is updated */
1010:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1011:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
1012:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        ** No loop unrolling is used. */
1013:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen % 0x4u;
1014:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1015:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       if (k == 1u)
1016:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
1017:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 5] */
1018:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = *(py+1);
1019:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1020:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
1021:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1022:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 << 16u;
1023:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1024:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
1025:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1026:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
1027:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1028:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
1029:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1030:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[7] */
1031:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		a = *px;
1032:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		b = *(px+1);
1033:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		px++;
1034:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1035:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1036:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1037:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		x3 = __PKHBT(a, b, 16);
1038:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1039:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
1040:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1041:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  		x3 = __PKHBT(b, a, 16);;
1042:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1043:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1044:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1045:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1046:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
1047:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
1048:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
1049:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x1, c0, acc2);
1050:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
1051:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
1052:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1053:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       if (k == 2u)
1054:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
1055:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
1056:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		a = *py;
1057:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		b = *(py+1);
1058:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1059:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1060:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1061:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
1062:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1063:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
1064:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1065:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
1066:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1067:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1068:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1069:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[7], x[8], x[9] */
1070:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *px;
1071:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  b = *(px + 1);
1072:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1073:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1074:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1075:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x3 = __PKHBT(a, b, 16);
1076:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *(px + 2);
1077:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x2 = __PKHBT(b, a, 16);
1078:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1079:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
1080:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1081:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x3 = __PKHBT(b, a, 16);
1082:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *(px + 2);
1083:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x2 = __PKHBT(a, b, 16);
1084:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1085:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
1086:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		px += 2u;
1087:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1088:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
1089:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
1090:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
1091:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x3, c0, acc2);
1092:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x2, c0, acc3);
1093:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
1094:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1095:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       if (k == 3u)
1096:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
1097:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
1098:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		a = *py;
1099:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		b = *(py+1);
1100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
1104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
1106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
1108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[7], x[8], x[9] */
1112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *px;
1113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  b = *(px + 1);
1114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x3 = __PKHBT(a, b, 16);
1118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *(px + 2);
1119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x2 = __PKHBT(b, a, 16);
1120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
1122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x3 = __PKHBT(b, a, 16);
1124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  a = *(px + 2);
1125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  x2 = __PKHBT(a, b, 16);
1126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
1128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
1130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
1131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
1132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x3, c0, acc2);
1133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x2, c0, acc3);
1134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 7] */
1136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		c0 = *(py-1);
1137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
1138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 << 16u;
1140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
1141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
1143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
1144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[10] */
1146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		a = *(px+2);
1147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		b = *(px+3);
1148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		x3 = __PKHBT(a, b, 16);
1152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #else
1154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****  		x3 = __PKHBT(b, a, 16);;
1156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 		px += 3u;
1160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
1162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x1, c0, acc0);
1163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLAD(x2, c0, acc1);
1164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
1165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
1166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
1167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Store the results in the accumulators in the destination buffer. */
1169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  *pOut++ = (q15_t)(acc0 >> 15);
1170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  *pOut++ = (q15_t)(acc1 >> 15);
1171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  *pOut++ = (q15_t)(acc2 >> 15);
1172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	  *pOut++ = (q15_t)(acc3 >> 15);
1173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Increment the pointer pIn1 index, count by 4 */
1175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       count += 4u;
1176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
1178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       px = pIn1 + count;
1179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       py = pSrc2;
1180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
1182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       blkCnt--;
1183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
1184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
1186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      ** No loop unrolling is used. */
1187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blkCnt = blockSize2 % 0x4u;
1188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (blkCnt > 0u)
1190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
1191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Accumulator is made zero for every iteration */
1192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = 0;
1193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
1195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen >> 2u;
1196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
1198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       while (k > 0u)
1200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
1201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
1202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Decrement the loop counter */
1208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         k--;
1209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
1210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
1212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****        ** No loop unrolling is used. */
1213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen % 0x4u;
1214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       while (k > 0u)
1216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
1217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
1218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Decrement the loop counter */
1221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         k--;
1222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
1223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
1225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
1226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Increment the pointer pIn1 index, count by 1 */
1228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       count++;
1229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
1231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       px = pIn1 + count;
1232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       py = pSrc2;
1233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
1235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       blkCnt--;
1236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
1237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
1238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   else
1239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
1240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the srcBLen is not a multiple of 4,
1241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      * the blockSize2 loop cannot be unrolled by 4 */
1242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blkCnt = blockSize2;
1243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (blkCnt > 0u)
1245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
1246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Accumulator is made zero for every iteration */
1247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       sum = 0;
1248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* srcBLen number of MACS should be performed */
1250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen;
1251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       while (k > 0u)
1253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       {
1254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulate */
1255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         /* Decrement the loop counter */
1258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         k--;
1259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       }
1260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
1262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
1263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Increment the MAC count */
1265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       count++;
1266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
1268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       px = pIn1 + count;
1269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       py = pSrc2;
1270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
1272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       blkCnt--;
1273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
1274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
1275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------------
1278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Initializations of stage3
1279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * -------------------------*/
1280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[srcAL
1282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[srcAL
1283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ....
1284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
1285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * sum +=  x[srcALen-1] * y[srcBLen-1]
1286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    */
1287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
1289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      The blockSize3 variable holds the number of MAC operations performed */
1290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputA */
1292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
1293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   px = pSrc1;
1294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputB */
1296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
1297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   pIn2 = pSrc2 - 1u;
1298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   py = pIn2;
1299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* -------------------
1301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * Stage3 process
1302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * ------------------*/
1303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* For loop unrolling by 4, this stage is divided into two. */
1305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* First part of this stage computes the MAC operations greater than 4 */
1306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* Second part of this stage computes the MAC operations less than or equal to 4 */
1307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The first part of the stage starts here */
1309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   j = blockSize3 >> 2u;
1310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   while ((j > 0u) && (blockSize3 > 0u))
1312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
1313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
1314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
1315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
1317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = blockSize3 >> 2u;
1318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
1320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 	py++;
1322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
1324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
1325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
1330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
1331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
1332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the blockSize3 is not a multiple of 4, compute any remaining MACs here.
1334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****      ** No loop unrolling is used. */
1335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = blockSize3 % 0x4u;
1336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
1338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
1339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* sum += x[srcALen - srcBLen + 5] * y[srcBLen - 5] */
1340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
1343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
1344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
1345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
1347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
1348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
1350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     px = ++pSrc1;
1351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     py = pIn2;
1352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement the loop counter */
1354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize3--;
1355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     j--;
1357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
1358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* The second part of the stage starts here */
1360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   /* SIMD is not used for the next MAC operations,
1361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****    * so pointer py is updated to read only one sample at a time */
1362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   py = py + 1u;
1363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   while (blockSize3 > 0u)
1365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   {
1366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
1367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
1368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
1370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     k = blockSize3;
1371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0u)
1373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     {
1374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
1375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* sum +=  x[srcALen-1] * y[srcBLen-1] */
1376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
1379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
1380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     }
1381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
1383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
1384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
1386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     px = ++pSrc1;
1387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     py = pSrc2;
1388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement the loop counter */
1390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize3--;
1391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c ****   }
1392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** 
1393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
1394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_fast_q15.c **** }
 1996              	 .loc 1 1394 0
 1997 10cc 07F51C77 	 add r7,r7,#624
 1998              	.LCFI3:
 1999              	 .cfi_def_cfa_offset 8
 2000 10d0 BD46     	 mov sp,r7
 2001              	.LCFI4:
 2002              	 .cfi_def_cfa_register 13
 2003              	 
 2004 10d2 90BC     	 pop {r4,r7}
 2005              	.LCFI5:
 2006              	 .cfi_restore 7
 2007              	 .cfi_restore 4
 2008              	 .cfi_def_cfa_offset 0
 2009 10d4 7047     	 bx lr
 2010              	 .cfi_endproc
 2011              	.LFE135:
 2013 10d6 00BF     	 .text
 2014              	.Letext0:
 2015              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2016              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2017              	 .file 5 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_fast_q15.c
    {standard input}:20     .text.arm_conv_fast_q15:00000000 $t
    {standard input}:25     .text.arm_conv_fast_q15:00000000 arm_conv_fast_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
