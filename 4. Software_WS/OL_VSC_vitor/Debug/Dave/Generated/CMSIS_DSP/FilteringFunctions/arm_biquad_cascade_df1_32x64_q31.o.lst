   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_biquad_cascade_df1_32x64_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_biquad_cas_df1_32x64_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_biquad_cas_df1_32x64_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_biquad_cas_df1_32x64_q31:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Title:        arm_biquad_cascade_df1_32x64_q31.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Description:  High precision Q31 Biquad cascade filter processing function
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @defgroup BiquadCascadeDF1_32x64 High Precision Q31 Biquad Cascade Filter
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * This function implements a high precision Biquad cascade filter which operates on
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Q31 data values.  The filter coefficients are in 1.31 format and the state variables
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * are in 1.63 format.  The double precision state variables reduce quantization noise
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * in the filter and provide a cleaner output.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * These filters are particularly useful when implementing filters in which the
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * singularities are close to the unit circle.  This is common for low pass or high
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * pass filters with very low cutoff frequencies.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The function operates on blocks of input and output data
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * and each call to the function processes <code>blockSize</code> samples through
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * the filter. <code>pSrc</code> and <code>pDst</code> points to input and output arrays
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * containing <code>blockSize</code> Q31 values.
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par Algorithm
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Each Biquad stage implements a second order filter using the difference equation:
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *     y[n] = b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * A Direct Form I algorithm is used with 5 coefficients and 4 state variables per stage.
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \image html Biquad.gif "Single Biquad filter stage"
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Coefficients <code>b0, b1, and b2 </code> multiply the input signal <code>x[n]</code> and are re
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Coefficients <code>a1</code> and <code>a2</code> multiply the output signal <code>y[n]</code> an
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Pay careful attention to the sign of the feedback coefficients.
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Some design tools use the difference equation
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *     y[n] = b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] - a1 * y[n-1] - a2 * y[n-2]
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * In this case the feedback coefficients <code>a1</code> and <code>a2</code> must be negated when 
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Higher order filters are realized as a cascade of second order sections.
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <code>numStages</code> refers to the number of second order stages used.
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * For example, an 8th order filter would be realized with <code>numStages=4</code> second order st
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \image html BiquadCascade.gif "8th order filter using a cascade of Biquad stages"
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * A 9th order filter would be realized with <code>numStages=5</code> second order stages with the 
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The <code>pState</code> points to state variables array .
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Each Biquad stage has 4 state variables <code>x[n-1], x[n-2], y[n-1],</code> and <code>y[n-2]</c
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The state variables are arranged in the array as:
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *     {x[n-1], x[n-2], y[n-1], y[n-2]}
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The 4 state variables for stage 1 are first, then the 4 state variables for stage 2, and so on.
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The state array has a total length of <code>4*numStages</code> values of data in 1.63 format.
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The state variables are updated after each block of data is processed; the coefficients are unto
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par Instance Structure
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The coefficients and state variables for a filter are stored together in an instance data struct
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * A separate instance structure must be defined for each filter.
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Coefficient arrays may be shared among several instances while state variable arrays cannot be s
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par Init Function
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * There is also an associated initialization function which performs the following operations:
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * - Sets the values of the internal structure fields.
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * - Zeros out the values in the state buffer.
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * To do this manually without calling the init function, assign the follow subfields of the instan
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * numStages, pCoeffs, postShift, pState. Also set all of the values in pState to zero.
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Use of the initialization function is optional.
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * However, if the initialization function is used, then the instance structure cannot be placed in
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * To place an instance structure into a const data section, the instance structure must be manuall
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Set the values in the state buffer to zeros before static initialization.
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * For example, to statically initialize the filter instance structure use
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *     arm_biquad_cas_df1_32x64_ins_q31 S1 = {numStages, pState, pCoeffs, postShift};
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * where <code>numStages</code> is the number of Biquad stages in the filter; <code>pState</code> i
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <code>pCoeffs</code> is the address of the coefficient buffer; <code>postShift</code> shift to b
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par Fixed-Point Behavior
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Care must be taken while using Biquad Cascade 32x64 filter function.
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Following issues must be considered:
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * - Scaling of coefficients
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * - Filter gain
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * - Overflow and saturation
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Filter coefficients are represented as fractional values and
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * restricted to lie in the range <code>[-1 +1)</code>.
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The processing function has an additional scaling parameter <code>postShift</code>
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * which allows the filter coefficients to exceed the range <code>[+1 -1)</code>.
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * At the output of the filter's accumulator is a shift register which shifts the result by <code>p
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \image html BiquadPostshift.gif "Fixed-point Biquad with shift by postShift bits after accumulat
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * This essentially scales the filter coefficients by <code>2^postShift</code>.
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * For example, to realize the coefficients
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    {1.5, -0.8, 1.2, 1.6, -0.9}
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * set the Coefficient array to:
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    {0.75, -0.4, 0.6, 0.8, -0.45}
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * and set <code>postShift=1</code>
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The second thing to keep in mind is the gain through the filter.
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The frequency response of a Biquad filter is a function of its coefficients.
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * It is possible for the gain through the filter to exceed 1.0 meaning that the filter increases t
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * This means that an input signal with amplitude < 1.0 may result in an output > 1.0 and these are
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * To avoid this behavior the filter needs to be scaled down such that its peak gain < 1.0 or the i
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The third item to consider is the overflow and saturation behavior of the fixed-point Q31 versio
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * This is described in the function specific documentation below.
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @addtogroup BiquadCascadeDF1_32x64
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @{
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @details
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @param[in]  *S points to an instance of the high precision Q31 Biquad cascade filter.
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @param[in]  *pSrc points to the block of input data.
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @param[out] *pDst points to the block of output data.
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @param[in]  blockSize number of samples to process.
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @return none.
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The function is implemented using an internal 64-bit accumulator.
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplicatio
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Thus, if the accumulator result overflows it wraps around rather than clip.
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * In order to avoid overflows completely the input signal must be scaled down by 2 bits and lie in
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * After all 5 multiply-accumulates are performed, the 2.62 accumulator is shifted by <code>postShi
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * 1.31 format by discarding the low 32 bits.
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Two related functions are provided in the CMSIS DSP library.
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <code>arm_biquad_cascade_df1_q31()</code> implements a Biquad cascade with 32-bit coefficients a
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <code>arm_biquad_cascade_df1_fast_q31()</code> implements a Biquad cascade with 32-bit coefficie
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** void arm_biquad_cas_df1_32x64_q31(
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t * pSrc,
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t * pDst,
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   uint32_t blockSize)
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** {
  28              	 .loc 1 180 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 28
  36              	 .cfi_offset 4,-28
  37              	 .cfi_offset 5,-24
  38              	 .cfi_offset 7,-20
  39              	 .cfi_offset 8,-16
  40              	 .cfi_offset 9,-12
  41              	 .cfi_offset 10,-8
  42              	 .cfi_offset 11,-4
  43 0004 FFB0     	 sub sp,sp,#508
  44              	.LCFI1:
  45              	 .cfi_def_cfa_offset 536
  46 0006 00AF     	 add r7,sp,#0
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 7
  49 0008 07F1EC04 	 add r4,r7,#236
  50 000c 2060     	 str r0,[r4]
  51 000e 07F1E800 	 add r0,r7,#232
  52 0012 0160     	 str r1,[r0]
  53 0014 07F1E401 	 add r1,r7,#228
  54 0018 0A60     	 str r2,[r1]
  55 001a 07F1E002 	 add r2,r7,#224
  56 001e 1360     	 str r3,[r2]
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t *pIn = pSrc;                             /*  input pointer initialization  */
  57              	 .loc 1 181 0
  58 0020 07F1E803 	 add r3,r7,#232
  59 0024 1B68     	 ldr r3,[r3]
  60 0026 C7F8F431 	 str r3,[r7,#500]
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t *pOut = pDst;                            /*  output pointer initialization */
  61              	 .loc 1 182 0
  62 002a 07F1E403 	 add r3,r7,#228
  63 002e 1B68     	 ldr r3,[r3]
  64 0030 C7F8F031 	 str r3,[r7,#496]
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q63_t *pState = S->pState;                     /*  state pointer initialization  */
  65              	 .loc 1 183 0
  66 0034 07F1EC03 	 add r3,r7,#236
  67 0038 1B68     	 ldr r3,[r3]
  68 003a 5B68     	 ldr r3,[r3,#4]
  69 003c C7F8EC31 	 str r3,[r7,#492]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t *pCoeffs = S->pCoeffs;                   /*  coeff pointer initialization  */
  70              	 .loc 1 184 0
  71 0040 07F1EC03 	 add r3,r7,#236
  72 0044 1B68     	 ldr r3,[r3]
  73 0046 9B68     	 ldr r3,[r3,#8]
  74 0048 C7F8E831 	 str r3,[r7,#488]
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q63_t acc;                                     /*  accumulator                   */
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t Xn1, Xn2;                                /*  Input Filter state variables        */
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q63_t Yn1, Yn2;                                /*  Output Filter state variables        */
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t b0, b1, b2, a1, a2;                      /*  Filter coefficients           */
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t Xn;                                      /*  temporary input               */
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   int32_t shift = (int32_t) S->postShift + 1;    /*  Shift to be applied to the output */
  75              	 .loc 1 190 0
  76 004c 07F1EC03 	 add r3,r7,#236
  77 0050 1B68     	 ldr r3,[r3]
  78 0052 1B7B     	 ldrb r3,[r3,#12]
  79 0054 0133     	 adds r3,r3,#1
  80 0056 C7F8C431 	 str r3,[r7,#452]
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   uint32_t sample, stage = S->numStages;         /*  loop counters                     */
  81              	 .loc 1 191 0
  82 005a 07F1EC03 	 add r3,r7,#236
  83 005e 1B68     	 ldr r3,[r3]
  84 0060 1B78     	 ldrb r3,[r3]
  85 0062 C7F8C831 	 str r3,[r7,#456]
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t acc_l, acc_h;                            /*  temporary output               */
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   uint32_t uShift = ((uint32_t) S->postShift + 1u);
  86              	 .loc 1 193 0
  87 0066 07F1EC03 	 add r3,r7,#236
  88 006a 1B68     	 ldr r3,[r3]
  89 006c 1B7B     	 ldrb r3,[r3,#12]
  90 006e 0133     	 adds r3,r3,#1
  91 0070 C7F8C031 	 str r3,[r7,#448]
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   uint32_t lShift = 32u - uShift;                /*  Shift to be applied to the output */
  92              	 .loc 1 194 0
  93 0074 D7F8C031 	 ldr r3,[r7,#448]
  94 0078 C3F12003 	 rsb r3,r3,#32
  95 007c C7F8BC31 	 str r3,[r7,#444]
  96              	.L16:
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #if defined (ARM_MATH_DSP)
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   do
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   {
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reading the coefficients */
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b0 = *pCoeffs++;
  97              	 .loc 1 204 0
  98 0080 D7F8E821 	 ldr r2,[r7,#488]
  99 0084 131D     	 adds r3,r2,#4
 100 0086 C7F8E831 	 str r3,[r7,#488]
 101 008a 1368     	 ldr r3,[r2]
 102 008c C7F8B831 	 str r3,[r7,#440]
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b1 = *pCoeffs++;
 103              	 .loc 1 205 0
 104 0090 D7F8E821 	 ldr r2,[r7,#488]
 105 0094 131D     	 adds r3,r2,#4
 106 0096 C7F8E831 	 str r3,[r7,#488]
 107 009a 1368     	 ldr r3,[r2]
 108 009c C7F8B431 	 str r3,[r7,#436]
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b2 = *pCoeffs++;
 109              	 .loc 1 206 0
 110 00a0 D7F8E821 	 ldr r2,[r7,#488]
 111 00a4 131D     	 adds r3,r2,#4
 112 00a6 C7F8E831 	 str r3,[r7,#488]
 113 00aa 1368     	 ldr r3,[r2]
 114 00ac C7F8B031 	 str r3,[r7,#432]
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     a1 = *pCoeffs++;
 115              	 .loc 1 207 0
 116 00b0 D7F8E821 	 ldr r2,[r7,#488]
 117 00b4 131D     	 adds r3,r2,#4
 118 00b6 C7F8E831 	 str r3,[r7,#488]
 119 00ba 1368     	 ldr r3,[r2]
 120 00bc C7F8AC31 	 str r3,[r7,#428]
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     a2 = *pCoeffs++;
 121              	 .loc 1 208 0
 122 00c0 D7F8E821 	 ldr r2,[r7,#488]
 123 00c4 131D     	 adds r3,r2,#4
 124 00c6 C7F8E831 	 str r3,[r7,#488]
 125 00ca 1368     	 ldr r3,[r2]
 126 00cc C7F8A831 	 str r3,[r7,#424]
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reading the state values */
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Xn1 = (q31_t) (pState[0]);
 127              	 .loc 1 211 0
 128 00d0 D7F8EC31 	 ldr r3,[r7,#492]
 129 00d4 D3E90023 	 ldrd r2,[r3]
 130 00d8 1346     	 mov r3,r2
 131 00da C7F8E431 	 str r3,[r7,#484]
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Xn2 = (q31_t) (pState[1]);
 132              	 .loc 1 212 0
 133 00de D7F8EC31 	 ldr r3,[r7,#492]
 134 00e2 0833     	 adds r3,r3,#8
 135 00e4 D3E90023 	 ldrd r2,[r3]
 136 00e8 1346     	 mov r3,r2
 137 00ea C7F8E031 	 str r3,[r7,#480]
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Yn1 = pState[2];
 138              	 .loc 1 213 0
 139 00ee D7F8EC31 	 ldr r3,[r7,#492]
 140 00f2 D3E90423 	 ldrd r2,[r3,#16]
 141 00f6 07F5EC71 	 add r1,r7,#472
 142 00fa C1E90023 	 strd r2,[r1]
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Yn2 = pState[3];
 143              	 .loc 1 214 0
 144 00fe D7F8EC31 	 ldr r3,[r7,#492]
 145 0102 D3E90623 	 ldrd r2,[r3,#24]
 146 0106 07F5E871 	 add r1,r7,#464
 147 010a C1E90023 	 strd r2,[r1]
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Apply loop unrolling and compute 4 output values simultaneously. */
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* The variable acc hold output value that is being computed and
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      * stored in the destination buffer
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      * acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      */
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     sample = blockSize >> 2u;
 148              	 .loc 1 222 0
 149 010e 07F1E003 	 add r3,r7,#224
 150 0112 1B68     	 ldr r3,[r3]
 151 0114 9B08     	 lsrs r3,r3,#2
 152 0116 C7F8CC31 	 str r3,[r7,#460]
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* First part of the processing with loop unrolling. Compute 4 outputs at a time.
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     while (sample > 0u)
 153              	 .loc 1 226 0
 154 011a 00F063BD 	 b .L2
 155              	.L11:
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the input */
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 156              	 .loc 1 229 0
 157 011e D7F8F421 	 ldr r2,[r7,#500]
 158 0122 131D     	 adds r3,r2,#4
 159 0124 C7F8F431 	 str r3,[r7,#500]
 160 0128 1368     	 ldr r3,[r2]
 161 012a C7F8A431 	 str r3,[r7,#420]
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn *b0;
 162              	 .loc 1 234 0
 163 012e D7F8A431 	 ldr r3,[r7,#420]
 164 0132 1846     	 mov r0,r3
 165 0134 4FEAE071 	 asr r1,r0,#31
 166 0138 D7F8B831 	 ldr r3,[r7,#440]
 167 013c 1A46     	 mov r2,r3
 168 013e 4FEAE273 	 asr r3,r2,#31
 169 0142 02FB01F5 	 mul r5,r2,r1
 170 0146 00FB03F4 	 mul r4,r0,r3
 171 014a 2C44     	 add r4,r4,r5
 172 014c A0FB0223 	 umull r2,r3,r0,r2
 173 0150 E118     	 adds r1,r4,r3
 174 0152 0B46     	 mov r3,r1
 175 0154 07F5CC71 	 add r1,r7,#408
 176 0158 C1E90023 	 strd r2,[r1]
 177 015c 07F5CC71 	 add r1,r7,#408
 178 0160 C1E90023 	 strd r2,[r1]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 *b1;
 179              	 .loc 1 237 0
 180 0164 D7F8E431 	 ldr r3,[r7,#484]
 181 0168 1846     	 mov r0,r3
 182 016a 4FEAE071 	 asr r1,r0,#31
 183 016e D7F8B431 	 ldr r3,[r7,#436]
 184 0172 1A46     	 mov r2,r3
 185 0174 4FEAE273 	 asr r3,r2,#31
 186 0178 02FB01F5 	 mul r5,r2,r1
 187 017c 00FB03F4 	 mul r4,r0,r3
 188 0180 2C44     	 add r4,r4,r5
 189 0182 A0FB0201 	 umull r0,r1,r0,r2
 190 0186 6318     	 adds r3,r4,r1
 191 0188 1946     	 mov r1,r3
 192 018a 07F5CC73 	 add r3,r7,#408
 193 018e D3E90023 	 ldrd r2,[r3]
 194 0192 1218     	 adds r2,r2,r0
 195 0194 43EB0103 	 adc r3,r3,r1
 196 0198 07F5CC71 	 add r1,r7,#408
 197 019c C1E90023 	 strd r2,[r1]
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b2;
 198              	 .loc 1 240 0
 199 01a0 D7F8E031 	 ldr r3,[r7,#480]
 200 01a4 1846     	 mov r0,r3
 201 01a6 4FEAE071 	 asr r1,r0,#31
 202 01aa D7F8B031 	 ldr r3,[r7,#432]
 203 01ae 1A46     	 mov r2,r3
 204 01b0 4FEAE273 	 asr r3,r2,#31
 205 01b4 02FB01F5 	 mul r5,r2,r1
 206 01b8 00FB03F4 	 mul r4,r0,r3
 207 01bc 2C44     	 add r4,r4,r5
 208 01be A0FB0201 	 umull r0,r1,r0,r2
 209 01c2 6318     	 adds r3,r4,r1
 210 01c4 1946     	 mov r1,r3
 211 01c6 07F5CC73 	 add r3,r7,#408
 212 01ca D3E90023 	 ldrd r2,[r3]
 213 01ce 1218     	 adds r2,r2,r0
 214 01d0 43EB0103 	 adc r3,r3,r1
 215 01d4 07F5CC71 	 add r1,r7,#408
 216 01d8 C1E90023 	 strd r2,[r1]
 217 01dc 07F5EC73 	 add r3,r7,#472
 218 01e0 D3E90023 	 ldrd r2,[r3]
 219 01e4 07F5C471 	 add r1,r7,#392
 220 01e8 C1E90023 	 strd r2,[r1]
 221 01ec D7F8AC31 	 ldr r3,[r7,#428]
 222 01f0 C7F88431 	 str r3,[r7,#388]
 223              	.LBB22:
 224              	.LBB23:
 225              	 .file 2 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
   1:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /* ----------------------------------------------------------------------
   2:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Project:      CMSIS DSP Library
   3:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Title:        CMSIS_DSP/cmsis_dsp.h
   4:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
   6:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * $Date:        27. January 2017
   7:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * $Revision:    V.1.5.1
   8:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
   9:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Target Processor: Cortex-M cores
  10:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * -------------------------------------------------------------------- */
  11:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /*
  12:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  14:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  16:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * not use this file except in compliance with the License.
  18:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * You may obtain a copy of the License at
  19:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  20:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  22:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * See the License for the specific language governing permissions and
  26:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * limitations under the License.
  27:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
  28:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
  29:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
  30:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  32:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Introduction
  33:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  34:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  35:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  38:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Basic math functions
  40:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Fast math functions
  41:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Complex math functions
  42:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Filters
  43:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Matrix functions
  44:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Transforms
  45:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Motor control functions
  46:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Statistical functions
  47:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Support functions
  48:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Interpolation functions
  49:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  50:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  53:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Using the Library
  54:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  55:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  56:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  77:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library functions are declared in the public file <code>CMSIS_DSP/cmsis_dsp.h</code> which
  78:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * public header file <code> CMSIS_DSP/cmsis_dsp.h</code> for Cortex-M cores with little endian a
  80:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * 
  85:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  86:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Examples
  87:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * --------
  88:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  89:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  90:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  91:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Toolchain Support
  92:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  93:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  94:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  97:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Building the Library
  98:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  99:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Pre-processor Macros
 107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Each library project have differant pre-processor macros.
 110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_CMx:
 128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * on ARMv8M Mainline target.
 137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - __FPU_PRESENT:
 139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - __DSP_PRESENT:
 143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * -----------------------------
 149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |File/Folder                   |Content                                                       
 152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Revision History of CMSIS-DSP
 160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Copyright Notice
 164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * operate on individual values and not arrays.
 179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions operates on complex data vectors.
 186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * (real, imag, real, imag, ...).
 188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * real values.
 191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * the type
 203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * definition for the floating-point matrix structure is shown
 204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * below:
 205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     typedef struct
 207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     {
 208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     } arm_matrix_instance_f32;
 212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * matrix element (i, j) is stored at:
 219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     pData[i*numCols + j]
 221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par Init Functions
 224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * data structure.
 226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par
 231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * To place the instance structure in a const data
 234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * data array.
 243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par Size Checking
 245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * columns.  If the size check fails the functions return:
 249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Otherwise the functions return
 253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SUCCESS
 255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupController Controller Functions
 274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupSupport Support Functions
 281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupExamples Examples
 292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef _ARM_MATH_H
 294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define _ARM_MATH_H
 295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /* ignore some GCC warnings */
 297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined ( __GNUC__ )
 298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic push
 299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined(ARM_MATH_CM7)
 307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm7.h"
 308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_DSP
 309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm4.h"
 311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_DSP
 312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm3.h"
 314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0.h"
 316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0plus.h"
 319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_armv8mbl.h"
 322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_armv8mml.h"
 325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ARM_MATH_DSP
 327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #include "string.h"
 334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #include "math.h"
 335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifdef   __cplusplus
 336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** extern "C"
 337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** {
 338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q31          (0x100)
 346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q15          0x5
 347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define INDEX_MASK         0x0000003F
 348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef PI
 349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define PI               3.14159265358979f
 350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macro for Unaligned Support
 372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if defined  (__GNUC__)
 377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #else
 379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __align(4)
 380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef enum
 388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_status;
 397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int8_t q7_t;
 402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int16_t q15_t;
 407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int32_t q31_t;
 412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int64_t q63_t;
 417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef float float32_t;
 422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef double float64_t;
 427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #if   defined ( __CC_ARM )
 432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __GNUC__ )
 442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __ICCARM__ )
 447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __TI_ARM__ )
 452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __CSMC__ )
 457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __TASKING__ )
 462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   #error Unknown compiler
 468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
 489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q31 to Q7 values.
 529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x)
 532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x)
 542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x,
 553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t y)
 554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 226              	 .loc 2 555 0
 227 01f4 07F5C473 	 add r3,r7,#392
 228 01f8 D3E90001 	 ldrd r0,[r3]
 229 01fc 4FF0FF32 	 mov r2,#-1
 230 0200 4FF00003 	 mov r3,#0
 231 0204 00EA0200 	 and r0,r0,r2
 232 0208 01EA0301 	 and r1,r1,r3
 233 020c D7F88431 	 ldr r3,[r7,#388]
 234 0210 1A46     	 mov r2,r3
 235 0212 4FEAE273 	 asr r3,r2,#31
 236 0216 02FB01F5 	 mul r5,r2,r1
 237 021a 00FB03F4 	 mul r4,r0,r3
 238 021e 2C44     	 add r4,r4,r5
 239 0220 A0FB0223 	 umull r2,r3,r0,r2
 240 0224 E118     	 adds r1,r4,r3
 241 0226 0B46     	 mov r3,r1
 242 0228 1900     	 movs r1,r3
 243 022a C7F89810 	 str r1,[r7,#152]
 244 022e DB17     	 asrs r3,r3,#31
 245 0230 C7F89C30 	 str r3,[r7,#156]
 556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 246              	 .loc 2 556 0
 247 0234 07F5C473 	 add r3,r7,#392
 248 0238 D3E90023 	 ldrd r2,[r3]
 249 023c 1900     	 movs r1,r3
 250 023e C7F89010 	 str r1,[r7,#144]
 251 0242 DB17     	 asrs r3,r3,#31
 252 0244 C7F89430 	 str r3,[r7,#148]
 253 0248 D7F88431 	 ldr r3,[r7,#388]
 254 024c 1A46     	 mov r2,r3
 255 024e 4FEAE273 	 asr r3,r2,#31
 256 0252 D7E92445 	 ldrd r4,[r7,#144]
 257 0256 2946     	 mov r1,r5
 258 0258 02FB01F0 	 mul r0,r2,r1
 259 025c 2146     	 mov r1,r4
 260 025e 01FB03F1 	 mul r1,r1,r3
 261 0262 0144     	 add r1,r1,r0
 262 0264 2046     	 mov r0,r4
 263 0266 A0FB0245 	 umull r4,r5,r0,r2
 264 026a 4B19     	 adds r3,r1,r5
 265 026c 1D46     	 mov r5,r3
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 266              	 .loc 2 555 0
 267 026e D7E92601 	 ldrd r0,[r7,#152]
 268 0272 0019     	 adds r0,r0,r4
 269 0274 41EB0501 	 adc r1,r1,r5
 270              	.LBE23:
 271              	.LBE22:
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 272              	 .loc 1 243 0
 273 0278 07F5CC73 	 add r3,r7,#408
 274 027c D3E90023 	 ldrd r2,[r3]
 275 0280 1218     	 adds r2,r2,r0
 276 0282 43EB0103 	 adc r3,r3,r1
 277 0286 07F5CC71 	 add r1,r7,#408
 278 028a C1E90023 	 strd r2,[r1]
 279 028e 07F5E873 	 add r3,r7,#464
 280 0292 D3E90023 	 ldrd r2,[r3]
 281 0296 07F5BC71 	 add r1,r7,#376
 282 029a C1E90023 	 strd r2,[r1]
 283 029e D7F8A831 	 ldr r3,[r7,#424]
 284 02a2 C7F87431 	 str r3,[r7,#372]
 285              	.LBB24:
 286              	.LBB25:
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 287              	 .loc 2 555 0
 288 02a6 07F5BC73 	 add r3,r7,#376
 289 02aa D3E90001 	 ldrd r0,[r3]
 290 02ae 4FF0FF32 	 mov r2,#-1
 291 02b2 4FF00003 	 mov r3,#0
 292 02b6 00EA0200 	 and r0,r0,r2
 293 02ba 01EA0301 	 and r1,r1,r3
 294 02be D7F87431 	 ldr r3,[r7,#372]
 295 02c2 1A46     	 mov r2,r3
 296 02c4 4FEAE273 	 asr r3,r2,#31
 297 02c8 02FB01F5 	 mul r5,r2,r1
 298 02cc 00FB03F4 	 mul r4,r0,r3
 299 02d0 2C44     	 add r4,r4,r5
 300 02d2 A0FB0223 	 umull r2,r3,r0,r2
 301 02d6 E118     	 adds r1,r4,r3
 302 02d8 0B46     	 mov r3,r1
 303 02da 1900     	 movs r1,r3
 304 02dc C7F88810 	 str r1,[r7,#136]
 305 02e0 DB17     	 asrs r3,r3,#31
 306 02e2 C7F88C30 	 str r3,[r7,#140]
 307              	 .loc 2 556 0
 308 02e6 07F5BC73 	 add r3,r7,#376
 309 02ea D3E90023 	 ldrd r2,[r3]
 310 02ee 1900     	 movs r1,r3
 311 02f0 C7F88010 	 str r1,[r7,#128]
 312 02f4 DB17     	 asrs r3,r3,#31
 313 02f6 C7F88430 	 str r3,[r7,#132]
 314 02fa D7F87431 	 ldr r3,[r7,#372]
 315 02fe 1A46     	 mov r2,r3
 316 0300 4FEAE273 	 asr r3,r2,#31
 317 0304 D7E92045 	 ldrd r4,[r7,#128]
 318 0308 2946     	 mov r1,r5
 319 030a 02FB01F0 	 mul r0,r2,r1
 320 030e 2146     	 mov r1,r4
 321 0310 01FB03F1 	 mul r1,r1,r3
 322 0314 0144     	 add r1,r1,r0
 323 0316 2046     	 mov r0,r4
 324 0318 A0FB0245 	 umull r4,r5,r0,r2
 325 031c 4B19     	 adds r3,r1,r5
 326 031e 1D46     	 mov r5,r3
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 327              	 .loc 2 555 0
 328 0320 D7E92201 	 ldrd r0,[r7,#136]
 329 0324 0019     	 adds r0,r0,r4
 330 0326 41EB0501 	 adc r1,r1,r5
 331              	.LBE25:
 332              	.LBE24:
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 333              	 .loc 1 246 0
 334 032a 07F5CC73 	 add r3,r7,#408
 335 032e D3E90023 	 ldrd r2,[r3]
 336 0332 1218     	 adds r2,r2,r0
 337 0334 43EB0103 	 adc r3,r3,r1
 338 0338 07F5CC71 	 add r1,r7,#408
 339 033c C1E90023 	 strd r2,[r1]
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63 , Yn2 variable is reused */
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = acc << shift;
 340              	 .loc 1 249 0
 341 0340 07F5CC73 	 add r3,r7,#408
 342 0344 D3E90023 	 ldrd r2,[r3]
 343 0348 D7F8C441 	 ldr r4,[r7,#452]
 344 034c A4F12001 	 sub r1,r4,#32
 345 0350 C4F12000 	 rsb r0,r4,#32
 346 0354 03FA04F5 	 lsl r5,r3,r4
 347 0358 C7F8DC50 	 str r5,[r7,#220]
 348 035c 02FA01F1 	 lsl r1,r2,r1
 349 0360 D7F8DC50 	 ldr r5,[r7,#220]
 350 0364 0D43     	 orrs r5,r5,r1
 351 0366 C7F8DC50 	 str r5,[r7,#220]
 352 036a 22FA00F0 	 lsr r0,r2,r0
 353 036e D7F8DC10 	 ldr r1,[r7,#220]
 354 0372 0143     	 orrs r1,r1,r0
 355 0374 C7F8DC10 	 str r1,[r7,#220]
 356 0378 02FA04F3 	 lsl r3,r2,r4
 357 037c C7F8D830 	 str r3,[r7,#216]
 358 0380 D7E93623 	 ldrd r2,[r7,#216]
 359 0384 07F5E871 	 add r1,r7,#464
 360 0388 C1E90023 	 strd r2,[r1]
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 361              	 .loc 1 252 0
 362 038c D7F89831 	 ldr r3,[r7,#408]
 363 0390 C7F89431 	 str r3,[r7,#404]
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 364              	 .loc 1 255 0
 365 0394 07F5CC73 	 add r3,r7,#408
 366 0398 D3E90023 	 ldrd r2,[r3]
 367 039c 1B00     	 movs r3,r3
 368 039e C7F8C030 	 str r3,[r7,#192]
 369 03a2 0023     	 movs r3,#0
 370 03a4 C7F8C430 	 str r3,[r7,#196]
 371 03a8 D7F8C030 	 ldr r3,[r7,#192]
 372 03ac C7F89031 	 str r3,[r7,#400]
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 373              	 .loc 1 258 0
 374 03b0 D7F89421 	 ldr r2,[r7,#404]
 375 03b4 D7F8BC31 	 ldr r3,[r7,#444]
 376 03b8 22FA03F1 	 lsr r1,r2,r3
 377 03bc D7F8C021 	 ldr r2,[r7,#448]
 378 03c0 D7F89031 	 ldr r3,[r7,#400]
 379 03c4 9340     	 lsls r3,r3,r2
 380 03c6 0B43     	 orrs r3,r3,r1
 381 03c8 C7F89031 	 str r3,[r7,#400]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *pOut = acc_h;
 382              	 .loc 1 261 0
 383 03cc D7F8F021 	 ldr r2,[r7,#496]
 384 03d0 D7F89031 	 ldr r3,[r7,#400]
 385 03d4 1360     	 str r3,[r2]
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the second input into Xn2, to reuse the value */
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = *pIn++;
 386              	 .loc 1 264 0
 387 03d6 D7F8F421 	 ldr r2,[r7,#500]
 388 03da 131D     	 adds r3,r2,#4
 389 03dc C7F8F431 	 str r3,[r7,#500]
 390 03e0 1368     	 ldr r3,[r2]
 391 03e2 C7F8E031 	 str r3,[r7,#480]
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn *b1;
 392              	 .loc 1 269 0
 393 03e6 D7F8A431 	 ldr r3,[r7,#420]
 394 03ea 1846     	 mov r0,r3
 395 03ec 4FEAE071 	 asr r1,r0,#31
 396 03f0 D7F8B431 	 ldr r3,[r7,#436]
 397 03f4 1A46     	 mov r2,r3
 398 03f6 4FEAE273 	 asr r3,r2,#31
 399 03fa 02FB01F5 	 mul r5,r2,r1
 400 03fe 00FB03F4 	 mul r4,r0,r3
 401 0402 2C44     	 add r4,r4,r5
 402 0404 A0FB0223 	 umull r2,r3,r0,r2
 403 0408 E118     	 adds r1,r4,r3
 404 040a 0B46     	 mov r3,r1
 405 040c 07F5CC71 	 add r1,r7,#408
 406 0410 C1E90023 	 strd r2,[r1]
 407 0414 07F5CC71 	 add r1,r7,#408
 408 0418 C1E90023 	 strd r2,[r1]
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b0;
 409              	 .loc 1 272 0
 410 041c D7F8E031 	 ldr r3,[r7,#480]
 411 0420 1846     	 mov r0,r3
 412 0422 4FEAE071 	 asr r1,r0,#31
 413 0426 D7F8B831 	 ldr r3,[r7,#440]
 414 042a 1A46     	 mov r2,r3
 415 042c 4FEAE273 	 asr r3,r2,#31
 416 0430 02FB01F5 	 mul r5,r2,r1
 417 0434 00FB03F4 	 mul r4,r0,r3
 418 0438 2C44     	 add r4,r4,r5
 419 043a A0FB0201 	 umull r0,r1,r0,r2
 420 043e 6318     	 adds r3,r4,r1
 421 0440 1946     	 mov r1,r3
 422 0442 07F5CC73 	 add r3,r7,#408
 423 0446 D3E90023 	 ldrd r2,[r3]
 424 044a 1218     	 adds r2,r2,r0
 425 044c 43EB0103 	 adc r3,r3,r1
 426 0450 07F5CC71 	 add r1,r7,#408
 427 0454 C1E90023 	 strd r2,[r1]
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 *b2;
 428              	 .loc 1 275 0
 429 0458 D7F8E431 	 ldr r3,[r7,#484]
 430 045c 1846     	 mov r0,r3
 431 045e 4FEAE071 	 asr r1,r0,#31
 432 0462 D7F8B031 	 ldr r3,[r7,#432]
 433 0466 1A46     	 mov r2,r3
 434 0468 4FEAE273 	 asr r3,r2,#31
 435 046c 02FB01F5 	 mul r5,r2,r1
 436 0470 00FB03F4 	 mul r4,r0,r3
 437 0474 2C44     	 add r4,r4,r5
 438 0476 A0FB0201 	 umull r0,r1,r0,r2
 439 047a 6318     	 adds r3,r4,r1
 440 047c 1946     	 mov r1,r3
 441 047e 07F5CC73 	 add r3,r7,#408
 442 0482 D3E90023 	 ldrd r2,[r3]
 443 0486 1218     	 adds r2,r2,r0
 444 0488 43EB0103 	 adc r3,r3,r1
 445 048c 07F5CC71 	 add r1,r7,#408
 446 0490 C1E90023 	 strd r2,[r1]
 447 0494 07F5E873 	 add r3,r7,#464
 448 0498 D3E90023 	 ldrd r2,[r3]
 449 049c 07F5B471 	 add r1,r7,#360
 450 04a0 C1E90023 	 strd r2,[r1]
 451 04a4 D7F8AC31 	 ldr r3,[r7,#428]
 452 04a8 C7F86431 	 str r3,[r7,#356]
 453              	.LBB26:
 454              	.LBB27:
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 455              	 .loc 2 555 0
 456 04ac 07F5B473 	 add r3,r7,#360
 457 04b0 D3E90001 	 ldrd r0,[r3]
 458 04b4 4FF0FF32 	 mov r2,#-1
 459 04b8 4FF00003 	 mov r3,#0
 460 04bc 00EA0200 	 and r0,r0,r2
 461 04c0 01EA0301 	 and r1,r1,r3
 462 04c4 D7F86431 	 ldr r3,[r7,#356]
 463 04c8 1A46     	 mov r2,r3
 464 04ca 4FEAE273 	 asr r3,r2,#31
 465 04ce 02FB01F5 	 mul r5,r2,r1
 466 04d2 00FB03F4 	 mul r4,r0,r3
 467 04d6 2C44     	 add r4,r4,r5
 468 04d8 A0FB0223 	 umull r2,r3,r0,r2
 469 04dc E118     	 adds r1,r4,r3
 470 04de 0B46     	 mov r3,r1
 471 04e0 1900     	 movs r1,r3
 472 04e2 B967     	 str r1,[r7,#120]
 473 04e4 DB17     	 asrs r3,r3,#31
 474 04e6 FB67     	 str r3,[r7,#124]
 475              	 .loc 2 556 0
 476 04e8 07F5B473 	 add r3,r7,#360
 477 04ec D3E90023 	 ldrd r2,[r3]
 478 04f0 1900     	 movs r1,r3
 479 04f2 3967     	 str r1,[r7,#112]
 480 04f4 DB17     	 asrs r3,r3,#31
 481 04f6 7B67     	 str r3,[r7,#116]
 482 04f8 D7F86431 	 ldr r3,[r7,#356]
 483 04fc 1A46     	 mov r2,r3
 484 04fe 4FEAE273 	 asr r3,r2,#31
 485 0502 D7E91C45 	 ldrd r4,[r7,#112]
 486 0506 2946     	 mov r1,r5
 487 0508 02FB01F0 	 mul r0,r2,r1
 488 050c 2146     	 mov r1,r4
 489 050e 01FB03F1 	 mul r1,r1,r3
 490 0512 0144     	 add r1,r1,r0
 491 0514 2046     	 mov r0,r4
 492 0516 A0FB0245 	 umull r4,r5,r0,r2
 493 051a 4B19     	 adds r3,r1,r5
 494 051c 1D46     	 mov r5,r3
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 495              	 .loc 2 555 0
 496 051e D7E91E01 	 ldrd r0,[r7,#120]
 497 0522 0019     	 adds r0,r0,r4
 498 0524 41EB0501 	 adc r1,r1,r5
 499              	.LBE27:
 500              	.LBE26:
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a1);
 501              	 .loc 1 278 0
 502 0528 07F5CC73 	 add r3,r7,#408
 503 052c D3E90023 	 ldrd r2,[r3]
 504 0530 1218     	 adds r2,r2,r0
 505 0532 43EB0103 	 adc r3,r3,r1
 506 0536 07F5CC71 	 add r1,r7,#408
 507 053a C1E90023 	 strd r2,[r1]
 508 053e 07F5EC73 	 add r3,r7,#472
 509 0542 D3E90023 	 ldrd r2,[r3]
 510 0546 07F5AC71 	 add r1,r7,#344
 511 054a C1E90023 	 strd r2,[r1]
 512 054e D7F8A831 	 ldr r3,[r7,#424]
 513 0552 C7F85431 	 str r3,[r7,#340]
 514              	.LBB28:
 515              	.LBB29:
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 516              	 .loc 2 555 0
 517 0556 07F5AC73 	 add r3,r7,#344
 518 055a D3E90001 	 ldrd r0,[r3]
 519 055e 4FF0FF32 	 mov r2,#-1
 520 0562 4FF00003 	 mov r3,#0
 521 0566 00EA0200 	 and r0,r0,r2
 522 056a 01EA0301 	 and r1,r1,r3
 523 056e D7F85431 	 ldr r3,[r7,#340]
 524 0572 1A46     	 mov r2,r3
 525 0574 4FEAE273 	 asr r3,r2,#31
 526 0578 02FB01F5 	 mul r5,r2,r1
 527 057c 00FB03F4 	 mul r4,r0,r3
 528 0580 2C44     	 add r4,r4,r5
 529 0582 A0FB0223 	 umull r2,r3,r0,r2
 530 0586 E118     	 adds r1,r4,r3
 531 0588 0B46     	 mov r3,r1
 532 058a 1900     	 movs r1,r3
 533 058c B966     	 str r1,[r7,#104]
 534 058e DB17     	 asrs r3,r3,#31
 535 0590 FB66     	 str r3,[r7,#108]
 536              	 .loc 2 556 0
 537 0592 07F5AC73 	 add r3,r7,#344
 538 0596 D3E90023 	 ldrd r2,[r3]
 539 059a 1900     	 movs r1,r3
 540 059c 3966     	 str r1,[r7,#96]
 541 059e DB17     	 asrs r3,r3,#31
 542 05a0 7B66     	 str r3,[r7,#100]
 543 05a2 D7F85431 	 ldr r3,[r7,#340]
 544 05a6 1A46     	 mov r2,r3
 545 05a8 4FEAE273 	 asr r3,r2,#31
 546 05ac D7E91845 	 ldrd r4,[r7,#96]
 547 05b0 2946     	 mov r1,r5
 548 05b2 02FB01F0 	 mul r0,r2,r1
 549 05b6 2146     	 mov r1,r4
 550 05b8 01FB03F1 	 mul r1,r1,r3
 551 05bc 0144     	 add r1,r1,r0
 552 05be 2046     	 mov r0,r4
 553 05c0 A0FB0245 	 umull r4,r5,r0,r2
 554 05c4 4B19     	 adds r3,r1,r5
 555 05c6 1D46     	 mov r5,r3
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 556              	 .loc 2 555 0
 557 05c8 D7E91A01 	 ldrd r0,[r7,#104]
 558 05cc 0019     	 adds r0,r0,r4
 559 05ce 41EB0501 	 adc r1,r1,r5
 560              	.LBE29:
 561              	.LBE28:
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a2);
 562              	 .loc 1 281 0
 563 05d2 07F5CC73 	 add r3,r7,#408
 564 05d6 D3E90023 	 ldrd r2,[r3]
 565 05da 1218     	 adds r2,r2,r0
 566 05dc 43EB0103 	 adc r3,r3,r1
 567 05e0 07F5CC71 	 add r1,r7,#408
 568 05e4 C1E90023 	 strd r2,[r1]
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused */
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 569              	 .loc 1 284 0
 570 05e8 07F5CC73 	 add r3,r7,#408
 571 05ec D3E90023 	 ldrd r2,[r3]
 572 05f0 D7F8C441 	 ldr r4,[r7,#452]
 573 05f4 A4F12001 	 sub r1,r4,#32
 574 05f8 C4F12000 	 rsb r0,r4,#32
 575 05fc 03FA04F5 	 lsl r5,r3,r4
 576 0600 C7F8D450 	 str r5,[r7,#212]
 577 0604 02FA01F1 	 lsl r1,r2,r1
 578 0608 D7F8D450 	 ldr r5,[r7,#212]
 579 060c 0D43     	 orrs r5,r5,r1
 580 060e C7F8D450 	 str r5,[r7,#212]
 581 0612 22FA00F0 	 lsr r0,r2,r0
 582 0616 D7F8D410 	 ldr r1,[r7,#212]
 583 061a 0143     	 orrs r1,r1,r0
 584 061c C7F8D410 	 str r1,[r7,#212]
 585 0620 02FA04F3 	 lsl r3,r2,r4
 586 0624 C7F8D030 	 str r3,[r7,#208]
 587 0628 D7E93423 	 ldrd r2,[r7,#208]
 588 062c 07F5EC71 	 add r1,r7,#472
 589 0630 C1E90023 	 strd r2,[r1]
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 590              	 .loc 1 287 0
 591 0634 D7F89831 	 ldr r3,[r7,#408]
 592 0638 C7F89431 	 str r3,[r7,#404]
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 593              	 .loc 1 290 0
 594 063c 07F5CC73 	 add r3,r7,#408
 595 0640 D3E90023 	 ldrd r2,[r3]
 596 0644 1B00     	 movs r3,r3
 597 0646 C7F8B830 	 str r3,[r7,#184]
 598 064a 0023     	 movs r3,#0
 599 064c C7F8BC30 	 str r3,[r7,#188]
 600 0650 D7F8B830 	 ldr r3,[r7,#184]
 601 0654 C7F89031 	 str r3,[r7,#400]
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 602              	 .loc 1 293 0
 603 0658 D7F89421 	 ldr r2,[r7,#404]
 604 065c D7F8BC31 	 ldr r3,[r7,#444]
 605 0660 22FA03F1 	 lsr r1,r2,r3
 606 0664 D7F8C021 	 ldr r2,[r7,#448]
 607 0668 D7F89031 	 ldr r3,[r7,#400]
 608 066c 9340     	 lsls r3,r3,r2
 609 066e 0B43     	 orrs r3,r3,r1
 610 0670 C7F89031 	 str r3,[r7,#400]
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the third input into Xn1, to reuse the value */
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = *pIn++;
 611              	 .loc 1 296 0
 612 0674 D7F8F421 	 ldr r2,[r7,#500]
 613 0678 131D     	 adds r3,r2,#4
 614 067a C7F8F431 	 str r3,[r7,#500]
 615 067e 1368     	 ldr r3,[r2]
 616 0680 C7F8E431 	 str r3,[r7,#484]
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.31 */
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer. */
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *(pOut + 1u) = acc_h;
 617              	 .loc 1 300 0
 618 0684 D7F8F031 	 ldr r3,[r7,#496]
 619 0688 1A1D     	 adds r2,r3,#4
 620 068a D7F89031 	 ldr r3,[r7,#400]
 621 068e 1360     	 str r3,[r2]
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn1 *b0;
 622              	 .loc 1 305 0
 623 0690 D7F8E431 	 ldr r3,[r7,#484]
 624 0694 1846     	 mov r0,r3
 625 0696 4FEAE071 	 asr r1,r0,#31
 626 069a D7F8B831 	 ldr r3,[r7,#440]
 627 069e 1A46     	 mov r2,r3
 628 06a0 4FEAE273 	 asr r3,r2,#31
 629 06a4 02FB01F5 	 mul r5,r2,r1
 630 06a8 00FB03F4 	 mul r4,r0,r3
 631 06ac 2C44     	 add r4,r4,r5
 632 06ae A0FB0223 	 umull r2,r3,r0,r2
 633 06b2 E118     	 adds r1,r4,r3
 634 06b4 0B46     	 mov r3,r1
 635 06b6 07F5CC71 	 add r1,r7,#408
 636 06ba C1E90023 	 strd r2,[r1]
 637 06be 07F5CC71 	 add r1,r7,#408
 638 06c2 C1E90023 	 strd r2,[r1]
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b1;
 639              	 .loc 1 308 0
 640 06c6 D7F8E031 	 ldr r3,[r7,#480]
 641 06ca 1846     	 mov r0,r3
 642 06cc 4FEAE071 	 asr r1,r0,#31
 643 06d0 D7F8B431 	 ldr r3,[r7,#436]
 644 06d4 1A46     	 mov r2,r3
 645 06d6 4FEAE273 	 asr r3,r2,#31
 646 06da 02FB01F5 	 mul r5,r2,r1
 647 06de 00FB03F4 	 mul r4,r0,r3
 648 06e2 2C44     	 add r4,r4,r5
 649 06e4 A0FB0201 	 umull r0,r1,r0,r2
 650 06e8 6318     	 adds r3,r4,r1
 651 06ea 1946     	 mov r1,r3
 652 06ec 07F5CC73 	 add r3,r7,#408
 653 06f0 D3E90023 	 ldrd r2,[r3]
 654 06f4 1218     	 adds r2,r2,r0
 655 06f6 43EB0103 	 adc r3,r3,r1
 656 06fa 07F5CC71 	 add r1,r7,#408
 657 06fe C1E90023 	 strd r2,[r1]
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn *b2;
 658              	 .loc 1 311 0
 659 0702 D7F8A431 	 ldr r3,[r7,#420]
 660 0706 1846     	 mov r0,r3
 661 0708 4FEAE071 	 asr r1,r0,#31
 662 070c D7F8B031 	 ldr r3,[r7,#432]
 663 0710 1A46     	 mov r2,r3
 664 0712 4FEAE273 	 asr r3,r2,#31
 665 0716 02FB01F5 	 mul r5,r2,r1
 666 071a 00FB03F4 	 mul r4,r0,r3
 667 071e 2C44     	 add r4,r4,r5
 668 0720 A0FB0201 	 umull r0,r1,r0,r2
 669 0724 6318     	 adds r3,r4,r1
 670 0726 1946     	 mov r1,r3
 671 0728 07F5CC73 	 add r3,r7,#408
 672 072c D3E90023 	 ldrd r2,[r3]
 673 0730 1218     	 adds r2,r2,r0
 674 0732 43EB0103 	 adc r3,r3,r1
 675 0736 07F5CC71 	 add r1,r7,#408
 676 073a C1E90023 	 strd r2,[r1]
 677 073e 07F5EC73 	 add r3,r7,#472
 678 0742 D3E90023 	 ldrd r2,[r3]
 679 0746 07F5A471 	 add r1,r7,#328
 680 074a C1E90023 	 strd r2,[r1]
 681 074e D7F8AC31 	 ldr r3,[r7,#428]
 682 0752 C7F84431 	 str r3,[r7,#324]
 683              	.LBB30:
 684              	.LBB31:
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 685              	 .loc 2 555 0
 686 0756 07F5A473 	 add r3,r7,#328
 687 075a D3E90001 	 ldrd r0,[r3]
 688 075e 4FF0FF32 	 mov r2,#-1
 689 0762 4FF00003 	 mov r3,#0
 690 0766 00EA0200 	 and r0,r0,r2
 691 076a 01EA0301 	 and r1,r1,r3
 692 076e D7F84431 	 ldr r3,[r7,#324]
 693 0772 1A46     	 mov r2,r3
 694 0774 4FEAE273 	 asr r3,r2,#31
 695 0778 02FB01F5 	 mul r5,r2,r1
 696 077c 00FB03F4 	 mul r4,r0,r3
 697 0780 2C44     	 add r4,r4,r5
 698 0782 A0FB0223 	 umull r2,r3,r0,r2
 699 0786 E118     	 adds r1,r4,r3
 700 0788 0B46     	 mov r3,r1
 701 078a 1900     	 movs r1,r3
 702 078c B965     	 str r1,[r7,#88]
 703 078e DB17     	 asrs r3,r3,#31
 704 0790 FB65     	 str r3,[r7,#92]
 705              	 .loc 2 556 0
 706 0792 07F5A473 	 add r3,r7,#328
 707 0796 D3E90023 	 ldrd r2,[r3]
 708 079a 1900     	 movs r1,r3
 709 079c 3965     	 str r1,[r7,#80]
 710 079e DB17     	 asrs r3,r3,#31
 711 07a0 7B65     	 str r3,[r7,#84]
 712 07a2 D7F84431 	 ldr r3,[r7,#324]
 713 07a6 1A46     	 mov r2,r3
 714 07a8 4FEAE273 	 asr r3,r2,#31
 715 07ac D7E91445 	 ldrd r4,[r7,#80]
 716 07b0 2946     	 mov r1,r5
 717 07b2 02FB01F0 	 mul r0,r2,r1
 718 07b6 2146     	 mov r1,r4
 719 07b8 01FB03F1 	 mul r1,r1,r3
 720 07bc 0144     	 add r1,r1,r0
 721 07be 2046     	 mov r0,r4
 722 07c0 A0FB0245 	 umull r4,r5,r0,r2
 723 07c4 4B19     	 adds r3,r1,r5
 724 07c6 1D46     	 mov r5,r3
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 725              	 .loc 2 555 0
 726 07c8 D7E91601 	 ldrd r0,[r7,#88]
 727 07cc 0019     	 adds r0,r0,r4
 728 07ce 41EB0501 	 adc r1,r1,r5
 729              	.LBE31:
 730              	.LBE30:
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 731              	 .loc 1 314 0
 732 07d2 07F5CC73 	 add r3,r7,#408
 733 07d6 D3E90023 	 ldrd r2,[r3]
 734 07da 1218     	 adds r2,r2,r0
 735 07dc 43EB0103 	 adc r3,r3,r1
 736 07e0 07F5CC71 	 add r1,r7,#408
 737 07e4 C1E90023 	 strd r2,[r1]
 738 07e8 07F5E873 	 add r3,r7,#464
 739 07ec D3E90023 	 ldrd r2,[r3]
 740 07f0 07F59C71 	 add r1,r7,#312
 741 07f4 C1E90023 	 strd r2,[r1]
 742 07f8 D7F8A831 	 ldr r3,[r7,#424]
 743 07fc C7F83431 	 str r3,[r7,#308]
 744              	.LBB32:
 745              	.LBB33:
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 746              	 .loc 2 555 0
 747 0800 07F59C73 	 add r3,r7,#312
 748 0804 D3E90001 	 ldrd r0,[r3]
 749 0808 4FF0FF32 	 mov r2,#-1
 750 080c 4FF00003 	 mov r3,#0
 751 0810 00EA0200 	 and r0,r0,r2
 752 0814 01EA0301 	 and r1,r1,r3
 753 0818 D7F83431 	 ldr r3,[r7,#308]
 754 081c 1A46     	 mov r2,r3
 755 081e 4FEAE273 	 asr r3,r2,#31
 756 0822 02FB01F5 	 mul r5,r2,r1
 757 0826 00FB03F4 	 mul r4,r0,r3
 758 082a 2C44     	 add r4,r4,r5
 759 082c A0FB0223 	 umull r2,r3,r0,r2
 760 0830 E118     	 adds r1,r4,r3
 761 0832 0B46     	 mov r3,r1
 762 0834 1900     	 movs r1,r3
 763 0836 B964     	 str r1,[r7,#72]
 764 0838 DB17     	 asrs r3,r3,#31
 765 083a FB64     	 str r3,[r7,#76]
 766              	 .loc 2 556 0
 767 083c 07F59C73 	 add r3,r7,#312
 768 0840 D3E90023 	 ldrd r2,[r3]
 769 0844 1900     	 movs r1,r3
 770 0846 3964     	 str r1,[r7,#64]
 771 0848 DB17     	 asrs r3,r3,#31
 772 084a 7B64     	 str r3,[r7,#68]
 773 084c D7F83431 	 ldr r3,[r7,#308]
 774 0850 1A46     	 mov r2,r3
 775 0852 4FEAE273 	 asr r3,r2,#31
 776 0856 D7E91045 	 ldrd r4,[r7,#64]
 777 085a 2946     	 mov r1,r5
 778 085c 02FB01F0 	 mul r0,r2,r1
 779 0860 2146     	 mov r1,r4
 780 0862 01FB03F1 	 mul r1,r1,r3
 781 0866 0144     	 add r1,r1,r0
 782 0868 2046     	 mov r0,r4
 783 086a A0FB0245 	 umull r4,r5,r0,r2
 784 086e 4B19     	 adds r3,r1,r5
 785 0870 1D46     	 mov r5,r3
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 786              	 .loc 2 555 0
 787 0872 D7E91201 	 ldrd r0,[r7,#72]
 788 0876 0019     	 adds r0,r0,r4
 789 0878 41EB0501 	 adc r1,r1,r5
 790              	.LBE33:
 791              	.LBE32:
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 792              	 .loc 1 317 0
 793 087c 07F5CC73 	 add r3,r7,#408
 794 0880 D3E90023 	 ldrd r2,[r3]
 795 0884 1218     	 adds r2,r2,r0
 796 0886 43EB0103 	 adc r3,r3,r1
 797 088a 07F5CC71 	 add r1,r7,#408
 798 088e C1E90023 	 strd r2,[r1]
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn2 variable is reused  */
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = acc << shift;
 799              	 .loc 1 320 0
 800 0892 07F5CC73 	 add r3,r7,#408
 801 0896 D3E90023 	 ldrd r2,[r3]
 802 089a D7F8C441 	 ldr r4,[r7,#452]
 803 089e A4F12001 	 sub r1,r4,#32
 804 08a2 C4F12000 	 rsb r0,r4,#32
 805 08a6 03FA04F5 	 lsl r5,r3,r4
 806 08aa C7F8CC50 	 str r5,[r7,#204]
 807 08ae 02FA01F1 	 lsl r1,r2,r1
 808 08b2 D7F8CC50 	 ldr r5,[r7,#204]
 809 08b6 0D43     	 orrs r5,r5,r1
 810 08b8 C7F8CC50 	 str r5,[r7,#204]
 811 08bc 22FA00F0 	 lsr r0,r2,r0
 812 08c0 D7F8CC10 	 ldr r1,[r7,#204]
 813 08c4 0143     	 orrs r1,r1,r0
 814 08c6 C7F8CC10 	 str r1,[r7,#204]
 815 08ca 02FA04F3 	 lsl r3,r2,r4
 816 08ce C7F8C830 	 str r3,[r7,#200]
 817 08d2 D7E93223 	 ldrd r2,[r7,#200]
 818 08d6 07F5E871 	 add r1,r7,#464
 819 08da C1E90023 	 strd r2,[r1]
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 820              	 .loc 1 323 0
 821 08de D7F89831 	 ldr r3,[r7,#408]
 822 08e2 C7F89431 	 str r3,[r7,#404]
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 823              	 .loc 1 326 0
 824 08e6 07F5CC73 	 add r3,r7,#408
 825 08ea D3E90023 	 ldrd r2,[r3]
 826 08ee 1B00     	 movs r3,r3
 827 08f0 C7F8B030 	 str r3,[r7,#176]
 828 08f4 0023     	 movs r3,#0
 829 08f6 C7F8B430 	 str r3,[r7,#180]
 830 08fa D7F8B030 	 ldr r3,[r7,#176]
 831 08fe C7F89031 	 str r3,[r7,#400]
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 832              	 .loc 1 329 0
 833 0902 D7F89421 	 ldr r2,[r7,#404]
 834 0906 D7F8BC31 	 ldr r3,[r7,#444]
 835 090a 22FA03F1 	 lsr r1,r2,r3
 836 090e D7F8C021 	 ldr r2,[r7,#448]
 837 0912 D7F89031 	 ldr r3,[r7,#400]
 838 0916 9340     	 lsls r3,r3,r2
 839 0918 0B43     	 orrs r3,r3,r1
 840 091a C7F89031 	 str r3,[r7,#400]
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *(pOut + 2u) = acc_h;
 841              	 .loc 1 332 0
 842 091e D7F8F031 	 ldr r3,[r7,#496]
 843 0922 03F10802 	 add r2,r3,#8
 844 0926 D7F89031 	 ldr r3,[r7,#400]
 845 092a 1360     	 str r3,[r2]
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the fourth input into Xn, to reuse the value */
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 846              	 .loc 1 335 0
 847 092c D7F8F421 	 ldr r2,[r7,#500]
 848 0930 131D     	 adds r3,r2,#4
 849 0932 C7F8F431 	 str r3,[r7,#500]
 850 0936 1368     	 ldr r3,[r2]
 851 0938 C7F8A431 	 str r3,[r7,#420]
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn *b0;
 852              	 .loc 1 339 0
 853 093c D7F8A431 	 ldr r3,[r7,#420]
 854 0940 1846     	 mov r0,r3
 855 0942 4FEAE071 	 asr r1,r0,#31
 856 0946 D7F8B831 	 ldr r3,[r7,#440]
 857 094a 1A46     	 mov r2,r3
 858 094c 4FEAE273 	 asr r3,r2,#31
 859 0950 02FB01F5 	 mul r5,r2,r1
 860 0954 00FB03F4 	 mul r4,r0,r3
 861 0958 2C44     	 add r4,r4,r5
 862 095a A0FB0223 	 umull r2,r3,r0,r2
 863 095e E118     	 adds r1,r4,r3
 864 0960 0B46     	 mov r3,r1
 865 0962 07F5CC71 	 add r1,r7,#408
 866 0966 C1E90023 	 strd r2,[r1]
 867 096a 07F5CC71 	 add r1,r7,#408
 868 096e C1E90023 	 strd r2,[r1]
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 *b1;
 869              	 .loc 1 342 0
 870 0972 D7F8E431 	 ldr r3,[r7,#484]
 871 0976 1846     	 mov r0,r3
 872 0978 4FEAE071 	 asr r1,r0,#31
 873 097c D7F8B431 	 ldr r3,[r7,#436]
 874 0980 1A46     	 mov r2,r3
 875 0982 4FEAE273 	 asr r3,r2,#31
 876 0986 02FB01F5 	 mul r5,r2,r1
 877 098a 00FB03F4 	 mul r4,r0,r3
 878 098e 2C44     	 add r4,r4,r5
 879 0990 A0FB0201 	 umull r0,r1,r0,r2
 880 0994 6318     	 adds r3,r4,r1
 881 0996 1946     	 mov r1,r3
 882 0998 07F5CC73 	 add r3,r7,#408
 883 099c D3E90023 	 ldrd r2,[r3]
 884 09a0 1218     	 adds r2,r2,r0
 885 09a2 43EB0103 	 adc r3,r3,r1
 886 09a6 07F5CC71 	 add r1,r7,#408
 887 09aa C1E90023 	 strd r2,[r1]
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b2;
 888              	 .loc 1 345 0
 889 09ae D7F8E031 	 ldr r3,[r7,#480]
 890 09b2 1846     	 mov r0,r3
 891 09b4 4FEAE071 	 asr r1,r0,#31
 892 09b8 D7F8B031 	 ldr r3,[r7,#432]
 893 09bc 1A46     	 mov r2,r3
 894 09be 4FEAE273 	 asr r3,r2,#31
 895 09c2 02FB01F5 	 mul r5,r2,r1
 896 09c6 00FB03F4 	 mul r4,r0,r3
 897 09ca 2C44     	 add r4,r4,r5
 898 09cc A0FB0201 	 umull r0,r1,r0,r2
 899 09d0 6318     	 adds r3,r4,r1
 900 09d2 1946     	 mov r1,r3
 901 09d4 07F5CC73 	 add r3,r7,#408
 902 09d8 D3E90023 	 ldrd r2,[r3]
 903 09dc 1218     	 adds r2,r2,r0
 904 09de 43EB0103 	 adc r3,r3,r1
 905 09e2 07F5CC71 	 add r1,r7,#408
 906 09e6 C1E90023 	 strd r2,[r1]
 907 09ea 07F5E873 	 add r3,r7,#464
 908 09ee D3E90023 	 ldrd r2,[r3]
 909 09f2 07F59471 	 add r1,r7,#296
 910 09f6 C1E90023 	 strd r2,[r1]
 911 09fa D7F8AC31 	 ldr r3,[r7,#428]
 912 09fe C7F82431 	 str r3,[r7,#292]
 913              	.LBB34:
 914              	.LBB35:
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 915              	 .loc 2 555 0
 916 0a02 07F59473 	 add r3,r7,#296
 917 0a06 D3E90001 	 ldrd r0,[r3]
 918 0a0a 4FF0FF32 	 mov r2,#-1
 919 0a0e 4FF00003 	 mov r3,#0
 920 0a12 00EA0200 	 and r0,r0,r2
 921 0a16 01EA0301 	 and r1,r1,r3
 922 0a1a D7F82431 	 ldr r3,[r7,#292]
 923 0a1e 1A46     	 mov r2,r3
 924 0a20 4FEAE273 	 asr r3,r2,#31
 925 0a24 02FB01F5 	 mul r5,r2,r1
 926 0a28 00FB03F4 	 mul r4,r0,r3
 927 0a2c 2C44     	 add r4,r4,r5
 928 0a2e A0FB0223 	 umull r2,r3,r0,r2
 929 0a32 E118     	 adds r1,r4,r3
 930 0a34 0B46     	 mov r3,r1
 931 0a36 1900     	 movs r1,r3
 932 0a38 B963     	 str r1,[r7,#56]
 933 0a3a DB17     	 asrs r3,r3,#31
 934 0a3c FB63     	 str r3,[r7,#60]
 935              	 .loc 2 556 0
 936 0a3e 07F59473 	 add r3,r7,#296
 937 0a42 D3E90023 	 ldrd r2,[r3]
 938 0a46 1900     	 movs r1,r3
 939 0a48 3963     	 str r1,[r7,#48]
 940 0a4a DB17     	 asrs r3,r3,#31
 941 0a4c 7B63     	 str r3,[r7,#52]
 942 0a4e D7F82431 	 ldr r3,[r7,#292]
 943 0a52 1A46     	 mov r2,r3
 944 0a54 4FEAE273 	 asr r3,r2,#31
 945 0a58 D7E90C45 	 ldrd r4,[r7,#48]
 946 0a5c 2946     	 mov r1,r5
 947 0a5e 02FB01F0 	 mul r0,r2,r1
 948 0a62 2146     	 mov r1,r4
 949 0a64 01FB03F1 	 mul r1,r1,r3
 950 0a68 0144     	 add r1,r1,r0
 951 0a6a 2046     	 mov r0,r4
 952 0a6c A0FB0245 	 umull r4,r5,r0,r2
 953 0a70 4B19     	 adds r3,r1,r5
 954 0a72 1D46     	 mov r5,r3
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 955              	 .loc 2 555 0
 956 0a74 D7E90E01 	 ldrd r0,[r7,#56]
 957 0a78 0019     	 adds r0,r0,r4
 958 0a7a 41EB0501 	 adc r1,r1,r5
 959              	.LBE35:
 960              	.LBE34:
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a1);
 961              	 .loc 1 348 0
 962 0a7e 07F5CC73 	 add r3,r7,#408
 963 0a82 D3E90023 	 ldrd r2,[r3]
 964 0a86 1218     	 adds r2,r2,r0
 965 0a88 43EB0103 	 adc r3,r3,r1
 966 0a8c 07F5CC71 	 add r1,r7,#408
 967 0a90 C1E90023 	 strd r2,[r1]
 968 0a94 07F5EC73 	 add r3,r7,#472
 969 0a98 D3E90023 	 ldrd r2,[r3]
 970 0a9c 07F58C71 	 add r1,r7,#280
 971 0aa0 C1E90023 	 strd r2,[r1]
 972 0aa4 D7F8A831 	 ldr r3,[r7,#424]
 973 0aa8 C7F81431 	 str r3,[r7,#276]
 974              	.LBB36:
 975              	.LBB37:
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 976              	 .loc 2 555 0
 977 0aac 07F58C73 	 add r3,r7,#280
 978 0ab0 D3E90001 	 ldrd r0,[r3]
 979 0ab4 4FF0FF32 	 mov r2,#-1
 980 0ab8 4FF00003 	 mov r3,#0
 981 0abc 00EA0200 	 and r0,r0,r2
 982 0ac0 01EA0301 	 and r1,r1,r3
 983 0ac4 D7F81431 	 ldr r3,[r7,#276]
 984 0ac8 1A46     	 mov r2,r3
 985 0aca 4FEAE273 	 asr r3,r2,#31
 986 0ace 02FB01F5 	 mul r5,r2,r1
 987 0ad2 00FB03F4 	 mul r4,r0,r3
 988 0ad6 2C44     	 add r4,r4,r5
 989 0ad8 A0FB0223 	 umull r2,r3,r0,r2
 990 0adc E118     	 adds r1,r4,r3
 991 0ade 0B46     	 mov r3,r1
 992 0ae0 1900     	 movs r1,r3
 993 0ae2 B962     	 str r1,[r7,#40]
 994 0ae4 DB17     	 asrs r3,r3,#31
 995 0ae6 FB62     	 str r3,[r7,#44]
 996              	 .loc 2 556 0
 997 0ae8 07F58C73 	 add r3,r7,#280
 998 0aec D3E90023 	 ldrd r2,[r3]
 999 0af0 1900     	 movs r1,r3
 1000 0af2 3962     	 str r1,[r7,#32]
 1001 0af4 DB17     	 asrs r3,r3,#31
 1002 0af6 7B62     	 str r3,[r7,#36]
 1003 0af8 D7F81431 	 ldr r3,[r7,#276]
 1004 0afc 1A46     	 mov r2,r3
 1005 0afe 4FEAE273 	 asr r3,r2,#31
 1006 0b02 D7E90845 	 ldrd r4,[r7,#32]
 1007 0b06 2946     	 mov r1,r5
 1008 0b08 02FB01F0 	 mul r0,r2,r1
 1009 0b0c 2146     	 mov r1,r4
 1010 0b0e 01FB03F1 	 mul r1,r1,r3
 1011 0b12 0144     	 add r1,r1,r0
 1012 0b14 2046     	 mov r0,r4
 1013 0b16 A0FB0245 	 umull r4,r5,r0,r2
 1014 0b1a 4B19     	 adds r3,r1,r5
 1015 0b1c 1D46     	 mov r5,r3
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 1016              	 .loc 2 555 0
 1017 0b1e D7E90A01 	 ldrd r0,[r7,#40]
 1018 0b22 0019     	 adds r0,r0,r4
 1019 0b24 41EB0501 	 adc r1,r1,r5
 1020              	.LBE37:
 1021              	.LBE36:
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a2);
 1022              	 .loc 1 351 0
 1023 0b28 07F5CC73 	 add r3,r7,#408
 1024 0b2c D3E90023 	 ldrd r2,[r3]
 1025 0b30 1218     	 adds r2,r2,r0
 1026 0b32 43EB0103 	 adc r3,r3,r1
 1027 0b36 07F5CC71 	 add r1,r7,#408
 1028 0b3a C1E90023 	 strd r2,[r1]
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused  */
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 1029              	 .loc 1 354 0
 1030 0b3e 07F5CC73 	 add r3,r7,#408
 1031 0b42 D3E90023 	 ldrd r2,[r3]
 1032 0b46 D7F8C441 	 ldr r4,[r7,#452]
 1033 0b4a A4F12001 	 sub r1,r4,#32
 1034 0b4e C4F12000 	 rsb r0,r4,#32
 1035 0b52 03FA04FB 	 lsl fp,r3,r4
 1036 0b56 02FA01F1 	 lsl r1,r2,r1
 1037 0b5a 4BEA010B 	 orr fp,fp,r1
 1038 0b5e 22FA00F0 	 lsr r0,r2,r0
 1039 0b62 4BEA000B 	 orr fp,fp,r0
 1040 0b66 02FA04FA 	 lsl r10,r2,r4
 1041 0b6a 07F5EC73 	 add r3,r7,#472
 1042 0b6e C3E900AB 	 strd r10,[r3]
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 1043              	 .loc 1 357 0
 1044 0b72 D7F89831 	 ldr r3,[r7,#408]
 1045 0b76 C7F89431 	 str r3,[r7,#404]
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 1046              	 .loc 1 360 0
 1047 0b7a 07F5CC73 	 add r3,r7,#408
 1048 0b7e D3E90023 	 ldrd r2,[r3]
 1049 0b82 1B00     	 movs r3,r3
 1050 0b84 C7F8A830 	 str r3,[r7,#168]
 1051 0b88 0023     	 movs r3,#0
 1052 0b8a C7F8AC30 	 str r3,[r7,#172]
 1053 0b8e D7F8A830 	 ldr r3,[r7,#168]
 1054 0b92 C7F89031 	 str r3,[r7,#400]
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 1055              	 .loc 1 363 0
 1056 0b96 D7F89421 	 ldr r2,[r7,#404]
 1057 0b9a D7F8BC31 	 ldr r3,[r7,#444]
 1058 0b9e 22FA03F1 	 lsr r1,r2,r3
 1059 0ba2 D7F8C021 	 ldr r2,[r7,#448]
 1060 0ba6 D7F89031 	 ldr r3,[r7,#400]
 1061 0baa 9340     	 lsls r3,r3,r2
 1062 0bac 0B43     	 orrs r3,r3,r1
 1063 0bae C7F89031 	 str r3,[r7,#400]
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *(pOut + 3u) = acc_h;
 1064              	 .loc 1 366 0
 1065 0bb2 D7F8F031 	 ldr r3,[r7,#496]
 1066 0bb6 03F10C02 	 add r2,r3,#12
 1067 0bba D7F89031 	 ldr r3,[r7,#400]
 1068 0bbe 1360     	 str r3,[r2]
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Every time after the output is computed state should be updated. */
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The states should be updated as:  */
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn2 = Xn1    */
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn1 = Xn     */
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn2 = Yn1    */
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc    */
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = Xn1;
 1069              	 .loc 1 374 0
 1070 0bc0 D7F8E431 	 ldr r3,[r7,#484]
 1071 0bc4 C7F8E031 	 str r3,[r7,#480]
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = Xn;
 1072              	 .loc 1 375 0
 1073 0bc8 D7F8A431 	 ldr r3,[r7,#420]
 1074 0bcc C7F8E431 	 str r3,[r7,#484]
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* update output pointer */
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       pOut += 4u;
 1075              	 .loc 1 378 0
 1076 0bd0 D7F8F031 	 ldr r3,[r7,#496]
 1077 0bd4 1033     	 adds r3,r3,#16
 1078 0bd6 C7F8F031 	 str r3,[r7,#496]
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* decrement the loop counter */
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       sample--;
 1079              	 .loc 1 381 0
 1080 0bda D7F8CC31 	 ldr r3,[r7,#460]
 1081 0bde 013B     	 subs r3,r3,#1
 1082 0be0 C7F8CC31 	 str r3,[r7,#460]
 1083              	.L2:
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 1084              	 .loc 1 226 0
 1085 0be4 D7F8CC31 	 ldr r3,[r7,#460]
 1086 0be8 002B     	 cmp r3,#0
 1087 0bea 7FF498AA 	 bne .L11
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     }
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      ** No loop unrolling is used. */
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     sample = (blockSize & 0x3u);
 1088              	 .loc 1 386 0
 1089 0bee 07F1E003 	 add r3,r7,#224
 1090 0bf2 1B68     	 ldr r3,[r3]
 1091 0bf4 03F00303 	 and r3,r3,#3
 1092 0bf8 C7F8CC31 	 str r3,[r7,#460]
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     while (sample > 0u)
 1093              	 .loc 1 388 0
 1094 0bfc 62E1     	 b .L12
 1095              	.L15:
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the input */
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 1096              	 .loc 1 391 0
 1097 0bfe D7F8F421 	 ldr r2,[r7,#500]
 1098 0c02 131D     	 adds r3,r2,#4
 1099 0c04 C7F8F431 	 str r3,[r7,#500]
 1100 0c08 1368     	 ldr r3,[r2]
 1101 0c0a C7F8A431 	 str r3,[r7,#420]
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn *b0;
 1102              	 .loc 1 396 0
 1103 0c0e D7F8A431 	 ldr r3,[r7,#420]
 1104 0c12 1846     	 mov r0,r3
 1105 0c14 4FEAE071 	 asr r1,r0,#31
 1106 0c18 D7F8B831 	 ldr r3,[r7,#440]
 1107 0c1c 1A46     	 mov r2,r3
 1108 0c1e 4FEAE273 	 asr r3,r2,#31
 1109 0c22 02FB01F5 	 mul r5,r2,r1
 1110 0c26 00FB03F4 	 mul r4,r0,r3
 1111 0c2a 2C44     	 add r4,r4,r5
 1112 0c2c A0FB0223 	 umull r2,r3,r0,r2
 1113 0c30 E118     	 adds r1,r4,r3
 1114 0c32 0B46     	 mov r3,r1
 1115 0c34 07F5CC71 	 add r1,r7,#408
 1116 0c38 C1E90023 	 strd r2,[r1]
 1117 0c3c 07F5CC71 	 add r1,r7,#408
 1118 0c40 C1E90023 	 strd r2,[r1]
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 *b1;
 1119              	 .loc 1 398 0
 1120 0c44 D7F8E431 	 ldr r3,[r7,#484]
 1121 0c48 1846     	 mov r0,r3
 1122 0c4a 4FEAE071 	 asr r1,r0,#31
 1123 0c4e D7F8B431 	 ldr r3,[r7,#436]
 1124 0c52 1A46     	 mov r2,r3
 1125 0c54 4FEAE273 	 asr r3,r2,#31
 1126 0c58 02FB01F5 	 mul r5,r2,r1
 1127 0c5c 00FB03F4 	 mul r4,r0,r3
 1128 0c60 2C44     	 add r4,r4,r5
 1129 0c62 A0FB0201 	 umull r0,r1,r0,r2
 1130 0c66 6318     	 adds r3,r4,r1
 1131 0c68 1946     	 mov r1,r3
 1132 0c6a 07F5CC73 	 add r3,r7,#408
 1133 0c6e D3E90023 	 ldrd r2,[r3]
 1134 0c72 1218     	 adds r2,r2,r0
 1135 0c74 43EB0103 	 adc r3,r3,r1
 1136 0c78 07F5CC71 	 add r1,r7,#408
 1137 0c7c C1E90023 	 strd r2,[r1]
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b2;
 1138              	 .loc 1 400 0
 1139 0c80 D7F8E031 	 ldr r3,[r7,#480]
 1140 0c84 1846     	 mov r0,r3
 1141 0c86 4FEAE071 	 asr r1,r0,#31
 1142 0c8a D7F8B031 	 ldr r3,[r7,#432]
 1143 0c8e 1A46     	 mov r2,r3
 1144 0c90 4FEAE273 	 asr r3,r2,#31
 1145 0c94 02FB01F5 	 mul r5,r2,r1
 1146 0c98 00FB03F4 	 mul r4,r0,r3
 1147 0c9c 2C44     	 add r4,r4,r5
 1148 0c9e A0FB0201 	 umull r0,r1,r0,r2
 1149 0ca2 6318     	 adds r3,r4,r1
 1150 0ca4 1946     	 mov r1,r3
 1151 0ca6 07F5CC73 	 add r3,r7,#408
 1152 0caa D3E90023 	 ldrd r2,[r3]
 1153 0cae 1218     	 adds r2,r2,r0
 1154 0cb0 43EB0103 	 adc r3,r3,r1
 1155 0cb4 07F5CC71 	 add r1,r7,#408
 1156 0cb8 C1E90023 	 strd r2,[r1]
 1157 0cbc 07F5EC73 	 add r3,r7,#472
 1158 0cc0 D3E90023 	 ldrd r2,[r3]
 1159 0cc4 07F58471 	 add r1,r7,#264
 1160 0cc8 C1E90023 	 strd r2,[r1]
 1161 0ccc D7F8AC31 	 ldr r3,[r7,#428]
 1162 0cd0 C7F80431 	 str r3,[r7,#260]
 1163              	.LBB38:
 1164              	.LBB39:
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 1165              	 .loc 2 555 0
 1166 0cd4 07F58473 	 add r3,r7,#264
 1167 0cd8 D3E90001 	 ldrd r0,[r3]
 1168 0cdc 4FF0FF32 	 mov r2,#-1
 1169 0ce0 4FF00003 	 mov r3,#0
 1170 0ce4 00EA0200 	 and r0,r0,r2
 1171 0ce8 01EA0301 	 and r1,r1,r3
 1172 0cec D7F80431 	 ldr r3,[r7,#260]
 1173 0cf0 1A46     	 mov r2,r3
 1174 0cf2 4FEAE273 	 asr r3,r2,#31
 1175 0cf6 02FB01F5 	 mul r5,r2,r1
 1176 0cfa 00FB03F4 	 mul r4,r0,r3
 1177 0cfe 2C44     	 add r4,r4,r5
 1178 0d00 A0FB0223 	 umull r2,r3,r0,r2
 1179 0d04 E118     	 adds r1,r4,r3
 1180 0d06 0B46     	 mov r3,r1
 1181 0d08 1900     	 movs r1,r3
 1182 0d0a B961     	 str r1,[r7,#24]
 1183 0d0c DB17     	 asrs r3,r3,#31
 1184 0d0e FB61     	 str r3,[r7,#28]
 1185              	 .loc 2 556 0
 1186 0d10 07F58473 	 add r3,r7,#264
 1187 0d14 D3E90023 	 ldrd r2,[r3]
 1188 0d18 1900     	 movs r1,r3
 1189 0d1a 3961     	 str r1,[r7,#16]
 1190 0d1c DB17     	 asrs r3,r3,#31
 1191 0d1e 7B61     	 str r3,[r7,#20]
 1192 0d20 D7F80431 	 ldr r3,[r7,#260]
 1193 0d24 1A46     	 mov r2,r3
 1194 0d26 4FEAE273 	 asr r3,r2,#31
 1195 0d2a D7E90445 	 ldrd r4,[r7,#16]
 1196 0d2e 2946     	 mov r1,r5
 1197 0d30 02FB01F0 	 mul r0,r2,r1
 1198 0d34 2146     	 mov r1,r4
 1199 0d36 01FB03F1 	 mul r1,r1,r3
 1200 0d3a 0144     	 add r1,r1,r0
 1201 0d3c 2046     	 mov r0,r4
 1202 0d3e A0FB0245 	 umull r4,r5,r0,r2
 1203 0d42 4B19     	 adds r3,r1,r5
 1204 0d44 1D46     	 mov r5,r3
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 1205              	 .loc 2 555 0
 1206 0d46 D7E90601 	 ldrd r0,[r7,#24]
 1207 0d4a 0019     	 adds r0,r0,r4
 1208 0d4c 41EB0501 	 adc r1,r1,r5
 1209              	.LBE39:
 1210              	.LBE38:
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 1211              	 .loc 1 402 0
 1212 0d50 07F5CC73 	 add r3,r7,#408
 1213 0d54 D3E90023 	 ldrd r2,[r3]
 1214 0d58 1218     	 adds r2,r2,r0
 1215 0d5a 43EB0103 	 adc r3,r3,r1
 1216 0d5e 07F5CC71 	 add r1,r7,#408
 1217 0d62 C1E90023 	 strd r2,[r1]
 1218 0d66 07F1F801 	 add r1,r7,#248
 1219 0d6a 07F5E873 	 add r3,r7,#464
 1220 0d6e D3E90023 	 ldrd r2,[r3]
 1221 0d72 C1E90023 	 strd r2,[r1]
 1222 0d76 07F1F402 	 add r2,r7,#244
 1223 0d7a D7F8A831 	 ldr r3,[r7,#424]
 1224 0d7e 1360     	 str r3,[r2]
 1225              	.LBB40:
 1226              	.LBB41:
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 1227              	 .loc 2 555 0
 1228 0d80 07F1F803 	 add r3,r7,#248
 1229 0d84 D3E90001 	 ldrd r0,[r3]
 1230 0d88 4FF0FF32 	 mov r2,#-1
 1231 0d8c 4FF00003 	 mov r3,#0
 1232 0d90 00EA0200 	 and r0,r0,r2
 1233 0d94 01EA0301 	 and r1,r1,r3
 1234 0d98 07F1F403 	 add r3,r7,#244
 1235 0d9c 1B68     	 ldr r3,[r3]
 1236 0d9e 1A46     	 mov r2,r3
 1237 0da0 4FEAE273 	 asr r3,r2,#31
 1238 0da4 02FB01F5 	 mul r5,r2,r1
 1239 0da8 00FB03F4 	 mul r4,r0,r3
 1240 0dac 2C44     	 add r4,r4,r5
 1241 0dae A0FB0223 	 umull r2,r3,r0,r2
 1242 0db2 E118     	 adds r1,r4,r3
 1243 0db4 0B46     	 mov r3,r1
 1244 0db6 1900     	 movs r1,r3
 1245 0db8 B960     	 str r1,[r7,#8]
 1246 0dba DB17     	 asrs r3,r3,#31
 1247 0dbc FB60     	 str r3,[r7,#12]
 1248              	 .loc 2 556 0
 1249 0dbe 07F1F803 	 add r3,r7,#248
 1250 0dc2 D3E90023 	 ldrd r2,[r3]
 1251 0dc6 1900     	 movs r1,r3
 1252 0dc8 3960     	 str r1,[r7]
 1253 0dca DB17     	 asrs r3,r3,#31
 1254 0dcc 7B60     	 str r3,[r7,#4]
 1255 0dce 07F1F403 	 add r3,r7,#244
 1256 0dd2 1B68     	 ldr r3,[r3]
 1257 0dd4 1A46     	 mov r2,r3
 1258 0dd6 4FEAE273 	 asr r3,r2,#31
 1259 0dda D7E90045 	 ldrd r4,[r7]
 1260 0dde 2946     	 mov r1,r5
 1261 0de0 02FB01F0 	 mul r0,r2,r1
 1262 0de4 2146     	 mov r1,r4
 1263 0de6 01FB03F1 	 mul r1,r1,r3
 1264 0dea 0144     	 add r1,r1,r0
 1265 0dec 2046     	 mov r0,r4
 1266 0dee A0FB0245 	 umull r4,r5,r0,r2
 1267 0df2 4B19     	 adds r3,r1,r5
 1268 0df4 1D46     	 mov r5,r3
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 1269              	 .loc 2 555 0
 1270 0df6 D7E90201 	 ldrd r0,[r7,#8]
 1271 0dfa 0019     	 adds r0,r0,r4
 1272 0dfc 41EB0501 	 adc r1,r1,r5
 1273              	.LBE41:
 1274              	.LBE40:
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 1275              	 .loc 1 404 0
 1276 0e00 07F5CC73 	 add r3,r7,#408
 1277 0e04 D3E90023 	 ldrd r2,[r3]
 1278 0e08 1218     	 adds r2,r2,r0
 1279 0e0a 43EB0103 	 adc r3,r3,r1
 1280 0e0e 07F5CC71 	 add r1,r7,#408
 1281 0e12 C1E90023 	 strd r2,[r1]
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Every time after the output is computed state should be updated. */
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The states should be updated as:  */
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn2 = Xn1    */
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn1 = Xn     */
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn2 = Yn1    */
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc    */
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = Xn1;
 1282              	 .loc 1 412 0
 1283 0e16 D7F8E431 	 ldr r3,[r7,#484]
 1284 0e1a C7F8E031 	 str r3,[r7,#480]
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = Xn;
 1285              	 .loc 1 413 0
 1286 0e1e D7F8A431 	 ldr r3,[r7,#420]
 1287 0e22 C7F8E431 	 str r3,[r7,#484]
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = Yn1;
 1288              	 .loc 1 414 0
 1289 0e26 07F5EC73 	 add r3,r7,#472
 1290 0e2a D3E90023 	 ldrd r2,[r3]
 1291 0e2e 07F5E871 	 add r1,r7,#464
 1292 0e32 C1E90023 	 strd r2,[r1]
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused  */
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 1293              	 .loc 1 416 0
 1294 0e36 07F5CC73 	 add r3,r7,#408
 1295 0e3a D3E90023 	 ldrd r2,[r3]
 1296 0e3e D7F8C441 	 ldr r4,[r7,#452]
 1297 0e42 A4F12001 	 sub r1,r4,#32
 1298 0e46 C4F12000 	 rsb r0,r4,#32
 1299 0e4a 03FA04F9 	 lsl r9,r3,r4
 1300 0e4e 02FA01F1 	 lsl r1,r2,r1
 1301 0e52 49EA0109 	 orr r9,r9,r1
 1302 0e56 22FA00F0 	 lsr r0,r2,r0
 1303 0e5a 49EA0009 	 orr r9,r9,r0
 1304 0e5e 02FA04F8 	 lsl r8,r2,r4
 1305 0e62 07F5EC73 	 add r3,r7,#472
 1306 0e66 C3E90089 	 strd r8,[r3]
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 1307              	 .loc 1 419 0
 1308 0e6a D7F89831 	 ldr r3,[r7,#408]
 1309 0e6e C7F89431 	 str r3,[r7,#404]
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 1310              	 .loc 1 422 0
 1311 0e72 07F5CC73 	 add r3,r7,#408
 1312 0e76 D3E90023 	 ldrd r2,[r3]
 1313 0e7a 1B00     	 movs r3,r3
 1314 0e7c C7F8A030 	 str r3,[r7,#160]
 1315 0e80 0023     	 movs r3,#0
 1316 0e82 C7F8A430 	 str r3,[r7,#164]
 1317 0e86 D7F8A030 	 ldr r3,[r7,#160]
 1318 0e8a C7F89031 	 str r3,[r7,#400]
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 1319              	 .loc 1 425 0
 1320 0e8e D7F89421 	 ldr r2,[r7,#404]
 1321 0e92 D7F8BC31 	 ldr r3,[r7,#444]
 1322 0e96 22FA03F1 	 lsr r1,r2,r3
 1323 0e9a D7F8C021 	 ldr r2,[r7,#448]
 1324 0e9e D7F89031 	 ldr r3,[r7,#400]
 1325 0ea2 9340     	 lsls r3,r3,r2
 1326 0ea4 0B43     	 orrs r3,r3,r1
 1327 0ea6 C7F89031 	 str r3,[r7,#400]
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *pOut++ = acc_h;
 1328              	 .loc 1 428 0
 1329 0eaa D7F8F021 	 ldr r2,[r7,#496]
 1330 0eae 131D     	 adds r3,r2,#4
 1331 0eb0 C7F8F031 	 str r3,[r7,#496]
 1332 0eb4 D7F89031 	 ldr r3,[r7,#400]
 1333 0eb8 1360     	 str r3,[r2]
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc << shift; */
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /*      *pOut++ = (q31_t) (acc >> (32 - shift));  */
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* decrement the loop counter */
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       sample--;
 1334              	 .loc 1 435 0
 1335 0eba D7F8CC31 	 ldr r3,[r7,#460]
 1336 0ebe 013B     	 subs r3,r3,#1
 1337 0ec0 C7F8CC31 	 str r3,[r7,#460]
 1338              	.L12:
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 1339              	 .loc 1 388 0
 1340 0ec4 D7F8CC31 	 ldr r3,[r7,#460]
 1341 0ec8 002B     	 cmp r3,#0
 1342 0eca 7FF498AE 	 bne .L15
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     }
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  The first stage output is given as input to the second stage. */
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     pIn = pDst;
 1343              	 .loc 1 439 0
 1344 0ece 07F1E403 	 add r3,r7,#228
 1345 0ed2 1B68     	 ldr r3,[r3]
 1346 0ed4 C7F8F431 	 str r3,[r7,#500]
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reset to destination buffer working pointer */
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     pOut = pDst;
 1347              	 .loc 1 442 0
 1348 0ed8 07F1E403 	 add r3,r7,#228
 1349 0edc 1B68     	 ldr r3,[r3]
 1350 0ede C7F8F031 	 str r3,[r7,#496]
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  Store the updated state variables back into the pState array */
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  Store the updated state variables back into the pState array */
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = (q63_t) Xn1;
 1351              	 .loc 1 446 0
 1352 0ee2 D7F8EC11 	 ldr r1,[r7,#492]
 1353 0ee6 01F10803 	 add r3,r1,#8
 1354 0eea C7F8EC31 	 str r3,[r7,#492]
 1355 0eee D7F8E431 	 ldr r3,[r7,#484]
 1356 0ef2 1A46     	 mov r2,r3
 1357 0ef4 4FEAE273 	 asr r3,r2,#31
 1358 0ef8 C1E90023 	 strd r2,[r1]
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = (q63_t) Xn2;
 1359              	 .loc 1 447 0
 1360 0efc D7F8EC11 	 ldr r1,[r7,#492]
 1361 0f00 01F10803 	 add r3,r1,#8
 1362 0f04 C7F8EC31 	 str r3,[r7,#492]
 1363 0f08 D7F8E031 	 ldr r3,[r7,#480]
 1364 0f0c 1A46     	 mov r2,r3
 1365 0f0e 4FEAE273 	 asr r3,r2,#31
 1366 0f12 C1E90023 	 strd r2,[r1]
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = Yn1;
 1367              	 .loc 1 448 0
 1368 0f16 D7F8EC11 	 ldr r1,[r7,#492]
 1369 0f1a 01F10803 	 add r3,r1,#8
 1370 0f1e C7F8EC31 	 str r3,[r7,#492]
 1371 0f22 07F5EC73 	 add r3,r7,#472
 1372 0f26 D3E90023 	 ldrd r2,[r3]
 1373 0f2a C1E90023 	 strd r2,[r1]
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = Yn2;
 1374              	 .loc 1 449 0
 1375 0f2e D7F8EC11 	 ldr r1,[r7,#492]
 1376 0f32 01F10803 	 add r3,r1,#8
 1377 0f36 C7F8EC31 	 str r3,[r7,#492]
 1378 0f3a 07F5E873 	 add r3,r7,#464
 1379 0f3e D3E90023 	 ldrd r2,[r3]
 1380 0f42 C1E90023 	 strd r2,[r1]
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   } while (--stage);
 1381              	 .loc 1 451 0
 1382 0f46 D7F8C831 	 ldr r3,[r7,#456]
 1383 0f4a 013B     	 subs r3,r3,#1
 1384 0f4c C7F8C831 	 str r3,[r7,#456]
 1385 0f50 D7F8C831 	 ldr r3,[r7,#456]
 1386 0f54 002B     	 cmp r3,#0
 1387 0f56 7FF493A8 	 bne .L16
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #else
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   /* Run the below code for Cortex-M0 */
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   do
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   {
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reading the coefficients */
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b0 = *pCoeffs++;
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b1 = *pCoeffs++;
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b2 = *pCoeffs++;
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     a1 = *pCoeffs++;
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     a2 = *pCoeffs++;
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reading the state values */
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Xn1 = pState[0];
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Xn2 = pState[1];
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Yn1 = pState[2];
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Yn2 = pState[3];
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* The variable acc hold output value that is being computed and
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      * stored in the destination buffer
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      * acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      */
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     sample = blockSize;
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     while (sample > 0u)
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the input */
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn *b0;
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 *b1;
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b2;
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Every time after the output is computed state should be updated. */
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The states should be updated as:  */
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn2 = Xn1    */
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn1 = Xn     */
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn2 = Yn1    */
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc    */
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = Xn1;
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = Xn;
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = Yn1;
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused  */
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *pOut++ = acc_h;
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc << shift; */
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* *pOut++ = (q31_t) (acc >> (32 - shift)); */
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* decrement the loop counter */
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       sample--;
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     }
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  The first stage output is given as input to the second stage. */
 531:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     pIn = pDst;
 532:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 533:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reset to destination buffer working pointer */
 534:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     pOut = pDst;
 535:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  Store the updated state variables back into the pState array */
 537:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = (q63_t) Xn1;
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = (q63_t) Xn2;
 539:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = Yn1;
 540:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = Yn2;
 541:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   } while (--stage);
 543:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 544:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #endif /*    #if defined (ARM_MATH_DSP)     */
 545:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** }
 1388              	 .loc 1 545 0
 1389 0f5a 07F5FE77 	 add r7,r7,#508
 1390              	.LCFI3:
 1391              	 .cfi_def_cfa_offset 28
 1392 0f5e BD46     	 mov sp,r7
 1393              	.LCFI4:
 1394              	 .cfi_def_cfa_register 13
 1395              	 
 1396 0f60 BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 1397              	.LCFI5:
 1398              	 .cfi_restore 11
 1399              	 .cfi_restore 10
 1400              	 .cfi_restore 9
 1401              	 .cfi_restore 8
 1402              	 .cfi_restore 7
 1403              	 .cfi_restore 5
 1404              	 .cfi_restore 4
 1405              	 .cfi_def_cfa_offset 0
 1406 0f64 7047     	 bx lr
 1407              	 .cfi_endproc
 1408              	.LFE135:
 1410 0f66 00BF     	 .text
 1411              	.Letext0:
 1412              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1413              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_biquad_cascade_df1_32x64_q31.c
    {standard input}:20     .text.arm_biquad_cas_df1_32x64_q31:00000000 $t
    {standard input}:25     .text.arm_biquad_cas_df1_32x64_q31:00000000 arm_biquad_cas_df1_32x64_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
