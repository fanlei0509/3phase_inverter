   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_q7.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_q7,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_q7
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_q7:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * Title:        arm_conv_q7.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * Description:  Convolution of Q7 sequences
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @addtogroup Conv
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  */
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** /**
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @brief Convolution of Q7 sequences.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @param[in] srcALen length of the first input sequence.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @param[in] srcBLen length of the second input sequence.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @param[out] *pDst points to the location where the output result is written.  Length srcALen+src
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @return none.
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  *
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * @details
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * <b>Scaling and Overflow Behavior:</b>
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  *
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * \par
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * The function is implemented using a 32-bit internal accumulator.
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * Both the inputs are represented in 1.7 format and multiplications yield a 2.14 result.
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * The 2.14 intermediate results are accumulated in a 32-bit accumulator in 18.14 format.
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * This approach provides 17 guard bits and there is no risk of overflow as long as <code>max(srcAL
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * The 18.14 result is then truncated to 18.7 format by discarding the low 7 bits and then saturate
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  *
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * \par
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  * Refer the function <code>arm_conv_opt_q7()</code> for a faster implementation of this function.
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  *
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****  */
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** void arm_conv_q7(
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t * pSrcA,
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   uint32_t srcALen,
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t * pSrcB,
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   uint32_t srcBLen,
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t * pDst)
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** {
  28              	 .loc 1 70 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 90B4     	 push {r4,r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 4,-8
  37              	 .cfi_offset 7,-4
  38 0002 E4B0     	 sub sp,sp,#400
  39              	.LCFI1:
  40              	 .cfi_def_cfa_offset 408
  41 0004 00AF     	 add r7,sp,#0
  42              	.LCFI2:
  43              	 .cfi_def_cfa_register 7
  44 0006 07F10C04 	 add r4,r7,#12
  45 000a 2060     	 str r0,[r4]
  46 000c 07F10800 	 add r0,r7,#8
  47 0010 0160     	 str r1,[r0]
  48 0012 391D     	 adds r1,r7,#4
  49 0014 0A60     	 str r2,[r1]
  50 0016 3A46     	 mov r2,r7
  51 0018 1360     	 str r3,[r2]
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** #if defined (ARM_MATH_DSP)
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t *pIn1;                                    /* inputA pointer */
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t *pIn2;                                    /* inputB pointer */
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t *pOut = pDst;                             /* output pointer */
  52              	 .loc 1 79 0
  53 001a D7F89831 	 ldr r3,[r7,#408]
  54 001e C7F88431 	 str r3,[r7,#388]
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t *px;                                      /* Intermediate inputA pointer */
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t *py;                                      /* Intermediate inputB pointer */
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t *pSrc1, *pSrc2;                           /* Intermediate pointers */
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t x0, x1, x2, x3, c0, c1;                   /* Temporary variables to hold state and coefficie
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulator */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q31_t input1, input2;                          /* Temporary input variables */
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q15_t in1, in2;                                /* Temporary input variables */
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   uint32_t j, k, count, blkCnt, blockSize1, blockSize2, blockSize3;     /* loop counter */
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* srcB is always made to slide across srcA. */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   if (srcALen >= srcBLen)
  55              	 .loc 1 92 0
  56 0022 07F10802 	 add r2,r7,#8
  57 0026 3B46     	 mov r3,r7
  58 0028 1268     	 ldr r2,[r2]
  59 002a 1B68     	 ldr r3,[r3]
  60 002c 9A42     	 cmp r2,r3
  61 002e 09D3     	 bcc .L2
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   {
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Initialization of inputA pointer */
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     pIn1 = pSrcA;
  62              	 .loc 1 95 0
  63 0030 07F10C03 	 add r3,r7,#12
  64 0034 1B68     	 ldr r3,[r3]
  65 0036 C7F88C31 	 str r3,[r7,#396]
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Initialization of inputB pointer */
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     pIn2 = pSrcB;
  66              	 .loc 1 98 0
  67 003a 3B1D     	 adds r3,r7,#4
  68 003c 1B68     	 ldr r3,[r3]
  69 003e C7F88831 	 str r3,[r7,#392]
  70 0042 16E0     	 b .L3
  71              	.L2:
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   }
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   else
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   {
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Initialization of inputA pointer */
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     pIn1 = pSrcB;
  72              	 .loc 1 103 0
  73 0044 3B1D     	 adds r3,r7,#4
  74 0046 1B68     	 ldr r3,[r3]
  75 0048 C7F88C31 	 str r3,[r7,#396]
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Initialization of inputB pointer */
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     pIn2 = pSrcA;
  76              	 .loc 1 106 0
  77 004c 07F10C03 	 add r3,r7,#12
  78 0050 1B68     	 ldr r3,[r3]
  79 0052 C7F88831 	 str r3,[r7,#392]
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     j = srcBLen;
  80              	 .loc 1 109 0
  81 0056 3B46     	 mov r3,r7
  82 0058 1B68     	 ldr r3,[r3]
  83 005a C7F84831 	 str r3,[r7,#328]
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     srcBLen = srcALen;
  84              	 .loc 1 110 0
  85 005e 3B46     	 mov r3,r7
  86 0060 07F10802 	 add r2,r7,#8
  87 0064 1268     	 ldr r2,[r2]
  88 0066 1A60     	 str r2,[r3]
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     srcALen = j;
  89              	 .loc 1 111 0
  90 0068 07F10803 	 add r3,r7,#8
  91 006c D7F84821 	 ldr r2,[r7,#328]
  92 0070 1A60     	 str r2,[r3]
  93              	.L3:
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   }
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* The function is internally
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * divided into three stages according to the number of multiplications that has to be
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * taken place between inputA samples and inputB samples. In the first stage of the
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * algorithm, the multiplications increase by one for every iteration.
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * In the second stage of the algorithm, srcBLen number of multiplications are done.
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * In the third stage of the algorithm, the multiplications decrease by one
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * for every iteration. */
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* The algorithm is implemented in three stages.
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****      The loop counters of each stage is initiated here. */
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   blockSize1 = srcBLen - 1u;
  94              	 .loc 1 125 0
  95 0072 3B46     	 mov r3,r7
  96 0074 1B68     	 ldr r3,[r3]
  97 0076 013B     	 subs r3,r3,#1
  98 0078 C7F85031 	 str r3,[r7,#336]
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   blockSize2 = (srcALen - srcBLen) + 1u;
  99              	 .loc 1 126 0
 100 007c 07F10802 	 add r2,r7,#8
 101 0080 3B46     	 mov r3,r7
 102 0082 1268     	 ldr r2,[r2]
 103 0084 1B68     	 ldr r3,[r3]
 104 0086 D31A     	 subs r3,r2,r3
 105 0088 0133     	 adds r3,r3,#1
 106 008a C7F84431 	 str r3,[r7,#324]
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   blockSize3 = blockSize1;
 107              	 .loc 1 127 0
 108 008e D7F85031 	 ldr r3,[r7,#336]
 109 0092 C7F84C31 	 str r3,[r7,#332]
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* --------------------------
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * Initializations of stage1
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * -------------------------*/
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* sum = x[0] * y[0]
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * sum = x[0] * y[1] + x[1] * y[0]
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * ....
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    */
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****      The count variable holds the number of MAC operations performed */
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   count = 1u;
 110              	 .loc 1 141 0
 111 0096 0123     	 movs r3,#1
 112 0098 C7F85831 	 str r3,[r7,#344]
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* Working pointer of inputA */
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   px = pIn1;
 113              	 .loc 1 144 0
 114 009c D7F88C31 	 ldr r3,[r7,#396]
 115 00a0 C7F88031 	 str r3,[r7,#384]
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* Working pointer of inputB */
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   py = pIn2;
 116              	 .loc 1 147 0
 117 00a4 D7F88831 	 ldr r3,[r7,#392]
 118 00a8 C7F87C31 	 str r3,[r7,#380]
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* ------------------------
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * Stage1 process
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * ----------------------*/
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* The first stage starts here */
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   while (blockSize1 > 0u)
 119              	 .loc 1 155 0
 120 00ac 00E1     	 b .L4
 121              	.L11:
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   {
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Accumulator is made zero for every iteration */
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     sum = 0;
 122              	 .loc 1 158 0
 123 00ae 0023     	 movs r3,#0
 124 00b0 C7F87031 	 str r3,[r7,#368]
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     k = count >> 2u;
 125              	 .loc 1 161 0
 126 00b4 D7F85831 	 ldr r3,[r7,#344]
 127 00b8 9B08     	 lsrs r3,r3,#2
 128 00ba C7F85C31 	 str r3,[r7,#348]
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     while (k > 0u)
 129              	 .loc 1 165 0
 130 00be A4E0     	 b .L5
 131              	.L8:
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* x[0] , x[1] */
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in1 = (q15_t) * px++;
 132              	 .loc 1 168 0
 133 00c0 D7F88031 	 ldr r3,[r7,#384]
 134 00c4 5A1C     	 adds r2,r3,#1
 135 00c6 C7F88021 	 str r2,[r7,#384]
 136 00ca 1B78     	 ldrb r3,[r3]
 137 00cc 5BB2     	 sxtb r3,r3
 138 00ce A7F84231 	 strh r3,[r7,#322]
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in2 = (q15_t) * px++;
 139              	 .loc 1 169 0
 140 00d2 D7F88031 	 ldr r3,[r7,#384]
 141 00d6 5A1C     	 adds r2,r3,#1
 142 00d8 C7F88021 	 str r2,[r7,#384]
 143 00dc 1B78     	 ldrb r3,[r3]
 144 00de 5BB2     	 sxtb r3,r3
 145 00e0 A7F84031 	 strh r3,[r7,#320]
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 146              	 .loc 1 170 0
 147 00e4 B7F94231 	 ldrsh r3,[r7,#322]
 148 00e8 9AB2     	 uxth r2,r3
 149 00ea B7F94031 	 ldrsh r3,[r7,#320]
 150 00ee 1B04     	 lsls r3,r3,#16
 151 00f0 1343     	 orrs r3,r3,r2
 152 00f2 C7F83C31 	 str r3,[r7,#316]
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* y[srcBLen - 1] , y[srcBLen - 2] */
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in1 = (q15_t) * py--;
 153              	 .loc 1 173 0
 154 00f6 D7F87C31 	 ldr r3,[r7,#380]
 155 00fa 5A1E     	 subs r2,r3,#1
 156 00fc C7F87C21 	 str r2,[r7,#380]
 157 0100 1B78     	 ldrb r3,[r3]
 158 0102 5BB2     	 sxtb r3,r3
 159 0104 A7F84231 	 strh r3,[r7,#322]
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in2 = (q15_t) * py--;
 160              	 .loc 1 174 0
 161 0108 D7F87C31 	 ldr r3,[r7,#380]
 162 010c 5A1E     	 subs r2,r3,#1
 163 010e C7F87C21 	 str r2,[r7,#380]
 164 0112 1B78     	 ldrb r3,[r3]
 165 0114 5BB2     	 sxtb r3,r3
 166 0116 A7F84031 	 strh r3,[r7,#320]
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 167              	 .loc 1 175 0
 168 011a B7F94231 	 ldrsh r3,[r7,#322]
 169 011e 9AB2     	 uxth r2,r3
 170 0120 B7F94031 	 ldrsh r3,[r7,#320]
 171 0124 1B04     	 lsls r3,r3,#16
 172 0126 1343     	 orrs r3,r3,r2
 173 0128 C7F83831 	 str r3,[r7,#312]
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* x[0] * y[srcBLen - 1] */
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* x[1] * y[srcBLen - 2] */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       sum = __SMLAD(input1, input2, sum);
 174              	 .loc 1 179 0
 175 012c D7F83C11 	 ldr r1,[r7,#316]
 176 0130 D7F83821 	 ldr r2,[r7,#312]
 177 0134 D7F87031 	 ldr r3,[r7,#368]
 178 0138 C7F8EC10 	 str r1,[r7,#236]
 179 013c C7F8E820 	 str r2,[r7,#232]
 180 0140 C7F8E430 	 str r3,[r7,#228]
 181              	.LBB38:
 182              	.LBB39:
 183              	 .file 2 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.1
   5:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     02. February 2017
   6:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  36:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                     __asm
  37:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  39:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                  inline
  40:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  41:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  44:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  47:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  48:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  50:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  51:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  53:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  65:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  71:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  72:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  76:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  77:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  78:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  79:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  83:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  85:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0U);
 644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 734:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 735:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 739:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 740:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 744:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 747:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 751:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 753:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 755:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 756:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 758:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 764:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 766:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 767:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 768:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 769:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 773:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 774:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 776:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 779:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 780:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 781:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 783:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 784:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 785:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 787:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 788:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 789:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 791:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 792:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 793:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 795:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 796:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 797:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 799:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 800:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 802:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 803:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 807:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 808:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 810:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 813:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 814:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 815:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 817:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 818:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 819:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 820:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 821:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 822:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 827:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 828:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 830:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 832:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 833:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 834:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 835:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 836:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 841:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 843:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 845:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 846:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 848:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 849:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 850:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 851:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 852:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 853:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 858:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 859:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 861:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   {
 864:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 865:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 866:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     s--;
 867:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 868:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 870:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 871:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 872:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 873:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 874:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 875:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Count leading zeros
 876:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 877:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 878:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             number of leading zeros in value
 879:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 880:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CLZ             __builtin_clz
 881:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 882:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 883:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 884:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 885:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 886:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 887:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 888:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 889:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 890:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 891:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 892:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 893:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDREXB(volatile uint8_t *addr)
 894:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 895:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 896:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 897:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 898:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 899:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 900:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 901:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 902:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 903:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 904:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 905:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 906:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 907:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 908:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 909:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 910:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 911:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 912:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 913:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 914:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 915:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDREXH(volatile uint16_t *addr)
 916:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 917:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 918:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 920:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 921:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 922:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 923:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 924:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 925:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 926:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 927:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 928:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 929:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 930:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 931:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 932:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 933:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 934:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 935:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 936:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 937:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDREXW(volatile uint32_t *addr)
 938:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 939:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 940:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 941:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 942:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 943:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 944:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 945:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 946:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 947:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 948:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 949:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 950:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 951:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 952:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 953:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 954:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *a
 955:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 956:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 957:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 958:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 959:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 960:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 962:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 963:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 964:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 965:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 966:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 967:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 968:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 969:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 970:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 971:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXH(uint16_t value, volatile uint16_t 
 972:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 973:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 974:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 975:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 976:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 977:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 978:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 979:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 980:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 981:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 982:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 983:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 984:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 985:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 986:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 987:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 988:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t 
 989:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 990:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 991:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 992:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 993:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 994:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 995:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 996:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 997:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 998:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Remove the exclusive lock
 999:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1000:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1001:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __CLREX(void)
1002:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1003:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1004:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1005:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1006:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1007:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1008:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1009:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1010:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1011:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1012:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1013:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1014:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1015:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1016:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Signed Saturate
1017:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates a signed value.
1018:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1019:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1020:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1021:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1022:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1023:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1024:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1025:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1026:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1027:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1028:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1029:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1030:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1031:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Unsigned Saturate
1032:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates an unsigned value.
1033:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1034:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1035:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1036:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1037:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1038:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1039:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1040:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1041:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1042:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1043:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1044:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1045:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1046:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1047:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1048:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1049:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
1050:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
1051:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1052:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RRX(uint32_t value)
1053:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1054:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1055:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1056:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1057:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1058:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1059:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1060:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1061:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1062:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1063:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1064:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1065:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1066:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1067:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1068:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1069:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1070:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1071:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1072:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1073:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1074:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1075:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1076:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1077:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1078:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1079:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1080:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1081:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1082:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1083:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1084:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1085:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1086:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1087:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1088:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1089:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1090:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1091:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1092:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1093:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1094:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1095:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1096:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1097:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1098:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1099:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDRT(volatile uint32_t *ptr)
1112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAB(volatile uint8_t *ptr)
1169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAH(volatile uint16_t *ptr)
1184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDA(volatile uint32_t *ptr)
1199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *p
1297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t 
1314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *
1331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated SIMD instructions
1347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
1348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
1349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__ARM_FEATURE_DSP == 1)                             /* ToDo ARMCLANG: This should be ARCH >= A
1351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32
1651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTB16(uint32_t op1)
1673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTB16(uint32_t op1)
1689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32
1721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 184              	 .loc 2 1724 0
 185 0144 D7F8EC30 	 ldr r3,[r7,#236]
 186 0148 D7F8E820 	 ldr r2,[r7,#232]
 187 014c D7F8E410 	 ldr r1,[r7,#228]
 188              	
 189 0150 23FB0213 	 smlad r3,r3,r2,r1
 190              	
 191              	 .thumb
 192 0154 C7F8E030 	 str r3,[r7,#224]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 193              	 .loc 2 1725 0
 194 0158 D7F8E030 	 ldr r3,[r7,#224]
 195              	.LBE39:
 196              	.LBE38:
 197              	 .loc 1 179 0
 198 015c C7F87031 	 str r3,[r7,#368]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* x[2] , x[3] */
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in1 = (q15_t) * px++;
 199              	 .loc 1 182 0
 200 0160 D7F88031 	 ldr r3,[r7,#384]
 201 0164 5A1C     	 adds r2,r3,#1
 202 0166 C7F88021 	 str r2,[r7,#384]
 203 016a 1B78     	 ldrb r3,[r3]
 204 016c 5BB2     	 sxtb r3,r3
 205 016e A7F84231 	 strh r3,[r7,#322]
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in2 = (q15_t) * px++;
 206              	 .loc 1 183 0
 207 0172 D7F88031 	 ldr r3,[r7,#384]
 208 0176 5A1C     	 adds r2,r3,#1
 209 0178 C7F88021 	 str r2,[r7,#384]
 210 017c 1B78     	 ldrb r3,[r3]
 211 017e 5BB2     	 sxtb r3,r3
 212 0180 A7F84031 	 strh r3,[r7,#320]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 213              	 .loc 1 184 0
 214 0184 B7F94231 	 ldrsh r3,[r7,#322]
 215 0188 9AB2     	 uxth r2,r3
 216 018a B7F94031 	 ldrsh r3,[r7,#320]
 217 018e 1B04     	 lsls r3,r3,#16
 218 0190 1343     	 orrs r3,r3,r2
 219 0192 C7F83C31 	 str r3,[r7,#316]
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* y[srcBLen - 3] , y[srcBLen - 4] */
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in1 = (q15_t) * py--;
 220              	 .loc 1 187 0
 221 0196 D7F87C31 	 ldr r3,[r7,#380]
 222 019a 5A1E     	 subs r2,r3,#1
 223 019c C7F87C21 	 str r2,[r7,#380]
 224 01a0 1B78     	 ldrb r3,[r3]
 225 01a2 5BB2     	 sxtb r3,r3
 226 01a4 A7F84231 	 strh r3,[r7,#322]
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in2 = (q15_t) * py--;
 227              	 .loc 1 188 0
 228 01a8 D7F87C31 	 ldr r3,[r7,#380]
 229 01ac 5A1E     	 subs r2,r3,#1
 230 01ae C7F87C21 	 str r2,[r7,#380]
 231 01b2 1B78     	 ldrb r3,[r3]
 232 01b4 5BB2     	 sxtb r3,r3
 233 01b6 A7F84031 	 strh r3,[r7,#320]
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 234              	 .loc 1 189 0
 235 01ba B7F94231 	 ldrsh r3,[r7,#322]
 236 01be 9AB2     	 uxth r2,r3
 237 01c0 B7F94031 	 ldrsh r3,[r7,#320]
 238 01c4 1B04     	 lsls r3,r3,#16
 239 01c6 1343     	 orrs r3,r3,r2
 240 01c8 C7F83831 	 str r3,[r7,#312]
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* x[2] * y[srcBLen - 3] */
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* x[3] * y[srcBLen - 4] */
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       sum = __SMLAD(input1, input2, sum);
 241              	 .loc 1 193 0
 242 01cc D7F83C11 	 ldr r1,[r7,#316]
 243 01d0 D7F83821 	 ldr r2,[r7,#312]
 244 01d4 D7F87031 	 ldr r3,[r7,#368]
 245 01d8 C7F8DC10 	 str r1,[r7,#220]
 246 01dc C7F8D820 	 str r2,[r7,#216]
 247 01e0 C7F8D430 	 str r3,[r7,#212]
 248              	.LBB40:
 249              	.LBB41:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 250              	 .loc 2 1724 0
 251 01e4 D7F8DC30 	 ldr r3,[r7,#220]
 252 01e8 D7F8D820 	 ldr r2,[r7,#216]
 253 01ec D7F8D410 	 ldr r1,[r7,#212]
 254              	
 255 01f0 23FB0213 	 smlad r3,r3,r2,r1
 256              	
 257              	 .thumb
 258 01f4 C7F8D030 	 str r3,[r7,#208]
 259              	 .loc 2 1725 0
 260 01f8 D7F8D030 	 ldr r3,[r7,#208]
 261              	.LBE41:
 262              	.LBE40:
 263              	 .loc 1 193 0
 264 01fc C7F87031 	 str r3,[r7,#368]
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Decrement the loop counter */
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       k--;
 265              	 .loc 1 196 0
 266 0200 D7F85C31 	 ldr r3,[r7,#348]
 267 0204 013B     	 subs r3,r3,#1
 268 0206 C7F85C31 	 str r3,[r7,#348]
 269              	.L5:
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 270              	 .loc 1 165 0
 271 020a D7F85C31 	 ldr r3,[r7,#348]
 272 020e 002B     	 cmp r3,#0
 273 0210 7FF456AF 	 bne .L8
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     }
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****      ** No loop unrolling is used. */
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     k = count % 0x4u;
 274              	 .loc 1 201 0
 275 0214 D7F85831 	 ldr r3,[r7,#344]
 276 0218 03F00303 	 and r3,r3,#3
 277 021c C7F85C31 	 str r3,[r7,#348]
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     while (k > 0u)
 278              	 .loc 1 203 0
 279 0220 19E0     	 b .L9
 280              	.L10:
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Perform the multiply-accumulates */
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       sum += ((q15_t) * px++ * *py--);
 281              	 .loc 1 206 0
 282 0222 D7F88031 	 ldr r3,[r7,#384]
 283 0226 5A1C     	 adds r2,r3,#1
 284 0228 C7F88021 	 str r2,[r7,#384]
 285 022c 1B78     	 ldrb r3,[r3]
 286 022e 5AB2     	 sxtb r2,r3
 287 0230 D7F87C31 	 ldr r3,[r7,#380]
 288 0234 591E     	 subs r1,r3,#1
 289 0236 C7F87C11 	 str r1,[r7,#380]
 290 023a 1B78     	 ldrb r3,[r3]
 291 023c 5BB2     	 sxtb r3,r3
 292 023e 03FB02F3 	 mul r3,r3,r2
 293 0242 D7F87021 	 ldr r2,[r7,#368]
 294 0246 1344     	 add r3,r3,r2
 295 0248 C7F87031 	 str r3,[r7,#368]
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Decrement the loop counter */
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       k--;
 296              	 .loc 1 209 0
 297 024c D7F85C31 	 ldr r3,[r7,#348]
 298 0250 013B     	 subs r3,r3,#1
 299 0252 C7F85C31 	 str r3,[r7,#348]
 300              	.L9:
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 301              	 .loc 1 203 0
 302 0256 D7F85C31 	 ldr r3,[r7,#348]
 303 025a 002B     	 cmp r3,#0
 304 025c E1D1     	 bne .L10
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     }
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Store the result in the accumulator in the destination buffer. */
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     *pOut++ = (q7_t) (__SSAT(sum >> 7u, 8));
 305              	 .loc 1 213 0
 306 025e D7F88431 	 ldr r3,[r7,#388]
 307 0262 5A1C     	 adds r2,r3,#1
 308 0264 C7F88421 	 str r2,[r7,#388]
 309              	.LBB42:
 310 0268 D7F87021 	 ldr r2,[r7,#368]
 311 026c D211     	 asrs r2,r2,#7
 312 026e C7F83421 	 str r2,[r7,#308]
 313 0272 D7F83421 	 ldr r2,[r7,#308]
 314              	
 315 0276 02F30702 	 ssat r2,#8,r2
 316              	
 317              	 .thumb
 318 027a C7F83021 	 str r2,[r7,#304]
 319 027e D7F83021 	 ldr r2,[r7,#304]
 320              	.LBE42:
 321 0282 D2B2     	 uxtb r2,r2
 322 0284 1A70     	 strb r2,[r3]
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     py = pIn2 + count;
 323              	 .loc 1 216 0
 324 0286 D7F88821 	 ldr r2,[r7,#392]
 325 028a D7F85831 	 ldr r3,[r7,#344]
 326 028e 1344     	 add r3,r3,r2
 327 0290 C7F87C31 	 str r3,[r7,#380]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     px = pIn1;
 328              	 .loc 1 217 0
 329 0294 D7F88C31 	 ldr r3,[r7,#396]
 330 0298 C7F88031 	 str r3,[r7,#384]
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Increment the MAC count */
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     count++;
 331              	 .loc 1 220 0
 332 029c D7F85831 	 ldr r3,[r7,#344]
 333 02a0 0133     	 adds r3,r3,#1
 334 02a2 C7F85831 	 str r3,[r7,#344]
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Decrement the loop counter */
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     blockSize1--;
 335              	 .loc 1 223 0
 336 02a6 D7F85031 	 ldr r3,[r7,#336]
 337 02aa 013B     	 subs r3,r3,#1
 338 02ac C7F85031 	 str r3,[r7,#336]
 339              	.L4:
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   {
 340              	 .loc 1 155 0
 341 02b0 D7F85031 	 ldr r3,[r7,#336]
 342 02b4 002B     	 cmp r3,#0
 343 02b6 7FF4FAAE 	 bne .L11
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   }
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* --------------------------
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * Initializations of stage2
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * ------------------------*/
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * ....
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y[0
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    */
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* Working pointer of inputA */
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   px = pIn1;
 344              	 .loc 1 237 0
 345 02ba D7F88C31 	 ldr r3,[r7,#396]
 346 02be C7F88031 	 str r3,[r7,#384]
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* Working pointer of inputB */
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 347              	 .loc 1 240 0
 348 02c2 3B46     	 mov r3,r7
 349 02c4 1B68     	 ldr r3,[r3]
 350 02c6 013B     	 subs r3,r3,#1
 351 02c8 D7F88821 	 ldr r2,[r7,#392]
 352 02cc 1344     	 add r3,r3,r2
 353 02ce C7F82C31 	 str r3,[r7,#300]
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   py = pSrc2;
 354              	 .loc 1 241 0
 355 02d2 D7F82C31 	 ldr r3,[r7,#300]
 356 02d6 C7F87C31 	 str r3,[r7,#380]
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* count is index by which the pointer pIn1 to be incremented */
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   count = 0u;
 357              	 .loc 1 244 0
 358 02da 0023     	 movs r3,#0
 359 02dc C7F85831 	 str r3,[r7,#344]
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* -------------------
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * Stage2 process
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * ------------------*/
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * So, to loop unroll over blockSize2,
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * srcBLen should be greater than or equal to 4 */
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   if (srcBLen >= 4u)
 360              	 .loc 1 253 0
 361 02e0 3B46     	 mov r3,r7
 362 02e2 1B68     	 ldr r3,[r3]
 363 02e4 032B     	 cmp r3,#3
 364 02e6 40F2F583 	 bls .L12
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   {
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Loop unroll over blockSize2, by 4 */
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     blkCnt = blockSize2 >> 2u;
 365              	 .loc 1 256 0
 366 02ea D7F84431 	 ldr r3,[r7,#324]
 367 02ee 9B08     	 lsrs r3,r3,#2
 368 02f0 C7F85431 	 str r3,[r7,#340]
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     while (blkCnt > 0u)
 369              	 .loc 1 258 0
 370 02f4 CBE2     	 b .L13
 371              	.L25:
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Set all accumulators to zero */
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       acc0 = 0;
 372              	 .loc 1 261 0
 373 02f6 0023     	 movs r3,#0
 374 02f8 C7F86C31 	 str r3,[r7,#364]
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       acc1 = 0;
 375              	 .loc 1 262 0
 376 02fc 0023     	 movs r3,#0
 377 02fe C7F86831 	 str r3,[r7,#360]
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       acc2 = 0;
 378              	 .loc 1 263 0
 379 0302 0023     	 movs r3,#0
 380 0304 C7F86431 	 str r3,[r7,#356]
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       acc3 = 0;
 381              	 .loc 1 264 0
 382 0308 0023     	 movs r3,#0
 383 030a C7F86031 	 str r3,[r7,#352]
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* read x[0], x[1], x[2] samples */
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       x0 = *(px++);
 384              	 .loc 1 267 0
 385 030e D7F88031 	 ldr r3,[r7,#384]
 386 0312 5A1C     	 adds r2,r3,#1
 387 0314 C7F88021 	 str r2,[r7,#384]
 388 0318 1B78     	 ldrb r3,[r3]
 389 031a 87F87731 	 strb r3,[r7,#375]
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       x1 = *(px++);
 390              	 .loc 1 268 0
 391 031e D7F88031 	 ldr r3,[r7,#384]
 392 0322 5A1C     	 adds r2,r3,#1
 393 0324 C7F88021 	 str r2,[r7,#384]
 394 0328 1B78     	 ldrb r3,[r3]
 395 032a 87F87631 	 strb r3,[r7,#374]
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       x2 = *(px++);
 396              	 .loc 1 269 0
 397 032e D7F88031 	 ldr r3,[r7,#384]
 398 0332 5A1C     	 adds r2,r3,#1
 399 0334 C7F88021 	 str r2,[r7,#384]
 400 0338 1B78     	 ldrb r3,[r3]
 401 033a 87F87531 	 strb r3,[r7,#373]
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       k = srcBLen >> 2u;
 402              	 .loc 1 272 0
 403 033e 3B46     	 mov r3,r7
 404 0340 1B68     	 ldr r3,[r3]
 405 0342 9B08     	 lsrs r3,r3,#2
 406 0344 C7F85C31 	 str r3,[r7,#348]
 407              	.L22:
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       do
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       {
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Read y[srcBLen - 1] sample */
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         c0 = *(py--);
 408              	 .loc 1 279 0 discriminator 1
 409 0348 D7F87C31 	 ldr r3,[r7,#380]
 410 034c 5A1E     	 subs r2,r3,#1
 411 034e C7F87C21 	 str r2,[r7,#380]
 412 0352 1B78     	 ldrb r3,[r3]
 413 0354 87F82B31 	 strb r3,[r7,#299]
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Read y[srcBLen - 2] sample */
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         c1 = *(py--);
 414              	 .loc 1 281 0 discriminator 1
 415 0358 D7F87C31 	 ldr r3,[r7,#380]
 416 035c 5A1E     	 subs r2,r3,#1
 417 035e C7F87C21 	 str r2,[r7,#380]
 418 0362 1B78     	 ldrb r3,[r3]
 419 0364 87F82A31 	 strb r3,[r7,#298]
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Read x[3] sample */
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         x3 = *(px++);
 420              	 .loc 1 284 0 discriminator 1
 421 0368 D7F88031 	 ldr r3,[r7,#384]
 422 036c 5A1C     	 adds r2,r3,#1
 423 036e C7F88021 	 str r2,[r7,#384]
 424 0372 1B78     	 ldrb r3,[r3]
 425 0374 87F82931 	 strb r3,[r7,#297]
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* x[0] and x[1] are packed */
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) x0;
 426              	 .loc 1 287 0 discriminator 1
 427 0378 97F97731 	 ldrsb r3,[r7,#375]
 428 037c A7F84231 	 strh r3,[r7,#322]
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) x1;
 429              	 .loc 1 288 0 discriminator 1
 430 0380 97F97631 	 ldrsb r3,[r7,#374]
 431 0384 A7F84031 	 strh r3,[r7,#320]
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 432              	 .loc 1 290 0 discriminator 1
 433 0388 B7F94231 	 ldrsh r3,[r7,#322]
 434 038c 9AB2     	 uxth r2,r3
 435 038e B7F94031 	 ldrsh r3,[r7,#320]
 436 0392 1B04     	 lsls r3,r3,#16
 437 0394 1343     	 orrs r3,r3,r2
 438 0396 C7F83C31 	 str r3,[r7,#316]
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* y[srcBLen - 1]   and y[srcBLen - 2] are packed */
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) c0;
 439              	 .loc 1 293 0 discriminator 1
 440 039a 97F92B31 	 ldrsb r3,[r7,#299]
 441 039e A7F84231 	 strh r3,[r7,#322]
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) c1;
 442              	 .loc 1 294 0 discriminator 1
 443 03a2 97F92A31 	 ldrsb r3,[r7,#298]
 444 03a6 A7F84031 	 strh r3,[r7,#320]
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 445              	 .loc 1 296 0 discriminator 1
 446 03aa B7F94231 	 ldrsh r3,[r7,#322]
 447 03ae 9AB2     	 uxth r2,r3
 448 03b0 B7F94031 	 ldrsh r3,[r7,#320]
 449 03b4 1B04     	 lsls r3,r3,#16
 450 03b6 1343     	 orrs r3,r3,r2
 451 03b8 C7F83831 	 str r3,[r7,#312]
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc0 += x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2]  */
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc0 = __SMLAD(input1, input2, acc0);
 452              	 .loc 1 299 0 discriminator 1
 453 03bc D7F83C11 	 ldr r1,[r7,#316]
 454 03c0 D7F83821 	 ldr r2,[r7,#312]
 455 03c4 D7F86C31 	 ldr r3,[r7,#364]
 456 03c8 C7F8CC10 	 str r1,[r7,#204]
 457 03cc C7F8C820 	 str r2,[r7,#200]
 458 03d0 C7F8C430 	 str r3,[r7,#196]
 459              	.LBB43:
 460              	.LBB44:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 461              	 .loc 2 1724 0 discriminator 1
 462 03d4 D7F8CC30 	 ldr r3,[r7,#204]
 463 03d8 D7F8C820 	 ldr r2,[r7,#200]
 464 03dc D7F8C410 	 ldr r1,[r7,#196]
 465              	
 466 03e0 23FB0213 	 smlad r3,r3,r2,r1
 467              	
 468              	 .thumb
 469 03e4 C7F8C030 	 str r3,[r7,#192]
 470              	 .loc 2 1725 0 discriminator 1
 471 03e8 D7F8C030 	 ldr r3,[r7,#192]
 472              	.LBE44:
 473              	.LBE43:
 474              	 .loc 1 299 0 discriminator 1
 475 03ec C7F86C31 	 str r3,[r7,#364]
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* x[1] and x[2] are packed */
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) x1;
 476              	 .loc 1 302 0 discriminator 1
 477 03f0 97F97631 	 ldrsb r3,[r7,#374]
 478 03f4 A7F84231 	 strh r3,[r7,#322]
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) x2;
 479              	 .loc 1 303 0 discriminator 1
 480 03f8 97F97531 	 ldrsb r3,[r7,#373]
 481 03fc A7F84031 	 strh r3,[r7,#320]
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 482              	 .loc 1 305 0 discriminator 1
 483 0400 B7F94231 	 ldrsh r3,[r7,#322]
 484 0404 9AB2     	 uxth r2,r3
 485 0406 B7F94031 	 ldrsh r3,[r7,#320]
 486 040a 1B04     	 lsls r3,r3,#16
 487 040c 1343     	 orrs r3,r3,r2
 488 040e C7F83C31 	 str r3,[r7,#316]
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc1 += x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2]  */
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc1 = __SMLAD(input1, input2, acc1);
 489              	 .loc 1 308 0 discriminator 1
 490 0412 D7F83C11 	 ldr r1,[r7,#316]
 491 0416 D7F83821 	 ldr r2,[r7,#312]
 492 041a D7F86831 	 ldr r3,[r7,#360]
 493 041e C7F8BC10 	 str r1,[r7,#188]
 494 0422 C7F8B820 	 str r2,[r7,#184]
 495 0426 C7F8B430 	 str r3,[r7,#180]
 496              	.LBB45:
 497              	.LBB46:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 498              	 .loc 2 1724 0 discriminator 1
 499 042a D7F8BC30 	 ldr r3,[r7,#188]
 500 042e D7F8B820 	 ldr r2,[r7,#184]
 501 0432 D7F8B410 	 ldr r1,[r7,#180]
 502              	
 503 0436 23FB0213 	 smlad r3,r3,r2,r1
 504              	
 505              	 .thumb
 506 043a C7F8B030 	 str r3,[r7,#176]
 507              	 .loc 2 1725 0 discriminator 1
 508 043e D7F8B030 	 ldr r3,[r7,#176]
 509              	.LBE46:
 510              	.LBE45:
 511              	 .loc 1 308 0 discriminator 1
 512 0442 C7F86831 	 str r3,[r7,#360]
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* x[2] and x[3] are packed */
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) x2;
 513              	 .loc 1 311 0 discriminator 1
 514 0446 97F97531 	 ldrsb r3,[r7,#373]
 515 044a A7F84231 	 strh r3,[r7,#322]
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) x3;
 516              	 .loc 1 312 0 discriminator 1
 517 044e 97F92931 	 ldrsb r3,[r7,#297]
 518 0452 A7F84031 	 strh r3,[r7,#320]
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 519              	 .loc 1 314 0 discriminator 1
 520 0456 B7F94231 	 ldrsh r3,[r7,#322]
 521 045a 9AB2     	 uxth r2,r3
 522 045c B7F94031 	 ldrsh r3,[r7,#320]
 523 0460 1B04     	 lsls r3,r3,#16
 524 0462 1343     	 orrs r3,r3,r2
 525 0464 C7F83C31 	 str r3,[r7,#316]
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc2 += x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2]  */
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc2 = __SMLAD(input1, input2, acc2);
 526              	 .loc 1 317 0 discriminator 1
 527 0468 D7F83C11 	 ldr r1,[r7,#316]
 528 046c D7F83821 	 ldr r2,[r7,#312]
 529 0470 D7F86431 	 ldr r3,[r7,#356]
 530 0474 C7F8AC10 	 str r1,[r7,#172]
 531 0478 C7F8A820 	 str r2,[r7,#168]
 532 047c C7F8A430 	 str r3,[r7,#164]
 533              	.LBB47:
 534              	.LBB48:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 535              	 .loc 2 1724 0 discriminator 1
 536 0480 D7F8AC30 	 ldr r3,[r7,#172]
 537 0484 D7F8A820 	 ldr r2,[r7,#168]
 538 0488 D7F8A410 	 ldr r1,[r7,#164]
 539              	
 540 048c 23FB0213 	 smlad r3,r3,r2,r1
 541              	
 542              	 .thumb
 543 0490 C7F8A030 	 str r3,[r7,#160]
 544              	 .loc 2 1725 0 discriminator 1
 545 0494 D7F8A030 	 ldr r3,[r7,#160]
 546              	.LBE48:
 547              	.LBE47:
 548              	 .loc 1 317 0 discriminator 1
 549 0498 C7F86431 	 str r3,[r7,#356]
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Read x[4] sample */
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         x0 = *(px++);
 550              	 .loc 1 320 0 discriminator 1
 551 049c D7F88031 	 ldr r3,[r7,#384]
 552 04a0 5A1C     	 adds r2,r3,#1
 553 04a2 C7F88021 	 str r2,[r7,#384]
 554 04a6 1B78     	 ldrb r3,[r3]
 555 04a8 87F87731 	 strb r3,[r7,#375]
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* x[3] and x[4] are packed */
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) x3;
 556              	 .loc 1 323 0 discriminator 1
 557 04ac 97F92931 	 ldrsb r3,[r7,#297]
 558 04b0 A7F84231 	 strh r3,[r7,#322]
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) x0;
 559              	 .loc 1 324 0 discriminator 1
 560 04b4 97F97731 	 ldrsb r3,[r7,#375]
 561 04b8 A7F84031 	 strh r3,[r7,#320]
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 562              	 .loc 1 326 0 discriminator 1
 563 04bc B7F94231 	 ldrsh r3,[r7,#322]
 564 04c0 9AB2     	 uxth r2,r3
 565 04c2 B7F94031 	 ldrsh r3,[r7,#320]
 566 04c6 1B04     	 lsls r3,r3,#16
 567 04c8 1343     	 orrs r3,r3,r2
 568 04ca C7F83C31 	 str r3,[r7,#316]
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc3 += x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2]  */
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc3 = __SMLAD(input1, input2, acc3);
 569              	 .loc 1 329 0 discriminator 1
 570 04ce D7F83C11 	 ldr r1,[r7,#316]
 571 04d2 D7F83821 	 ldr r2,[r7,#312]
 572 04d6 D7F86031 	 ldr r3,[r7,#352]
 573 04da C7F89C10 	 str r1,[r7,#156]
 574 04de C7F89820 	 str r2,[r7,#152]
 575 04e2 C7F89430 	 str r3,[r7,#148]
 576              	.LBB49:
 577              	.LBB50:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 578              	 .loc 2 1724 0 discriminator 1
 579 04e6 D7F89C30 	 ldr r3,[r7,#156]
 580 04ea D7F89820 	 ldr r2,[r7,#152]
 581 04ee D7F89410 	 ldr r1,[r7,#148]
 582              	
 583 04f2 23FB0212 	 smlad r2,r3,r2,r1
 584              	
 585              	 .thumb
 586 04f6 07F19003 	 add r3,r7,#144
 587 04fa 1A60     	 str r2,[r3]
 588              	 .loc 2 1725 0 discriminator 1
 589 04fc 07F19003 	 add r3,r7,#144
 590 0500 1B68     	 ldr r3,[r3]
 591              	.LBE50:
 592              	.LBE49:
 593              	 .loc 1 329 0 discriminator 1
 594 0502 C7F86031 	 str r3,[r7,#352]
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Read y[srcBLen - 3] sample */
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         c0 = *(py--);
 595              	 .loc 1 332 0 discriminator 1
 596 0506 D7F87C31 	 ldr r3,[r7,#380]
 597 050a 5A1E     	 subs r2,r3,#1
 598 050c C7F87C21 	 str r2,[r7,#380]
 599 0510 1B78     	 ldrb r3,[r3]
 600 0512 87F82B31 	 strb r3,[r7,#299]
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Read y[srcBLen - 4] sample */
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         c1 = *(py--);
 601              	 .loc 1 334 0 discriminator 1
 602 0516 D7F87C31 	 ldr r3,[r7,#380]
 603 051a 5A1E     	 subs r2,r3,#1
 604 051c C7F87C21 	 str r2,[r7,#380]
 605 0520 1B78     	 ldrb r3,[r3]
 606 0522 87F82A31 	 strb r3,[r7,#298]
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Read x[5] sample */
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         x1 = *(px++);
 607              	 .loc 1 337 0 discriminator 1
 608 0526 D7F88031 	 ldr r3,[r7,#384]
 609 052a 5A1C     	 adds r2,r3,#1
 610 052c C7F88021 	 str r2,[r7,#384]
 611 0530 1B78     	 ldrb r3,[r3]
 612 0532 87F87631 	 strb r3,[r7,#374]
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* x[2] and x[3] are packed */
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) x2;
 613              	 .loc 1 340 0 discriminator 1
 614 0536 97F97531 	 ldrsb r3,[r7,#373]
 615 053a A7F84231 	 strh r3,[r7,#322]
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) x3;
 616              	 .loc 1 341 0 discriminator 1
 617 053e 97F92931 	 ldrsb r3,[r7,#297]
 618 0542 A7F84031 	 strh r3,[r7,#320]
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 619              	 .loc 1 343 0 discriminator 1
 620 0546 B7F94231 	 ldrsh r3,[r7,#322]
 621 054a 9AB2     	 uxth r2,r3
 622 054c B7F94031 	 ldrsh r3,[r7,#320]
 623 0550 1B04     	 lsls r3,r3,#16
 624 0552 1343     	 orrs r3,r3,r2
 625 0554 C7F83C31 	 str r3,[r7,#316]
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* y[srcBLen - 3] and y[srcBLen - 4] are packed */
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) c0;
 626              	 .loc 1 346 0 discriminator 1
 627 0558 97F92B31 	 ldrsb r3,[r7,#299]
 628 055c A7F84231 	 strh r3,[r7,#322]
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) c1;
 629              	 .loc 1 347 0 discriminator 1
 630 0560 97F92A31 	 ldrsb r3,[r7,#298]
 631 0564 A7F84031 	 strh r3,[r7,#320]
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 632              	 .loc 1 349 0 discriminator 1
 633 0568 B7F94231 	 ldrsh r3,[r7,#322]
 634 056c 9AB2     	 uxth r2,r3
 635 056e B7F94031 	 ldrsh r3,[r7,#320]
 636 0572 1B04     	 lsls r3,r3,#16
 637 0574 1343     	 orrs r3,r3,r2
 638 0576 C7F83831 	 str r3,[r7,#312]
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc0 += x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4]  */
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc0 = __SMLAD(input1, input2, acc0);
 639              	 .loc 1 352 0 discriminator 1
 640 057a D7F83C01 	 ldr r0,[r7,#316]
 641 057e D7F83811 	 ldr r1,[r7,#312]
 642 0582 D7F86C21 	 ldr r2,[r7,#364]
 643 0586 07F18C03 	 add r3,r7,#140
 644 058a 1860     	 str r0,[r3]
 645 058c 07F18803 	 add r3,r7,#136
 646 0590 1960     	 str r1,[r3]
 647 0592 07F18403 	 add r3,r7,#132
 648 0596 1A60     	 str r2,[r3]
 649              	.LBB51:
 650              	.LBB52:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 651              	 .loc 2 1724 0 discriminator 1
 652 0598 07F18C03 	 add r3,r7,#140
 653 059c 1B68     	 ldr r3,[r3]
 654 059e 07F18802 	 add r2,r7,#136
 655 05a2 1268     	 ldr r2,[r2]
 656 05a4 07F18401 	 add r1,r7,#132
 657 05a8 0968     	 ldr r1,[r1]
 658              	
 659 05aa 23FB0212 	 smlad r2,r3,r2,r1
 660              	
 661              	 .thumb
 662 05ae 07F18003 	 add r3,r7,#128
 663 05b2 1A60     	 str r2,[r3]
 664              	 .loc 2 1725 0 discriminator 1
 665 05b4 07F18003 	 add r3,r7,#128
 666 05b8 1B68     	 ldr r3,[r3]
 667              	.LBE52:
 668              	.LBE51:
 669              	 .loc 1 352 0 discriminator 1
 670 05ba C7F86C31 	 str r3,[r7,#364]
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* x[3] and x[4] are packed */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) x3;
 671              	 .loc 1 355 0 discriminator 1
 672 05be 97F92931 	 ldrsb r3,[r7,#297]
 673 05c2 A7F84231 	 strh r3,[r7,#322]
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) x0;
 674              	 .loc 1 356 0 discriminator 1
 675 05c6 97F97731 	 ldrsb r3,[r7,#375]
 676 05ca A7F84031 	 strh r3,[r7,#320]
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 677              	 .loc 1 358 0 discriminator 1
 678 05ce B7F94231 	 ldrsh r3,[r7,#322]
 679 05d2 9AB2     	 uxth r2,r3
 680 05d4 B7F94031 	 ldrsh r3,[r7,#320]
 681 05d8 1B04     	 lsls r3,r3,#16
 682 05da 1343     	 orrs r3,r3,r2
 683 05dc C7F83C31 	 str r3,[r7,#316]
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc1 += x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4]  */
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc1 = __SMLAD(input1, input2, acc1);
 684              	 .loc 1 361 0 discriminator 1
 685 05e0 D7F83C01 	 ldr r0,[r7,#316]
 686 05e4 D7F83811 	 ldr r1,[r7,#312]
 687 05e8 D7F86821 	 ldr r2,[r7,#360]
 688 05ec 07F17C03 	 add r3,r7,#124
 689 05f0 1860     	 str r0,[r3]
 690 05f2 07F17803 	 add r3,r7,#120
 691 05f6 1960     	 str r1,[r3]
 692 05f8 07F17403 	 add r3,r7,#116
 693 05fc 1A60     	 str r2,[r3]
 694              	.LBB53:
 695              	.LBB54:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 696              	 .loc 2 1724 0 discriminator 1
 697 05fe 07F17C03 	 add r3,r7,#124
 698 0602 1B68     	 ldr r3,[r3]
 699 0604 07F17802 	 add r2,r7,#120
 700 0608 1268     	 ldr r2,[r2]
 701 060a 07F17401 	 add r1,r7,#116
 702 060e 0968     	 ldr r1,[r1]
 703              	
 704 0610 23FB0212 	 smlad r2,r3,r2,r1
 705              	
 706              	 .thumb
 707 0614 07F17003 	 add r3,r7,#112
 708 0618 1A60     	 str r2,[r3]
 709              	 .loc 2 1725 0 discriminator 1
 710 061a 07F17003 	 add r3,r7,#112
 711 061e 1B68     	 ldr r3,[r3]
 712              	.LBE54:
 713              	.LBE53:
 714              	 .loc 1 361 0 discriminator 1
 715 0620 C7F86831 	 str r3,[r7,#360]
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* x[4] and x[5] are packed */
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) x0;
 716              	 .loc 1 364 0 discriminator 1
 717 0624 97F97731 	 ldrsb r3,[r7,#375]
 718 0628 A7F84231 	 strh r3,[r7,#322]
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) x1;
 719              	 .loc 1 365 0 discriminator 1
 720 062c 97F97631 	 ldrsb r3,[r7,#374]
 721 0630 A7F84031 	 strh r3,[r7,#320]
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 722              	 .loc 1 367 0 discriminator 1
 723 0634 B7F94231 	 ldrsh r3,[r7,#322]
 724 0638 9AB2     	 uxth r2,r3
 725 063a B7F94031 	 ldrsh r3,[r7,#320]
 726 063e 1B04     	 lsls r3,r3,#16
 727 0640 1343     	 orrs r3,r3,r2
 728 0642 C7F83C31 	 str r3,[r7,#316]
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc2 += x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4]  */
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc2 = __SMLAD(input1, input2, acc2);
 729              	 .loc 1 370 0 discriminator 1
 730 0646 D7F83C01 	 ldr r0,[r7,#316]
 731 064a D7F83811 	 ldr r1,[r7,#312]
 732 064e D7F86421 	 ldr r2,[r7,#356]
 733 0652 07F16C03 	 add r3,r7,#108
 734 0656 1860     	 str r0,[r3]
 735 0658 07F16803 	 add r3,r7,#104
 736 065c 1960     	 str r1,[r3]
 737 065e 07F16403 	 add r3,r7,#100
 738 0662 1A60     	 str r2,[r3]
 739              	.LBB55:
 740              	.LBB56:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 741              	 .loc 2 1724 0 discriminator 1
 742 0664 07F16C03 	 add r3,r7,#108
 743 0668 1B68     	 ldr r3,[r3]
 744 066a 07F16802 	 add r2,r7,#104
 745 066e 1268     	 ldr r2,[r2]
 746 0670 07F16401 	 add r1,r7,#100
 747 0674 0968     	 ldr r1,[r1]
 748              	
 749 0676 23FB0212 	 smlad r2,r3,r2,r1
 750              	
 751              	 .thumb
 752 067a 07F16003 	 add r3,r7,#96
 753 067e 1A60     	 str r2,[r3]
 754              	 .loc 2 1725 0 discriminator 1
 755 0680 07F16003 	 add r3,r7,#96
 756 0684 1B68     	 ldr r3,[r3]
 757              	.LBE56:
 758              	.LBE55:
 759              	 .loc 1 370 0 discriminator 1
 760 0686 C7F86431 	 str r3,[r7,#356]
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Read x[6] sample */
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         x2 = *(px++);
 761              	 .loc 1 373 0 discriminator 1
 762 068a D7F88031 	 ldr r3,[r7,#384]
 763 068e 5A1C     	 adds r2,r3,#1
 764 0690 C7F88021 	 str r2,[r7,#384]
 765 0694 1B78     	 ldrb r3,[r3]
 766 0696 87F87531 	 strb r3,[r7,#373]
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* x[5] and x[6] are packed */
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) x1;
 767              	 .loc 1 376 0 discriminator 1
 768 069a 97F97631 	 ldrsb r3,[r7,#374]
 769 069e A7F84231 	 strh r3,[r7,#322]
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) x2;
 770              	 .loc 1 377 0 discriminator 1
 771 06a2 97F97531 	 ldrsb r3,[r7,#373]
 772 06a6 A7F84031 	 strh r3,[r7,#320]
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 773              	 .loc 1 379 0 discriminator 1
 774 06aa B7F94231 	 ldrsh r3,[r7,#322]
 775 06ae 9AB2     	 uxth r2,r3
 776 06b0 B7F94031 	 ldrsh r3,[r7,#320]
 777 06b4 1B04     	 lsls r3,r3,#16
 778 06b6 1343     	 orrs r3,r3,r2
 779 06b8 C7F83C31 	 str r3,[r7,#316]
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc3 += x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4]  */
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc3 = __SMLAD(input1, input2, acc3);
 780              	 .loc 1 382 0 discriminator 1
 781 06bc D7F83C01 	 ldr r0,[r7,#316]
 782 06c0 D7F83811 	 ldr r1,[r7,#312]
 783 06c4 D7F86021 	 ldr r2,[r7,#352]
 784 06c8 07F15C03 	 add r3,r7,#92
 785 06cc 1860     	 str r0,[r3]
 786 06ce 07F15803 	 add r3,r7,#88
 787 06d2 1960     	 str r1,[r3]
 788 06d4 07F15403 	 add r3,r7,#84
 789 06d8 1A60     	 str r2,[r3]
 790              	.LBB57:
 791              	.LBB58:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 792              	 .loc 2 1724 0 discriminator 1
 793 06da 07F15C03 	 add r3,r7,#92
 794 06de 1B68     	 ldr r3,[r3]
 795 06e0 07F15802 	 add r2,r7,#88
 796 06e4 1268     	 ldr r2,[r2]
 797 06e6 07F15401 	 add r1,r7,#84
 798 06ea 0968     	 ldr r1,[r1]
 799              	
 800 06ec 23FB0212 	 smlad r2,r3,r2,r1
 801              	
 802              	 .thumb
 803 06f0 07F15003 	 add r3,r7,#80
 804 06f4 1A60     	 str r2,[r3]
 805              	 .loc 2 1725 0 discriminator 1
 806 06f6 07F15003 	 add r3,r7,#80
 807 06fa 1B68     	 ldr r3,[r3]
 808              	.LBE58:
 809              	.LBE57:
 810              	 .loc 1 382 0 discriminator 1
 811 06fc C7F86031 	 str r3,[r7,#352]
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       } while (--k);
 812              	 .loc 1 384 0 discriminator 1
 813 0700 D7F85C31 	 ldr r3,[r7,#348]
 814 0704 013B     	 subs r3,r3,#1
 815 0706 C7F85C31 	 str r3,[r7,#348]
 816 070a D7F85C31 	 ldr r3,[r7,#348]
 817 070e 002B     	 cmp r3,#0
 818 0710 7FF41AAE 	 bne .L22
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****        ** No loop unrolling is used. */
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       k = srcBLen % 0x4u;
 819              	 .loc 1 388 0
 820 0714 3B46     	 mov r3,r7
 821 0716 1B68     	 ldr r3,[r3]
 822 0718 03F00303 	 and r3,r3,#3
 823 071c C7F85C31 	 str r3,[r7,#348]
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       while (k > 0u)
 824              	 .loc 1 390 0
 825 0720 4CE0     	 b .L23
 826              	.L24:
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       {
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Read y[srcBLen - 5] sample */
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         c0 = *(py--);
 827              	 .loc 1 393 0
 828 0722 D7F87C31 	 ldr r3,[r7,#380]
 829 0726 5A1E     	 subs r2,r3,#1
 830 0728 C7F87C21 	 str r2,[r7,#380]
 831 072c 1B78     	 ldrb r3,[r3]
 832 072e 87F82B31 	 strb r3,[r7,#299]
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Read x[7] sample */
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         x3 = *(px++);
 833              	 .loc 1 396 0
 834 0732 D7F88031 	 ldr r3,[r7,#384]
 835 0736 5A1C     	 adds r2,r3,#1
 836 0738 C7F88021 	 str r2,[r7,#384]
 837 073c 1B78     	 ldrb r3,[r3]
 838 073e 87F82931 	 strb r3,[r7,#297]
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Perform the multiply-accumulates */
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc0 +=  x[4] * y[srcBLen - 5] */
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc0 += ((q15_t) x0 * c0);
 839              	 .loc 1 400 0
 840 0742 97F97731 	 ldrsb r3,[r7,#375]
 841 0746 97F92B21 	 ldrsb r2,[r7,#299]
 842 074a 02FB03F3 	 mul r3,r2,r3
 843 074e D7F86C21 	 ldr r2,[r7,#364]
 844 0752 1344     	 add r3,r3,r2
 845 0754 C7F86C31 	 str r3,[r7,#364]
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc1 +=  x[5] * y[srcBLen - 5] */
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc1 += ((q15_t) x1 * c0);
 846              	 .loc 1 402 0
 847 0758 97F97631 	 ldrsb r3,[r7,#374]
 848 075c 97F92B21 	 ldrsb r2,[r7,#299]
 849 0760 02FB03F3 	 mul r3,r2,r3
 850 0764 D7F86821 	 ldr r2,[r7,#360]
 851 0768 1344     	 add r3,r3,r2
 852 076a C7F86831 	 str r3,[r7,#360]
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc2 +=  x[6] * y[srcBLen - 5] */
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc2 += ((q15_t) x2 * c0);
 853              	 .loc 1 404 0
 854 076e 97F97531 	 ldrsb r3,[r7,#373]
 855 0772 97F92B21 	 ldrsb r2,[r7,#299]
 856 0776 02FB03F3 	 mul r3,r2,r3
 857 077a D7F86421 	 ldr r2,[r7,#356]
 858 077e 1344     	 add r3,r3,r2
 859 0780 C7F86431 	 str r3,[r7,#356]
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* acc3 +=  x[7] * y[srcBLen - 5] */
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         acc3 += ((q15_t) x3 * c0);
 860              	 .loc 1 406 0
 861 0784 97F92931 	 ldrsb r3,[r7,#297]
 862 0788 97F92B21 	 ldrsb r2,[r7,#299]
 863 078c 02FB03F3 	 mul r3,r2,r3
 864 0790 D7F86021 	 ldr r2,[r7,#352]
 865 0794 1344     	 add r3,r3,r2
 866 0796 C7F86031 	 str r3,[r7,#352]
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Reuse the present samples for the next MAC */
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         x0 = x1;
 867              	 .loc 1 409 0
 868 079a 97F87631 	 ldrb r3,[r7,#374]
 869 079e 87F87731 	 strb r3,[r7,#375]
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         x1 = x2;
 870              	 .loc 1 410 0
 871 07a2 97F87531 	 ldrb r3,[r7,#373]
 872 07a6 87F87631 	 strb r3,[r7,#374]
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         x2 = x3;
 873              	 .loc 1 411 0
 874 07aa 97F82931 	 ldrb r3,[r7,#297]
 875 07ae 87F87531 	 strb r3,[r7,#373]
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Decrement the loop counter */
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         k--;
 876              	 .loc 1 414 0
 877 07b2 D7F85C31 	 ldr r3,[r7,#348]
 878 07b6 013B     	 subs r3,r3,#1
 879 07b8 C7F85C31 	 str r3,[r7,#348]
 880              	.L23:
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       {
 881              	 .loc 1 390 0
 882 07bc D7F85C31 	 ldr r3,[r7,#348]
 883 07c0 002B     	 cmp r3,#0
 884 07c2 AED1     	 bne .L24
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       }
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Store the result in the accumulator in the destination buffer. */
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       *pOut++ = (q7_t) (__SSAT(acc0 >> 7u, 8));
 885              	 .loc 1 419 0
 886 07c4 D7F88431 	 ldr r3,[r7,#388]
 887 07c8 5A1C     	 adds r2,r3,#1
 888 07ca C7F88421 	 str r2,[r7,#388]
 889              	.LBB59:
 890 07ce D7F86C21 	 ldr r2,[r7,#364]
 891 07d2 D211     	 asrs r2,r2,#7
 892 07d4 C7F82421 	 str r2,[r7,#292]
 893 07d8 D7F82421 	 ldr r2,[r7,#292]
 894              	
 895 07dc 02F30702 	 ssat r2,#8,r2
 896              	
 897              	 .thumb
 898 07e0 C7F82021 	 str r2,[r7,#288]
 899 07e4 D7F82021 	 ldr r2,[r7,#288]
 900              	.LBE59:
 901 07e8 D2B2     	 uxtb r2,r2
 902 07ea 1A70     	 strb r2,[r3]
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       *pOut++ = (q7_t) (__SSAT(acc1 >> 7u, 8));
 903              	 .loc 1 420 0
 904 07ec D7F88431 	 ldr r3,[r7,#388]
 905 07f0 5A1C     	 adds r2,r3,#1
 906 07f2 C7F88421 	 str r2,[r7,#388]
 907              	.LBB60:
 908 07f6 D7F86821 	 ldr r2,[r7,#360]
 909 07fa D211     	 asrs r2,r2,#7
 910 07fc C7F81C21 	 str r2,[r7,#284]
 911 0800 D7F81C21 	 ldr r2,[r7,#284]
 912              	
 913 0804 02F30702 	 ssat r2,#8,r2
 914              	
 915              	 .thumb
 916 0808 C7F81821 	 str r2,[r7,#280]
 917 080c D7F81821 	 ldr r2,[r7,#280]
 918              	.LBE60:
 919 0810 D2B2     	 uxtb r2,r2
 920 0812 1A70     	 strb r2,[r3]
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       *pOut++ = (q7_t) (__SSAT(acc2 >> 7u, 8));
 921              	 .loc 1 421 0
 922 0814 D7F88431 	 ldr r3,[r7,#388]
 923 0818 5A1C     	 adds r2,r3,#1
 924 081a C7F88421 	 str r2,[r7,#388]
 925              	.LBB61:
 926 081e D7F86421 	 ldr r2,[r7,#356]
 927 0822 D211     	 asrs r2,r2,#7
 928 0824 C7F81421 	 str r2,[r7,#276]
 929 0828 D7F81421 	 ldr r2,[r7,#276]
 930              	
 931 082c 02F30702 	 ssat r2,#8,r2
 932              	
 933              	 .thumb
 934 0830 C7F81021 	 str r2,[r7,#272]
 935 0834 D7F81021 	 ldr r2,[r7,#272]
 936              	.LBE61:
 937 0838 D2B2     	 uxtb r2,r2
 938 083a 1A70     	 strb r2,[r3]
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       *pOut++ = (q7_t) (__SSAT(acc3 >> 7u, 8));
 939              	 .loc 1 422 0
 940 083c D7F88431 	 ldr r3,[r7,#388]
 941 0840 5A1C     	 adds r2,r3,#1
 942 0842 C7F88421 	 str r2,[r7,#388]
 943              	.LBB62:
 944 0846 D7F86021 	 ldr r2,[r7,#352]
 945 084a D211     	 asrs r2,r2,#7
 946 084c C7F80C21 	 str r2,[r7,#268]
 947 0850 D7F80C21 	 ldr r2,[r7,#268]
 948              	
 949 0854 02F30702 	 ssat r2,#8,r2
 950              	
 951              	 .thumb
 952 0858 C7F80821 	 str r2,[r7,#264]
 953 085c D7F80821 	 ldr r2,[r7,#264]
 954              	.LBE62:
 955 0860 D2B2     	 uxtb r2,r2
 956 0862 1A70     	 strb r2,[r3]
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Increment the pointer pIn1 index, count by 4 */
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       count += 4u;
 957              	 .loc 1 425 0
 958 0864 D7F85831 	 ldr r3,[r7,#344]
 959 0868 0433     	 adds r3,r3,#4
 960 086a C7F85831 	 str r3,[r7,#344]
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       px = pIn1 + count;
 961              	 .loc 1 428 0
 962 086e D7F88C21 	 ldr r2,[r7,#396]
 963 0872 D7F85831 	 ldr r3,[r7,#344]
 964 0876 1344     	 add r3,r3,r2
 965 0878 C7F88031 	 str r3,[r7,#384]
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       py = pSrc2;
 966              	 .loc 1 429 0
 967 087c D7F82C31 	 ldr r3,[r7,#300]
 968 0880 C7F87C31 	 str r3,[r7,#380]
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Decrement the loop counter */
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       blkCnt--;
 969              	 .loc 1 432 0
 970 0884 D7F85431 	 ldr r3,[r7,#340]
 971 0888 013B     	 subs r3,r3,#1
 972 088a C7F85431 	 str r3,[r7,#340]
 973              	.L13:
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 974              	 .loc 1 258 0
 975 088e D7F85431 	 ldr r3,[r7,#340]
 976 0892 002B     	 cmp r3,#0
 977 0894 7FF42FAD 	 bne .L25
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     }
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****      ** No loop unrolling is used. */
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     blkCnt = blockSize2 % 0x4u;
 978              	 .loc 1 437 0
 979 0898 D7F84431 	 ldr r3,[r7,#324]
 980 089c 03F00303 	 and r3,r3,#3
 981 08a0 C7F85431 	 str r3,[r7,#340]
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     while (blkCnt > 0u)
 982              	 .loc 1 439 0
 983 08a4 10E1     	 b .L26
 984              	.L33:
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Accumulator is made zero for every iteration */
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       sum = 0;
 985              	 .loc 1 442 0
 986 08a6 0023     	 movs r3,#0
 987 08a8 C7F87031 	 str r3,[r7,#368]
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       k = srcBLen >> 2u;
 988              	 .loc 1 445 0
 989 08ac 3B46     	 mov r3,r7
 990 08ae 1B68     	 ldr r3,[r3]
 991 08b0 9B08     	 lsrs r3,r3,#2
 992 08b2 C7F85C31 	 str r3,[r7,#348]
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       while (k > 0u)
 993              	 .loc 1 449 0
 994 08b6 B4E0     	 b .L27
 995              	.L30:
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       {
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Reading two inputs of SrcA buffer and packing */
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) * px++;
 996              	 .loc 1 453 0
 997 08b8 D7F88031 	 ldr r3,[r7,#384]
 998 08bc 5A1C     	 adds r2,r3,#1
 999 08be C7F88021 	 str r2,[r7,#384]
 1000 08c2 1B78     	 ldrb r3,[r3]
 1001 08c4 5BB2     	 sxtb r3,r3
 1002 08c6 A7F84231 	 strh r3,[r7,#322]
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) * px++;
 1003              	 .loc 1 454 0
 1004 08ca D7F88031 	 ldr r3,[r7,#384]
 1005 08ce 5A1C     	 adds r2,r3,#1
 1006 08d0 C7F88021 	 str r2,[r7,#384]
 1007 08d4 1B78     	 ldrb r3,[r3]
 1008 08d6 5BB2     	 sxtb r3,r3
 1009 08d8 A7F84031 	 strh r3,[r7,#320]
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 1010              	 .loc 1 455 0
 1011 08dc B7F94231 	 ldrsh r3,[r7,#322]
 1012 08e0 9AB2     	 uxth r2,r3
 1013 08e2 B7F94031 	 ldrsh r3,[r7,#320]
 1014 08e6 1B04     	 lsls r3,r3,#16
 1015 08e8 1343     	 orrs r3,r3,r2
 1016 08ea C7F83C31 	 str r3,[r7,#316]
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Reading two inputs of SrcB buffer and packing */
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) * py--;
 1017              	 .loc 1 458 0
 1018 08ee D7F87C31 	 ldr r3,[r7,#380]
 1019 08f2 5A1E     	 subs r2,r3,#1
 1020 08f4 C7F87C21 	 str r2,[r7,#380]
 1021 08f8 1B78     	 ldrb r3,[r3]
 1022 08fa 5BB2     	 sxtb r3,r3
 1023 08fc A7F84231 	 strh r3,[r7,#322]
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) * py--;
 1024              	 .loc 1 459 0
 1025 0900 D7F87C31 	 ldr r3,[r7,#380]
 1026 0904 5A1E     	 subs r2,r3,#1
 1027 0906 C7F87C21 	 str r2,[r7,#380]
 1028 090a 1B78     	 ldrb r3,[r3]
 1029 090c 5BB2     	 sxtb r3,r3
 1030 090e A7F84031 	 strh r3,[r7,#320]
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 1031              	 .loc 1 460 0
 1032 0912 B7F94231 	 ldrsh r3,[r7,#322]
 1033 0916 9AB2     	 uxth r2,r3
 1034 0918 B7F94031 	 ldrsh r3,[r7,#320]
 1035 091c 1B04     	 lsls r3,r3,#16
 1036 091e 1343     	 orrs r3,r3,r2
 1037 0920 C7F83831 	 str r3,[r7,#312]
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Perform the multiply-accumulates */
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         sum = __SMLAD(input1, input2, sum);
 1038              	 .loc 1 463 0
 1039 0924 D7F83C01 	 ldr r0,[r7,#316]
 1040 0928 D7F83811 	 ldr r1,[r7,#312]
 1041 092c D7F87021 	 ldr r2,[r7,#368]
 1042 0930 07F14C03 	 add r3,r7,#76
 1043 0934 1860     	 str r0,[r3]
 1044 0936 07F14803 	 add r3,r7,#72
 1045 093a 1960     	 str r1,[r3]
 1046 093c 07F14403 	 add r3,r7,#68
 1047 0940 1A60     	 str r2,[r3]
 1048              	.LBB63:
 1049              	.LBB64:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1050              	 .loc 2 1724 0
 1051 0942 07F14C03 	 add r3,r7,#76
 1052 0946 1B68     	 ldr r3,[r3]
 1053 0948 07F14802 	 add r2,r7,#72
 1054 094c 1268     	 ldr r2,[r2]
 1055 094e 07F14401 	 add r1,r7,#68
 1056 0952 0968     	 ldr r1,[r1]
 1057              	
 1058 0954 23FB0212 	 smlad r2,r3,r2,r1
 1059              	
 1060              	 .thumb
 1061 0958 07F14003 	 add r3,r7,#64
 1062 095c 1A60     	 str r2,[r3]
 1063              	 .loc 2 1725 0
 1064 095e 07F14003 	 add r3,r7,#64
 1065 0962 1B68     	 ldr r3,[r3]
 1066              	.LBE64:
 1067              	.LBE63:
 1068              	 .loc 1 463 0
 1069 0964 C7F87031 	 str r3,[r7,#368]
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Reading two inputs of SrcA buffer and packing */
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) * px++;
 1070              	 .loc 1 466 0
 1071 0968 D7F88031 	 ldr r3,[r7,#384]
 1072 096c 5A1C     	 adds r2,r3,#1
 1073 096e C7F88021 	 str r2,[r7,#384]
 1074 0972 1B78     	 ldrb r3,[r3]
 1075 0974 5BB2     	 sxtb r3,r3
 1076 0976 A7F84231 	 strh r3,[r7,#322]
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) * px++;
 1077              	 .loc 1 467 0
 1078 097a D7F88031 	 ldr r3,[r7,#384]
 1079 097e 5A1C     	 adds r2,r3,#1
 1080 0980 C7F88021 	 str r2,[r7,#384]
 1081 0984 1B78     	 ldrb r3,[r3]
 1082 0986 5BB2     	 sxtb r3,r3
 1083 0988 A7F84031 	 strh r3,[r7,#320]
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 1084              	 .loc 1 468 0
 1085 098c B7F94231 	 ldrsh r3,[r7,#322]
 1086 0990 9AB2     	 uxth r2,r3
 1087 0992 B7F94031 	 ldrsh r3,[r7,#320]
 1088 0996 1B04     	 lsls r3,r3,#16
 1089 0998 1343     	 orrs r3,r3,r2
 1090 099a C7F83C31 	 str r3,[r7,#316]
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Reading two inputs of SrcB buffer and packing */
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in1 = (q15_t) * py--;
 1091              	 .loc 1 471 0
 1092 099e D7F87C31 	 ldr r3,[r7,#380]
 1093 09a2 5A1E     	 subs r2,r3,#1
 1094 09a4 C7F87C21 	 str r2,[r7,#380]
 1095 09a8 1B78     	 ldrb r3,[r3]
 1096 09aa 5BB2     	 sxtb r3,r3
 1097 09ac A7F84231 	 strh r3,[r7,#322]
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         in2 = (q15_t) * py--;
 1098              	 .loc 1 472 0
 1099 09b0 D7F87C31 	 ldr r3,[r7,#380]
 1100 09b4 5A1E     	 subs r2,r3,#1
 1101 09b6 C7F87C21 	 str r2,[r7,#380]
 1102 09ba 1B78     	 ldrb r3,[r3]
 1103 09bc 5BB2     	 sxtb r3,r3
 1104 09be A7F84031 	 strh r3,[r7,#320]
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 1105              	 .loc 1 473 0
 1106 09c2 B7F94231 	 ldrsh r3,[r7,#322]
 1107 09c6 9AB2     	 uxth r2,r3
 1108 09c8 B7F94031 	 ldrsh r3,[r7,#320]
 1109 09cc 1B04     	 lsls r3,r3,#16
 1110 09ce 1343     	 orrs r3,r3,r2
 1111 09d0 C7F83831 	 str r3,[r7,#312]
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Perform the multiply-accumulates */
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         sum = __SMLAD(input1, input2, sum);
 1112              	 .loc 1 476 0
 1113 09d4 D7F83C01 	 ldr r0,[r7,#316]
 1114 09d8 D7F83811 	 ldr r1,[r7,#312]
 1115 09dc D7F87021 	 ldr r2,[r7,#368]
 1116 09e0 07F13C03 	 add r3,r7,#60
 1117 09e4 1860     	 str r0,[r3]
 1118 09e6 07F13803 	 add r3,r7,#56
 1119 09ea 1960     	 str r1,[r3]
 1120 09ec 07F13403 	 add r3,r7,#52
 1121 09f0 1A60     	 str r2,[r3]
 1122              	.LBB65:
 1123              	.LBB66:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1124              	 .loc 2 1724 0
 1125 09f2 07F13C03 	 add r3,r7,#60
 1126 09f6 1B68     	 ldr r3,[r3]
 1127 09f8 07F13802 	 add r2,r7,#56
 1128 09fc 1268     	 ldr r2,[r2]
 1129 09fe 07F13401 	 add r1,r7,#52
 1130 0a02 0968     	 ldr r1,[r1]
 1131              	
 1132 0a04 23FB0212 	 smlad r2,r3,r2,r1
 1133              	
 1134              	 .thumb
 1135 0a08 07F13003 	 add r3,r7,#48
 1136 0a0c 1A60     	 str r2,[r3]
 1137              	 .loc 2 1725 0
 1138 0a0e 07F13003 	 add r3,r7,#48
 1139 0a12 1B68     	 ldr r3,[r3]
 1140              	.LBE66:
 1141              	.LBE65:
 1142              	 .loc 1 476 0
 1143 0a14 C7F87031 	 str r3,[r7,#368]
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Decrement the loop counter */
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         k--;
 1144              	 .loc 1 479 0
 1145 0a18 D7F85C31 	 ldr r3,[r7,#348]
 1146 0a1c 013B     	 subs r3,r3,#1
 1147 0a1e C7F85C31 	 str r3,[r7,#348]
 1148              	.L27:
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       {
 1149              	 .loc 1 449 0
 1150 0a22 D7F85C31 	 ldr r3,[r7,#348]
 1151 0a26 002B     	 cmp r3,#0
 1152 0a28 7FF446AF 	 bne .L30
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       }
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****        ** No loop unrolling is used. */
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       k = srcBLen % 0x4u;
 1153              	 .loc 1 484 0
 1154 0a2c 3B46     	 mov r3,r7
 1155 0a2e 1B68     	 ldr r3,[r3]
 1156 0a30 03F00303 	 and r3,r3,#3
 1157 0a34 C7F85C31 	 str r3,[r7,#348]
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       while (k > 0u)
 1158              	 .loc 1 486 0
 1159 0a38 19E0     	 b .L31
 1160              	.L32:
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       {
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Perform the multiply-accumulates */
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         sum += ((q15_t) * px++ * *py--);
 1161              	 .loc 1 489 0
 1162 0a3a D7F88031 	 ldr r3,[r7,#384]
 1163 0a3e 5A1C     	 adds r2,r3,#1
 1164 0a40 C7F88021 	 str r2,[r7,#384]
 1165 0a44 1B78     	 ldrb r3,[r3]
 1166 0a46 5AB2     	 sxtb r2,r3
 1167 0a48 D7F87C31 	 ldr r3,[r7,#380]
 1168 0a4c 591E     	 subs r1,r3,#1
 1169 0a4e C7F87C11 	 str r1,[r7,#380]
 1170 0a52 1B78     	 ldrb r3,[r3]
 1171 0a54 5BB2     	 sxtb r3,r3
 1172 0a56 03FB02F3 	 mul r3,r3,r2
 1173 0a5a D7F87021 	 ldr r2,[r7,#368]
 1174 0a5e 1344     	 add r3,r3,r2
 1175 0a60 C7F87031 	 str r3,[r7,#368]
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Decrement the loop counter */
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         k--;
 1176              	 .loc 1 492 0
 1177 0a64 D7F85C31 	 ldr r3,[r7,#348]
 1178 0a68 013B     	 subs r3,r3,#1
 1179 0a6a C7F85C31 	 str r3,[r7,#348]
 1180              	.L31:
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       {
 1181              	 .loc 1 486 0
 1182 0a6e D7F85C31 	 ldr r3,[r7,#348]
 1183 0a72 002B     	 cmp r3,#0
 1184 0a74 E1D1     	 bne .L32
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       }
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Store the result in the accumulator in the destination buffer. */
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       *pOut++ = (q7_t) (__SSAT(sum >> 7u, 8));
 1185              	 .loc 1 496 0
 1186 0a76 D7F88431 	 ldr r3,[r7,#388]
 1187 0a7a 5A1C     	 adds r2,r3,#1
 1188 0a7c C7F88421 	 str r2,[r7,#388]
 1189              	.LBB67:
 1190 0a80 D7F87021 	 ldr r2,[r7,#368]
 1191 0a84 D211     	 asrs r2,r2,#7
 1192 0a86 C7F80421 	 str r2,[r7,#260]
 1193 0a8a D7F80421 	 ldr r2,[r7,#260]
 1194              	
 1195 0a8e 02F30702 	 ssat r2,#8,r2
 1196              	
 1197              	 .thumb
 1198 0a92 C7F80021 	 str r2,[r7,#256]
 1199 0a96 D7F80021 	 ldr r2,[r7,#256]
 1200              	.LBE67:
 1201 0a9a D2B2     	 uxtb r2,r2
 1202 0a9c 1A70     	 strb r2,[r3]
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Increment the pointer pIn1 index, count by 1 */
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       count++;
 1203              	 .loc 1 499 0
 1204 0a9e D7F85831 	 ldr r3,[r7,#344]
 1205 0aa2 0133     	 adds r3,r3,#1
 1206 0aa4 C7F85831 	 str r3,[r7,#344]
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       px = pIn1 + count;
 1207              	 .loc 1 502 0
 1208 0aa8 D7F88C21 	 ldr r2,[r7,#396]
 1209 0aac D7F85831 	 ldr r3,[r7,#344]
 1210 0ab0 1344     	 add r3,r3,r2
 1211 0ab2 C7F88031 	 str r3,[r7,#384]
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       py = pSrc2;
 1212              	 .loc 1 503 0
 1213 0ab6 D7F82C31 	 ldr r3,[r7,#300]
 1214 0aba C7F87C31 	 str r3,[r7,#380]
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Decrement the loop counter */
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       blkCnt--;
 1215              	 .loc 1 506 0
 1216 0abe D7F85431 	 ldr r3,[r7,#340]
 1217 0ac2 013B     	 subs r3,r3,#1
 1218 0ac4 C7F85431 	 str r3,[r7,#340]
 1219              	.L26:
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 1220              	 .loc 1 439 0
 1221 0ac8 D7F85431 	 ldr r3,[r7,#340]
 1222 0acc 002B     	 cmp r3,#0
 1223 0ace 7FF4EAAE 	 bne .L33
 1224 0ad2 57E0     	 b .L34
 1225              	.L12:
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     }
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   }
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   else
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   {
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* If the srcBLen is not a multiple of 4,
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****      * the blockSize2 loop cannot be unrolled by 4 */
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     blkCnt = blockSize2;
 1226              	 .loc 1 513 0
 1227 0ad4 D7F84431 	 ldr r3,[r7,#324]
 1228 0ad8 C7F85431 	 str r3,[r7,#340]
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     while (blkCnt > 0u)
 1229              	 .loc 1 515 0
 1230 0adc 4EE0     	 b .L35
 1231              	.L38:
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Accumulator is made zero for every iteration */
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       sum = 0;
 1232              	 .loc 1 518 0
 1233 0ade 0023     	 movs r3,#0
 1234 0ae0 C7F87031 	 str r3,[r7,#368]
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* srcBLen number of MACS should be performed */
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       k = srcBLen;
 1235              	 .loc 1 521 0
 1236 0ae4 3B46     	 mov r3,r7
 1237 0ae6 1B68     	 ldr r3,[r3]
 1238 0ae8 C7F85C31 	 str r3,[r7,#348]
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       while (k > 0u)
 1239              	 .loc 1 523 0
 1240 0aec 19E0     	 b .L36
 1241              	.L37:
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       {
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Perform the multiply-accumulate */
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         sum += ((q15_t) * px++ * *py--);
 1242              	 .loc 1 526 0
 1243 0aee D7F88031 	 ldr r3,[r7,#384]
 1244 0af2 5A1C     	 adds r2,r3,#1
 1245 0af4 C7F88021 	 str r2,[r7,#384]
 1246 0af8 1B78     	 ldrb r3,[r3]
 1247 0afa 5AB2     	 sxtb r2,r3
 1248 0afc D7F87C31 	 ldr r3,[r7,#380]
 1249 0b00 591E     	 subs r1,r3,#1
 1250 0b02 C7F87C11 	 str r1,[r7,#380]
 1251 0b06 1B78     	 ldrb r3,[r3]
 1252 0b08 5BB2     	 sxtb r3,r3
 1253 0b0a 03FB02F3 	 mul r3,r3,r2
 1254 0b0e D7F87021 	 ldr r2,[r7,#368]
 1255 0b12 1344     	 add r3,r3,r2
 1256 0b14 C7F87031 	 str r3,[r7,#368]
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* Decrement the loop counter */
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         k--;
 1257              	 .loc 1 529 0
 1258 0b18 D7F85C31 	 ldr r3,[r7,#348]
 1259 0b1c 013B     	 subs r3,r3,#1
 1260 0b1e C7F85C31 	 str r3,[r7,#348]
 1261              	.L36:
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       {
 1262              	 .loc 1 523 0
 1263 0b22 D7F85C31 	 ldr r3,[r7,#348]
 1264 0b26 002B     	 cmp r3,#0
 1265 0b28 E1D1     	 bne .L37
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       }
 531:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 532:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Store the result in the accumulator in the destination buffer. */
 533:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       *pOut++ = (q7_t) (__SSAT(sum >> 7u, 8));
 1266              	 .loc 1 533 0
 1267 0b2a D7F88431 	 ldr r3,[r7,#388]
 1268 0b2e 5A1C     	 adds r2,r3,#1
 1269 0b30 C7F88421 	 str r2,[r7,#388]
 1270              	.LBB68:
 1271 0b34 D7F87021 	 ldr r2,[r7,#368]
 1272 0b38 D211     	 asrs r2,r2,#7
 1273 0b3a C7F8FC20 	 str r2,[r7,#252]
 1274 0b3e D7F8FC20 	 ldr r2,[r7,#252]
 1275              	
 1276 0b42 02F30702 	 ssat r2,#8,r2
 1277              	
 1278              	 .thumb
 1279 0b46 C7F8F820 	 str r2,[r7,#248]
 1280 0b4a D7F8F820 	 ldr r2,[r7,#248]
 1281              	.LBE68:
 1282 0b4e D2B2     	 uxtb r2,r2
 1283 0b50 1A70     	 strb r2,[r3]
 534:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 535:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Increment the MAC count */
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       count++;
 1284              	 .loc 1 536 0
 1285 0b52 D7F85831 	 ldr r3,[r7,#344]
 1286 0b56 0133     	 adds r3,r3,#1
 1287 0b58 C7F85831 	 str r3,[r7,#344]
 537:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 539:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       px = pIn1 + count;
 1288              	 .loc 1 539 0
 1289 0b5c D7F88C21 	 ldr r2,[r7,#396]
 1290 0b60 D7F85831 	 ldr r3,[r7,#344]
 1291 0b64 1344     	 add r3,r3,r2
 1292 0b66 C7F88031 	 str r3,[r7,#384]
 540:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       py = pSrc2;
 1293              	 .loc 1 540 0
 1294 0b6a D7F82C31 	 ldr r3,[r7,#300]
 1295 0b6e C7F87C31 	 str r3,[r7,#380]
 541:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Decrement the loop counter */
 543:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       blkCnt--;
 1296              	 .loc 1 543 0
 1297 0b72 D7F85431 	 ldr r3,[r7,#340]
 1298 0b76 013B     	 subs r3,r3,#1
 1299 0b78 C7F85431 	 str r3,[r7,#340]
 1300              	.L35:
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 1301              	 .loc 1 515 0
 1302 0b7c D7F85431 	 ldr r3,[r7,#340]
 1303 0b80 002B     	 cmp r3,#0
 1304 0b82 ACD1     	 bne .L38
 1305              	.L34:
 544:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     }
 545:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   }
 546:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 548:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* --------------------------
 549:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * Initializations of stage3
 550:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * -------------------------*/
 551:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 552:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[srcAL
 553:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[srcAL
 554:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * ....
 555:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 556:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * sum +=  x[srcALen-1] * y[srcBLen-1]
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    */
 558:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 559:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
 560:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****      The blockSize3 variable holds the number of MAC operations performed */
 561:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 562:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* Working pointer of inputA */
 563:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   pSrc1 = pIn1 + (srcALen - (srcBLen - 1u));
 1306              	 .loc 1 563 0
 1307 0b84 07F10802 	 add r2,r7,#8
 1308 0b88 3B46     	 mov r3,r7
 1309 0b8a 1268     	 ldr r2,[r2]
 1310 0b8c 1B68     	 ldr r3,[r3]
 1311 0b8e D31A     	 subs r3,r2,r3
 1312 0b90 0133     	 adds r3,r3,#1
 1313 0b92 D7F88C21 	 ldr r2,[r7,#396]
 1314 0b96 1344     	 add r3,r3,r2
 1315 0b98 C7F87831 	 str r3,[r7,#376]
 564:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   px = pSrc1;
 1316              	 .loc 1 564 0
 1317 0b9c D7F87831 	 ldr r3,[r7,#376]
 1318 0ba0 C7F88031 	 str r3,[r7,#384]
 565:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 566:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* Working pointer of inputB */
 567:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 1319              	 .loc 1 567 0
 1320 0ba4 3B46     	 mov r3,r7
 1321 0ba6 1B68     	 ldr r3,[r3]
 1322 0ba8 013B     	 subs r3,r3,#1
 1323 0baa D7F88821 	 ldr r2,[r7,#392]
 1324 0bae 1344     	 add r3,r3,r2
 1325 0bb0 C7F82C31 	 str r3,[r7,#300]
 568:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   py = pSrc2;
 1326              	 .loc 1 568 0
 1327 0bb4 D7F82C31 	 ldr r3,[r7,#300]
 1328 0bb8 C7F87C31 	 str r3,[r7,#380]
 569:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 570:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* -------------------
 571:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * Stage3 process
 572:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****    * ------------------*/
 573:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 574:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   while (blockSize3 > 0u)
 1329              	 .loc 1 574 0
 1330 0bbc 0DE1     	 b .L39
 1331              	.L46:
 575:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   {
 576:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Accumulator is made zero for every iteration */
 577:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     sum = 0;
 1332              	 .loc 1 577 0
 1333 0bbe 0023     	 movs r3,#0
 1334 0bc0 C7F87031 	 str r3,[r7,#368]
 578:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 579:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 580:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     k = blockSize3 >> 2u;
 1335              	 .loc 1 580 0
 1336 0bc4 D7F84C31 	 ldr r3,[r7,#332]
 1337 0bc8 9B08     	 lsrs r3,r3,#2
 1338 0bca C7F85C31 	 str r3,[r7,#348]
 581:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 582:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 583:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 584:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     while (k > 0u)
 1339              	 .loc 1 584 0
 1340 0bce B4E0     	 b .L40
 1341              	.L43:
 585:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 586:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Reading two inputs, x[srcALen - srcBLen + 1] and x[srcALen - srcBLen + 2] of SrcA buffer a
 587:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in1 = (q15_t) * px++;
 1342              	 .loc 1 587 0
 1343 0bd0 D7F88031 	 ldr r3,[r7,#384]
 1344 0bd4 5A1C     	 adds r2,r3,#1
 1345 0bd6 C7F88021 	 str r2,[r7,#384]
 1346 0bda 1B78     	 ldrb r3,[r3]
 1347 0bdc 5BB2     	 sxtb r3,r3
 1348 0bde A7F84231 	 strh r3,[r7,#322]
 588:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in2 = (q15_t) * px++;
 1349              	 .loc 1 588 0
 1350 0be2 D7F88031 	 ldr r3,[r7,#384]
 1351 0be6 5A1C     	 adds r2,r3,#1
 1352 0be8 C7F88021 	 str r2,[r7,#384]
 1353 0bec 1B78     	 ldrb r3,[r3]
 1354 0bee 5BB2     	 sxtb r3,r3
 1355 0bf0 A7F84031 	 strh r3,[r7,#320]
 589:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 1356              	 .loc 1 589 0
 1357 0bf4 B7F94231 	 ldrsh r3,[r7,#322]
 1358 0bf8 9AB2     	 uxth r2,r3
 1359 0bfa B7F94031 	 ldrsh r3,[r7,#320]
 1360 0bfe 1B04     	 lsls r3,r3,#16
 1361 0c00 1343     	 orrs r3,r3,r2
 1362 0c02 C7F83C31 	 str r3,[r7,#316]
 590:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 591:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Reading two inputs, y[srcBLen - 1] and y[srcBLen - 2] of SrcB buffer and packing */
 592:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in1 = (q15_t) * py--;
 1363              	 .loc 1 592 0
 1364 0c06 D7F87C31 	 ldr r3,[r7,#380]
 1365 0c0a 5A1E     	 subs r2,r3,#1
 1366 0c0c C7F87C21 	 str r2,[r7,#380]
 1367 0c10 1B78     	 ldrb r3,[r3]
 1368 0c12 5BB2     	 sxtb r3,r3
 1369 0c14 A7F84231 	 strh r3,[r7,#322]
 593:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in2 = (q15_t) * py--;
 1370              	 .loc 1 593 0
 1371 0c18 D7F87C31 	 ldr r3,[r7,#380]
 1372 0c1c 5A1E     	 subs r2,r3,#1
 1373 0c1e C7F87C21 	 str r2,[r7,#380]
 1374 0c22 1B78     	 ldrb r3,[r3]
 1375 0c24 5BB2     	 sxtb r3,r3
 1376 0c26 A7F84031 	 strh r3,[r7,#320]
 594:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 1377              	 .loc 1 594 0
 1378 0c2a B7F94231 	 ldrsh r3,[r7,#322]
 1379 0c2e 9AB2     	 uxth r2,r3
 1380 0c30 B7F94031 	 ldrsh r3,[r7,#320]
 1381 0c34 1B04     	 lsls r3,r3,#16
 1382 0c36 1343     	 orrs r3,r3,r2
 1383 0c38 C7F83831 	 str r3,[r7,#312]
 595:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 596:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* sum += x[srcALen - srcBLen + 1] * y[srcBLen - 1] */
 597:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* sum += x[srcALen - srcBLen + 2] * y[srcBLen - 2] */
 598:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       sum = __SMLAD(input1, input2, sum);
 1384              	 .loc 1 598 0
 1385 0c3c D7F83C01 	 ldr r0,[r7,#316]
 1386 0c40 D7F83811 	 ldr r1,[r7,#312]
 1387 0c44 D7F87021 	 ldr r2,[r7,#368]
 1388 0c48 07F12C03 	 add r3,r7,#44
 1389 0c4c 1860     	 str r0,[r3]
 1390 0c4e 07F12803 	 add r3,r7,#40
 1391 0c52 1960     	 str r1,[r3]
 1392 0c54 07F12403 	 add r3,r7,#36
 1393 0c58 1A60     	 str r2,[r3]
 1394              	.LBB69:
 1395              	.LBB70:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1396              	 .loc 2 1724 0
 1397 0c5a 07F12C03 	 add r3,r7,#44
 1398 0c5e 1B68     	 ldr r3,[r3]
 1399 0c60 07F12802 	 add r2,r7,#40
 1400 0c64 1268     	 ldr r2,[r2]
 1401 0c66 07F12401 	 add r1,r7,#36
 1402 0c6a 0968     	 ldr r1,[r1]
 1403              	
 1404 0c6c 23FB0212 	 smlad r2,r3,r2,r1
 1405              	
 1406              	 .thumb
 1407 0c70 07F12003 	 add r3,r7,#32
 1408 0c74 1A60     	 str r2,[r3]
 1409              	 .loc 2 1725 0
 1410 0c76 07F12003 	 add r3,r7,#32
 1411 0c7a 1B68     	 ldr r3,[r3]
 1412              	.LBE70:
 1413              	.LBE69:
 1414              	 .loc 1 598 0
 1415 0c7c C7F87031 	 str r3,[r7,#368]
 599:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 600:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Reading two inputs, x[srcALen - srcBLen + 3] and x[srcALen - srcBLen + 4] of SrcA buffer a
 601:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in1 = (q15_t) * px++;
 1416              	 .loc 1 601 0
 1417 0c80 D7F88031 	 ldr r3,[r7,#384]
 1418 0c84 5A1C     	 adds r2,r3,#1
 1419 0c86 C7F88021 	 str r2,[r7,#384]
 1420 0c8a 1B78     	 ldrb r3,[r3]
 1421 0c8c 5BB2     	 sxtb r3,r3
 1422 0c8e A7F84231 	 strh r3,[r7,#322]
 602:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in2 = (q15_t) * px++;
 1423              	 .loc 1 602 0
 1424 0c92 D7F88031 	 ldr r3,[r7,#384]
 1425 0c96 5A1C     	 adds r2,r3,#1
 1426 0c98 C7F88021 	 str r2,[r7,#384]
 1427 0c9c 1B78     	 ldrb r3,[r3]
 1428 0c9e 5BB2     	 sxtb r3,r3
 1429 0ca0 A7F84031 	 strh r3,[r7,#320]
 603:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 1430              	 .loc 1 603 0
 1431 0ca4 B7F94231 	 ldrsh r3,[r7,#322]
 1432 0ca8 9AB2     	 uxth r2,r3
 1433 0caa B7F94031 	 ldrsh r3,[r7,#320]
 1434 0cae 1B04     	 lsls r3,r3,#16
 1435 0cb0 1343     	 orrs r3,r3,r2
 1436 0cb2 C7F83C31 	 str r3,[r7,#316]
 604:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 605:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Reading two inputs, y[srcBLen - 3] and y[srcBLen - 4] of SrcB buffer and packing */
 606:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in1 = (q15_t) * py--;
 1437              	 .loc 1 606 0
 1438 0cb6 D7F87C31 	 ldr r3,[r7,#380]
 1439 0cba 5A1E     	 subs r2,r3,#1
 1440 0cbc C7F87C21 	 str r2,[r7,#380]
 1441 0cc0 1B78     	 ldrb r3,[r3]
 1442 0cc2 5BB2     	 sxtb r3,r3
 1443 0cc4 A7F84231 	 strh r3,[r7,#322]
 607:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       in2 = (q15_t) * py--;
 1444              	 .loc 1 607 0
 1445 0cc8 D7F87C31 	 ldr r3,[r7,#380]
 1446 0ccc 5A1E     	 subs r2,r3,#1
 1447 0cce C7F87C21 	 str r2,[r7,#380]
 1448 0cd2 1B78     	 ldrb r3,[r3]
 1449 0cd4 5BB2     	 sxtb r3,r3
 1450 0cd6 A7F84031 	 strh r3,[r7,#320]
 608:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16u);
 1451              	 .loc 1 608 0
 1452 0cda B7F94231 	 ldrsh r3,[r7,#322]
 1453 0cde 9AB2     	 uxth r2,r3
 1454 0ce0 B7F94031 	 ldrsh r3,[r7,#320]
 1455 0ce4 1B04     	 lsls r3,r3,#16
 1456 0ce6 1343     	 orrs r3,r3,r2
 1457 0ce8 C7F83831 	 str r3,[r7,#312]
 609:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 610:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* sum += x[srcALen - srcBLen + 3] * y[srcBLen - 3] */
 611:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* sum += x[srcALen - srcBLen + 4] * y[srcBLen - 4] */
 612:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       sum = __SMLAD(input1, input2, sum);
 1458              	 .loc 1 612 0
 1459 0cec D7F83C01 	 ldr r0,[r7,#316]
 1460 0cf0 D7F83811 	 ldr r1,[r7,#312]
 1461 0cf4 D7F87021 	 ldr r2,[r7,#368]
 1462 0cf8 07F11C03 	 add r3,r7,#28
 1463 0cfc 1860     	 str r0,[r3]
 1464 0cfe 07F11803 	 add r3,r7,#24
 1465 0d02 1960     	 str r1,[r3]
 1466 0d04 07F11403 	 add r3,r7,#20
 1467 0d08 1A60     	 str r2,[r3]
 1468              	.LBB71:
 1469              	.LBB72:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1470              	 .loc 2 1724 0
 1471 0d0a 07F11C03 	 add r3,r7,#28
 1472 0d0e 1B68     	 ldr r3,[r3]
 1473 0d10 07F11802 	 add r2,r7,#24
 1474 0d14 1268     	 ldr r2,[r2]
 1475 0d16 07F11401 	 add r1,r7,#20
 1476 0d1a 0968     	 ldr r1,[r1]
 1477              	
 1478 0d1c 23FB0212 	 smlad r2,r3,r2,r1
 1479              	
 1480              	 .thumb
 1481 0d20 07F11003 	 add r3,r7,#16
 1482 0d24 1A60     	 str r2,[r3]
 1483              	 .loc 2 1725 0
 1484 0d26 07F11003 	 add r3,r7,#16
 1485 0d2a 1B68     	 ldr r3,[r3]
 1486              	.LBE72:
 1487              	.LBE71:
 1488              	 .loc 1 612 0
 1489 0d2c C7F87031 	 str r3,[r7,#368]
 613:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 614:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Decrement the loop counter */
 615:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       k--;
 1490              	 .loc 1 615 0
 1491 0d30 D7F85C31 	 ldr r3,[r7,#348]
 1492 0d34 013B     	 subs r3,r3,#1
 1493 0d36 C7F85C31 	 str r3,[r7,#348]
 1494              	.L40:
 584:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 1495              	 .loc 1 584 0
 1496 0d3a D7F85C31 	 ldr r3,[r7,#348]
 1497 0d3e 002B     	 cmp r3,#0
 1498 0d40 7FF446AF 	 bne .L43
 616:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     }
 617:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 618:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* If the blockSize3 is not a multiple of 4, compute any remaining MACs here.
 619:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****      ** No loop unrolling is used. */
 620:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     k = blockSize3 % 0x4u;
 1499              	 .loc 1 620 0
 1500 0d44 D7F84C31 	 ldr r3,[r7,#332]
 1501 0d48 03F00303 	 and r3,r3,#3
 1502 0d4c C7F85C31 	 str r3,[r7,#348]
 621:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 622:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     while (k > 0u)
 1503              	 .loc 1 622 0
 1504 0d50 19E0     	 b .L44
 1505              	.L45:
 623:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 624:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Perform the multiply-accumulates */
 625:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       sum += ((q15_t) * px++ * *py--);
 1506              	 .loc 1 625 0
 1507 0d52 D7F88031 	 ldr r3,[r7,#384]
 1508 0d56 5A1C     	 adds r2,r3,#1
 1509 0d58 C7F88021 	 str r2,[r7,#384]
 1510 0d5c 1B78     	 ldrb r3,[r3]
 1511 0d5e 5AB2     	 sxtb r2,r3
 1512 0d60 D7F87C31 	 ldr r3,[r7,#380]
 1513 0d64 591E     	 subs r1,r3,#1
 1514 0d66 C7F87C11 	 str r1,[r7,#380]
 1515 0d6a 1B78     	 ldrb r3,[r3]
 1516 0d6c 5BB2     	 sxtb r3,r3
 1517 0d6e 03FB02F3 	 mul r3,r3,r2
 1518 0d72 D7F87021 	 ldr r2,[r7,#368]
 1519 0d76 1344     	 add r3,r3,r2
 1520 0d78 C7F87031 	 str r3,[r7,#368]
 626:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 627:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Decrement the loop counter */
 628:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       k--;
 1521              	 .loc 1 628 0
 1522 0d7c D7F85C31 	 ldr r3,[r7,#348]
 1523 0d80 013B     	 subs r3,r3,#1
 1524 0d82 C7F85C31 	 str r3,[r7,#348]
 1525              	.L44:
 622:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 1526              	 .loc 1 622 0
 1527 0d86 D7F85C31 	 ldr r3,[r7,#348]
 1528 0d8a 002B     	 cmp r3,#0
 1529 0d8c E1D1     	 bne .L45
 629:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     }
 630:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 631:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Store the result in the accumulator in the destination buffer. */
 632:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     *pOut++ = (q7_t) (__SSAT(sum >> 7u, 8));
 1530              	 .loc 1 632 0
 1531 0d8e D7F88431 	 ldr r3,[r7,#388]
 1532 0d92 5A1C     	 adds r2,r3,#1
 1533 0d94 C7F88421 	 str r2,[r7,#388]
 1534              	.LBB73:
 1535 0d98 D7F87021 	 ldr r2,[r7,#368]
 1536 0d9c D211     	 asrs r2,r2,#7
 1537 0d9e C7F8F420 	 str r2,[r7,#244]
 1538 0da2 D7F8F420 	 ldr r2,[r7,#244]
 1539              	
 1540 0da6 02F30702 	 ssat r2,#8,r2
 1541              	
 1542              	 .thumb
 1543 0daa C7F8F020 	 str r2,[r7,#240]
 1544 0dae D7F8F020 	 ldr r2,[r7,#240]
 1545              	.LBE73:
 1546 0db2 D2B2     	 uxtb r2,r2
 1547 0db4 1A70     	 strb r2,[r3]
 633:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 634:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 635:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     px = ++pSrc1;
 1548              	 .loc 1 635 0
 1549 0db6 D7F87831 	 ldr r3,[r7,#376]
 1550 0dba 0133     	 adds r3,r3,#1
 1551 0dbc C7F87831 	 str r3,[r7,#376]
 1552 0dc0 D7F87831 	 ldr r3,[r7,#376]
 1553 0dc4 C7F88031 	 str r3,[r7,#384]
 636:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     py = pSrc2;
 1554              	 .loc 1 636 0
 1555 0dc8 D7F82C31 	 ldr r3,[r7,#300]
 1556 0dcc C7F87C31 	 str r3,[r7,#380]
 637:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 638:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Decrement the loop counter */
 639:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     blockSize3--;
 1557              	 .loc 1 639 0
 1558 0dd0 D7F84C31 	 ldr r3,[r7,#332]
 1559 0dd4 013B     	 subs r3,r3,#1
 1560 0dd6 C7F84C31 	 str r3,[r7,#332]
 1561              	.L39:
 574:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   {
 1562              	 .loc 1 574 0
 1563 0dda D7F84C31 	 ldr r3,[r7,#332]
 1564 0dde 002B     	 cmp r3,#0
 1565 0de0 7FF4EDAE 	 bne .L46
 640:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   }
 641:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 642:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** #else
 643:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 644:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* Run the below code for Cortex-M0 */
 645:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 646:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t *pIn1 = pSrcA;                            /* input pointer */
 647:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q7_t *pIn2 = pSrcB;                            /* coefficient pointer */
 648:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   q31_t sum;                                     /* Accumulator */
 649:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   uint32_t i, j;                                 /* loop counter */
 650:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 651:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   /* Loop to calculate output of convolution for output length number of times */
 652:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   for (i = 0; i < (srcALen + srcBLen - 1); i++)
 653:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   {
 654:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Initialize sum with zero to carry on MAC operations */
 655:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     sum = 0;
 656:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 657:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Loop to perform MAC operations according to convolution equation */
 658:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     for (j = 0; j <= i; j++)
 659:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     {
 660:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       /* Check the array limitations */
 661:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       if (((i - j) < srcBLen) && (j < srcALen))
 662:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       {
 663:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         /* z[i] += x[i-j] * y[j] */
 664:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****         sum += (q15_t) pIn1[j] * (pIn2[i - j]);
 665:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****       }
 666:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     }
 667:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 668:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     /* Store the output in the destination buffer */
 669:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****     pDst[i] = (q7_t) __SSAT((sum >> 7u), 8u);
 670:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c ****   }
 671:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 672:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** #endif /*   #if defined (ARM_MATH_DSP)        */
 673:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** 
 674:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q7.c **** }
 1566              	 .loc 1 674 0
 1567 0de4 07F5C877 	 add r7,r7,#400
 1568              	.LCFI3:
 1569              	 .cfi_def_cfa_offset 8
 1570 0de8 BD46     	 mov sp,r7
 1571              	.LCFI4:
 1572              	 .cfi_def_cfa_register 13
 1573              	 
 1574 0dea 90BC     	 pop {r4,r7}
 1575              	.LCFI5:
 1576              	 .cfi_restore 7
 1577              	 .cfi_restore 4
 1578              	 .cfi_def_cfa_offset 0
 1579 0dec 7047     	 bx lr
 1580              	 .cfi_endproc
 1581              	.LFE135:
 1583 0dee 00BF     	 .text
 1584              	.Letext0:
 1585              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1586              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1587              	 .file 5 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_q7.c
    {standard input}:20     .text.arm_conv_q7:00000000 $t
    {standard input}:25     .text.arm_conv_q7:00000000 arm_conv_q7
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
