   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_partial_opt_q7.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_partial_opt_q7,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_partial_opt_q7
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_partial_opt_q7:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Title:        arm_conv_partial_opt_q7.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Description:  Partial convolution of Q7 sequences
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @addtogroup PartialConv
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  */
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** /**
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @brief Partial convolution of Q7 sequences.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       *pSrcA points to the first input sequence.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       srcALen length of the first input sequence.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       *pSrcB points to the second input sequence.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       srcBLen length of the second input sequence.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[out]      *pDst points to the location where the output result is written.
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       firstIndex is the first output sample to start with.
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       numPoints is the number of output points to be computed.
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]      *pScratch1 points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen)
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]      *pScratch2 points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMEN
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  * \par Restrictions
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *  If the silicon does not support unaligned memory access enable the macro UNALIGNED_SUPPORT_DISA
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *	In this case input, output, scratch1 and scratch2 buffers should be aligned by 32-bit
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****  */
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** arm_status arm_conv_partial_opt_q7(
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t * pSrcA,
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   uint32_t srcALen,
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t * pSrcB,
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   uint32_t srcBLen,
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t * pDst,
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   uint32_t firstIndex,
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   uint32_t numPoints,
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q15_t * pScratch1,
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q15_t * pScratch2)
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** {
  28              	 .loc 1 74 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 90B5     	 push {r4,r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 12
  35              	 .cfi_offset 4,-12
  36              	 .cfi_offset 7,-8
  37              	 .cfi_offset 14,-4
  38 0002 CDB0     	 sub sp,sp,#308
  39              	.LCFI1:
  40              	 .cfi_def_cfa_offset 320
  41 0004 00AF     	 add r7,sp,#0
  42              	.LCFI2:
  43              	 .cfi_def_cfa_register 7
  44 0006 07F10C04 	 add r4,r7,#12
  45 000a 2060     	 str r0,[r4]
  46 000c 07F10800 	 add r0,r7,#8
  47 0010 0160     	 str r1,[r0]
  48 0012 391D     	 adds r1,r7,#4
  49 0014 0A60     	 str r2,[r1]
  50 0016 3A46     	 mov r2,r7
  51 0018 1360     	 str r3,[r2]
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q15_t *pScr2, *pScr1;                          /* Intermediate pointers for scratch pointers */
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q15_t x4;                                      /* Temporary input variable */
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t *pIn1, *pIn2;                             /* inputA and inputB pointer */
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   uint32_t j, k, blkCnt, tapCnt;                 /* loop counter */
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t *px;                                      /* Temporary input1 pointer */
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q15_t *py;                                     /* Temporary input2 pointer */
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q31_t acc0, acc1, acc2, acc3;                  /* Accumulator */
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q31_t x1, x2, x3, y1;                          /* Temporary input variables */
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   arm_status status;
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t *pOut = pDst;                             /* output pointer */
  52              	 .loc 1 85 0
  53 001a 07F11403 	 add r3,r7,#20
  54 001e D7F84021 	 ldr r2,[r7,#320]
  55 0022 1A60     	 str r2,[r3]
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t out0, out1, out2, out3;                   /* temporary variables */
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   /* Check for range of output samples to be calculated */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1u))))
  56              	 .loc 1 89 0
  57 0024 D7F84421 	 ldr r2,[r7,#324]
  58 0028 D7F84831 	 ldr r3,[r7,#328]
  59 002c 1A44     	 add r2,r2,r3
  60 002e 3946     	 mov r1,r7
  61 0030 07F10803 	 add r3,r7,#8
  62 0034 0968     	 ldr r1,[r1]
  63 0036 1B68     	 ldr r3,[r3]
  64 0038 0B44     	 add r3,r3,r1
  65 003a 013B     	 subs r3,r3,#1
  66 003c 9A42     	 cmp r2,r3
  67 003e 04D9     	 bls .L2
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   {
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     status = ARM_MATH_ARGUMENT_ERROR;
  68              	 .loc 1 92 0
  69 0040 FF23     	 movs r3,#255
  70 0042 87F8FF30 	 strb r3,[r7,#255]
  71 0046 00F02FBC 	 b .L3
  72              	.L2:
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   }
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   else
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   {
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* srcB is always made to slide across srcA. */
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     if (srcALen >= srcBLen)
  73              	 .loc 1 100 0
  74 004a 07F10802 	 add r2,r7,#8
  75 004e 3B46     	 mov r3,r7
  76 0050 1268     	 ldr r2,[r2]
  77 0052 1B68     	 ldr r3,[r3]
  78 0054 9A42     	 cmp r2,r3
  79 0056 09D3     	 bcc .L4
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputA pointer */
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pIn1 = pSrcA;
  80              	 .loc 1 103 0
  81 0058 07F10C03 	 add r3,r7,#12
  82 005c 1B68     	 ldr r3,[r3]
  83 005e C7F82C31 	 str r3,[r7,#300]
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputB pointer */
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pIn2 = pSrcB;
  84              	 .loc 1 106 0
  85 0062 3B1D     	 adds r3,r7,#4
  86 0064 1B68     	 ldr r3,[r3]
  87 0066 C7F82831 	 str r3,[r7,#296]
  88 006a 16E0     	 b .L5
  89              	.L4:
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     else
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputA pointer */
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pIn1 = pSrcB;
  90              	 .loc 1 111 0
  91 006c 3B1D     	 adds r3,r7,#4
  92 006e 1B68     	 ldr r3,[r3]
  93 0070 C7F82C31 	 str r3,[r7,#300]
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputB pointer */
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pIn2 = pSrcA;
  94              	 .loc 1 114 0
  95 0074 07F10C03 	 add r3,r7,#12
  96 0078 1B68     	 ldr r3,[r3]
  97 007a C7F82831 	 str r3,[r7,#296]
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       j = srcBLen;
  98              	 .loc 1 117 0
  99 007e 3B46     	 mov r3,r7
 100 0080 1B68     	 ldr r3,[r3]
 101 0082 C7F8F830 	 str r3,[r7,#248]
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       srcBLen = srcALen;
 102              	 .loc 1 118 0
 103 0086 3B46     	 mov r3,r7
 104 0088 07F10802 	 add r2,r7,#8
 105 008c 1268     	 ldr r2,[r2]
 106 008e 1A60     	 str r2,[r3]
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       srcALen = j;
 107              	 .loc 1 119 0
 108 0090 07F10803 	 add r3,r7,#8
 109 0094 D7F8F820 	 ldr r2,[r7,#248]
 110 0098 1A60     	 str r2,[r3]
 111              	.L5:
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* pointer to take end of scratch2 buffer */
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScr2 = pScratch2;
 112              	 .loc 1 123 0
 113 009a 07F11C03 	 add r3,r7,#28
 114 009e D7F85021 	 ldr r2,[r7,#336]
 115 00a2 1A60     	 str r2,[r3]
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* points to smaller length sequence */
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     px = pIn2 + srcBLen - 1;
 116              	 .loc 1 126 0
 117 00a4 3B46     	 mov r3,r7
 118 00a6 1B68     	 ldr r3,[r3]
 119 00a8 013B     	 subs r3,r3,#1
 120 00aa D7F82821 	 ldr r2,[r7,#296]
 121 00ae 1344     	 add r3,r3,r2
 122 00b0 C7F81831 	 str r3,[r7,#280]
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Apply loop unrolling and do 4 Copies simultaneously. */
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     k = srcBLen >> 2u;
 123              	 .loc 1 129 0
 124 00b4 3B46     	 mov r3,r7
 125 00b6 1B68     	 ldr r3,[r3]
 126 00b8 9B08     	 lsrs r3,r3,#2
 127 00ba C7F82431 	 str r3,[r7,#292]
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* First part of the processing with loop unrolling copies 4 data points at a time.
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****      ** a second loop below copies for the remaining 1 to 3 samples. */
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (k > 0u)
 128              	 .loc 1 133 0
 129 00be 50E0     	 b .L6
 130              	.L7:
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* copy second buffer in reversal manner */
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * px--;
 131              	 .loc 1 136 0
 132 00c0 D7F81831 	 ldr r3,[r7,#280]
 133 00c4 5A1E     	 subs r2,r3,#1
 134 00c6 C7F81821 	 str r2,[r7,#280]
 135 00ca 1B78     	 ldrb r3,[r3]
 136 00cc 5BB2     	 sxtb r3,r3
 137 00ce A7F8F630 	 strh r3,[r7,#246]
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr2++ = x4;
 138              	 .loc 1 137 0
 139 00d2 07F11C03 	 add r3,r7,#28
 140 00d6 1B68     	 ldr r3,[r3]
 141 00d8 991C     	 adds r1,r3,#2
 142 00da 07F11C02 	 add r2,r7,#28
 143 00de 1160     	 str r1,[r2]
 144 00e0 B7F8F620 	 ldrh r2,[r7,#246]
 145 00e4 1A80     	 strh r2,[r3]
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * px--;
 146              	 .loc 1 138 0
 147 00e6 D7F81831 	 ldr r3,[r7,#280]
 148 00ea 5A1E     	 subs r2,r3,#1
 149 00ec C7F81821 	 str r2,[r7,#280]
 150 00f0 1B78     	 ldrb r3,[r3]
 151 00f2 5BB2     	 sxtb r3,r3
 152 00f4 A7F8F630 	 strh r3,[r7,#246]
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr2++ = x4;
 153              	 .loc 1 139 0
 154 00f8 07F11C03 	 add r3,r7,#28
 155 00fc 1B68     	 ldr r3,[r3]
 156 00fe 991C     	 adds r1,r3,#2
 157 0100 07F11C02 	 add r2,r7,#28
 158 0104 1160     	 str r1,[r2]
 159 0106 B7F8F620 	 ldrh r2,[r7,#246]
 160 010a 1A80     	 strh r2,[r3]
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * px--;
 161              	 .loc 1 140 0
 162 010c D7F81831 	 ldr r3,[r7,#280]
 163 0110 5A1E     	 subs r2,r3,#1
 164 0112 C7F81821 	 str r2,[r7,#280]
 165 0116 1B78     	 ldrb r3,[r3]
 166 0118 5BB2     	 sxtb r3,r3
 167 011a A7F8F630 	 strh r3,[r7,#246]
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr2++ = x4;
 168              	 .loc 1 141 0
 169 011e 07F11C03 	 add r3,r7,#28
 170 0122 1B68     	 ldr r3,[r3]
 171 0124 991C     	 adds r1,r3,#2
 172 0126 07F11C02 	 add r2,r7,#28
 173 012a 1160     	 str r1,[r2]
 174 012c B7F8F620 	 ldrh r2,[r7,#246]
 175 0130 1A80     	 strh r2,[r3]
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * px--;
 176              	 .loc 1 142 0
 177 0132 D7F81831 	 ldr r3,[r7,#280]
 178 0136 5A1E     	 subs r2,r3,#1
 179 0138 C7F81821 	 str r2,[r7,#280]
 180 013c 1B78     	 ldrb r3,[r3]
 181 013e 5BB2     	 sxtb r3,r3
 182 0140 A7F8F630 	 strh r3,[r7,#246]
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr2++ = x4;
 183              	 .loc 1 143 0
 184 0144 07F11C03 	 add r3,r7,#28
 185 0148 1B68     	 ldr r3,[r3]
 186 014a 991C     	 adds r1,r3,#2
 187 014c 07F11C02 	 add r2,r7,#28
 188 0150 1160     	 str r1,[r2]
 189 0152 B7F8F620 	 ldrh r2,[r7,#246]
 190 0156 1A80     	 strh r2,[r3]
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Decrement the loop counter */
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       k--;
 191              	 .loc 1 146 0
 192 0158 D7F82431 	 ldr r3,[r7,#292]
 193 015c 013B     	 subs r3,r3,#1
 194 015e C7F82431 	 str r3,[r7,#292]
 195              	.L6:
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 196              	 .loc 1 133 0
 197 0162 D7F82431 	 ldr r3,[r7,#292]
 198 0166 002B     	 cmp r3,#0
 199 0168 AAD1     	 bne .L7
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* If the count is not a multiple of 4, copy remaining samples here.
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****      ** No loop unrolling is used. */
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     k = srcBLen % 0x4u;
 200              	 .loc 1 151 0
 201 016a 3B46     	 mov r3,r7
 202 016c 1B68     	 ldr r3,[r3]
 203 016e 03F00303 	 and r3,r3,#3
 204 0172 C7F82431 	 str r3,[r7,#292]
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (k > 0u)
 205              	 .loc 1 153 0
 206 0176 17E0     	 b .L8
 207              	.L9:
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* copy second buffer in reversal manner for remaining samples */
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * px--;
 208              	 .loc 1 156 0
 209 0178 D7F81831 	 ldr r3,[r7,#280]
 210 017c 5A1E     	 subs r2,r3,#1
 211 017e C7F81821 	 str r2,[r7,#280]
 212 0182 1B78     	 ldrb r3,[r3]
 213 0184 5BB2     	 sxtb r3,r3
 214 0186 A7F8F630 	 strh r3,[r7,#246]
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr2++ = x4;
 215              	 .loc 1 157 0
 216 018a 07F11C03 	 add r3,r7,#28
 217 018e 1B68     	 ldr r3,[r3]
 218 0190 991C     	 adds r1,r3,#2
 219 0192 07F11C02 	 add r2,r7,#28
 220 0196 1160     	 str r1,[r2]
 221 0198 B7F8F620 	 ldrh r2,[r7,#246]
 222 019c 1A80     	 strh r2,[r3]
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Decrement the loop counter */
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       k--;
 223              	 .loc 1 160 0
 224 019e D7F82431 	 ldr r3,[r7,#292]
 225 01a2 013B     	 subs r3,r3,#1
 226 01a4 C7F82431 	 str r3,[r7,#292]
 227              	.L8:
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 228              	 .loc 1 153 0
 229 01a8 D7F82431 	 ldr r3,[r7,#292]
 230 01ac 002B     	 cmp r3,#0
 231 01ae E3D1     	 bne .L9
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Initialze temporary scratch pointer */
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScr1 = pScratch1;
 232              	 .loc 1 164 0
 233 01b0 07F11803 	 add r3,r7,#24
 234 01b4 D7F84C21 	 ldr r2,[r7,#332]
 235 01b8 1A60     	 str r2,[r3]
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Fill (srcBLen - 1u) zeros in scratch buffer */
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     arm_fill_q15(0, pScr1, (srcBLen - 1u));
 236              	 .loc 1 167 0
 237 01ba 07F11803 	 add r3,r7,#24
 238 01be 1A68     	 ldr r2,[r3]
 239 01c0 3B46     	 mov r3,r7
 240 01c2 1B68     	 ldr r3,[r3]
 241 01c4 013B     	 subs r3,r3,#1
 242 01c6 0020     	 movs r0,#0
 243 01c8 1146     	 mov r1,r2
 244 01ca 1A46     	 mov r2,r3
 245 01cc FFF7FEFF 	 bl arm_fill_q15
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Update temporary scratch pointer */
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScr1 += (srcBLen - 1u);
 246              	 .loc 1 170 0
 247 01d0 07F11803 	 add r3,r7,#24
 248 01d4 1A68     	 ldr r2,[r3]
 249 01d6 3B46     	 mov r3,r7
 250 01d8 1B68     	 ldr r3,[r3]
 251 01da 03F10043 	 add r3,r3,#-2147483648
 252 01de 013B     	 subs r3,r3,#1
 253 01e0 5B00     	 lsls r3,r3,#1
 254 01e2 1A44     	 add r2,r2,r3
 255 01e4 07F11803 	 add r3,r7,#24
 256 01e8 1A60     	 str r2,[r3]
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Copy (srcALen) samples in scratch buffer */
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Apply loop unrolling and do 4 Copies simultaneously. */
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     k = srcALen >> 2u;
 257              	 .loc 1 174 0
 258 01ea 07F10803 	 add r3,r7,#8
 259 01ee 1B68     	 ldr r3,[r3]
 260 01f0 9B08     	 lsrs r3,r3,#2
 261 01f2 C7F82431 	 str r3,[r7,#292]
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* First part of the processing with loop unrolling copies 4 data points at a time.
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****      ** a second loop below copies for the remaining 1 to 3 samples. */
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (k > 0u)
 262              	 .loc 1 178 0
 263 01f6 50E0     	 b .L10
 264              	.L11:
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* copy second buffer in reversal manner */
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * pIn1++;
 265              	 .loc 1 181 0
 266 01f8 D7F82C31 	 ldr r3,[r7,#300]
 267 01fc 5A1C     	 adds r2,r3,#1
 268 01fe C7F82C21 	 str r2,[r7,#300]
 269 0202 1B78     	 ldrb r3,[r3]
 270 0204 5BB2     	 sxtb r3,r3
 271 0206 A7F8F630 	 strh r3,[r7,#246]
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr1++ = x4;
 272              	 .loc 1 182 0
 273 020a 07F11803 	 add r3,r7,#24
 274 020e 1B68     	 ldr r3,[r3]
 275 0210 991C     	 adds r1,r3,#2
 276 0212 07F11802 	 add r2,r7,#24
 277 0216 1160     	 str r1,[r2]
 278 0218 B7F8F620 	 ldrh r2,[r7,#246]
 279 021c 1A80     	 strh r2,[r3]
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * pIn1++;
 280              	 .loc 1 183 0
 281 021e D7F82C31 	 ldr r3,[r7,#300]
 282 0222 5A1C     	 adds r2,r3,#1
 283 0224 C7F82C21 	 str r2,[r7,#300]
 284 0228 1B78     	 ldrb r3,[r3]
 285 022a 5BB2     	 sxtb r3,r3
 286 022c A7F8F630 	 strh r3,[r7,#246]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr1++ = x4;
 287              	 .loc 1 184 0
 288 0230 07F11803 	 add r3,r7,#24
 289 0234 1B68     	 ldr r3,[r3]
 290 0236 991C     	 adds r1,r3,#2
 291 0238 07F11802 	 add r2,r7,#24
 292 023c 1160     	 str r1,[r2]
 293 023e B7F8F620 	 ldrh r2,[r7,#246]
 294 0242 1A80     	 strh r2,[r3]
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * pIn1++;
 295              	 .loc 1 185 0
 296 0244 D7F82C31 	 ldr r3,[r7,#300]
 297 0248 5A1C     	 adds r2,r3,#1
 298 024a C7F82C21 	 str r2,[r7,#300]
 299 024e 1B78     	 ldrb r3,[r3]
 300 0250 5BB2     	 sxtb r3,r3
 301 0252 A7F8F630 	 strh r3,[r7,#246]
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr1++ = x4;
 302              	 .loc 1 186 0
 303 0256 07F11803 	 add r3,r7,#24
 304 025a 1B68     	 ldr r3,[r3]
 305 025c 991C     	 adds r1,r3,#2
 306 025e 07F11802 	 add r2,r7,#24
 307 0262 1160     	 str r1,[r2]
 308 0264 B7F8F620 	 ldrh r2,[r7,#246]
 309 0268 1A80     	 strh r2,[r3]
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * pIn1++;
 310              	 .loc 1 187 0
 311 026a D7F82C31 	 ldr r3,[r7,#300]
 312 026e 5A1C     	 adds r2,r3,#1
 313 0270 C7F82C21 	 str r2,[r7,#300]
 314 0274 1B78     	 ldrb r3,[r3]
 315 0276 5BB2     	 sxtb r3,r3
 316 0278 A7F8F630 	 strh r3,[r7,#246]
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr1++ = x4;
 317              	 .loc 1 188 0
 318 027c 07F11803 	 add r3,r7,#24
 319 0280 1B68     	 ldr r3,[r3]
 320 0282 991C     	 adds r1,r3,#2
 321 0284 07F11802 	 add r2,r7,#24
 322 0288 1160     	 str r1,[r2]
 323 028a B7F8F620 	 ldrh r2,[r7,#246]
 324 028e 1A80     	 strh r2,[r3]
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Decrement the loop counter */
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       k--;
 325              	 .loc 1 191 0
 326 0290 D7F82431 	 ldr r3,[r7,#292]
 327 0294 013B     	 subs r3,r3,#1
 328 0296 C7F82431 	 str r3,[r7,#292]
 329              	.L10:
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 330              	 .loc 1 178 0
 331 029a D7F82431 	 ldr r3,[r7,#292]
 332 029e 002B     	 cmp r3,#0
 333 02a0 AAD1     	 bne .L11
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* If the count is not a multiple of 4, copy remaining samples here.
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****      ** No loop unrolling is used. */
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     k = srcALen % 0x4u;
 334              	 .loc 1 196 0
 335 02a2 07F10803 	 add r3,r7,#8
 336 02a6 1B68     	 ldr r3,[r3]
 337 02a8 03F00303 	 and r3,r3,#3
 338 02ac C7F82431 	 str r3,[r7,#292]
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (k > 0u)
 339              	 .loc 1 198 0
 340 02b0 17E0     	 b .L12
 341              	.L13:
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* copy second buffer in reversal manner for remaining samples */
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * pIn1++;
 342              	 .loc 1 201 0
 343 02b2 D7F82C31 	 ldr r3,[r7,#300]
 344 02b6 5A1C     	 adds r2,r3,#1
 345 02b8 C7F82C21 	 str r2,[r7,#300]
 346 02bc 1B78     	 ldrb r3,[r3]
 347 02be 5BB2     	 sxtb r3,r3
 348 02c0 A7F8F630 	 strh r3,[r7,#246]
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr1++ = x4;
 349              	 .loc 1 202 0
 350 02c4 07F11803 	 add r3,r7,#24
 351 02c8 1B68     	 ldr r3,[r3]
 352 02ca 991C     	 adds r1,r3,#2
 353 02cc 07F11802 	 add r2,r7,#24
 354 02d0 1160     	 str r1,[r2]
 355 02d2 B7F8F620 	 ldrh r2,[r7,#246]
 356 02d6 1A80     	 strh r2,[r3]
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Decrement the loop counter */
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       k--;
 357              	 .loc 1 205 0
 358 02d8 D7F82431 	 ldr r3,[r7,#292]
 359 02dc 013B     	 subs r3,r3,#1
 360 02de C7F82431 	 str r3,[r7,#292]
 361              	.L12:
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 362              	 .loc 1 198 0
 363 02e2 D7F82431 	 ldr r3,[r7,#292]
 364 02e6 002B     	 cmp r3,#0
 365 02e8 E3D1     	 bne .L13
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Fill (srcBLen - 1u) zeros at end of scratch buffer */
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     arm_fill_q15(0, pScr1, (srcBLen - 1u));
 366              	 .loc 1 209 0
 367 02ea 07F11803 	 add r3,r7,#24
 368 02ee 1A68     	 ldr r2,[r3]
 369 02f0 3B46     	 mov r3,r7
 370 02f2 1B68     	 ldr r3,[r3]
 371 02f4 013B     	 subs r3,r3,#1
 372 02f6 0020     	 movs r0,#0
 373 02f8 1146     	 mov r1,r2
 374 02fa 1A46     	 mov r2,r3
 375 02fc FFF7FEFF 	 bl arm_fill_q15
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Update pointer */
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScr1 += (srcBLen - 1u);
 376              	 .loc 1 212 0
 377 0300 07F11803 	 add r3,r7,#24
 378 0304 1A68     	 ldr r2,[r3]
 379 0306 3B46     	 mov r3,r7
 380 0308 1B68     	 ldr r3,[r3]
 381 030a 03F10043 	 add r3,r3,#-2147483648
 382 030e 013B     	 subs r3,r3,#1
 383 0310 5B00     	 lsls r3,r3,#1
 384 0312 1A44     	 add r2,r2,r3
 385 0314 07F11803 	 add r3,r7,#24
 386 0318 1A60     	 str r2,[r3]
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Temporary pointer for scratch2 */
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     py = pScratch2;
 387              	 .loc 1 216 0
 388 031a D7F85031 	 ldr r3,[r7,#336]
 389 031e C7F8F030 	 str r3,[r7,#240]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Initialization of pIn2 pointer */
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     pIn2 = (q7_t *) py;
 390              	 .loc 1 219 0
 391 0322 D7F8F030 	 ldr r3,[r7,#240]
 392 0326 C7F82831 	 str r3,[r7,#296]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScr2 = py;
 393              	 .loc 1 221 0
 394 032a 07F11C03 	 add r3,r7,#28
 395 032e D7F8F020 	 ldr r2,[r7,#240]
 396 0332 1A60     	 str r2,[r3]
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     pOut = pDst + firstIndex;
 397              	 .loc 1 223 0
 398 0334 D7F84021 	 ldr r2,[r7,#320]
 399 0338 D7F84431 	 ldr r3,[r7,#324]
 400 033c 1A44     	 add r2,r2,r3
 401 033e 07F11403 	 add r3,r7,#20
 402 0342 1A60     	 str r2,[r3]
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScratch1 += firstIndex;
 403              	 .loc 1 225 0
 404 0344 D7F84431 	 ldr r3,[r7,#324]
 405 0348 5B00     	 lsls r3,r3,#1
 406 034a D7F84C21 	 ldr r2,[r7,#332]
 407 034e 1344     	 add r3,r3,r2
 408 0350 C7F84C31 	 str r3,[r7,#332]
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Actual convolution process starts here */
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     blkCnt = (numPoints) >> 2;
 409              	 .loc 1 228 0
 410 0354 D7F84831 	 ldr r3,[r7,#328]
 411 0358 9B08     	 lsrs r3,r3,#2
 412 035a C7F82031 	 str r3,[r7,#288]
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (blkCnt > 0)
 413              	 .loc 1 231 0
 414 035e F8E1     	 b .L14
 415              	.L27:
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialze temporary scratch pointer as scratch1 */
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScr1 = pScratch1;
 416              	 .loc 1 234 0
 417 0360 07F11803 	 add r3,r7,#24
 418 0364 D7F84C21 	 ldr r2,[r7,#332]
 419 0368 1A60     	 str r2,[r3]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Clear Accumlators */
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       acc0 = 0;
 420              	 .loc 1 237 0
 421 036a 0023     	 movs r3,#0
 422 036c C7F81431 	 str r3,[r7,#276]
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       acc1 = 0;
 423              	 .loc 1 238 0
 424 0370 0023     	 movs r3,#0
 425 0372 C7F81031 	 str r3,[r7,#272]
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       acc2 = 0;
 426              	 .loc 1 239 0
 427 0376 0023     	 movs r3,#0
 428 0378 C7F80C31 	 str r3,[r7,#268]
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       acc3 = 0;
 429              	 .loc 1 240 0
 430 037c 0023     	 movs r3,#0
 431 037e C7F80831 	 str r3,[r7,#264]
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Read two samples from scratch1 buffer */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x1 = *__SIMD32(pScr1)++;
 432              	 .loc 1 243 0
 433 0382 07F11802 	 add r2,r7,#24
 434 0386 1368     	 ldr r3,[r2]
 435 0388 191D     	 adds r1,r3,#4
 436 038a 1160     	 str r1,[r2]
 437 038c 1B68     	 ldr r3,[r3]
 438 038e C7F80431 	 str r3,[r7,#260]
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Read next two samples from scratch1 buffer */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       x2 = *__SIMD32(pScr1)++;
 439              	 .loc 1 246 0
 440 0392 07F11802 	 add r2,r7,#24
 441 0396 1368     	 ldr r3,[r2]
 442 0398 191D     	 adds r1,r3,#4
 443 039a 1160     	 str r1,[r2]
 444 039c 1B68     	 ldr r3,[r3]
 445 039e C7F80031 	 str r3,[r7,#256]
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       tapCnt = (srcBLen) >> 2u;
 446              	 .loc 1 248 0
 447 03a2 3B46     	 mov r3,r7
 448 03a4 1B68     	 ldr r3,[r3]
 449 03a6 9B08     	 lsrs r3,r3,#2
 450 03a8 C7F81C31 	 str r3,[r7,#284]
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       while (tapCnt > 0u)
 451              	 .loc 1 250 0
 452 03ac F2E0     	 b .L15
 453              	.L24:
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Read four samples from smaller buffer */
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         y1 = _SIMD32_OFFSET(pScr2);
 454              	 .loc 1 254 0
 455 03ae 07F11C03 	 add r3,r7,#28
 456 03b2 1B68     	 ldr r3,[r3]
 457 03b4 1B68     	 ldr r3,[r3]
 458 03b6 C7F8EC30 	 str r3,[r7,#236]
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* multiply and accumlate */
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc0 = __SMLAD(x1, y1, acc0);
 459              	 .loc 1 257 0
 460 03ba D7F80411 	 ldr r1,[r7,#260]
 461 03be D7F8EC20 	 ldr r2,[r7,#236]
 462 03c2 D7F81431 	 ldr r3,[r7,#276]
 463 03c6 C7F8AC10 	 str r1,[r7,#172]
 464 03ca C7F8A820 	 str r2,[r7,#168]
 465 03ce C7F8A430 	 str r3,[r7,#164]
 466              	.LBB25:
 467              	.LBB26:
 468              	 .file 2 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.1
   5:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     02. February 2017
   6:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  36:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                     __asm
  37:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  39:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                  inline
  40:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  41:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  44:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  47:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  48:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  50:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  51:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  53:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  65:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  71:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  72:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  76:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  77:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  78:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  79:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  83:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  85:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0U);
 644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 734:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 735:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 739:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 740:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 742:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 744:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 745:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 747:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 751:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 753:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 755:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 756:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 758:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 762:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 764:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 766:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 767:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 768:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 769:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 773:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 774:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 776:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 779:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 780:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 781:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 783:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 784:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 785:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 787:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 788:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 789:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 791:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 792:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 793:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 795:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 796:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 797:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 799:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 800:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 802:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 803:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 807:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 808:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 810:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 813:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 814:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 815:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 817:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 818:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 819:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 820:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 821:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 822:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 827:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 828:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 830:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 832:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 833:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 834:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 835:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 836:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 841:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 843:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 845:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 846:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 848:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 849:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 850:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 851:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 852:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 853:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 858:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 859:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 861:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   {
 864:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 865:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 866:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     s--;
 867:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 868:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 870:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 871:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 872:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 873:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 874:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 875:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Count leading zeros
 876:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 877:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 878:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             number of leading zeros in value
 879:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 880:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CLZ             __builtin_clz
 881:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 882:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 883:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 884:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 885:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 886:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 887:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 888:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 889:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 890:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 891:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 892:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 893:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDREXB(volatile uint8_t *addr)
 894:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 895:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 896:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 897:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 898:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 899:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 900:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 901:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 902:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 903:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 904:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 905:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 906:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 907:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 908:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 909:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 910:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 911:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 912:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 913:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 914:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 915:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDREXH(volatile uint16_t *addr)
 916:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 917:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 918:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 920:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 921:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 922:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 923:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 924:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 925:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 926:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 927:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 928:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 929:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 930:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 931:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 932:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 933:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 934:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 935:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 936:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 937:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDREXW(volatile uint32_t *addr)
 938:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 939:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 940:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 941:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 942:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 943:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 944:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 945:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 946:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 947:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 948:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 949:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 950:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 951:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 952:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 953:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 954:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *a
 955:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 956:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 957:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 958:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 959:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 960:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 962:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 963:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 964:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 965:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 966:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 967:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 968:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 969:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 970:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 971:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXH(uint16_t value, volatile uint16_t 
 972:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 973:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 974:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 975:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 976:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 977:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 978:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 979:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 980:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 981:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 982:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 983:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 984:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 985:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 986:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 987:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 988:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t 
 989:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 990:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 991:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 992:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 993:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 994:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 995:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 996:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 997:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 998:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Remove the exclusive lock
 999:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1000:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1001:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __CLREX(void)
1002:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1003:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1004:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1005:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1006:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1007:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1008:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1009:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1010:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1011:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1012:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1013:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1014:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1015:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1016:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Signed Saturate
1017:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates a signed value.
1018:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1019:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1020:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1021:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1022:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1023:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1024:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1025:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1026:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1027:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1028:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1029:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1030:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1031:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Unsigned Saturate
1032:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates an unsigned value.
1033:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1034:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1035:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1036:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1037:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1038:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1039:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1040:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1041:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1042:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1043:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1044:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1045:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1046:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1047:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1048:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1049:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
1050:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
1051:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1052:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RRX(uint32_t value)
1053:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1054:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1055:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1056:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1057:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1058:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1059:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1060:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1061:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1062:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1063:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1064:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1065:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1066:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1067:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1068:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1069:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1070:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1071:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1072:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1073:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1074:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1075:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1076:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1077:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1078:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1079:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1080:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1081:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1082:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1083:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1084:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1085:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1086:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1087:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1088:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1089:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1090:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1091:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1092:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1093:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1094:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1095:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1096:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1097:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1098:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1099:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1100:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1101:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1102:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1103:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1104:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1105:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1106:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1107:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1108:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1109:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1110:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1111:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDRT(volatile uint32_t *ptr)
1112:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1113:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1114:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1115:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1116:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1117:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1118:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1119:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1120:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1121:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1122:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1123:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1124:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1125:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1126:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1127:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1128:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1129:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1130:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1131:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1132:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1133:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1134:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1135:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1136:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1137:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1138:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1139:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1140:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1141:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1142:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1143:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1144:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1145:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1146:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1147:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1148:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1149:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1150:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1151:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1152:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1153:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1154:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1155:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1156:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1157:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1158:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1159:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1160:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1161:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1162:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1163:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1164:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1165:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1166:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1167:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1168:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAB(volatile uint8_t *ptr)
1169:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1170:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1171:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1172:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1173:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1174:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1175:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1176:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1177:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1178:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1179:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1180:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1181:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1182:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1183:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAH(volatile uint16_t *ptr)
1184:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1185:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1186:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1187:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1188:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1189:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1190:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1191:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1192:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1193:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1194:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1195:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1196:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1197:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1198:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDA(volatile uint32_t *ptr)
1199:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1200:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1201:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1202:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1203:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1204:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1205:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1206:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1207:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1208:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1209:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1210:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1211:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1212:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1213:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1214:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1215:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1216:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1217:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1218:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1219:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1220:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1221:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1222:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1223:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1224:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1225:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1226:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1227:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1228:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1229:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1230:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1231:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1232:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1233:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1234:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1235:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1236:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1237:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1238:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1239:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1240:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1241:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1242:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1243:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1244:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1245:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1246:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1247:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1248:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1249:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1250:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1251:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1252:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1253:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1254:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1255:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1256:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1257:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1258:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1259:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1260:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1261:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1262:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1263:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1264:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1265:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1266:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1267:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1268:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1269:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1270:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1271:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1272:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1273:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1274:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1275:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1276:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1277:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1278:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1279:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1280:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1281:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1282:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1283:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1284:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1285:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1286:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1287:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1288:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1289:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1290:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1291:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1292:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1293:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1294:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1295:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1296:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *p
1297:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1298:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1299:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1300:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1301:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1302:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1303:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1304:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1305:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1306:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1307:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1308:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1309:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1310:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1311:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1312:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1313:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t 
1314:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1315:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1316:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1317:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1318:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1319:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1320:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1321:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1322:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1323:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1324:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1325:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1326:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1327:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1328:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1329:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1330:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *
1331:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1332:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1333:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1334:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1335:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1336:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1337:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1338:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1339:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1340:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1341:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1342:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1343:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1344:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1345:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1346:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated SIMD instructions
1347:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
1348:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** */
1349:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1350:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__ARM_FEATURE_DSP == 1)                             /* ToDo ARMCLANG: This should be ARCH >= A
1351:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1352:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1353:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1354:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1355:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1356:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1357:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1358:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1359:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1360:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1361:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1362:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1363:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1364:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1365:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1366:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1367:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1368:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1369:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1370:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1371:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1372:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1373:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1374:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1375:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1376:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1377:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1378:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1379:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1380:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1381:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1382:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1383:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1384:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1385:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1386:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1387:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1388:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1389:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1390:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1391:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1392:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1393:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1394:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1395:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1396:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1397:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1398:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1399:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1400:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1401:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1402:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1403:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1404:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1405:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1406:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1407:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1408:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1409:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1410:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1411:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1412:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1413:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1414:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1415:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1416:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1417:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1418:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1419:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1420:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1421:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1422:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1423:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1424:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1425:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1426:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1427:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1428:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1429:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1430:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1431:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1432:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1433:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1434:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1435:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1436:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1437:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1438:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1439:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1440:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1441:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1442:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1443:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1444:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1445:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1446:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1447:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1448:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1449:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1450:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1451:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1452:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1453:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1454:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1455:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1456:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1457:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1458:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1459:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1460:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1461:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1462:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1463:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1464:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1465:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1466:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1467:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1468:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1469:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1470:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1471:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1472:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1473:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1474:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1475:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1476:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1477:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1478:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1479:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1480:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1481:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1482:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1483:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1484:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1485:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1486:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1487:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1488:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1489:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1490:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1491:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1492:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1493:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1494:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1495:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1496:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1497:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1498:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1499:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1500:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1501:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1502:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1503:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1504:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1505:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1506:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1507:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1508:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1509:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1510:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1511:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1512:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1513:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1514:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1515:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1516:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1517:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1518:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1519:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1520:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1521:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1522:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1523:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1524:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1525:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1526:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1527:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1528:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1529:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1530:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1531:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1532:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1533:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1534:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1535:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1536:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1537:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1538:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1539:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1540:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1541:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1542:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1543:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1544:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1545:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1546:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1547:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1548:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1549:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1550:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1551:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1552:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1553:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1554:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1555:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1556:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1557:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1558:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1559:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1560:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1561:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1562:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1563:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1564:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1565:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1566:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1567:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1568:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1569:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1570:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1571:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1572:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1573:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1574:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1575:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1576:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1577:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1578:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1579:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1580:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1581:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1582:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1583:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1584:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1585:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1586:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1587:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1588:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1589:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1590:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1591:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1592:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1593:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1594:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1595:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1596:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1597:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1598:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1599:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1600:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1601:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1602:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1603:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1604:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1605:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1606:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1607:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1608:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1609:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1610:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1611:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1612:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1613:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1614:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1615:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1616:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1617:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1618:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1619:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1620:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1621:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1622:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1623:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1624:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1625:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1626:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1627:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1628:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1629:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1630:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1631:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1632:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1633:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1634:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1635:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1636:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1637:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1638:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1639:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1640:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1641:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1642:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1643:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1644:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1645:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1646:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1647:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1648:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1649:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1650:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32
1651:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1652:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1653:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1654:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1655:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1656:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1657:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1658:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1659:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1660:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1661:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1662:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1663:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1664:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1665:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1666:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1667:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1668:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1669:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1670:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1671:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1672:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTB16(uint32_t op1)
1673:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1674:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1675:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1676:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1677:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1678:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1679:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1680:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1681:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1682:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1683:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1684:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1685:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1686:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1687:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1688:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTB16(uint32_t op1)
1689:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1690:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1691:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1692:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1693:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1694:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1695:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1696:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1697:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1698:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1699:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1700:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1701:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1702:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1703:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1704:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1705:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1706:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1707:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1708:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1709:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1710:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1711:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1712:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1713:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1714:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1715:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1716:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1717:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1718:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1719:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1720:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32
1721:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1722:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1723:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 469              	 .loc 2 1724 0
 470 03d2 D7F8AC30 	 ldr r3,[r7,#172]
 471 03d6 D7F8A820 	 ldr r2,[r7,#168]
 472 03da D7F8A410 	 ldr r1,[r7,#164]
 473              	
 474 03de 23FB0213 	 smlad r3,r3,r2,r1
 475              	
 476              	 .thumb
 477 03e2 C7F8A030 	 str r3,[r7,#160]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 478              	 .loc 2 1725 0
 479 03e6 D7F8A030 	 ldr r3,[r7,#160]
 480              	.LBE26:
 481              	.LBE25:
 482              	 .loc 1 257 0
 483 03ea C7F81431 	 str r3,[r7,#276]
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc2 = __SMLAD(x2, y1, acc2);
 484              	 .loc 1 258 0
 485 03ee D7F80011 	 ldr r1,[r7,#256]
 486 03f2 D7F8EC20 	 ldr r2,[r7,#236]
 487 03f6 D7F80C31 	 ldr r3,[r7,#268]
 488 03fa C7F89C10 	 str r1,[r7,#156]
 489 03fe C7F89820 	 str r2,[r7,#152]
 490 0402 C7F89430 	 str r3,[r7,#148]
 491              	.LBB27:
 492              	.LBB28:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 493              	 .loc 2 1724 0
 494 0406 D7F89C30 	 ldr r3,[r7,#156]
 495 040a D7F89820 	 ldr r2,[r7,#152]
 496 040e D7F89410 	 ldr r1,[r7,#148]
 497              	
 498 0412 23FB0213 	 smlad r3,r3,r2,r1
 499              	
 500              	 .thumb
 501 0416 C7F89030 	 str r3,[r7,#144]
 502              	 .loc 2 1725 0
 503 041a D7F89030 	 ldr r3,[r7,#144]
 504              	.LBE28:
 505              	.LBE27:
 506              	 .loc 1 258 0
 507 041e C7F80C31 	 str r3,[r7,#268]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* pack input data */
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x2, x1, 0);
 508              	 .loc 1 262 0
 509 0422 D7F80031 	 ldr r3,[r7,#256]
 510 0426 9AB2     	 uxth r2,r3
 511 0428 D7F80431 	 ldr r3,[r7,#260]
 512 042c 1B0C     	 lsrs r3,r3,#16
 513 042e 1B04     	 lsls r3,r3,#16
 514 0430 1343     	 orrs r3,r3,r2
 515 0432 C7F8E830 	 str r3,[r7,#232]
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #else
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x1, x2, 0);
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #endif
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* multiply and accumlate */
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc1 = __SMLADX(x3, y1, acc1);
 516              	 .loc 1 268 0
 517 0436 D7F8E810 	 ldr r1,[r7,#232]
 518 043a D7F8EC20 	 ldr r2,[r7,#236]
 519 043e D7F81031 	 ldr r3,[r7,#272]
 520 0442 C7F88C10 	 str r1,[r7,#140]
 521 0446 C7F88820 	 str r2,[r7,#136]
 522 044a C7F88430 	 str r3,[r7,#132]
 523              	.LBB29:
 524              	.LBB30:
1726:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1727:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1728:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint3
1729:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1730:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1731:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 525              	 .loc 2 1732 0
 526 044e D7F88C30 	 ldr r3,[r7,#140]
 527 0452 D7F88820 	 ldr r2,[r7,#136]
 528 0456 D7F88410 	 ldr r1,[r7,#132]
 529              	
 530 045a 23FB1213 	 smladx r3,r3,r2,r1
 531              	
 532              	 .thumb
 533 045e C7F88030 	 str r3,[r7,#128]
1733:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 534              	 .loc 2 1733 0
 535 0462 D7F88030 	 ldr r3,[r7,#128]
 536              	.LBE30:
 537              	.LBE29:
 538              	 .loc 1 268 0
 539 0466 C7F81031 	 str r3,[r7,#272]
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Read next two samples from scratch1 buffer */
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         x1 = *__SIMD32(pScr1)++;
 540              	 .loc 1 271 0
 541 046a 07F11802 	 add r2,r7,#24
 542 046e 1368     	 ldr r3,[r2]
 543 0470 191D     	 adds r1,r3,#4
 544 0472 1160     	 str r1,[r2]
 545 0474 1B68     	 ldr r3,[r3]
 546 0476 C7F80431 	 str r3,[r7,#260]
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* pack input data */
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x1, x2, 0);
 547              	 .loc 1 275 0
 548 047a D7F80431 	 ldr r3,[r7,#260]
 549 047e 9AB2     	 uxth r2,r3
 550 0480 D7F80031 	 ldr r3,[r7,#256]
 551 0484 1B0C     	 lsrs r3,r3,#16
 552 0486 1B04     	 lsls r3,r3,#16
 553 0488 1343     	 orrs r3,r3,r2
 554 048a C7F8E830 	 str r3,[r7,#232]
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #else
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x2, x1, 0);
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #endif
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc3 = __SMLADX(x3, y1, acc3);
 555              	 .loc 1 280 0
 556 048e D7F8E810 	 ldr r1,[r7,#232]
 557 0492 D7F8EC20 	 ldr r2,[r7,#236]
 558 0496 D7F80831 	 ldr r3,[r7,#264]
 559 049a F967     	 str r1,[r7,#124]
 560 049c BA67     	 str r2,[r7,#120]
 561 049e 7B67     	 str r3,[r7,#116]
 562              	.LBB31:
 563              	.LBB32:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 564              	 .loc 2 1732 0
 565 04a0 FB6F     	 ldr r3,[r7,#124]
 566 04a2 BA6F     	 ldr r2,[r7,#120]
 567 04a4 796F     	 ldr r1,[r7,#116]
 568              	
 569 04a6 23FB1213 	 smladx r3,r3,r2,r1
 570              	
 571              	 .thumb
 572 04aa 3B67     	 str r3,[r7,#112]
 573              	 .loc 2 1733 0
 574 04ac 3B6F     	 ldr r3,[r7,#112]
 575              	.LBE32:
 576              	.LBE31:
 577              	 .loc 1 280 0
 578 04ae C7F80831 	 str r3,[r7,#264]
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Read four samples from smaller buffer */
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         y1 = _SIMD32_OFFSET(pScr2 + 2u);
 579              	 .loc 1 283 0
 580 04b2 07F11C03 	 add r3,r7,#28
 581 04b6 1B68     	 ldr r3,[r3]
 582 04b8 5B68     	 ldr r3,[r3,#4]
 583 04ba C7F8EC30 	 str r3,[r7,#236]
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc0 = __SMLAD(x2, y1, acc0);
 584              	 .loc 1 285 0
 585 04be D7F80011 	 ldr r1,[r7,#256]
 586 04c2 D7F8EC20 	 ldr r2,[r7,#236]
 587 04c6 D7F81431 	 ldr r3,[r7,#276]
 588 04ca F966     	 str r1,[r7,#108]
 589 04cc BA66     	 str r2,[r7,#104]
 590 04ce 7B66     	 str r3,[r7,#100]
 591              	.LBB33:
 592              	.LBB34:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 593              	 .loc 2 1724 0
 594 04d0 FB6E     	 ldr r3,[r7,#108]
 595 04d2 BA6E     	 ldr r2,[r7,#104]
 596 04d4 796E     	 ldr r1,[r7,#100]
 597              	
 598 04d6 23FB0213 	 smlad r3,r3,r2,r1
 599              	
 600              	 .thumb
 601 04da 3B66     	 str r3,[r7,#96]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 602              	 .loc 2 1725 0
 603 04dc 3B6E     	 ldr r3,[r7,#96]
 604              	.LBE34:
 605              	.LBE33:
 606              	 .loc 1 285 0
 607 04de C7F81431 	 str r3,[r7,#276]
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc2 = __SMLAD(x1, y1, acc2);
 608              	 .loc 1 287 0
 609 04e2 D7F80411 	 ldr r1,[r7,#260]
 610 04e6 D7F8EC20 	 ldr r2,[r7,#236]
 611 04ea D7F80C31 	 ldr r3,[r7,#268]
 612 04ee F965     	 str r1,[r7,#92]
 613 04f0 BA65     	 str r2,[r7,#88]
 614 04f2 7B65     	 str r3,[r7,#84]
 615              	.LBB35:
 616              	.LBB36:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 617              	 .loc 2 1724 0
 618 04f4 FB6D     	 ldr r3,[r7,#92]
 619 04f6 BA6D     	 ldr r2,[r7,#88]
 620 04f8 796D     	 ldr r1,[r7,#84]
 621              	
 622 04fa 23FB0213 	 smlad r3,r3,r2,r1
 623              	
 624              	 .thumb
 625 04fe 3B65     	 str r3,[r7,#80]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 626              	 .loc 2 1725 0
 627 0500 3B6D     	 ldr r3,[r7,#80]
 628              	.LBE36:
 629              	.LBE35:
 630              	 .loc 1 287 0
 631 0502 C7F80C31 	 str r3,[r7,#268]
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc1 = __SMLADX(x3, y1, acc1);
 632              	 .loc 1 289 0
 633 0506 D7F8E810 	 ldr r1,[r7,#232]
 634 050a D7F8EC20 	 ldr r2,[r7,#236]
 635 050e D7F81031 	 ldr r3,[r7,#272]
 636 0512 F964     	 str r1,[r7,#76]
 637 0514 BA64     	 str r2,[r7,#72]
 638 0516 7B64     	 str r3,[r7,#68]
 639              	.LBB37:
 640              	.LBB38:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 641              	 .loc 2 1732 0
 642 0518 FB6C     	 ldr r3,[r7,#76]
 643 051a BA6C     	 ldr r2,[r7,#72]
 644 051c 796C     	 ldr r1,[r7,#68]
 645              	
 646 051e 23FB1213 	 smladx r3,r3,r2,r1
 647              	
 648              	 .thumb
 649 0522 3B64     	 str r3,[r7,#64]
 650              	 .loc 2 1733 0
 651 0524 3B6C     	 ldr r3,[r7,#64]
 652              	.LBE38:
 653              	.LBE37:
 654              	 .loc 1 289 0
 655 0526 C7F81031 	 str r3,[r7,#272]
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         x2 = *__SIMD32(pScr1)++;
 656              	 .loc 1 291 0
 657 052a 07F11802 	 add r2,r7,#24
 658 052e 1368     	 ldr r3,[r2]
 659 0530 191D     	 adds r1,r3,#4
 660 0532 1160     	 str r1,[r2]
 661 0534 1B68     	 ldr r3,[r3]
 662 0536 C7F80031 	 str r3,[r7,#256]
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x2, x1, 0);
 663              	 .loc 1 294 0
 664 053a D7F80031 	 ldr r3,[r7,#256]
 665 053e 9AB2     	 uxth r2,r3
 666 0540 D7F80431 	 ldr r3,[r7,#260]
 667 0544 1B0C     	 lsrs r3,r3,#16
 668 0546 1B04     	 lsls r3,r3,#16
 669 0548 1343     	 orrs r3,r3,r2
 670 054a C7F8E830 	 str r3,[r7,#232]
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #else
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x1, x2, 0);
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** #endif
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc3 = __SMLADX(x3, y1, acc3);
 671              	 .loc 1 299 0
 672 054e D7F8E810 	 ldr r1,[r7,#232]
 673 0552 D7F8EC20 	 ldr r2,[r7,#236]
 674 0556 D7F80831 	 ldr r3,[r7,#264]
 675 055a F963     	 str r1,[r7,#60]
 676 055c BA63     	 str r2,[r7,#56]
 677 055e 7B63     	 str r3,[r7,#52]
 678              	.LBB39:
 679              	.LBB40:
1732:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 680              	 .loc 2 1732 0
 681 0560 FB6B     	 ldr r3,[r7,#60]
 682 0562 BA6B     	 ldr r2,[r7,#56]
 683 0564 796B     	 ldr r1,[r7,#52]
 684              	
 685 0566 23FB1212 	 smladx r2,r3,r2,r1
 686              	
 687              	 .thumb
 688 056a 07F13003 	 add r3,r7,#48
 689 056e 1A60     	 str r2,[r3]
 690              	 .loc 2 1733 0
 691 0570 07F13003 	 add r3,r7,#48
 692 0574 1B68     	 ldr r3,[r3]
 693              	.LBE40:
 694              	.LBE39:
 695              	 .loc 1 299 0
 696 0576 C7F80831 	 str r3,[r7,#264]
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         pScr2 += 4u;
 697              	 .loc 1 301 0
 698 057a 07F11C03 	 add r3,r7,#28
 699 057e 1B68     	 ldr r3,[r3]
 700 0580 03F10802 	 add r2,r3,#8
 701 0584 07F11C03 	 add r3,r7,#28
 702 0588 1A60     	 str r2,[r3]
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Decrement the loop counter */
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         tapCnt--;
 703              	 .loc 1 305 0
 704 058a D7F81C31 	 ldr r3,[r7,#284]
 705 058e 013B     	 subs r3,r3,#1
 706 0590 C7F81C31 	 str r3,[r7,#284]
 707              	.L15:
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 708              	 .loc 1 250 0
 709 0594 D7F81C31 	 ldr r3,[r7,#284]
 710 0598 002B     	 cmp r3,#0
 711 059a 7FF408AF 	 bne .L24
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       }
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Update scratch pointer for remaining samples of smaller length sequence */
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScr1 -= 4u;
 712              	 .loc 1 311 0
 713 059e 07F11803 	 add r3,r7,#24
 714 05a2 1B68     	 ldr r3,[r3]
 715 05a4 A3F10802 	 sub r2,r3,#8
 716 05a8 07F11803 	 add r3,r7,#24
 717 05ac 1A60     	 str r2,[r3]
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* apply same above for remaining samples of smaller length sequence */
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       tapCnt = (srcBLen) & 3u;
 718              	 .loc 1 315 0
 719 05ae 3B46     	 mov r3,r7
 720 05b0 1B68     	 ldr r3,[r3]
 721 05b2 03F00303 	 and r3,r3,#3
 722 05b6 C7F81C31 	 str r3,[r7,#284]
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       while (tapCnt > 0u)
 723              	 .loc 1 317 0
 724 05ba 63E0     	 b .L25
 725              	.L26:
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* accumlate the results */
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc0 += (*pScr1++ * *pScr2);
 726              	 .loc 1 321 0
 727 05bc 07F11803 	 add r3,r7,#24
 728 05c0 1B68     	 ldr r3,[r3]
 729 05c2 991C     	 adds r1,r3,#2
 730 05c4 07F11802 	 add r2,r7,#24
 731 05c8 1160     	 str r1,[r2]
 732 05ca 1B88     	 ldrh r3,[r3]
 733 05cc 1BB2     	 sxth r3,r3
 734 05ce 07F11C02 	 add r2,r7,#28
 735 05d2 1268     	 ldr r2,[r2]
 736 05d4 1288     	 ldrh r2,[r2]
 737 05d6 12B2     	 sxth r2,r2
 738 05d8 02FB03F3 	 mul r3,r2,r3
 739 05dc D7F81421 	 ldr r2,[r7,#276]
 740 05e0 1344     	 add r3,r3,r2
 741 05e2 C7F81431 	 str r3,[r7,#276]
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc1 += (*pScr1++ * *pScr2);
 742              	 .loc 1 322 0
 743 05e6 07F11803 	 add r3,r7,#24
 744 05ea 1B68     	 ldr r3,[r3]
 745 05ec 991C     	 adds r1,r3,#2
 746 05ee 07F11802 	 add r2,r7,#24
 747 05f2 1160     	 str r1,[r2]
 748 05f4 1B88     	 ldrh r3,[r3]
 749 05f6 1BB2     	 sxth r3,r3
 750 05f8 07F11C02 	 add r2,r7,#28
 751 05fc 1268     	 ldr r2,[r2]
 752 05fe 1288     	 ldrh r2,[r2]
 753 0600 12B2     	 sxth r2,r2
 754 0602 02FB03F3 	 mul r3,r2,r3
 755 0606 D7F81021 	 ldr r2,[r7,#272]
 756 060a 1344     	 add r3,r3,r2
 757 060c C7F81031 	 str r3,[r7,#272]
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc2 += (*pScr1++ * *pScr2);
 758              	 .loc 1 323 0
 759 0610 07F11803 	 add r3,r7,#24
 760 0614 1B68     	 ldr r3,[r3]
 761 0616 991C     	 adds r1,r3,#2
 762 0618 07F11802 	 add r2,r7,#24
 763 061c 1160     	 str r1,[r2]
 764 061e 1B88     	 ldrh r3,[r3]
 765 0620 1BB2     	 sxth r3,r3
 766 0622 07F11C02 	 add r2,r7,#28
 767 0626 1268     	 ldr r2,[r2]
 768 0628 1288     	 ldrh r2,[r2]
 769 062a 12B2     	 sxth r2,r2
 770 062c 02FB03F3 	 mul r3,r2,r3
 771 0630 D7F80C21 	 ldr r2,[r7,#268]
 772 0634 1344     	 add r3,r3,r2
 773 0636 C7F80C31 	 str r3,[r7,#268]
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc3 += (*pScr1++ * *pScr2++);
 774              	 .loc 1 324 0
 775 063a 07F11803 	 add r3,r7,#24
 776 063e 1B68     	 ldr r3,[r3]
 777 0640 991C     	 adds r1,r3,#2
 778 0642 07F11802 	 add r2,r7,#24
 779 0646 1160     	 str r1,[r2]
 780 0648 1B88     	 ldrh r3,[r3]
 781 064a 1AB2     	 sxth r2,r3
 782 064c 07F11C03 	 add r3,r7,#28
 783 0650 1B68     	 ldr r3,[r3]
 784 0652 981C     	 adds r0,r3,#2
 785 0654 07F11C01 	 add r1,r7,#28
 786 0658 0860     	 str r0,[r1]
 787 065a 1B88     	 ldrh r3,[r3]
 788 065c 1BB2     	 sxth r3,r3
 789 065e 03FB02F3 	 mul r3,r3,r2
 790 0662 D7F80821 	 ldr r2,[r7,#264]
 791 0666 1344     	 add r3,r3,r2
 792 0668 C7F80831 	 str r3,[r7,#264]
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         pScr1 -= 3u;
 793              	 .loc 1 326 0
 794 066c 07F11803 	 add r3,r7,#24
 795 0670 1B68     	 ldr r3,[r3]
 796 0672 9A1F     	 subs r2,r3,#6
 797 0674 07F11803 	 add r3,r7,#24
 798 0678 1A60     	 str r2,[r3]
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Decrement the loop counter */
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         tapCnt--;
 799              	 .loc 1 329 0
 800 067a D7F81C31 	 ldr r3,[r7,#284]
 801 067e 013B     	 subs r3,r3,#1
 802 0680 C7F81C31 	 str r3,[r7,#284]
 803              	.L25:
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 804              	 .loc 1 317 0
 805 0684 D7F81C31 	 ldr r3,[r7,#284]
 806 0688 002B     	 cmp r3,#0
 807 068a 97D1     	 bne .L26
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       }
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       blkCnt--;
 808              	 .loc 1 332 0
 809 068c D7F82031 	 ldr r3,[r7,#288]
 810 0690 013B     	 subs r3,r3,#1
 811 0692 C7F82031 	 str r3,[r7,#288]
 812              	.LBB41:
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Store the result in the accumulator in the destination buffer. */
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       out0 = (q7_t) (__SSAT(acc0 >> 7u, 8));
 813              	 .loc 1 335 0
 814 0696 D7F81431 	 ldr r3,[r7,#276]
 815 069a DB11     	 asrs r3,r3,#7
 816 069c C7F8E430 	 str r3,[r7,#228]
 817 06a0 D7F8E430 	 ldr r3,[r7,#228]
 818              	
 819 06a4 03F30703 	 ssat r3,#8,r3
 820              	
 821              	 .thumb
 822 06a8 C7F8E030 	 str r3,[r7,#224]
 823 06ac D7F8E030 	 ldr r3,[r7,#224]
 824              	.LBE41:
 825 06b0 87F8DF30 	 strb r3,[r7,#223]
 826              	.LBB42:
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       out1 = (q7_t) (__SSAT(acc1 >> 7u, 8));
 827              	 .loc 1 336 0
 828 06b4 D7F81031 	 ldr r3,[r7,#272]
 829 06b8 DB11     	 asrs r3,r3,#7
 830 06ba C7F8D830 	 str r3,[r7,#216]
 831 06be D7F8D830 	 ldr r3,[r7,#216]
 832              	
 833 06c2 03F30703 	 ssat r3,#8,r3
 834              	
 835              	 .thumb
 836 06c6 C7F8D430 	 str r3,[r7,#212]
 837 06ca D7F8D430 	 ldr r3,[r7,#212]
 838              	.LBE42:
 839 06ce 87F8D330 	 strb r3,[r7,#211]
 840              	.LBB43:
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       out2 = (q7_t) (__SSAT(acc2 >> 7u, 8));
 841              	 .loc 1 337 0
 842 06d2 D7F80C31 	 ldr r3,[r7,#268]
 843 06d6 DB11     	 asrs r3,r3,#7
 844 06d8 C7F8CC30 	 str r3,[r7,#204]
 845 06dc D7F8CC30 	 ldr r3,[r7,#204]
 846              	
 847 06e0 03F30703 	 ssat r3,#8,r3
 848              	
 849              	 .thumb
 850 06e4 C7F8C830 	 str r3,[r7,#200]
 851 06e8 D7F8C830 	 ldr r3,[r7,#200]
 852              	.LBE43:
 853 06ec 87F8C730 	 strb r3,[r7,#199]
 854              	.LBB44:
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       out3 = (q7_t) (__SSAT(acc3 >> 7u, 8));
 855              	 .loc 1 338 0
 856 06f0 D7F80831 	 ldr r3,[r7,#264]
 857 06f4 DB11     	 asrs r3,r3,#7
 858 06f6 C7F8C030 	 str r3,[r7,#192]
 859 06fa D7F8C030 	 ldr r3,[r7,#192]
 860              	
 861 06fe 03F30703 	 ssat r3,#8,r3
 862              	
 863              	 .thumb
 864 0702 C7F8BC30 	 str r3,[r7,#188]
 865 0706 D7F8BC30 	 ldr r3,[r7,#188]
 866              	.LBE44:
 867 070a 87F8BB30 	 strb r3,[r7,#187]
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *__SIMD32(pOut)++ = __PACKq7(out0, out1, out2, out3);
 868              	 .loc 1 340 0
 869 070e 07F11402 	 add r2,r7,#20
 870 0712 1368     	 ldr r3,[r2]
 871 0714 191D     	 adds r1,r3,#4
 872 0716 1160     	 str r1,[r2]
 873 0718 97F9DF20 	 ldrsb r2,[r7,#223]
 874 071c D1B2     	 uxtb r1,r2
 875 071e 97F9D320 	 ldrsb r2,[r7,#211]
 876 0722 1202     	 lsls r2,r2,#8
 877 0724 92B2     	 uxth r2,r2
 878 0726 1143     	 orrs r1,r1,r2
 879 0728 97F9C720 	 ldrsb r2,[r7,#199]
 880 072c 1204     	 lsls r2,r2,#16
 881 072e 02F47F02 	 and r2,r2,#16711680
 882 0732 1143     	 orrs r1,r1,r2
 883 0734 97F9BB20 	 ldrsb r2,[r7,#187]
 884 0738 1206     	 lsls r2,r2,#24
 885 073a 0A43     	 orrs r2,r2,r1
 886 073c 1A60     	 str r2,[r3]
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputB pointer */
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScr2 = py;
 887              	 .loc 1 343 0
 888 073e 07F11C03 	 add r3,r7,#28
 889 0742 D7F8F020 	 ldr r2,[r7,#240]
 890 0746 1A60     	 str r2,[r3]
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScratch1 += 4u;
 891              	 .loc 1 345 0
 892 0748 D7F84C31 	 ldr r3,[r7,#332]
 893 074c 0833     	 adds r3,r3,#8
 894 074e C7F84C31 	 str r3,[r7,#332]
 895              	.L14:
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 896              	 .loc 1 231 0
 897 0752 D7F82031 	 ldr r3,[r7,#288]
 898 0756 002B     	 cmp r3,#0
 899 0758 7FF402AE 	 bne .L27
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     blkCnt = (numPoints) & 0x3;
 900              	 .loc 1 349 0
 901 075c D7F84831 	 ldr r3,[r7,#328]
 902 0760 03F00303 	 and r3,r3,#3
 903 0764 C7F82031 	 str r3,[r7,#288]
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Calculate convolution for remaining samples of Bigger length sequence */
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (blkCnt > 0)
 904              	 .loc 1 352 0
 905 0768 96E0     	 b .L28
 906              	.L34:
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialze temporary scratch pointer as scratch1 */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScr1 = pScratch1;
 907              	 .loc 1 355 0
 908 076a 07F11803 	 add r3,r7,#24
 909 076e D7F84C21 	 ldr r2,[r7,#332]
 910 0772 1A60     	 str r2,[r3]
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Clear Accumlators */
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       acc0 = 0;
 911              	 .loc 1 358 0
 912 0774 0023     	 movs r3,#0
 913 0776 C7F81431 	 str r3,[r7,#276]
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       tapCnt = (srcBLen) >> 1u;
 914              	 .loc 1 360 0
 915 077a 3B46     	 mov r3,r7
 916 077c 1B68     	 ldr r3,[r3]
 917 077e 5B08     	 lsrs r3,r3,#1
 918 0780 C7F81C31 	 str r3,[r7,#284]
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       while (tapCnt > 0u)
 919              	 .loc 1 362 0
 920 0784 36E0     	 b .L29
 921              	.L31:
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Read next two samples from scratch1 buffer */
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         x1 = *__SIMD32(pScr1)++;
 922              	 .loc 1 366 0
 923 0786 07F11802 	 add r2,r7,#24
 924 078a 1368     	 ldr r3,[r2]
 925 078c 191D     	 adds r1,r3,#4
 926 078e 1160     	 str r1,[r2]
 927 0790 1B68     	 ldr r3,[r3]
 928 0792 C7F80431 	 str r3,[r7,#260]
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Read two samples from smaller buffer */
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         y1 = *__SIMD32(pScr2)++;
 929              	 .loc 1 369 0
 930 0796 07F11C02 	 add r2,r7,#28
 931 079a 1368     	 ldr r3,[r2]
 932 079c 191D     	 adds r1,r3,#4
 933 079e 1160     	 str r1,[r2]
 934 07a0 1B68     	 ldr r3,[r3]
 935 07a2 C7F8EC30 	 str r3,[r7,#236]
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc0 = __SMLAD(x1, y1, acc0);
 936              	 .loc 1 371 0
 937 07a6 D7F80401 	 ldr r0,[r7,#260]
 938 07aa D7F8EC10 	 ldr r1,[r7,#236]
 939 07ae D7F81421 	 ldr r2,[r7,#276]
 940 07b2 07F12C03 	 add r3,r7,#44
 941 07b6 1860     	 str r0,[r3]
 942 07b8 07F12803 	 add r3,r7,#40
 943 07bc 1960     	 str r1,[r3]
 944 07be 07F12403 	 add r3,r7,#36
 945 07c2 1A60     	 str r2,[r3]
 946              	.LBB45:
 947              	.LBB46:
1724:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 948              	 .loc 2 1724 0
 949 07c4 07F12C03 	 add r3,r7,#44
 950 07c8 1B68     	 ldr r3,[r3]
 951 07ca 07F12802 	 add r2,r7,#40
 952 07ce 1268     	 ldr r2,[r2]
 953 07d0 07F12401 	 add r1,r7,#36
 954 07d4 0968     	 ldr r1,[r1]
 955              	
 956 07d6 23FB0212 	 smlad r2,r3,r2,r1
 957              	
 958              	 .thumb
 959 07da 07F12003 	 add r3,r7,#32
 960 07de 1A60     	 str r2,[r3]
1725:F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961              	 .loc 2 1725 0
 962 07e0 07F12003 	 add r3,r7,#32
 963 07e4 1B68     	 ldr r3,[r3]
 964              	.LBE46:
 965              	.LBE45:
 966              	 .loc 1 371 0
 967 07e6 C7F81431 	 str r3,[r7,#276]
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Decrement the loop counter */
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         tapCnt--;
 968              	 .loc 1 374 0
 969 07ea D7F81C31 	 ldr r3,[r7,#284]
 970 07ee 013B     	 subs r3,r3,#1
 971 07f0 C7F81C31 	 str r3,[r7,#284]
 972              	.L29:
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 973              	 .loc 1 362 0
 974 07f4 D7F81C31 	 ldr r3,[r7,#284]
 975 07f8 002B     	 cmp r3,#0
 976 07fa C4D1     	 bne .L31
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       }
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       tapCnt = (srcBLen) & 1u;
 977              	 .loc 1 377 0
 978 07fc 3B46     	 mov r3,r7
 979 07fe 1B68     	 ldr r3,[r3]
 980 0800 03F00103 	 and r3,r3,#1
 981 0804 C7F81C31 	 str r3,[r7,#284]
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* apply same above for remaining samples of smaller length sequence */
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       while (tapCnt > 0u)
 982              	 .loc 1 380 0
 983 0808 1DE0     	 b .L32
 984              	.L33:
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* accumlate the results */
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc0 += (*pScr1++ * *pScr2++);
 985              	 .loc 1 384 0
 986 080a 07F11803 	 add r3,r7,#24
 987 080e 1B68     	 ldr r3,[r3]
 988 0810 991C     	 adds r1,r3,#2
 989 0812 07F11802 	 add r2,r7,#24
 990 0816 1160     	 str r1,[r2]
 991 0818 1B88     	 ldrh r3,[r3]
 992 081a 1AB2     	 sxth r2,r3
 993 081c 07F11C03 	 add r3,r7,#28
 994 0820 1B68     	 ldr r3,[r3]
 995 0822 981C     	 adds r0,r3,#2
 996 0824 07F11C01 	 add r1,r7,#28
 997 0828 0860     	 str r0,[r1]
 998 082a 1B88     	 ldrh r3,[r3]
 999 082c 1BB2     	 sxth r3,r3
 1000 082e 03FB02F3 	 mul r3,r3,r2
 1001 0832 D7F81421 	 ldr r2,[r7,#276]
 1002 0836 1344     	 add r3,r3,r2
 1003 0838 C7F81431 	 str r3,[r7,#276]
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Decrement the loop counter */
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****         tapCnt--;
 1004              	 .loc 1 387 0
 1005 083c D7F81C31 	 ldr r3,[r7,#284]
 1006 0840 013B     	 subs r3,r3,#1
 1007 0842 C7F81C31 	 str r3,[r7,#284]
 1008              	.L32:
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 1009              	 .loc 1 380 0
 1010 0846 D7F81C31 	 ldr r3,[r7,#284]
 1011 084a 002B     	 cmp r3,#0
 1012 084c DDD1     	 bne .L33
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       }
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       blkCnt--;
 1013              	 .loc 1 390 0
 1014 084e D7F82031 	 ldr r3,[r7,#288]
 1015 0852 013B     	 subs r3,r3,#1
 1016 0854 C7F82031 	 str r3,[r7,#288]
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Store the result in the accumulator in the destination buffer. */
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pOut++ = (q7_t) (__SSAT(acc0 >> 7u, 8));
 1017              	 .loc 1 393 0
 1018 0858 07F11403 	 add r3,r7,#20
 1019 085c 1B68     	 ldr r3,[r3]
 1020 085e 591C     	 adds r1,r3,#1
 1021 0860 07F11402 	 add r2,r7,#20
 1022 0864 1160     	 str r1,[r2]
 1023              	.LBB47:
 1024 0866 D7F81421 	 ldr r2,[r7,#276]
 1025 086a D211     	 asrs r2,r2,#7
 1026 086c C7F8B420 	 str r2,[r7,#180]
 1027 0870 D7F8B420 	 ldr r2,[r7,#180]
 1028              	
 1029 0874 02F30702 	 ssat r2,#8,r2
 1030              	
 1031              	 .thumb
 1032 0878 C7F8B020 	 str r2,[r7,#176]
 1033 087c D7F8B020 	 ldr r2,[r7,#176]
 1034              	.LBE47:
 1035 0880 D2B2     	 uxtb r2,r2
 1036 0882 1A70     	 strb r2,[r3]
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputB pointer */
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScr2 = py;
 1037              	 .loc 1 396 0
 1038 0884 07F11C03 	 add r3,r7,#28
 1039 0888 D7F8F020 	 ldr r2,[r7,#240]
 1040 088c 1A60     	 str r2,[r3]
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScratch1 += 1u;
 1041              	 .loc 1 398 0
 1042 088e D7F84C31 	 ldr r3,[r7,#332]
 1043 0892 0233     	 adds r3,r3,#2
 1044 0894 C7F84C31 	 str r3,[r7,#332]
 1045              	.L28:
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 1046              	 .loc 1 352 0
 1047 0898 D7F82031 	 ldr r3,[r7,#288]
 1048 089c 002B     	 cmp r3,#0
 1049 089e 7FF464AF 	 bne .L34
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* set status as ARM_MATH_SUCCESS */
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****     status = ARM_MATH_SUCCESS;
 1050              	 .loc 1 403 0
 1051 08a2 0023     	 movs r3,#0
 1052 08a4 87F8FF30 	 strb r3,[r7,#255]
 1053              	.L3:
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   }
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c ****   return (status);
 1054              	 .loc 1 408 0
 1055 08a8 97F8FF30 	 ldrb r3,[r7,#255]
 1056 08ac 5BB2     	 sxtb r3,r3
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_opt_q7.c **** }
 1057              	 .loc 1 410 0
 1058 08ae 1846     	 mov r0,r3
 1059 08b0 07F59A77 	 add r7,r7,#308
 1060              	.LCFI3:
 1061              	 .cfi_def_cfa_offset 12
 1062 08b4 BD46     	 mov sp,r7
 1063              	.LCFI4:
 1064              	 .cfi_def_cfa_register 13
 1065              	 
 1066 08b6 90BD     	 pop {r4,r7,pc}
 1067              	 .cfi_endproc
 1068              	.LFE135:
 1070              	 .text
 1071              	.Letext0:
 1072              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1073              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1074              	 .file 5 "F:/Projects/20190909 - 3phase_inverter/3phase_inverter/4. Software_WS/OL_VSC_vitor/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_partial_opt_q7.c
    {standard input}:20     .text.arm_conv_partial_opt_q7:00000000 $t
    {standard input}:25     .text.arm_conv_partial_opt_q7:00000000 arm_conv_partial_opt_q7
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
arm_fill_q15
