   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_partial_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_partial_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_partial_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_partial_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * Title:        arm_conv_partial_q15.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * Description:  Partial convolution of Q15 sequences
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @addtogroup PartialConv
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @brief Partial convolution of Q15 sequences.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @param[in]       *pSrcA points to the first input sequence.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @param[in]       srcALen length of the first input sequence.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @param[in]       *pSrcB points to the second input sequence.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @param[in]       srcBLen length of the second input sequence.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @param[out]      *pDst points to the location where the output result is written.
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @param[in]       firstIndex is the first output sample to start with.
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @param[in]       numPoints is the number of output points to be computed.
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMEN
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  *
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * Refer to <code>arm_conv_partial_fast_q15()</code> for a faster but less precise version of this 
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  *
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * \par
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  * Refer the function <code>arm_conv_partial_opt_q15()</code> for a faster implementation of this f
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  *
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****  */
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** arm_status arm_conv_partial_q15(
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t * pSrcA,
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   uint32_t srcALen,
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t * pSrcB,
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   uint32_t srcBLen,
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t * pDst,
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   uint32_t firstIndex,
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   uint32_t numPoints)
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** {
  28              	 .loc 1 66 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 2DE9900F 	 push {r4,r7,r8,r9,r10,fp}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 24
  36              	 .cfi_offset 4,-24
  37              	 .cfi_offset 7,-20
  38              	 .cfi_offset 8,-16
  39              	 .cfi_offset 9,-12
  40              	 .cfi_offset 10,-8
  41              	 .cfi_offset 11,-4
  42 0004 ADF5846D 	 sub sp,sp,#1056
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 1080
  45 0008 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 000a 07F14C04 	 add r4,r7,#76
  49 000e 2060     	 str r0,[r4]
  50 0010 07F14800 	 add r0,r7,#72
  51 0014 0160     	 str r1,[r0]
  52 0016 07F14401 	 add r1,r7,#68
  53 001a 0A60     	 str r2,[r1]
  54 001c 07F14002 	 add r2,r7,#64
  55 0020 1360     	 str r3,[r2]
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #if (defined(ARM_MATH_CM7) || defined(ARM_MATH_CM4) || defined(ARM_MATH_CM3)) && !defined(UNALIGNED
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t *pIn1;                                   /* inputA pointer               */
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t *pIn2;                                   /* inputB pointer               */
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t *pOut = pDst;                            /* output pointer               */
  56              	 .loc 1 75 0
  57 0022 07F5AE72 	 add r2,r7,#348
  58 0026 D7F83834 	 ldr r3,[r7,#1080]
  59 002a 1360     	 str r3,[r2]
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q63_t sum, acc0, acc1, acc2, acc3;             /* Accumulator                  */
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers        */
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q31_t x0, x1, x2, x3, c0;                      /* Temporary input variables */
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   uint32_t j, k, count, check, blkCnt;
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   int32_t blockSize1, blockSize2, blockSize3;    /* loop counter                 */
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   arm_status status;                             /* status of Partial convolution */
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   /* Check for range of output samples to be calculated */
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1u))))
  60              	 .loc 1 86 0
  61 002c D7F83C24 	 ldr r2,[r7,#1084]
  62 0030 D7F84034 	 ldr r3,[r7,#1088]
  63 0034 D118     	 adds r1,r2,r3
  64 0036 07F14002 	 add r2,r7,#64
  65 003a 07F14803 	 add r3,r7,#72
  66 003e 1268     	 ldr r2,[r2]
  67 0040 1B68     	 ldr r3,[r3]
  68 0042 1344     	 add r3,r3,r2
  69 0044 013B     	 subs r3,r3,#1
  70 0046 9942     	 cmp r1,r3
  71 0048 04D9     	 bls .L2
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   {
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     status = ARM_MATH_ARGUMENT_ERROR;
  72              	 .loc 1 89 0
  73 004a FF23     	 movs r3,#255
  74 004c 87F8C733 	 strb r3,[r7,#967]
  75 0050 01F0E5BC 	 b .L3
  76              	.L2:
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   }
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   else
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   {
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* srcB is always made to slide across srcA. */
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     if (srcALen >= srcBLen)
  77              	 .loc 1 97 0
  78 0054 07F14802 	 add r2,r7,#72
  79 0058 07F14003 	 add r3,r7,#64
  80 005c 1268     	 ldr r2,[r2]
  81 005e 1B68     	 ldr r3,[r3]
  82 0060 9A42     	 cmp r2,r3
  83 0062 0AD3     	 bcc .L4
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Initialization of inputA pointer */
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       pIn1 = pSrcA;
  84              	 .loc 1 100 0
  85 0064 07F14C03 	 add r3,r7,#76
  86 0068 1B68     	 ldr r3,[r3]
  87 006a C7F81C34 	 str r3,[r7,#1052]
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Initialization of inputB pointer */
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       pIn2 = pSrcB;
  88              	 .loc 1 103 0
  89 006e 07F14403 	 add r3,r7,#68
  90 0072 1B68     	 ldr r3,[r3]
  91 0074 C7F81834 	 str r3,[r7,#1048]
  92 0078 19E0     	 b .L5
  93              	.L4:
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     else
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Initialization of inputA pointer */
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       pIn1 = pSrcB;
  94              	 .loc 1 108 0
  95 007a 07F14403 	 add r3,r7,#68
  96 007e 1B68     	 ldr r3,[r3]
  97 0080 C7F81C34 	 str r3,[r7,#1052]
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Initialization of inputB pointer */
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       pIn2 = pSrcA;
  98              	 .loc 1 111 0
  99 0084 07F14C03 	 add r3,r7,#76
 100 0088 1B68     	 ldr r3,[r3]
 101 008a C7F81834 	 str r3,[r7,#1048]
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       j = srcBLen;
 102              	 .loc 1 114 0
 103 008e 07F14003 	 add r3,r7,#64
 104 0092 1B68     	 ldr r3,[r3]
 105 0094 C7F8DC33 	 str r3,[r7,#988]
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       srcBLen = srcALen;
 106              	 .loc 1 115 0
 107 0098 07F14002 	 add r2,r7,#64
 108 009c 07F14803 	 add r3,r7,#72
 109 00a0 1B68     	 ldr r3,[r3]
 110 00a2 1360     	 str r3,[r2]
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       srcALen = j;
 111              	 .loc 1 116 0
 112 00a4 07F14802 	 add r2,r7,#72
 113 00a8 D7F8DC33 	 ldr r3,[r7,#988]
 114 00ac 1360     	 str r3,[r2]
 115              	.L5:
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Conditions to check which loopCounter holds
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * the first and last indices of the output samples to be calculated. */
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     check = firstIndex + numPoints;
 116              	 .loc 1 121 0
 117 00ae D7F83C24 	 ldr r2,[r7,#1084]
 118 00b2 D7F84034 	 ldr r3,[r7,#1088]
 119 00b6 1344     	 add r3,r3,r2
 120 00b8 C7F8C033 	 str r3,[r7,#960]
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize3 = ((int32_t)check > (int32_t)srcALen) ? (int32_t)check - (int32_t)srcALen : 0;
 121              	 .loc 1 122 0
 122 00bc D7F8C023 	 ldr r2,[r7,#960]
 123 00c0 07F14803 	 add r3,r7,#72
 124 00c4 1B68     	 ldr r3,[r3]
 125 00c6 9A42     	 cmp r2,r3
 126 00c8 06DD     	 ble .L6
 127              	 .loc 1 122 0 is_stmt 0 discriminator 1
 128 00ca D7F8C023 	 ldr r2,[r7,#960]
 129 00ce 07F14803 	 add r3,r7,#72
 130 00d2 1B68     	 ldr r3,[r3]
 131 00d4 D31A     	 subs r3,r2,r3
 132 00d6 00E0     	 b .L7
 133              	.L6:
 134              	 .loc 1 122 0 discriminator 2
 135 00d8 0023     	 movs r3,#0
 136              	.L7:
 137              	 .loc 1 122 0 discriminator 4
 138 00da C7F8C833 	 str r3,[r7,#968]
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize3 = ((int32_t)firstIndex > (int32_t)srcALen - 1) ? blockSize3 - (int32_t)firstIndex + 
 139              	 .loc 1 123 0 is_stmt 1 discriminator 4
 140 00de D7F83C24 	 ldr r2,[r7,#1084]
 141 00e2 07F14803 	 add r3,r7,#72
 142 00e6 1B68     	 ldr r3,[r3]
 143 00e8 013B     	 subs r3,r3,#1
 144 00ea 9A42     	 cmp r2,r3
 145 00ec 09DD     	 ble .L8
 146              	 .loc 1 123 0 is_stmt 0 discriminator 1
 147 00ee D7F83C24 	 ldr r2,[r7,#1084]
 148 00f2 D7F8C833 	 ldr r3,[r7,#968]
 149 00f6 9A1A     	 subs r2,r3,r2
 150 00f8 07F14803 	 add r3,r7,#72
 151 00fc 1B68     	 ldr r3,[r3]
 152 00fe 1344     	 add r3,r3,r2
 153 0100 01E0     	 b .L9
 154              	.L8:
 155              	 .loc 1 123 0 discriminator 2
 156 0102 D7F8C833 	 ldr r3,[r7,#968]
 157              	.L9:
 158              	 .loc 1 123 0 discriminator 4
 159 0106 C7F8C833 	 str r3,[r7,#968]
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize1 = (((int32_t) srcBLen - 1) - (int32_t) firstIndex);
 160              	 .loc 1 124 0 is_stmt 1 discriminator 4
 161 010a 07F14003 	 add r3,r7,#64
 162 010e 1A68     	 ldr r2,[r3]
 163 0110 D7F83C34 	 ldr r3,[r7,#1084]
 164 0114 D31A     	 subs r3,r2,r3
 165 0116 013B     	 subs r3,r3,#1
 166 0118 C7F8CC33 	 str r3,[r7,#972]
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****                                      (int32_t) numPoints) : 0;
 167              	 .loc 1 126 0 discriminator 4
 168 011c D7F8CC33 	 ldr r3,[r7,#972]
 169 0120 002B     	 cmp r3,#0
 170 0122 0DDD     	 ble .L10
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 171              	 .loc 1 125 0
 172 0124 07F14003 	 add r3,r7,#64
 173 0128 1B68     	 ldr r3,[r3]
 174 012a 5A1E     	 subs r2,r3,#1
 175 012c D7F8C033 	 ldr r3,[r7,#960]
 176 0130 9A42     	 cmp r2,r3
 177 0132 02D3     	 bcc .L11
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 178              	 .loc 1 125 0 is_stmt 0 discriminator 1
 179 0134 D7F84034 	 ldr r3,[r7,#1088]
 180 0138 03E0     	 b .L13
 181              	.L11:
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 182              	 .loc 1 125 0 discriminator 2
 183 013a D7F8CC33 	 ldr r3,[r7,#972]
 184 013e 00E0     	 b .L13
 185              	.L10:
 186              	 .loc 1 126 0 is_stmt 1 discriminator 1
 187 0140 0023     	 movs r3,#0
 188              	.L13:
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 189              	 .loc 1 125 0
 190 0142 C7F8CC33 	 str r3,[r7,#972]
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize2 = (int32_t) check - ((blockSize3 + blockSize1) +
 191              	 .loc 1 127 0
 192 0146 D7F8C013 	 ldr r1,[r7,#960]
 193 014a D7F8C823 	 ldr r2,[r7,#968]
 194 014e D7F8CC33 	 ldr r3,[r7,#972]
 195 0152 1A44     	 add r2,r2,r3
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****                                     (int32_t) firstIndex);
 196              	 .loc 1 128 0
 197 0154 D7F83C34 	 ldr r3,[r7,#1084]
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize2 = (int32_t) check - ((blockSize3 + blockSize1) +
 198              	 .loc 1 127 0
 199 0158 1344     	 add r3,r3,r2
 200 015a CB1A     	 subs r3,r1,r3
 201 015c C7F8BC33 	 str r3,[r7,#956]
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize2 = (blockSize2 > 0) ? blockSize2 : 0;
 202              	 .loc 1 129 0
 203 0160 D7F8BC33 	 ldr r3,[r7,#956]
 204 0164 23EAE373 	 bic r3,r3,r3,asr#31
 205 0168 C7F8BC33 	 str r3,[r7,#956]
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* The function is internally
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * divided into three stages according to the number of multiplications that has to be
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * taken place between inputA samples and inputB samples. In the first stage of the
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * algorithm, the multiplications increase by one for every iteration.
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * In the second stage of the algorithm, srcBLen number of multiplications are done.
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * In the third stage of the algorithm, the multiplications decrease by one
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * for every iteration. */
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Set the output pointer to point to the firstIndex
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * of the output sample to be calculated. */
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     pOut = pDst + firstIndex;
 206              	 .loc 1 142 0
 207 016c D7F83C34 	 ldr r3,[r7,#1084]
 208 0170 5A00     	 lsls r2,r3,#1
 209 0172 D7F83834 	 ldr r3,[r7,#1080]
 210 0176 1A44     	 add r2,r2,r3
 211 0178 07F5AE73 	 add r3,r7,#348
 212 017c 1A60     	 str r2,[r3]
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* --------------------------
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * Initializations of stage1
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * -------------------------*/
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* sum = x[0] * y[0]
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * sum = x[0] * y[1] + x[1] * y[0]
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * ....
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      */
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* In this stage the MAC operations are increased by 1 for every iteration.
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        The count variable holds the number of MAC operations performed.
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        Since the partial convolution starts from firstIndex
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        Number of Macs to be performed is firstIndex + 1 */
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     count = 1u + firstIndex;
 213              	 .loc 1 158 0
 214 017e D7F83C34 	 ldr r3,[r7,#1084]
 215 0182 0133     	 adds r3,r3,#1
 216 0184 C7F8D433 	 str r3,[r7,#980]
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputA */
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     px = pIn1;
 217              	 .loc 1 161 0
 218 0188 07F5AC72 	 add r2,r7,#344
 219 018c D7F81C34 	 ldr r3,[r7,#1052]
 220 0190 1360     	 str r3,[r2]
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputB */
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     pSrc2 = pIn2 + firstIndex;
 221              	 .loc 1 164 0
 222 0192 D7F83C34 	 ldr r3,[r7,#1084]
 223 0196 5A00     	 lsls r2,r3,#1
 224 0198 D7F81834 	 ldr r3,[r7,#1048]
 225 019c 1344     	 add r3,r3,r2
 226 019e C7F8E833 	 str r3,[r7,#1000]
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     py = pSrc2;
 227              	 .loc 1 165 0
 228 01a2 07F5AA72 	 add r2,r7,#340
 229 01a6 D7F8E833 	 ldr r3,[r7,#1000]
 230 01aa 1360     	 str r3,[r2]
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* ------------------------
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * Stage1 process
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * ----------------------*/
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* First part of this stage computes the MAC operations less than 4 */
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* The first part of the stage starts here */
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     while ((count < 4u) && (blockSize1 > 0))
 231              	 .loc 1 176 0
 232 01ac 8CE0     	 b .L14
 233              	.L19:
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Accumulator is made zero for every iteration */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       sum = 0;
 234              	 .loc 1 179 0
 235 01ae 4FF00002 	 mov r2,#0
 236 01b2 4FF00003 	 mov r3,#0
 237 01b6 07F58261 	 add r1,r7,#1040
 238 01ba C1E90023 	 strd r2,[r1]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Loop over number of MAC operations between
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        * inputA samples and inputB samples */
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       k = count;
 239              	 .loc 1 183 0
 240 01be D7F8D433 	 ldr r3,[r7,#980]
 241 01c2 C7F8D833 	 str r3,[r7,#984]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0u)
 242              	 .loc 1 185 0
 243 01c6 44E0     	 b .L15
 244              	.L17:
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALD(*px++, *py--, sum);
 245              	 .loc 1 188 0
 246 01c8 07F5AC73 	 add r3,r7,#344
 247 01cc 1968     	 ldr r1,[r3]
 248 01ce 8A1C     	 adds r2,r1,#2
 249 01d0 07F5AC73 	 add r3,r7,#344
 250 01d4 1A60     	 str r2,[r3]
 251 01d6 0B88     	 ldrh r3,[r1]
 252 01d8 18B2     	 sxth r0,r3
 253 01da 07F5AA73 	 add r3,r7,#340
 254 01de 1968     	 ldr r1,[r3]
 255 01e0 8A1E     	 subs r2,r1,#2
 256 01e2 07F5AA73 	 add r3,r7,#340
 257 01e6 1A60     	 str r2,[r3]
 258 01e8 0B88     	 ldrh r3,[r1]
 259 01ea 19B2     	 sxth r1,r3
 260 01ec 07F58263 	 add r3,r7,#1040
 261 01f0 D3E90023 	 ldrd r2,[r3]
 262 01f4 C7F85C03 	 str r0,[r7,#860]
 263 01f8 C7F85813 	 str r1,[r7,#856]
 264 01fc 07F55471 	 add r1,r7,#848
 265 0200 C1E90023 	 strd r2,[r1]
 266              	.LBB76:
 267              	.LBB77:
 268              	 .file 2 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.1
   5:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     02. February 2017
   6:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  36:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                     __asm
  37:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  39:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                  inline
  40:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  41:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  44:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  47:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  48:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  50:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  51:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  53:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  65:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  71:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  72:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  76:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  77:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  78:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  79:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  83:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  85:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0U);
 644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   {
 864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     s--;
 867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Count leading zeros
 876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             number of leading zeros in value
 879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CLZ             __builtin_clz
 881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDREXB(volatile uint8_t *addr)
 894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDREXH(volatile uint16_t *addr)
 916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDREXW(volatile uint32_t *addr)
 938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *a
 955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXH(uint16_t value, volatile uint16_t 
 972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t 
 989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Remove the exclusive lock
 999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __CLREX(void)
1002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Signed Saturate
1017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates a signed value.
1018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Unsigned Saturate
1032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates an unsigned value.
1033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
1050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
1051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RRX(uint32_t value)
1053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDRT(volatile uint32_t *ptr)
1112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAB(volatile uint8_t *ptr)
1169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAH(volatile uint16_t *ptr)
1184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDA(volatile uint32_t *ptr)
1199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *p
1297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t 
1314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *
1331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated SIMD instructions
1347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
1348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** */
1349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__ARM_FEATURE_DSP == 1)                             /* ToDo ARMCLANG: This should be ARCH >= A
1351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32
1651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTB16(uint32_t op1)
1673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTB16(uint32_t op1)
1689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32
1721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint3
1729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint6
1737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   union llreg_u{
1739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t w32[2];
1740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint64_t w64;
1741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   } llr;
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   llr.w64 = acc;
 269              	 .loc 2 1742 0
 270 0204 07F15001 	 add r1,r7,#80
 271 0208 07F55473 	 add r3,r7,#848
 272 020c D3E90023 	 ldrd r2,[r3]
 273 0210 C1E90023 	 strd r2,[r1]
1743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (o
 274              	 .loc 2 1745 0
 275 0214 07F15003 	 add r3,r7,#80
 276 0218 1A68     	 ldr r2,[r3]
 277 021a 07F15003 	 add r3,r7,#80
 278 021e 5968     	 ldr r1,[r3,#4]
 279 0220 D7F85C03 	 ldr r0,[r7,#860]
 280 0224 D7F85833 	 ldr r3,[r7,#856]
 281              	
 282 0228 C0FBC321 	 smlald r2,r1,r0,r3
 283              	
 284              	 .thumb
 285 022c 07F15003 	 add r3,r7,#80
 286 0230 1A60     	 str r2,[r3]
 287 0232 07F15003 	 add r3,r7,#80
 288 0236 5960     	 str r1,[r3,#4]
1746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
1747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (o
1748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(llr.w64);
 289              	 .loc 2 1750 0
 290 0238 07F15003 	 add r3,r7,#80
 291 023c D3E90023 	 ldrd r2,[r3]
 292              	.LBE77:
 293              	.LBE76:
 294              	 .loc 1 188 0
 295 0240 07F58261 	 add r1,r7,#1040
 296 0244 C1E90023 	 strd r2,[r1]
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement the loop counter */
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
 297              	 .loc 1 191 0
 298 0248 D7F8D833 	 ldr r3,[r7,#984]
 299 024c 013B     	 subs r3,r3,#1
 300 024e C7F8D833 	 str r3,[r7,#984]
 301              	.L15:
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 302              	 .loc 1 185 0
 303 0252 D7F8D833 	 ldr r3,[r7,#984]
 304 0256 002B     	 cmp r3,#0
 305 0258 B6D1     	 bne .L17
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 306              	 .loc 1 195 0
 307 025a 07F5AE73 	 add r3,r7,#348
 308 025e 1968     	 ldr r1,[r3]
 309 0260 8A1C     	 adds r2,r1,#2
 310 0262 07F5AE73 	 add r3,r7,#348
 311 0266 1A60     	 str r2,[r3]
 312              	.LBB78:
 313 0268 07F58263 	 add r3,r7,#1040
 314 026c D3E90023 	 ldrd r2,[r3]
 315 0270 4FEAD238 	 lsr r8,r2,#15
 316 0274 48EA4348 	 orr r8,r8,r3,lsl#17
 317 0278 4FEAE339 	 asr r9,r3,#15
 318 027c 4346     	 mov r3,r8
 319 027e C7F8B833 	 str r3,[r7,#952]
 320 0282 D7F8B833 	 ldr r3,[r7,#952]
 321              	
 322 0286 03F30F03 	 ssat r3,#16,r3
 323              	
 324              	 .thumb
 325 028a C7F8B433 	 str r3,[r7,#948]
 326 028e D7F8B433 	 ldr r3,[r7,#948]
 327              	.LBE78:
 328 0292 9BB2     	 uxth r3,r3
 329 0294 0B80     	 strh r3,[r1]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       py = ++pSrc2;
 330              	 .loc 1 198 0
 331 0296 D7F8E833 	 ldr r3,[r7,#1000]
 332 029a 0233     	 adds r3,r3,#2
 333 029c C7F8E833 	 str r3,[r7,#1000]
 334 02a0 07F5AA72 	 add r2,r7,#340
 335 02a4 D7F8E833 	 ldr r3,[r7,#1000]
 336 02a8 1360     	 str r3,[r2]
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       px = pIn1;
 337              	 .loc 1 199 0
 338 02aa 07F5AC72 	 add r2,r7,#344
 339 02ae D7F81C34 	 ldr r3,[r7,#1052]
 340 02b2 1360     	 str r3,[r2]
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Increment the MAC count */
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       count++;
 341              	 .loc 1 202 0
 342 02b4 D7F8D433 	 ldr r3,[r7,#980]
 343 02b8 0133     	 adds r3,r3,#1
 344 02ba C7F8D433 	 str r3,[r7,#980]
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement the loop counter */
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       blockSize1--;
 345              	 .loc 1 205 0
 346 02be D7F8CC33 	 ldr r3,[r7,#972]
 347 02c2 013B     	 subs r3,r3,#1
 348 02c4 C7F8CC33 	 str r3,[r7,#972]
 349              	.L14:
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 350              	 .loc 1 176 0
 351 02c8 D7F8D433 	 ldr r3,[r7,#980]
 352 02cc 032B     	 cmp r3,#3
 353 02ce 04D8     	 bhi .L18
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 354              	 .loc 1 176 0 is_stmt 0 discriminator 1
 355 02d0 D7F8CC33 	 ldr r3,[r7,#972]
 356 02d4 002B     	 cmp r3,#0
 357 02d6 3FF76AAF 	 bgt .L19
 358              	.L18:
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* The second part of the stage starts here */
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* The internal loop, over count, is unrolled by 4 */
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* To, read the last two inputB samples using SIMD:
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     py = py - 1;
 359              	 .loc 1 212 0 is_stmt 1
 360 02da 07F5AA73 	 add r3,r7,#340
 361 02de 1B68     	 ldr r3,[r3]
 362 02e0 9A1E     	 subs r2,r3,#2
 363 02e2 07F5AA73 	 add r3,r7,#340
 364 02e6 1A60     	 str r2,[r3]
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     while (blockSize1 > 0)
 365              	 .loc 1 214 0
 366 02e8 1EE1     	 b .L20
 367              	.L28:
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Accumulator is made zero for every iteration */
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       sum = 0;
 368              	 .loc 1 217 0
 369 02ea 4FF00002 	 mov r2,#0
 370 02ee 4FF00003 	 mov r3,#0
 371 02f2 07F58261 	 add r1,r7,#1040
 372 02f6 C1E90023 	 strd r2,[r1]
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       k = count >> 2u;
 373              	 .loc 1 220 0
 374 02fa D7F8D433 	 ldr r3,[r7,#980]
 375 02fe 9B08     	 lsrs r3,r3,#2
 376 0300 C7F8D833 	 str r3,[r7,#984]
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0u)
 377              	 .loc 1 224 0
 378 0304 7CE0     	 b .L21
 379              	.L24:
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* x[0], x[1] are multiplied with y[srcBLen - 1], y[srcBLen - 2] respectively */
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALDX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 380              	 .loc 1 228 0
 381 0306 07F5AC71 	 add r1,r7,#344
 382 030a 0A68     	 ldr r2,[r1]
 383 030c 131D     	 adds r3,r2,#4
 384 030e 0B60     	 str r3,[r1]
 385 0310 1368     	 ldr r3,[r2]
 386 0312 1846     	 mov r0,r3
 387 0314 07F5AA71 	 add r1,r7,#340
 388 0318 0A68     	 ldr r2,[r1]
 389 031a 131F     	 subs r3,r2,#4
 390 031c 0B60     	 str r3,[r1]
 391 031e 1368     	 ldr r3,[r2]
 392 0320 1946     	 mov r1,r3
 393 0322 07F58263 	 add r3,r7,#1040
 394 0326 D3E90023 	 ldrd r2,[r3]
 395 032a C7F84C03 	 str r0,[r7,#844]
 396 032e C7F84813 	 str r1,[r7,#840]
 397 0332 07F55071 	 add r1,r7,#832
 398 0336 C1E90023 	 strd r2,[r1]
 399              	.LBB79:
 400              	.LBB80:
1751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint64_t __SMLALDX (uint32_t op1, uint32_t op2, uint
1754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   union llreg_u{
1756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t w32[2];
1757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint64_t w64;
1758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   } llr;
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   llr.w64 = acc;
 401              	 .loc 2 1759 0
 402 033a 07F15801 	 add r1,r7,#88
 403 033e 07F55073 	 add r3,r7,#832
 404 0342 D3E90023 	 ldrd r2,[r3]
 405 0346 C1E90023 	 strd r2,[r1]
1760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (
 406              	 .loc 2 1762 0
 407 034a 07F15803 	 add r3,r7,#88
 408 034e 1A68     	 ldr r2,[r3]
 409 0350 07F15803 	 add r3,r7,#88
 410 0354 5968     	 ldr r1,[r3,#4]
 411 0356 D7F84C03 	 ldr r0,[r7,#844]
 412 035a D7F84833 	 ldr r3,[r7,#840]
 413              	
 414 035e C0FBD321 	 smlaldx r2,r1,r0,r3
 415              	
 416              	 .thumb
 417 0362 07F15803 	 add r3,r7,#88
 418 0366 1A60     	 str r2,[r3]
 419 0368 07F15803 	 add r3,r7,#88
 420 036c 5960     	 str r1,[r3,#4]
1763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
1764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (
1765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(llr.w64);
 421              	 .loc 2 1767 0
 422 036e 07F15803 	 add r3,r7,#88
 423 0372 D3E90023 	 ldrd r2,[r3]
 424              	.LBE80:
 425              	.LBE79:
 426              	 .loc 1 228 0
 427 0376 07F58261 	 add r1,r7,#1040
 428 037a C1E90023 	 strd r2,[r1]
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* x[2], x[3] are multiplied with y[srcBLen - 3], y[srcBLen - 4] respectively */
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALDX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 429              	 .loc 1 230 0
 430 037e 07F5AC71 	 add r1,r7,#344
 431 0382 0A68     	 ldr r2,[r1]
 432 0384 131D     	 adds r3,r2,#4
 433 0386 0B60     	 str r3,[r1]
 434 0388 1368     	 ldr r3,[r2]
 435 038a 1846     	 mov r0,r3
 436 038c 07F5AA71 	 add r1,r7,#340
 437 0390 0A68     	 ldr r2,[r1]
 438 0392 131F     	 subs r3,r2,#4
 439 0394 0B60     	 str r3,[r1]
 440 0396 1368     	 ldr r3,[r2]
 441 0398 1946     	 mov r1,r3
 442 039a 07F58263 	 add r3,r7,#1040
 443 039e D3E90023 	 ldrd r2,[r3]
 444 03a2 C7F83C03 	 str r0,[r7,#828]
 445 03a6 C7F83813 	 str r1,[r7,#824]
 446 03aa 07F54C71 	 add r1,r7,#816
 447 03ae C1E90023 	 strd r2,[r1]
 448              	.LBB81:
 449              	.LBB82:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 450              	 .loc 2 1759 0
 451 03b2 07F16001 	 add r1,r7,#96
 452 03b6 07F54C73 	 add r3,r7,#816
 453 03ba D3E90023 	 ldrd r2,[r3]
 454 03be C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 455              	 .loc 2 1762 0
 456 03c2 07F16003 	 add r3,r7,#96
 457 03c6 1A68     	 ldr r2,[r3]
 458 03c8 07F16003 	 add r3,r7,#96
 459 03cc 5968     	 ldr r1,[r3,#4]
 460 03ce D7F83C03 	 ldr r0,[r7,#828]
 461 03d2 D7F83833 	 ldr r3,[r7,#824]
 462              	
 463 03d6 C0FBD321 	 smlaldx r2,r1,r0,r3
 464              	
 465              	 .thumb
 466 03da 07F16003 	 add r3,r7,#96
 467 03de 1A60     	 str r2,[r3]
 468 03e0 07F16003 	 add r3,r7,#96
 469 03e4 5960     	 str r1,[r3,#4]
 470              	 .loc 2 1767 0
 471 03e6 07F16003 	 add r3,r7,#96
 472 03ea D3E90023 	 ldrd r2,[r3]
 473              	.LBE82:
 474              	.LBE81:
 475              	 .loc 1 230 0
 476 03ee 07F58261 	 add r1,r7,#1040
 477 03f2 C1E90023 	 strd r2,[r1]
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement the loop counter */
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
 478              	 .loc 1 233 0
 479 03f6 D7F8D833 	 ldr r3,[r7,#984]
 480 03fa 013B     	 subs r3,r3,#1
 481 03fc C7F8D833 	 str r3,[r7,#984]
 482              	.L21:
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 483              	 .loc 1 224 0
 484 0400 D7F8D833 	 ldr r3,[r7,#984]
 485 0404 002B     	 cmp r3,#0
 486 0406 7FF47EAF 	 bne .L24
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* For the next MAC operations, the pointer py is used without SIMD
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        * So, py is incremented by 1 */
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       py = py + 1u;
 487              	 .loc 1 238 0
 488 040a 07F5AA73 	 add r3,r7,#340
 489 040e 1B68     	 ldr r3,[r3]
 490 0410 9A1C     	 adds r2,r3,#2
 491 0412 07F5AA73 	 add r3,r7,#340
 492 0416 1A60     	 str r2,[r3]
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        ** No loop unrolling is used. */
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       k = count % 0x4u;
 493              	 .loc 1 242 0
 494 0418 D7F8D433 	 ldr r3,[r7,#980]
 495 041c 03F00303 	 and r3,r3,#3
 496 0420 C7F8D833 	 str r3,[r7,#984]
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0u)
 497              	 .loc 1 244 0
 498 0424 44E0     	 b .L25
 499              	.L27:
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALD(*px++, *py--, sum);
 500              	 .loc 1 247 0
 501 0426 07F5AC73 	 add r3,r7,#344
 502 042a 1968     	 ldr r1,[r3]
 503 042c 8A1C     	 adds r2,r1,#2
 504 042e 07F5AC73 	 add r3,r7,#344
 505 0432 1A60     	 str r2,[r3]
 506 0434 0B88     	 ldrh r3,[r1]
 507 0436 1CB2     	 sxth r4,r3
 508 0438 07F5AA73 	 add r3,r7,#340
 509 043c 1968     	 ldr r1,[r3]
 510 043e 8A1E     	 subs r2,r1,#2
 511 0440 07F5AA73 	 add r3,r7,#340
 512 0444 1A60     	 str r2,[r3]
 513 0446 0B88     	 ldrh r3,[r1]
 514 0448 1BB2     	 sxth r3,r3
 515 044a 07F58262 	 add r2,r7,#1040
 516 044e D2E90001 	 ldrd r0,[r2]
 517 0452 C7F82C43 	 str r4,[r7,#812]
 518 0456 C7F82833 	 str r3,[r7,#808]
 519 045a 07F54873 	 add r3,r7,#800
 520 045e C3E90001 	 strd r0,[r3]
 521              	.LBB83:
 522              	.LBB84:
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523              	 .loc 2 1742 0
 524 0462 07F16801 	 add r1,r7,#104
 525 0466 07F54873 	 add r3,r7,#800
 526 046a D3E90023 	 ldrd r2,[r3]
 527 046e C1E90023 	 strd r2,[r1]
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 528              	 .loc 2 1745 0
 529 0472 07F16803 	 add r3,r7,#104
 530 0476 1A68     	 ldr r2,[r3]
 531 0478 07F16803 	 add r3,r7,#104
 532 047c 5968     	 ldr r1,[r3,#4]
 533 047e D7F82C03 	 ldr r0,[r7,#812]
 534 0482 D7F82833 	 ldr r3,[r7,#808]
 535              	
 536 0486 C0FBC321 	 smlald r2,r1,r0,r3
 537              	
 538              	 .thumb
 539 048a 07F16803 	 add r3,r7,#104
 540 048e 1A60     	 str r2,[r3]
 541 0490 07F16803 	 add r3,r7,#104
 542 0494 5960     	 str r1,[r3,#4]
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 543              	 .loc 2 1750 0
 544 0496 07F16803 	 add r3,r7,#104
 545 049a D3E90023 	 ldrd r2,[r3]
 546              	.LBE84:
 547              	.LBE83:
 548              	 .loc 1 247 0
 549 049e 07F58261 	 add r1,r7,#1040
 550 04a2 C1E90023 	 strd r2,[r1]
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement the loop counter */
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
 551              	 .loc 1 250 0
 552 04a6 D7F8D833 	 ldr r3,[r7,#984]
 553 04aa 013B     	 subs r3,r3,#1
 554 04ac C7F8D833 	 str r3,[r7,#984]
 555              	.L25:
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 556              	 .loc 1 244 0
 557 04b0 D7F8D833 	 ldr r3,[r7,#984]
 558 04b4 002B     	 cmp r3,#0
 559 04b6 B6D1     	 bne .L27
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 560              	 .loc 1 254 0
 561 04b8 07F5AE73 	 add r3,r7,#348
 562 04bc 1968     	 ldr r1,[r3]
 563 04be 8A1C     	 adds r2,r1,#2
 564 04c0 07F5AE73 	 add r3,r7,#348
 565 04c4 1A60     	 str r2,[r3]
 566              	.LBB85:
 567 04c6 07F58263 	 add r3,r7,#1040
 568 04ca D3E90023 	 ldrd r2,[r3]
 569 04ce 4FEAD23A 	 lsr r10,r2,#15
 570 04d2 4AEA434A 	 orr r10,r10,r3,lsl#17
 571 04d6 4FEAE33B 	 asr fp,r3,#15
 572 04da 5346     	 mov r3,r10
 573 04dc C7F8B033 	 str r3,[r7,#944]
 574 04e0 D7F8B033 	 ldr r3,[r7,#944]
 575              	
 576 04e4 03F30F03 	 ssat r3,#16,r3
 577              	
 578              	 .thumb
 579 04e8 C7F8AC33 	 str r3,[r7,#940]
 580 04ec D7F8AC33 	 ldr r3,[r7,#940]
 581              	.LBE85:
 582 04f0 9BB2     	 uxth r3,r3
 583 04f2 0B80     	 strh r3,[r1]
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       py = ++pSrc2 - 1u;
 584              	 .loc 1 257 0
 585 04f4 D7F8E833 	 ldr r3,[r7,#1000]
 586 04f8 0233     	 adds r3,r3,#2
 587 04fa C7F8E833 	 str r3,[r7,#1000]
 588 04fe D7F8E833 	 ldr r3,[r7,#1000]
 589 0502 9A1E     	 subs r2,r3,#2
 590 0504 07F5AA73 	 add r3,r7,#340
 591 0508 1A60     	 str r2,[r3]
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       px = pIn1;
 592              	 .loc 1 258 0
 593 050a 07F5AC72 	 add r2,r7,#344
 594 050e D7F81C34 	 ldr r3,[r7,#1052]
 595 0512 1360     	 str r3,[r2]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Increment the MAC count */
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       count++;
 596              	 .loc 1 261 0
 597 0514 D7F8D433 	 ldr r3,[r7,#980]
 598 0518 0133     	 adds r3,r3,#1
 599 051a C7F8D433 	 str r3,[r7,#980]
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement the loop counter */
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       blockSize1--;
 600              	 .loc 1 264 0
 601 051e D7F8CC33 	 ldr r3,[r7,#972]
 602 0522 013B     	 subs r3,r3,#1
 603 0524 C7F8CC33 	 str r3,[r7,#972]
 604              	.L20:
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 605              	 .loc 1 214 0
 606 0528 D7F8CC33 	 ldr r3,[r7,#972]
 607 052c 002B     	 cmp r3,#0
 608 052e 3FF7DCAE 	 bgt .L28
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* --------------------------
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * Initializations of stage2
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * ------------------------*/
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * ....
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      */
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputA */
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     if ((int32_t)firstIndex - (int32_t)srcBLen + 1 > 0)
 609              	 .loc 1 278 0
 610 0532 D7F83C24 	 ldr r2,[r7,#1084]
 611 0536 07F14003 	 add r3,r7,#64
 612 053a 1B68     	 ldr r3,[r3]
 613 053c D31A     	 subs r3,r2,r3
 614 053e 0133     	 adds r3,r3,#1
 615 0540 002B     	 cmp r3,#0
 616 0542 0EDD     	 ble .L29
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       px = pIn1 + firstIndex - srcBLen + 1;
 617              	 .loc 1 280 0
 618 0544 07F14003 	 add r3,r7,#64
 619 0548 D7F83C24 	 ldr r2,[r7,#1084]
 620 054c 1B68     	 ldr r3,[r3]
 621 054e D31A     	 subs r3,r2,r3
 622 0550 0133     	 adds r3,r3,#1
 623 0552 5A00     	 lsls r2,r3,#1
 624 0554 D7F81C34 	 ldr r3,[r7,#1052]
 625 0558 1A44     	 add r2,r2,r3
 626 055a 07F5AC73 	 add r3,r7,#344
 627 055e 1A60     	 str r2,[r3]
 628 0560 04E0     	 b .L30
 629              	.L29:
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     else
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       px = pIn1;
 630              	 .loc 1 284 0
 631 0562 07F5AC72 	 add r2,r7,#344
 632 0566 D7F81C34 	 ldr r3,[r7,#1052]
 633 056a 1360     	 str r3,[r2]
 634              	.L30:
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputB */
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1u);
 635              	 .loc 1 288 0
 636 056c 07F14003 	 add r3,r7,#64
 637 0570 1B68     	 ldr r3,[r3]
 638 0572 03F10043 	 add r3,r3,#-2147483648
 639 0576 013B     	 subs r3,r3,#1
 640 0578 5A00     	 lsls r2,r3,#1
 641 057a D7F81834 	 ldr r3,[r7,#1048]
 642 057e 1344     	 add r3,r3,r2
 643 0580 C7F8E833 	 str r3,[r7,#1000]
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     py = pSrc2;
 644              	 .loc 1 289 0
 645 0584 07F5AA72 	 add r2,r7,#340
 646 0588 D7F8E833 	 ldr r3,[r7,#1000]
 647 058c 1360     	 str r3,[r2]
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* count is the index by which the pointer pIn1 to be incremented */
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     count = 0u;
 648              	 .loc 1 292 0
 649 058e 0023     	 movs r3,#0
 650 0590 C7F8D433 	 str r3,[r7,#980]
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   /* --------------------
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****    * Stage2 process
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****    * -------------------*/
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****    * So, to loop unroll over blockSize2,
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****    * srcBLen should be greater than or equal to 4 */
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   if (srcBLen >= 4u)
 651              	 .loc 1 302 0
 652 0594 07F14003 	 add r3,r7,#64
 653 0598 1B68     	 ldr r3,[r3]
 654 059a 032B     	 cmp r3,#3
 655 059c 40F2AF87 	 bls .L31
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   {
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Loop unroll over blockSize2, by 4 */
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     blkCnt = blockSize2 >> 2u;
 656              	 .loc 1 305 0
 657 05a0 D7F8BC33 	 ldr r3,[r7,#956]
 658 05a4 9B10     	 asrs r3,r3,#2
 659 05a6 C7F8D033 	 str r3,[r7,#976]
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     while (blkCnt > 0u)
 660              	 .loc 1 307 0
 661 05aa 00F08ABE 	 b .L32
 662              	.L61:
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       py = py - 1u;
 663              	 .loc 1 309 0
 664 05ae 07F5AA73 	 add r3,r7,#340
 665 05b2 1B68     	 ldr r3,[r3]
 666 05b4 9A1E     	 subs r2,r3,#2
 667 05b6 07F5AA73 	 add r3,r7,#340
 668 05ba 1A60     	 str r2,[r3]
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Set all accumulators to zero */
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       acc0 = 0;
 669              	 .loc 1 312 0
 670 05bc 4FF00002 	 mov r2,#0
 671 05c0 4FF00003 	 mov r3,#0
 672 05c4 07F58161 	 add r1,r7,#1032
 673 05c8 C1E90023 	 strd r2,[r1]
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       acc1 = 0;
 674              	 .loc 1 313 0
 675 05cc 4FF00002 	 mov r2,#0
 676 05d0 4FF00003 	 mov r3,#0
 677 05d4 07F58061 	 add r1,r7,#1024
 678 05d8 C1E90023 	 strd r2,[r1]
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       acc2 = 0;
 679              	 .loc 1 314 0
 680 05dc 4FF00002 	 mov r2,#0
 681 05e0 4FF00003 	 mov r3,#0
 682 05e4 07F57E71 	 add r1,r7,#1016
 683 05e8 C1E90023 	 strd r2,[r1]
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       acc3 = 0;
 684              	 .loc 1 315 0
 685 05ec 4FF00002 	 mov r2,#0
 686 05f0 4FF00003 	 mov r3,#0
 687 05f4 07F57C71 	 add r1,r7,#1008
 688 05f8 C1E90023 	 strd r2,[r1]
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* read x[0], x[1] samples */
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       x0 = *__SIMD32(px);
 689              	 .loc 1 319 0
 690 05fc 07F5AC73 	 add r3,r7,#344
 691 0600 1B68     	 ldr r3,[r3]
 692 0602 1B68     	 ldr r3,[r3]
 693 0604 C7F8E433 	 str r3,[r7,#996]
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* read x[1], x[2] samples */
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       x1 = _SIMD32_OFFSET(px+1);
 694              	 .loc 1 321 0
 695 0608 07F5AC73 	 add r3,r7,#344
 696 060c 1B68     	 ldr r3,[r3]
 697 060e D3F80230 	 ldr r3,[r3,#2]
 698 0612 C7F8E033 	 str r3,[r7,#992]
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       px+= 2u;
 699              	 .loc 1 322 0
 700 0616 07F5AC73 	 add r3,r7,#344
 701 061a 1B68     	 ldr r3,[r3]
 702 061c 1A1D     	 adds r2,r3,#4
 703 061e 07F5AC73 	 add r3,r7,#344
 704 0622 1A60     	 str r2,[r3]
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       k = srcBLen >> 2u;
 705              	 .loc 1 326 0
 706 0624 07F14003 	 add r3,r7,#64
 707 0628 1B68     	 ldr r3,[r3]
 708 062a 9B08     	 lsrs r3,r3,#2
 709 062c C7F8D833 	 str r3,[r7,#984]
 710              	.L41:
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       do
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read the last two inputB samples using SIMD:
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****          * y[srcBLen - 1] and y[srcBLen - 2] */
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         c0 = *__SIMD32(py)--;
 711              	 .loc 1 334 0 discriminator 1
 712 0630 07F5AA71 	 add r1,r7,#340
 713 0634 0A68     	 ldr r2,[r1]
 714 0636 131F     	 subs r3,r2,#4
 715 0638 0B60     	 str r3,[r1]
 716 063a 1368     	 ldr r3,[r2]
 717 063c C7F8A833 	 str r3,[r7,#936]
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc0 = __SMLALDX(x0, c0, acc0);
 718              	 .loc 1 337 0 discriminator 1
 719 0640 D7F8E423 	 ldr r2,[r7,#996]
 720 0644 D7F8A843 	 ldr r4,[r7,#936]
 721 0648 07F58163 	 add r3,r7,#1032
 722 064c D3E90001 	 ldrd r0,[r3]
 723 0650 07F54773 	 add r3,r7,#796
 724 0654 1A60     	 str r2,[r3]
 725 0656 07F54673 	 add r3,r7,#792
 726 065a 1C60     	 str r4,[r3]
 727 065c 07F54473 	 add r3,r7,#784
 728 0660 C3E90001 	 strd r0,[r3]
 729              	.LBB86:
 730              	.LBB87:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 731              	 .loc 2 1759 0 discriminator 1
 732 0664 07F17001 	 add r1,r7,#112
 733 0668 07F54473 	 add r3,r7,#784
 734 066c D3E90023 	 ldrd r2,[r3]
 735 0670 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 736              	 .loc 2 1762 0 discriminator 1
 737 0674 07F17003 	 add r3,r7,#112
 738 0678 1A68     	 ldr r2,[r3]
 739 067a 07F17003 	 add r3,r7,#112
 740 067e 5968     	 ldr r1,[r3,#4]
 741 0680 07F54773 	 add r3,r7,#796
 742 0684 1868     	 ldr r0,[r3]
 743 0686 07F54673 	 add r3,r7,#792
 744 068a 1B68     	 ldr r3,[r3]
 745              	
 746 068c C0FBD321 	 smlaldx r2,r1,r0,r3
 747              	
 748              	 .thumb
 749 0690 07F17003 	 add r3,r7,#112
 750 0694 1A60     	 str r2,[r3]
 751 0696 07F17003 	 add r3,r7,#112
 752 069a 5960     	 str r1,[r3,#4]
 753              	 .loc 2 1767 0 discriminator 1
 754 069c 07F17003 	 add r3,r7,#112
 755 06a0 D3E90023 	 ldrd r2,[r3]
 756              	.LBE87:
 757              	.LBE86:
 758              	 .loc 1 337 0 discriminator 1
 759 06a4 07F58161 	 add r1,r7,#1032
 760 06a8 C1E90023 	 strd r2,[r1]
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc1 = __SMLALDX(x1, c0, acc1);
 761              	 .loc 1 340 0 discriminator 1
 762 06ac D7F8E023 	 ldr r2,[r7,#992]
 763 06b0 D7F8A843 	 ldr r4,[r7,#936]
 764 06b4 07F58063 	 add r3,r7,#1024
 765 06b8 D3E90001 	 ldrd r0,[r3]
 766 06bc 07F54373 	 add r3,r7,#780
 767 06c0 1A60     	 str r2,[r3]
 768 06c2 07F54273 	 add r3,r7,#776
 769 06c6 1C60     	 str r4,[r3]
 770 06c8 07F54073 	 add r3,r7,#768
 771 06cc C3E90001 	 strd r0,[r3]
 772              	.LBB88:
 773              	.LBB89:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 774              	 .loc 2 1759 0 discriminator 1
 775 06d0 07F17801 	 add r1,r7,#120
 776 06d4 07F54073 	 add r3,r7,#768
 777 06d8 D3E90023 	 ldrd r2,[r3]
 778 06dc C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 779              	 .loc 2 1762 0 discriminator 1
 780 06e0 07F17803 	 add r3,r7,#120
 781 06e4 1A68     	 ldr r2,[r3]
 782 06e6 07F17803 	 add r3,r7,#120
 783 06ea 5968     	 ldr r1,[r3,#4]
 784 06ec 07F54373 	 add r3,r7,#780
 785 06f0 1868     	 ldr r0,[r3]
 786 06f2 07F54273 	 add r3,r7,#776
 787 06f6 1B68     	 ldr r3,[r3]
 788              	
 789 06f8 C0FBD321 	 smlaldx r2,r1,r0,r3
 790              	
 791              	 .thumb
 792 06fc 07F17803 	 add r3,r7,#120
 793 0700 1A60     	 str r2,[r3]
 794 0702 07F17803 	 add r3,r7,#120
 795 0706 5960     	 str r1,[r3,#4]
 796              	 .loc 2 1767 0 discriminator 1
 797 0708 07F17803 	 add r3,r7,#120
 798 070c D3E90023 	 ldrd r2,[r3]
 799              	.LBE89:
 800              	.LBE88:
 801              	 .loc 1 340 0 discriminator 1
 802 0710 07F58061 	 add r1,r7,#1024
 803 0714 C1E90023 	 strd r2,[r1]
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read x[2], x[3] */
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         x2 = *__SIMD32(px);
 804              	 .loc 1 343 0 discriminator 1
 805 0718 07F5AC73 	 add r3,r7,#344
 806 071c 1B68     	 ldr r3,[r3]
 807 071e 1B68     	 ldr r3,[r3]
 808 0720 C7F8A433 	 str r3,[r7,#932]
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read x[3], x[4] */
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         x3 = _SIMD32_OFFSET(px+1);
 809              	 .loc 1 346 0 discriminator 1
 810 0724 07F5AC73 	 add r3,r7,#344
 811 0728 1B68     	 ldr r3,[r3]
 812 072a D3F80230 	 ldr r3,[r3,#2]
 813 072e C7F8A033 	 str r3,[r7,#928]
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc2 = __SMLALDX(x2, c0, acc2);
 814              	 .loc 1 349 0 discriminator 1
 815 0732 D7F8A423 	 ldr r2,[r7,#932]
 816 0736 D7F8A843 	 ldr r4,[r7,#936]
 817 073a 07F57E73 	 add r3,r7,#1016
 818 073e D3E90001 	 ldrd r0,[r3]
 819 0742 07F53F73 	 add r3,r7,#764
 820 0746 1A60     	 str r2,[r3]
 821 0748 07F53E73 	 add r3,r7,#760
 822 074c 1C60     	 str r4,[r3]
 823 074e 07F53C73 	 add r3,r7,#752
 824 0752 C3E90001 	 strd r0,[r3]
 825              	.LBB90:
 826              	.LBB91:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 827              	 .loc 2 1759 0 discriminator 1
 828 0756 07F18001 	 add r1,r7,#128
 829 075a 07F53C73 	 add r3,r7,#752
 830 075e D3E90023 	 ldrd r2,[r3]
 831 0762 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 832              	 .loc 2 1762 0 discriminator 1
 833 0766 07F18003 	 add r3,r7,#128
 834 076a 1A68     	 ldr r2,[r3]
 835 076c 07F18003 	 add r3,r7,#128
 836 0770 5968     	 ldr r1,[r3,#4]
 837 0772 07F53F73 	 add r3,r7,#764
 838 0776 1868     	 ldr r0,[r3]
 839 0778 07F53E73 	 add r3,r7,#760
 840 077c 1B68     	 ldr r3,[r3]
 841              	
 842 077e C0FBD321 	 smlaldx r2,r1,r0,r3
 843              	
 844              	 .thumb
 845 0782 07F18003 	 add r3,r7,#128
 846 0786 1A60     	 str r2,[r3]
 847 0788 07F18003 	 add r3,r7,#128
 848 078c 5960     	 str r1,[r3,#4]
 849              	 .loc 2 1767 0 discriminator 1
 850 078e 07F18003 	 add r3,r7,#128
 851 0792 D3E90023 	 ldrd r2,[r3]
 852              	.LBE91:
 853              	.LBE90:
 854              	 .loc 1 349 0 discriminator 1
 855 0796 07F57E71 	 add r1,r7,#1016
 856 079a C1E90023 	 strd r2,[r1]
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc3 = __SMLALDX(x3, c0, acc3);
 857              	 .loc 1 352 0 discriminator 1
 858 079e D7F8A023 	 ldr r2,[r7,#928]
 859 07a2 D7F8A843 	 ldr r4,[r7,#936]
 860 07a6 07F57C73 	 add r3,r7,#1008
 861 07aa D3E90001 	 ldrd r0,[r3]
 862 07ae 07F53B73 	 add r3,r7,#748
 863 07b2 1A60     	 str r2,[r3]
 864 07b4 07F53A73 	 add r3,r7,#744
 865 07b8 1C60     	 str r4,[r3]
 866 07ba 07F53873 	 add r3,r7,#736
 867 07be C3E90001 	 strd r0,[r3]
 868              	.LBB92:
 869              	.LBB93:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 870              	 .loc 2 1759 0 discriminator 1
 871 07c2 07F18801 	 add r1,r7,#136
 872 07c6 07F53873 	 add r3,r7,#736
 873 07ca D3E90023 	 ldrd r2,[r3]
 874 07ce C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 875              	 .loc 2 1762 0 discriminator 1
 876 07d2 07F18803 	 add r3,r7,#136
 877 07d6 1A68     	 ldr r2,[r3]
 878 07d8 07F18803 	 add r3,r7,#136
 879 07dc 5968     	 ldr r1,[r3,#4]
 880 07de 07F53B73 	 add r3,r7,#748
 881 07e2 1868     	 ldr r0,[r3]
 882 07e4 07F53A73 	 add r3,r7,#744
 883 07e8 1B68     	 ldr r3,[r3]
 884              	
 885 07ea C0FBD321 	 smlaldx r2,r1,r0,r3
 886              	
 887              	 .thumb
 888 07ee 07F18803 	 add r3,r7,#136
 889 07f2 1A60     	 str r2,[r3]
 890 07f4 07F18803 	 add r3,r7,#136
 891 07f8 5960     	 str r1,[r3,#4]
 892              	 .loc 2 1767 0 discriminator 1
 893 07fa 07F18803 	 add r3,r7,#136
 894 07fe D3E90023 	 ldrd r2,[r3]
 895              	.LBE93:
 896              	.LBE92:
 897              	 .loc 1 352 0 discriminator 1
 898 0802 07F57C71 	 add r1,r7,#1008
 899 0806 C1E90023 	 strd r2,[r1]
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read y[srcBLen - 3] and y[srcBLen - 4] */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         c0 = *__SIMD32(py)--;
 900              	 .loc 1 355 0 discriminator 1
 901 080a 07F5AA71 	 add r1,r7,#340
 902 080e 0A68     	 ldr r2,[r1]
 903 0810 131F     	 subs r3,r2,#4
 904 0812 0B60     	 str r3,[r1]
 905 0814 1368     	 ldr r3,[r2]
 906 0816 C7F8A833 	 str r3,[r7,#936]
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc0 = __SMLALDX(x2, c0, acc0);
 907              	 .loc 1 358 0 discriminator 1
 908 081a D7F8A423 	 ldr r2,[r7,#932]
 909 081e D7F8A843 	 ldr r4,[r7,#936]
 910 0822 07F58163 	 add r3,r7,#1032
 911 0826 D3E90001 	 ldrd r0,[r3]
 912 082a 07F53773 	 add r3,r7,#732
 913 082e 1A60     	 str r2,[r3]
 914 0830 07F53673 	 add r3,r7,#728
 915 0834 1C60     	 str r4,[r3]
 916 0836 07F53473 	 add r3,r7,#720
 917 083a C3E90001 	 strd r0,[r3]
 918              	.LBB94:
 919              	.LBB95:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 920              	 .loc 2 1759 0 discriminator 1
 921 083e 07F19001 	 add r1,r7,#144
 922 0842 07F53473 	 add r3,r7,#720
 923 0846 D3E90023 	 ldrd r2,[r3]
 924 084a C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 925              	 .loc 2 1762 0 discriminator 1
 926 084e 07F19003 	 add r3,r7,#144
 927 0852 1A68     	 ldr r2,[r3]
 928 0854 07F19003 	 add r3,r7,#144
 929 0858 5968     	 ldr r1,[r3,#4]
 930 085a 07F53773 	 add r3,r7,#732
 931 085e 1868     	 ldr r0,[r3]
 932 0860 07F53673 	 add r3,r7,#728
 933 0864 1B68     	 ldr r3,[r3]
 934              	
 935 0866 C0FBD321 	 smlaldx r2,r1,r0,r3
 936              	
 937              	 .thumb
 938 086a 07F19003 	 add r3,r7,#144
 939 086e 1A60     	 str r2,[r3]
 940 0870 07F19003 	 add r3,r7,#144
 941 0874 5960     	 str r1,[r3,#4]
 942              	 .loc 2 1767 0 discriminator 1
 943 0876 07F19003 	 add r3,r7,#144
 944 087a D3E90023 	 ldrd r2,[r3]
 945              	.LBE95:
 946              	.LBE94:
 947              	 .loc 1 358 0 discriminator 1
 948 087e 07F58161 	 add r1,r7,#1032
 949 0882 C1E90023 	 strd r2,[r1]
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc1 = __SMLALDX(x3, c0, acc1);
 950              	 .loc 1 361 0 discriminator 1
 951 0886 D7F8A023 	 ldr r2,[r7,#928]
 952 088a D7F8A843 	 ldr r4,[r7,#936]
 953 088e 07F58063 	 add r3,r7,#1024
 954 0892 D3E90001 	 ldrd r0,[r3]
 955 0896 07F53373 	 add r3,r7,#716
 956 089a 1A60     	 str r2,[r3]
 957 089c 07F53273 	 add r3,r7,#712
 958 08a0 1C60     	 str r4,[r3]
 959 08a2 07F53073 	 add r3,r7,#704
 960 08a6 C3E90001 	 strd r0,[r3]
 961              	.LBB96:
 962              	.LBB97:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 963              	 .loc 2 1759 0 discriminator 1
 964 08aa 07F19801 	 add r1,r7,#152
 965 08ae 07F53073 	 add r3,r7,#704
 966 08b2 D3E90023 	 ldrd r2,[r3]
 967 08b6 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 968              	 .loc 2 1762 0 discriminator 1
 969 08ba 07F19803 	 add r3,r7,#152
 970 08be 1A68     	 ldr r2,[r3]
 971 08c0 07F19803 	 add r3,r7,#152
 972 08c4 5968     	 ldr r1,[r3,#4]
 973 08c6 07F53373 	 add r3,r7,#716
 974 08ca 1868     	 ldr r0,[r3]
 975 08cc 07F53273 	 add r3,r7,#712
 976 08d0 1B68     	 ldr r3,[r3]
 977              	
 978 08d2 C0FBD321 	 smlaldx r2,r1,r0,r3
 979              	
 980              	 .thumb
 981 08d6 07F19803 	 add r3,r7,#152
 982 08da 1A60     	 str r2,[r3]
 983 08dc 07F19803 	 add r3,r7,#152
 984 08e0 5960     	 str r1,[r3,#4]
 985              	 .loc 2 1767 0 discriminator 1
 986 08e2 07F19803 	 add r3,r7,#152
 987 08e6 D3E90023 	 ldrd r2,[r3]
 988              	.LBE97:
 989              	.LBE96:
 990              	 .loc 1 361 0 discriminator 1
 991 08ea 07F58061 	 add r1,r7,#1024
 992 08ee C1E90023 	 strd r2,[r1]
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read x[4], x[5] */
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         x0 = _SIMD32_OFFSET(px+2);
 993              	 .loc 1 364 0 discriminator 1
 994 08f2 07F5AC73 	 add r3,r7,#344
 995 08f6 1B68     	 ldr r3,[r3]
 996 08f8 5B68     	 ldr r3,[r3,#4]
 997 08fa C7F8E433 	 str r3,[r7,#996]
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read x[5], x[6] */
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         x1 = _SIMD32_OFFSET(px+3);
 998              	 .loc 1 367 0 discriminator 1
 999 08fe 07F5AC73 	 add r3,r7,#344
 1000 0902 1B68     	 ldr r3,[r3]
 1001 0904 D3F80630 	 ldr r3,[r3,#6]
 1002 0908 C7F8E033 	 str r3,[r7,#992]
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         px += 4u;
 1003              	 .loc 1 368 0 discriminator 1
 1004 090c 07F5AC73 	 add r3,r7,#344
 1005 0910 1B68     	 ldr r3,[r3]
 1006 0912 03F10802 	 add r2,r3,#8
 1007 0916 07F5AC73 	 add r3,r7,#344
 1008 091a 1A60     	 str r2,[r3]
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc2 = __SMLALDX(x0, c0, acc2);
 1009              	 .loc 1 371 0 discriminator 1
 1010 091c D7F8E423 	 ldr r2,[r7,#996]
 1011 0920 D7F8A843 	 ldr r4,[r7,#936]
 1012 0924 07F57E73 	 add r3,r7,#1016
 1013 0928 D3E90001 	 ldrd r0,[r3]
 1014 092c 07F52F73 	 add r3,r7,#700
 1015 0930 1A60     	 str r2,[r3]
 1016 0932 07F52E73 	 add r3,r7,#696
 1017 0936 1C60     	 str r4,[r3]
 1018 0938 07F52C73 	 add r3,r7,#688
 1019 093c C3E90001 	 strd r0,[r3]
 1020              	.LBB98:
 1021              	.LBB99:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1022              	 .loc 2 1759 0 discriminator 1
 1023 0940 07F1A001 	 add r1,r7,#160
 1024 0944 07F52C73 	 add r3,r7,#688
 1025 0948 D3E90023 	 ldrd r2,[r3]
 1026 094c C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1027              	 .loc 2 1762 0 discriminator 1
 1028 0950 07F1A003 	 add r3,r7,#160
 1029 0954 1A68     	 ldr r2,[r3]
 1030 0956 07F1A003 	 add r3,r7,#160
 1031 095a 5968     	 ldr r1,[r3,#4]
 1032 095c 07F52F73 	 add r3,r7,#700
 1033 0960 1868     	 ldr r0,[r3]
 1034 0962 07F52E73 	 add r3,r7,#696
 1035 0966 1B68     	 ldr r3,[r3]
 1036              	
 1037 0968 C0FBD321 	 smlaldx r2,r1,r0,r3
 1038              	
 1039              	 .thumb
 1040 096c 07F1A003 	 add r3,r7,#160
 1041 0970 1A60     	 str r2,[r3]
 1042 0972 07F1A003 	 add r3,r7,#160
 1043 0976 5960     	 str r1,[r3,#4]
 1044              	 .loc 2 1767 0 discriminator 1
 1045 0978 07F1A003 	 add r3,r7,#160
 1046 097c D3E90023 	 ldrd r2,[r3]
 1047              	.LBE99:
 1048              	.LBE98:
 1049              	 .loc 1 371 0 discriminator 1
 1050 0980 07F57E71 	 add r1,r7,#1016
 1051 0984 C1E90023 	 strd r2,[r1]
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc3 = __SMLALDX(x1, c0, acc3);
 1052              	 .loc 1 374 0 discriminator 1
 1053 0988 D7F8E023 	 ldr r2,[r7,#992]
 1054 098c D7F8A843 	 ldr r4,[r7,#936]
 1055 0990 07F57C73 	 add r3,r7,#1008
 1056 0994 D3E90001 	 ldrd r0,[r3]
 1057 0998 07F52B73 	 add r3,r7,#684
 1058 099c 1A60     	 str r2,[r3]
 1059 099e 07F52A73 	 add r3,r7,#680
 1060 09a2 1C60     	 str r4,[r3]
 1061 09a4 07F52873 	 add r3,r7,#672
 1062 09a8 C3E90001 	 strd r0,[r3]
 1063              	.LBB100:
 1064              	.LBB101:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1065              	 .loc 2 1759 0 discriminator 1
 1066 09ac 07F1A801 	 add r1,r7,#168
 1067 09b0 07F52873 	 add r3,r7,#672
 1068 09b4 D3E90023 	 ldrd r2,[r3]
 1069 09b8 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1070              	 .loc 2 1762 0 discriminator 1
 1071 09bc 07F1A803 	 add r3,r7,#168
 1072 09c0 1A68     	 ldr r2,[r3]
 1073 09c2 07F1A803 	 add r3,r7,#168
 1074 09c6 5968     	 ldr r1,[r3,#4]
 1075 09c8 07F52B73 	 add r3,r7,#684
 1076 09cc 1868     	 ldr r0,[r3]
 1077 09ce 07F52A73 	 add r3,r7,#680
 1078 09d2 1B68     	 ldr r3,[r3]
 1079              	
 1080 09d4 C0FBD321 	 smlaldx r2,r1,r0,r3
 1081              	
 1082              	 .thumb
 1083 09d8 07F1A803 	 add r3,r7,#168
 1084 09dc 1A60     	 str r2,[r3]
 1085 09de 07F1A803 	 add r3,r7,#168
 1086 09e2 5960     	 str r1,[r3,#4]
 1087              	 .loc 2 1767 0 discriminator 1
 1088 09e4 07F1A803 	 add r3,r7,#168
 1089 09e8 D3E90023 	 ldrd r2,[r3]
 1090              	.LBE101:
 1091              	.LBE100:
 1092              	 .loc 1 374 0 discriminator 1
 1093 09ec 07F57C71 	 add r1,r7,#1008
 1094 09f0 C1E90023 	 strd r2,[r1]
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       } while (--k);
 1095              	 .loc 1 376 0 discriminator 1
 1096 09f4 D7F8D833 	 ldr r3,[r7,#984]
 1097 09f8 013B     	 subs r3,r3,#1
 1098 09fa C7F8D833 	 str r3,[r7,#984]
 1099 09fe D7F8D833 	 ldr r3,[r7,#984]
 1100 0a02 002B     	 cmp r3,#0
 1101 0a04 7FF414AE 	 bne .L41
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* For the next MAC operations, SIMD is not used
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        * So, the 16 bit pointer if inputB, py is updated */
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        ** No loop unrolling is used. */
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       k = srcBLen % 0x4u;
 1102              	 .loc 1 383 0
 1103 0a08 07F14003 	 add r3,r7,#64
 1104 0a0c 1B68     	 ldr r3,[r3]
 1105 0a0e 03F00303 	 and r3,r3,#3
 1106 0a12 C7F8D833 	 str r3,[r7,#984]
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       if (k == 1u)
 1107              	 .loc 1 385 0
 1108 0a16 D7F8D833 	 ldr r3,[r7,#984]
 1109 0a1a 012B     	 cmp r3,#1
 1110 0a1c 40F0F280 	 bne .L42
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read y[srcBLen - 5] */
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         c0 = *(py+1);
 1111              	 .loc 1 388 0
 1112 0a20 07F5AA73 	 add r3,r7,#340
 1113 0a24 1B68     	 ldr r3,[r3]
 1114 0a26 0233     	 adds r3,r3,#2
 1115 0a28 1B88     	 ldrh r3,[r3]
 1116 0a2a 1BB2     	 sxth r3,r3
 1117 0a2c C7F8A833 	 str r3,[r7,#936]
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         c0 = c0 << 16u;
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #else
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         c0 = c0 & 0x0000FFFF;
 1118              	 .loc 1 396 0
 1119 0a30 D7F8A833 	 ldr r3,[r7,#936]
 1120 0a34 9BB2     	 uxth r3,r3
 1121 0a36 C7F8A833 	 str r3,[r7,#936]
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read x[7] */
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         x3 = *__SIMD32(px);
 1122              	 .loc 1 401 0
 1123 0a3a 07F5AC73 	 add r3,r7,#344
 1124 0a3e 1B68     	 ldr r3,[r3]
 1125 0a40 1B68     	 ldr r3,[r3]
 1126 0a42 C7F8A033 	 str r3,[r7,#928]
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         px++;
 1127              	 .loc 1 402 0
 1128 0a46 07F5AC73 	 add r3,r7,#344
 1129 0a4a 1B68     	 ldr r3,[r3]
 1130 0a4c 9A1C     	 adds r2,r3,#2
 1131 0a4e 07F5AC73 	 add r3,r7,#344
 1132 0a52 1A60     	 str r2,[r3]
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc0 = __SMLALD(x0, c0, acc0);
 1133              	 .loc 1 405 0
 1134 0a54 D7F8E423 	 ldr r2,[r7,#996]
 1135 0a58 D7F8A843 	 ldr r4,[r7,#936]
 1136 0a5c 07F58163 	 add r3,r7,#1032
 1137 0a60 D3E90001 	 ldrd r0,[r3]
 1138 0a64 07F52773 	 add r3,r7,#668
 1139 0a68 1A60     	 str r2,[r3]
 1140 0a6a 07F52673 	 add r3,r7,#664
 1141 0a6e 1C60     	 str r4,[r3]
 1142 0a70 07F52473 	 add r3,r7,#656
 1143 0a74 C3E90001 	 strd r0,[r3]
 1144              	.LBB102:
 1145              	.LBB103:
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1146              	 .loc 2 1742 0
 1147 0a78 07F1B001 	 add r1,r7,#176
 1148 0a7c 07F52473 	 add r3,r7,#656
 1149 0a80 D3E90023 	 ldrd r2,[r3]
 1150 0a84 C1E90023 	 strd r2,[r1]
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1151              	 .loc 2 1745 0
 1152 0a88 07F1B003 	 add r3,r7,#176
 1153 0a8c 1A68     	 ldr r2,[r3]
 1154 0a8e 07F1B003 	 add r3,r7,#176
 1155 0a92 5968     	 ldr r1,[r3,#4]
 1156 0a94 07F52773 	 add r3,r7,#668
 1157 0a98 1868     	 ldr r0,[r3]
 1158 0a9a 07F52673 	 add r3,r7,#664
 1159 0a9e 1B68     	 ldr r3,[r3]
 1160              	
 1161 0aa0 C0FBC321 	 smlald r2,r1,r0,r3
 1162              	
 1163              	 .thumb
 1164 0aa4 07F1B003 	 add r3,r7,#176
 1165 0aa8 1A60     	 str r2,[r3]
 1166 0aaa 07F1B003 	 add r3,r7,#176
 1167 0aae 5960     	 str r1,[r3,#4]
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1168              	 .loc 2 1750 0
 1169 0ab0 07F1B003 	 add r3,r7,#176
 1170 0ab4 D3E90023 	 ldrd r2,[r3]
 1171              	.LBE103:
 1172              	.LBE102:
 1173              	 .loc 1 405 0
 1174 0ab8 07F58161 	 add r1,r7,#1032
 1175 0abc C1E90023 	 strd r2,[r1]
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc1 = __SMLALD(x1, c0, acc1);
 1176              	 .loc 1 406 0
 1177 0ac0 D7F8E023 	 ldr r2,[r7,#992]
 1178 0ac4 D7F8A843 	 ldr r4,[r7,#936]
 1179 0ac8 07F58063 	 add r3,r7,#1024
 1180 0acc D3E90001 	 ldrd r0,[r3]
 1181 0ad0 07F52373 	 add r3,r7,#652
 1182 0ad4 1A60     	 str r2,[r3]
 1183 0ad6 07F52273 	 add r3,r7,#648
 1184 0ada 1C60     	 str r4,[r3]
 1185 0adc 07F52073 	 add r3,r7,#640
 1186 0ae0 C3E90001 	 strd r0,[r3]
 1187              	.LBB104:
 1188              	.LBB105:
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1189              	 .loc 2 1742 0
 1190 0ae4 07F1B801 	 add r1,r7,#184
 1191 0ae8 07F52073 	 add r3,r7,#640
 1192 0aec D3E90023 	 ldrd r2,[r3]
 1193 0af0 C1E90023 	 strd r2,[r1]
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1194              	 .loc 2 1745 0
 1195 0af4 07F1B803 	 add r3,r7,#184
 1196 0af8 1A68     	 ldr r2,[r3]
 1197 0afa 07F1B803 	 add r3,r7,#184
 1198 0afe 5968     	 ldr r1,[r3,#4]
 1199 0b00 07F52373 	 add r3,r7,#652
 1200 0b04 1868     	 ldr r0,[r3]
 1201 0b06 07F52273 	 add r3,r7,#648
 1202 0b0a 1B68     	 ldr r3,[r3]
 1203              	
 1204 0b0c C0FBC321 	 smlald r2,r1,r0,r3
 1205              	
 1206              	 .thumb
 1207 0b10 07F1B803 	 add r3,r7,#184
 1208 0b14 1A60     	 str r2,[r3]
 1209 0b16 07F1B803 	 add r3,r7,#184
 1210 0b1a 5960     	 str r1,[r3,#4]
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1211              	 .loc 2 1750 0
 1212 0b1c 07F1B803 	 add r3,r7,#184
 1213 0b20 D3E90023 	 ldrd r2,[r3]
 1214              	.LBE105:
 1215              	.LBE104:
 1216              	 .loc 1 406 0
 1217 0b24 07F58061 	 add r1,r7,#1024
 1218 0b28 C1E90023 	 strd r2,[r1]
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc2 = __SMLALDX(x1, c0, acc2);
 1219              	 .loc 1 407 0
 1220 0b2c D7F8E023 	 ldr r2,[r7,#992]
 1221 0b30 D7F8A843 	 ldr r4,[r7,#936]
 1222 0b34 07F57E73 	 add r3,r7,#1016
 1223 0b38 D3E90001 	 ldrd r0,[r3]
 1224 0b3c 07F51F73 	 add r3,r7,#636
 1225 0b40 1A60     	 str r2,[r3]
 1226 0b42 07F51E73 	 add r3,r7,#632
 1227 0b46 1C60     	 str r4,[r3]
 1228 0b48 07F51C73 	 add r3,r7,#624
 1229 0b4c C3E90001 	 strd r0,[r3]
 1230              	.LBB106:
 1231              	.LBB107:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1232              	 .loc 2 1759 0
 1233 0b50 07F1C001 	 add r1,r7,#192
 1234 0b54 07F51C73 	 add r3,r7,#624
 1235 0b58 D3E90023 	 ldrd r2,[r3]
 1236 0b5c C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1237              	 .loc 2 1762 0
 1238 0b60 07F1C003 	 add r3,r7,#192
 1239 0b64 1A68     	 ldr r2,[r3]
 1240 0b66 07F1C003 	 add r3,r7,#192
 1241 0b6a 5968     	 ldr r1,[r3,#4]
 1242 0b6c 07F51F73 	 add r3,r7,#636
 1243 0b70 1868     	 ldr r0,[r3]
 1244 0b72 07F51E73 	 add r3,r7,#632
 1245 0b76 1B68     	 ldr r3,[r3]
 1246              	
 1247 0b78 C0FBD321 	 smlaldx r2,r1,r0,r3
 1248              	
 1249              	 .thumb
 1250 0b7c 07F1C003 	 add r3,r7,#192
 1251 0b80 1A60     	 str r2,[r3]
 1252 0b82 07F1C003 	 add r3,r7,#192
 1253 0b86 5960     	 str r1,[r3,#4]
 1254              	 .loc 2 1767 0
 1255 0b88 07F1C003 	 add r3,r7,#192
 1256 0b8c D3E90023 	 ldrd r2,[r3]
 1257              	.LBE107:
 1258              	.LBE106:
 1259              	 .loc 1 407 0
 1260 0b90 07F57E71 	 add r1,r7,#1016
 1261 0b94 C1E90023 	 strd r2,[r1]
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc3 = __SMLALDX(x3, c0, acc3);
 1262              	 .loc 1 408 0
 1263 0b98 D7F8A023 	 ldr r2,[r7,#928]
 1264 0b9c D7F8A843 	 ldr r4,[r7,#936]
 1265 0ba0 07F57C73 	 add r3,r7,#1008
 1266 0ba4 D3E90001 	 ldrd r0,[r3]
 1267 0ba8 07F51B73 	 add r3,r7,#620
 1268 0bac 1A60     	 str r2,[r3]
 1269 0bae 07F51A73 	 add r3,r7,#616
 1270 0bb2 1C60     	 str r4,[r3]
 1271 0bb4 07F51873 	 add r3,r7,#608
 1272 0bb8 C3E90001 	 strd r0,[r3]
 1273              	.LBB108:
 1274              	.LBB109:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1275              	 .loc 2 1759 0
 1276 0bbc 07F1C801 	 add r1,r7,#200
 1277 0bc0 07F51873 	 add r3,r7,#608
 1278 0bc4 D3E90023 	 ldrd r2,[r3]
 1279 0bc8 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1280              	 .loc 2 1762 0
 1281 0bcc 07F1C803 	 add r3,r7,#200
 1282 0bd0 1A68     	 ldr r2,[r3]
 1283 0bd2 07F1C803 	 add r3,r7,#200
 1284 0bd6 5968     	 ldr r1,[r3,#4]
 1285 0bd8 07F51B73 	 add r3,r7,#620
 1286 0bdc 1868     	 ldr r0,[r3]
 1287 0bde 07F51A73 	 add r3,r7,#616
 1288 0be2 1B68     	 ldr r3,[r3]
 1289              	
 1290 0be4 C0FBD321 	 smlaldx r2,r1,r0,r3
 1291              	
 1292              	 .thumb
 1293 0be8 07F1C803 	 add r3,r7,#200
 1294 0bec 1A60     	 str r2,[r3]
 1295 0bee 07F1C803 	 add r3,r7,#200
 1296 0bf2 5960     	 str r1,[r3,#4]
 1297              	 .loc 2 1767 0
 1298 0bf4 07F1C803 	 add r3,r7,#200
 1299 0bf8 D3E90023 	 ldrd r2,[r3]
 1300              	.LBE109:
 1301              	.LBE108:
 1302              	 .loc 1 408 0
 1303 0bfc 07F57C71 	 add r1,r7,#1008
 1304 0c00 C1E90023 	 strd r2,[r1]
 1305              	.L42:
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       if (k == 2u)
 1306              	 .loc 1 411 0
 1307 0c04 D7F8D833 	 ldr r3,[r7,#984]
 1308 0c08 022B     	 cmp r3,#2
 1309 0c0a 40F0F280 	 bne .L47
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         c0 = _SIMD32_OFFSET(py);
 1310              	 .loc 1 414 0
 1311 0c0e 07F5AA73 	 add r3,r7,#340
 1312 0c12 1B68     	 ldr r3,[r3]
 1313 0c14 1B68     	 ldr r3,[r3]
 1314 0c16 C7F8A833 	 str r3,[r7,#936]
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read x[7], x[8] */
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         x3 = *__SIMD32(px);
 1315              	 .loc 1 417 0
 1316 0c1a 07F5AC73 	 add r3,r7,#344
 1317 0c1e 1B68     	 ldr r3,[r3]
 1318 0c20 1B68     	 ldr r3,[r3]
 1319 0c22 C7F8A033 	 str r3,[r7,#928]
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read x[9] */
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         x2 = _SIMD32_OFFSET(px+1);
 1320              	 .loc 1 420 0
 1321 0c26 07F5AC73 	 add r3,r7,#344
 1322 0c2a 1B68     	 ldr r3,[r3]
 1323 0c2c D3F80230 	 ldr r3,[r3,#2]
 1324 0c30 C7F8A433 	 str r3,[r7,#932]
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         px += 2u;
 1325              	 .loc 1 421 0
 1326 0c34 07F5AC73 	 add r3,r7,#344
 1327 0c38 1B68     	 ldr r3,[r3]
 1328 0c3a 1A1D     	 adds r2,r3,#4
 1329 0c3c 07F5AC73 	 add r3,r7,#344
 1330 0c40 1A60     	 str r2,[r3]
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc0 = __SMLALDX(x0, c0, acc0);
 1331              	 .loc 1 424 0
 1332 0c42 D7F8E423 	 ldr r2,[r7,#996]
 1333 0c46 D7F8A843 	 ldr r4,[r7,#936]
 1334 0c4a 07F58163 	 add r3,r7,#1032
 1335 0c4e D3E90001 	 ldrd r0,[r3]
 1336 0c52 07F51773 	 add r3,r7,#604
 1337 0c56 1A60     	 str r2,[r3]
 1338 0c58 07F51673 	 add r3,r7,#600
 1339 0c5c 1C60     	 str r4,[r3]
 1340 0c5e 07F51473 	 add r3,r7,#592
 1341 0c62 C3E90001 	 strd r0,[r3]
 1342              	.LBB110:
 1343              	.LBB111:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1344              	 .loc 2 1759 0
 1345 0c66 07F1D001 	 add r1,r7,#208
 1346 0c6a 07F51473 	 add r3,r7,#592
 1347 0c6e D3E90023 	 ldrd r2,[r3]
 1348 0c72 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1349              	 .loc 2 1762 0
 1350 0c76 07F1D003 	 add r3,r7,#208
 1351 0c7a 1A68     	 ldr r2,[r3]
 1352 0c7c 07F1D003 	 add r3,r7,#208
 1353 0c80 5968     	 ldr r1,[r3,#4]
 1354 0c82 07F51773 	 add r3,r7,#604
 1355 0c86 1868     	 ldr r0,[r3]
 1356 0c88 07F51673 	 add r3,r7,#600
 1357 0c8c 1B68     	 ldr r3,[r3]
 1358              	
 1359 0c8e C0FBD321 	 smlaldx r2,r1,r0,r3
 1360              	
 1361              	 .thumb
 1362 0c92 07F1D003 	 add r3,r7,#208
 1363 0c96 1A60     	 str r2,[r3]
 1364 0c98 07F1D003 	 add r3,r7,#208
 1365 0c9c 5960     	 str r1,[r3,#4]
 1366              	 .loc 2 1767 0
 1367 0c9e 07F1D003 	 add r3,r7,#208
 1368 0ca2 D3E90023 	 ldrd r2,[r3]
 1369              	.LBE111:
 1370              	.LBE110:
 1371              	 .loc 1 424 0
 1372 0ca6 07F58161 	 add r1,r7,#1032
 1373 0caa C1E90023 	 strd r2,[r1]
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc1 = __SMLALDX(x1, c0, acc1);
 1374              	 .loc 1 425 0
 1375 0cae D7F8E023 	 ldr r2,[r7,#992]
 1376 0cb2 D7F8A843 	 ldr r4,[r7,#936]
 1377 0cb6 07F58063 	 add r3,r7,#1024
 1378 0cba D3E90001 	 ldrd r0,[r3]
 1379 0cbe 07F51373 	 add r3,r7,#588
 1380 0cc2 1A60     	 str r2,[r3]
 1381 0cc4 07F51273 	 add r3,r7,#584
 1382 0cc8 1C60     	 str r4,[r3]
 1383 0cca 07F51073 	 add r3,r7,#576
 1384 0cce C3E90001 	 strd r0,[r3]
 1385              	.LBB112:
 1386              	.LBB113:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1387              	 .loc 2 1759 0
 1388 0cd2 07F1D801 	 add r1,r7,#216
 1389 0cd6 07F51073 	 add r3,r7,#576
 1390 0cda D3E90023 	 ldrd r2,[r3]
 1391 0cde C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1392              	 .loc 2 1762 0
 1393 0ce2 07F1D803 	 add r3,r7,#216
 1394 0ce6 1A68     	 ldr r2,[r3]
 1395 0ce8 07F1D803 	 add r3,r7,#216
 1396 0cec 5968     	 ldr r1,[r3,#4]
 1397 0cee 07F51373 	 add r3,r7,#588
 1398 0cf2 1868     	 ldr r0,[r3]
 1399 0cf4 07F51273 	 add r3,r7,#584
 1400 0cf8 1B68     	 ldr r3,[r3]
 1401              	
 1402 0cfa C0FBD321 	 smlaldx r2,r1,r0,r3
 1403              	
 1404              	 .thumb
 1405 0cfe 07F1D803 	 add r3,r7,#216
 1406 0d02 1A60     	 str r2,[r3]
 1407 0d04 07F1D803 	 add r3,r7,#216
 1408 0d08 5960     	 str r1,[r3,#4]
 1409              	 .loc 2 1767 0
 1410 0d0a 07F1D803 	 add r3,r7,#216
 1411 0d0e D3E90023 	 ldrd r2,[r3]
 1412              	.LBE113:
 1413              	.LBE112:
 1414              	 .loc 1 425 0
 1415 0d12 07F58061 	 add r1,r7,#1024
 1416 0d16 C1E90023 	 strd r2,[r1]
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc2 = __SMLALDX(x3, c0, acc2);
 1417              	 .loc 1 426 0
 1418 0d1a D7F8A023 	 ldr r2,[r7,#928]
 1419 0d1e D7F8A843 	 ldr r4,[r7,#936]
 1420 0d22 07F57E73 	 add r3,r7,#1016
 1421 0d26 D3E90001 	 ldrd r0,[r3]
 1422 0d2a 07F50F73 	 add r3,r7,#572
 1423 0d2e 1A60     	 str r2,[r3]
 1424 0d30 07F50E73 	 add r3,r7,#568
 1425 0d34 1C60     	 str r4,[r3]
 1426 0d36 07F50C73 	 add r3,r7,#560
 1427 0d3a C3E90001 	 strd r0,[r3]
 1428              	.LBB114:
 1429              	.LBB115:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1430              	 .loc 2 1759 0
 1431 0d3e 07F1E001 	 add r1,r7,#224
 1432 0d42 07F50C73 	 add r3,r7,#560
 1433 0d46 D3E90023 	 ldrd r2,[r3]
 1434 0d4a C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1435              	 .loc 2 1762 0
 1436 0d4e 07F1E003 	 add r3,r7,#224
 1437 0d52 1A68     	 ldr r2,[r3]
 1438 0d54 07F1E003 	 add r3,r7,#224
 1439 0d58 5968     	 ldr r1,[r3,#4]
 1440 0d5a 07F50F73 	 add r3,r7,#572
 1441 0d5e 1868     	 ldr r0,[r3]
 1442 0d60 07F50E73 	 add r3,r7,#568
 1443 0d64 1B68     	 ldr r3,[r3]
 1444              	
 1445 0d66 C0FBD321 	 smlaldx r2,r1,r0,r3
 1446              	
 1447              	 .thumb
 1448 0d6a 07F1E003 	 add r3,r7,#224
 1449 0d6e 1A60     	 str r2,[r3]
 1450 0d70 07F1E003 	 add r3,r7,#224
 1451 0d74 5960     	 str r1,[r3,#4]
 1452              	 .loc 2 1767 0
 1453 0d76 07F1E003 	 add r3,r7,#224
 1454 0d7a D3E90023 	 ldrd r2,[r3]
 1455              	.LBE115:
 1456              	.LBE114:
 1457              	 .loc 1 426 0
 1458 0d7e 07F57E71 	 add r1,r7,#1016
 1459 0d82 C1E90023 	 strd r2,[r1]
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc3 = __SMLALDX(x2, c0, acc3);
 1460              	 .loc 1 427 0
 1461 0d86 D7F8A423 	 ldr r2,[r7,#932]
 1462 0d8a D7F8A843 	 ldr r4,[r7,#936]
 1463 0d8e 07F57C73 	 add r3,r7,#1008
 1464 0d92 D3E90001 	 ldrd r0,[r3]
 1465 0d96 07F50B73 	 add r3,r7,#556
 1466 0d9a 1A60     	 str r2,[r3]
 1467 0d9c 07F50A73 	 add r3,r7,#552
 1468 0da0 1C60     	 str r4,[r3]
 1469 0da2 07F50873 	 add r3,r7,#544
 1470 0da6 C3E90001 	 strd r0,[r3]
 1471              	.LBB116:
 1472              	.LBB117:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1473              	 .loc 2 1759 0
 1474 0daa 07F1E801 	 add r1,r7,#232
 1475 0dae 07F50873 	 add r3,r7,#544
 1476 0db2 D3E90023 	 ldrd r2,[r3]
 1477 0db6 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1478              	 .loc 2 1762 0
 1479 0dba 07F1E803 	 add r3,r7,#232
 1480 0dbe 1A68     	 ldr r2,[r3]
 1481 0dc0 07F1E803 	 add r3,r7,#232
 1482 0dc4 5968     	 ldr r1,[r3,#4]
 1483 0dc6 07F50B73 	 add r3,r7,#556
 1484 0dca 1868     	 ldr r0,[r3]
 1485 0dcc 07F50A73 	 add r3,r7,#552
 1486 0dd0 1B68     	 ldr r3,[r3]
 1487              	
 1488 0dd2 C0FBD321 	 smlaldx r2,r1,r0,r3
 1489              	
 1490              	 .thumb
 1491 0dd6 07F1E803 	 add r3,r7,#232
 1492 0dda 1A60     	 str r2,[r3]
 1493 0ddc 07F1E803 	 add r3,r7,#232
 1494 0de0 5960     	 str r1,[r3,#4]
 1495              	 .loc 2 1767 0
 1496 0de2 07F1E803 	 add r3,r7,#232
 1497 0de6 D3E90023 	 ldrd r2,[r3]
 1498              	.LBE117:
 1499              	.LBE116:
 1500              	 .loc 1 427 0
 1501 0dea 07F57C71 	 add r1,r7,#1008
 1502 0dee C1E90023 	 strd r2,[r1]
 1503              	.L47:
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       if (k == 3u)
 1504              	 .loc 1 430 0
 1505 0df2 D7F8D833 	 ldr r3,[r7,#984]
 1506 0df6 032B     	 cmp r3,#3
 1507 0df8 40F0DD81 	 bne .L52
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         c0 = _SIMD32_OFFSET(py);
 1508              	 .loc 1 433 0
 1509 0dfc 07F5AA73 	 add r3,r7,#340
 1510 0e00 1B68     	 ldr r3,[r3]
 1511 0e02 1B68     	 ldr r3,[r3]
 1512 0e04 C7F8A833 	 str r3,[r7,#936]
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read x[7], x[8] */
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         x3 = *__SIMD32(px);
 1513              	 .loc 1 436 0
 1514 0e08 07F5AC73 	 add r3,r7,#344
 1515 0e0c 1B68     	 ldr r3,[r3]
 1516 0e0e 1B68     	 ldr r3,[r3]
 1517 0e10 C7F8A033 	 str r3,[r7,#928]
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read x[9] */
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         x2 = _SIMD32_OFFSET(px+1);
 1518              	 .loc 1 439 0
 1519 0e14 07F5AC73 	 add r3,r7,#344
 1520 0e18 1B68     	 ldr r3,[r3]
 1521 0e1a D3F80230 	 ldr r3,[r3,#2]
 1522 0e1e C7F8A433 	 str r3,[r7,#932]
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc0 = __SMLALDX(x0, c0, acc0);
 1523              	 .loc 1 442 0
 1524 0e22 D7F8E423 	 ldr r2,[r7,#996]
 1525 0e26 D7F8A843 	 ldr r4,[r7,#936]
 1526 0e2a 07F58163 	 add r3,r7,#1032
 1527 0e2e D3E90001 	 ldrd r0,[r3]
 1528 0e32 07F50773 	 add r3,r7,#540
 1529 0e36 1A60     	 str r2,[r3]
 1530 0e38 07F50673 	 add r3,r7,#536
 1531 0e3c 1C60     	 str r4,[r3]
 1532 0e3e 07F50473 	 add r3,r7,#528
 1533 0e42 C3E90001 	 strd r0,[r3]
 1534              	.LBB118:
 1535              	.LBB119:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1536              	 .loc 2 1759 0
 1537 0e46 07F1F001 	 add r1,r7,#240
 1538 0e4a 07F50473 	 add r3,r7,#528
 1539 0e4e D3E90023 	 ldrd r2,[r3]
 1540 0e52 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1541              	 .loc 2 1762 0
 1542 0e56 07F1F003 	 add r3,r7,#240
 1543 0e5a 1A68     	 ldr r2,[r3]
 1544 0e5c 07F1F003 	 add r3,r7,#240
 1545 0e60 5968     	 ldr r1,[r3,#4]
 1546 0e62 07F50773 	 add r3,r7,#540
 1547 0e66 1868     	 ldr r0,[r3]
 1548 0e68 07F50673 	 add r3,r7,#536
 1549 0e6c 1B68     	 ldr r3,[r3]
 1550              	
 1551 0e6e C0FBD321 	 smlaldx r2,r1,r0,r3
 1552              	
 1553              	 .thumb
 1554 0e72 07F1F003 	 add r3,r7,#240
 1555 0e76 1A60     	 str r2,[r3]
 1556 0e78 07F1F003 	 add r3,r7,#240
 1557 0e7c 5960     	 str r1,[r3,#4]
 1558              	 .loc 2 1767 0
 1559 0e7e 07F1F003 	 add r3,r7,#240
 1560 0e82 D3E90023 	 ldrd r2,[r3]
 1561              	.LBE119:
 1562              	.LBE118:
 1563              	 .loc 1 442 0
 1564 0e86 07F58161 	 add r1,r7,#1032
 1565 0e8a C1E90023 	 strd r2,[r1]
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc1 = __SMLALDX(x1, c0, acc1);
 1566              	 .loc 1 443 0
 1567 0e8e D7F8E023 	 ldr r2,[r7,#992]
 1568 0e92 D7F8A843 	 ldr r4,[r7,#936]
 1569 0e96 07F58063 	 add r3,r7,#1024
 1570 0e9a D3E90001 	 ldrd r0,[r3]
 1571 0e9e 07F50373 	 add r3,r7,#524
 1572 0ea2 1A60     	 str r2,[r3]
 1573 0ea4 07F50273 	 add r3,r7,#520
 1574 0ea8 1C60     	 str r4,[r3]
 1575 0eaa 07F50073 	 add r3,r7,#512
 1576 0eae C3E90001 	 strd r0,[r3]
 1577              	.LBB120:
 1578              	.LBB121:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1579              	 .loc 2 1759 0
 1580 0eb2 07F1F801 	 add r1,r7,#248
 1581 0eb6 07F50073 	 add r3,r7,#512
 1582 0eba D3E90023 	 ldrd r2,[r3]
 1583 0ebe C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1584              	 .loc 2 1762 0
 1585 0ec2 07F1F803 	 add r3,r7,#248
 1586 0ec6 1A68     	 ldr r2,[r3]
 1587 0ec8 07F1F803 	 add r3,r7,#248
 1588 0ecc 5968     	 ldr r1,[r3,#4]
 1589 0ece 07F50373 	 add r3,r7,#524
 1590 0ed2 1868     	 ldr r0,[r3]
 1591 0ed4 07F50273 	 add r3,r7,#520
 1592 0ed8 1B68     	 ldr r3,[r3]
 1593              	
 1594 0eda C0FBD321 	 smlaldx r2,r1,r0,r3
 1595              	
 1596              	 .thumb
 1597 0ede 07F1F803 	 add r3,r7,#248
 1598 0ee2 1A60     	 str r2,[r3]
 1599 0ee4 07F1F803 	 add r3,r7,#248
 1600 0ee8 5960     	 str r1,[r3,#4]
 1601              	 .loc 2 1767 0
 1602 0eea 07F1F803 	 add r3,r7,#248
 1603 0eee D3E90023 	 ldrd r2,[r3]
 1604              	.LBE121:
 1605              	.LBE120:
 1606              	 .loc 1 443 0
 1607 0ef2 07F58061 	 add r1,r7,#1024
 1608 0ef6 C1E90023 	 strd r2,[r1]
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc2 = __SMLALDX(x3, c0, acc2);
 1609              	 .loc 1 444 0
 1610 0efa D7F8A023 	 ldr r2,[r7,#928]
 1611 0efe D7F8A843 	 ldr r4,[r7,#936]
 1612 0f02 07F57E73 	 add r3,r7,#1016
 1613 0f06 D3E90001 	 ldrd r0,[r3]
 1614 0f0a 07F5FE73 	 add r3,r7,#508
 1615 0f0e 1A60     	 str r2,[r3]
 1616 0f10 07F5FC73 	 add r3,r7,#504
 1617 0f14 1C60     	 str r4,[r3]
 1618 0f16 07F5F873 	 add r3,r7,#496
 1619 0f1a C3E90001 	 strd r0,[r3]
 1620              	.LBB122:
 1621              	.LBB123:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1622              	 .loc 2 1759 0
 1623 0f1e 07F58071 	 add r1,r7,#256
 1624 0f22 07F5F873 	 add r3,r7,#496
 1625 0f26 D3E90023 	 ldrd r2,[r3]
 1626 0f2a C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1627              	 .loc 2 1762 0
 1628 0f2e 07F58073 	 add r3,r7,#256
 1629 0f32 1A68     	 ldr r2,[r3]
 1630 0f34 07F58073 	 add r3,r7,#256
 1631 0f38 5968     	 ldr r1,[r3,#4]
 1632 0f3a 07F5FE73 	 add r3,r7,#508
 1633 0f3e 1868     	 ldr r0,[r3]
 1634 0f40 07F5FC73 	 add r3,r7,#504
 1635 0f44 1B68     	 ldr r3,[r3]
 1636              	
 1637 0f46 C0FBD321 	 smlaldx r2,r1,r0,r3
 1638              	
 1639              	 .thumb
 1640 0f4a 07F58073 	 add r3,r7,#256
 1641 0f4e 1A60     	 str r2,[r3]
 1642 0f50 07F58073 	 add r3,r7,#256
 1643 0f54 5960     	 str r1,[r3,#4]
 1644              	 .loc 2 1767 0
 1645 0f56 07F58073 	 add r3,r7,#256
 1646 0f5a D3E90023 	 ldrd r2,[r3]
 1647              	.LBE123:
 1648              	.LBE122:
 1649              	 .loc 1 444 0
 1650 0f5e 07F57E71 	 add r1,r7,#1016
 1651 0f62 C1E90023 	 strd r2,[r1]
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc3 = __SMLALDX(x2, c0, acc3);
 1652              	 .loc 1 445 0
 1653 0f66 D7F8A423 	 ldr r2,[r7,#932]
 1654 0f6a D7F8A843 	 ldr r4,[r7,#936]
 1655 0f6e 07F57C73 	 add r3,r7,#1008
 1656 0f72 D3E90001 	 ldrd r0,[r3]
 1657 0f76 07F5F673 	 add r3,r7,#492
 1658 0f7a 1A60     	 str r2,[r3]
 1659 0f7c 07F5F473 	 add r3,r7,#488
 1660 0f80 1C60     	 str r4,[r3]
 1661 0f82 07F5F073 	 add r3,r7,#480
 1662 0f86 C3E90001 	 strd r0,[r3]
 1663              	.LBB124:
 1664              	.LBB125:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1665              	 .loc 2 1759 0
 1666 0f8a 07F58471 	 add r1,r7,#264
 1667 0f8e 07F5F073 	 add r3,r7,#480
 1668 0f92 D3E90023 	 ldrd r2,[r3]
 1669 0f96 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1670              	 .loc 2 1762 0
 1671 0f9a 07F58473 	 add r3,r7,#264
 1672 0f9e 1A68     	 ldr r2,[r3]
 1673 0fa0 07F58473 	 add r3,r7,#264
 1674 0fa4 5968     	 ldr r1,[r3,#4]
 1675 0fa6 07F5F673 	 add r3,r7,#492
 1676 0faa 1868     	 ldr r0,[r3]
 1677 0fac 07F5F473 	 add r3,r7,#488
 1678 0fb0 1B68     	 ldr r3,[r3]
 1679              	
 1680 0fb2 C0FBD321 	 smlaldx r2,r1,r0,r3
 1681              	
 1682              	 .thumb
 1683 0fb6 07F58473 	 add r3,r7,#264
 1684 0fba 1A60     	 str r2,[r3]
 1685 0fbc 07F58473 	 add r3,r7,#264
 1686 0fc0 5960     	 str r1,[r3,#4]
 1687              	 .loc 2 1767 0
 1688 0fc2 07F58473 	 add r3,r7,#264
 1689 0fc6 D3E90023 	 ldrd r2,[r3]
 1690              	.LBE125:
 1691              	.LBE124:
 1692              	 .loc 1 445 0
 1693 0fca 07F57C71 	 add r1,r7,#1008
 1694 0fce C1E90023 	 strd r2,[r1]
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         c0 = *(py-1);
 1695              	 .loc 1 447 0
 1696 0fd2 07F5AA73 	 add r3,r7,#340
 1697 0fd6 1B68     	 ldr r3,[r3]
 1698 0fd8 023B     	 subs r3,r3,#2
 1699 0fda 1B88     	 ldrh r3,[r3]
 1700 0fdc 1BB2     	 sxth r3,r3
 1701 0fde C7F8A833 	 str r3,[r7,#936]
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         c0 = c0 << 16u;
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #else
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         c0 = c0 & 0x0000FFFF;
 1702              	 .loc 1 454 0
 1703 0fe2 D7F8A833 	 ldr r3,[r7,#936]
 1704 0fe6 9BB2     	 uxth r3,r3
 1705 0fe8 C7F8A833 	 str r3,[r7,#936]
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Read x[10] */
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         x3 =  _SIMD32_OFFSET(px+2);
 1706              	 .loc 1 458 0
 1707 0fec 07F5AC73 	 add r3,r7,#344
 1708 0ff0 1B68     	 ldr r3,[r3]
 1709 0ff2 5B68     	 ldr r3,[r3,#4]
 1710 0ff4 C7F8A033 	 str r3,[r7,#928]
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         px += 3u;
 1711              	 .loc 1 459 0
 1712 0ff8 07F5AC73 	 add r3,r7,#344
 1713 0ffc 1B68     	 ldr r3,[r3]
 1714 0ffe 9A1D     	 adds r2,r3,#6
 1715 1000 07F5AC73 	 add r3,r7,#344
 1716 1004 1A60     	 str r2,[r3]
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc0 = __SMLALDX(x1, c0, acc0);
 1717              	 .loc 1 462 0
 1718 1006 D7F8E023 	 ldr r2,[r7,#992]
 1719 100a D7F8A843 	 ldr r4,[r7,#936]
 1720 100e 07F58163 	 add r3,r7,#1032
 1721 1012 D3E90001 	 ldrd r0,[r3]
 1722 1016 07F5EE73 	 add r3,r7,#476
 1723 101a 1A60     	 str r2,[r3]
 1724 101c 07F5EC73 	 add r3,r7,#472
 1725 1020 1C60     	 str r4,[r3]
 1726 1022 07F5E873 	 add r3,r7,#464
 1727 1026 C3E90001 	 strd r0,[r3]
 1728              	.LBB126:
 1729              	.LBB127:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1730              	 .loc 2 1759 0
 1731 102a 07F58871 	 add r1,r7,#272
 1732 102e 07F5E873 	 add r3,r7,#464
 1733 1032 D3E90023 	 ldrd r2,[r3]
 1734 1036 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1735              	 .loc 2 1762 0
 1736 103a 07F58873 	 add r3,r7,#272
 1737 103e 1A68     	 ldr r2,[r3]
 1738 1040 07F58873 	 add r3,r7,#272
 1739 1044 5968     	 ldr r1,[r3,#4]
 1740 1046 07F5EE73 	 add r3,r7,#476
 1741 104a 1868     	 ldr r0,[r3]
 1742 104c 07F5EC73 	 add r3,r7,#472
 1743 1050 1B68     	 ldr r3,[r3]
 1744              	
 1745 1052 C0FBD321 	 smlaldx r2,r1,r0,r3
 1746              	
 1747              	 .thumb
 1748 1056 07F58873 	 add r3,r7,#272
 1749 105a 1A60     	 str r2,[r3]
 1750 105c 07F58873 	 add r3,r7,#272
 1751 1060 5960     	 str r1,[r3,#4]
 1752              	 .loc 2 1767 0
 1753 1062 07F58873 	 add r3,r7,#272
 1754 1066 D3E90023 	 ldrd r2,[r3]
 1755              	.LBE127:
 1756              	.LBE126:
 1757              	 .loc 1 462 0
 1758 106a 07F58161 	 add r1,r7,#1032
 1759 106e C1E90023 	 strd r2,[r1]
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc1 = __SMLALD(x2, c0, acc1);
 1760              	 .loc 1 463 0
 1761 1072 D7F8A423 	 ldr r2,[r7,#932]
 1762 1076 D7F8A843 	 ldr r4,[r7,#936]
 1763 107a 07F58063 	 add r3,r7,#1024
 1764 107e D3E90001 	 ldrd r0,[r3]
 1765 1082 07F5E673 	 add r3,r7,#460
 1766 1086 1A60     	 str r2,[r3]
 1767 1088 07F5E473 	 add r3,r7,#456
 1768 108c 1C60     	 str r4,[r3]
 1769 108e 07F5E073 	 add r3,r7,#448
 1770 1092 C3E90001 	 strd r0,[r3]
 1771              	.LBB128:
 1772              	.LBB129:
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1773              	 .loc 2 1742 0
 1774 1096 07F58C71 	 add r1,r7,#280
 1775 109a 07F5E073 	 add r3,r7,#448
 1776 109e D3E90023 	 ldrd r2,[r3]
 1777 10a2 C1E90023 	 strd r2,[r1]
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1778              	 .loc 2 1745 0
 1779 10a6 07F58C73 	 add r3,r7,#280
 1780 10aa 1A68     	 ldr r2,[r3]
 1781 10ac 07F58C73 	 add r3,r7,#280
 1782 10b0 5968     	 ldr r1,[r3,#4]
 1783 10b2 07F5E673 	 add r3,r7,#460
 1784 10b6 1868     	 ldr r0,[r3]
 1785 10b8 07F5E473 	 add r3,r7,#456
 1786 10bc 1B68     	 ldr r3,[r3]
 1787              	
 1788 10be C0FBC321 	 smlald r2,r1,r0,r3
 1789              	
 1790              	 .thumb
 1791 10c2 07F58C73 	 add r3,r7,#280
 1792 10c6 1A60     	 str r2,[r3]
 1793 10c8 07F58C73 	 add r3,r7,#280
 1794 10cc 5960     	 str r1,[r3,#4]
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1795              	 .loc 2 1750 0
 1796 10ce 07F58C73 	 add r3,r7,#280
 1797 10d2 D3E90023 	 ldrd r2,[r3]
 1798              	.LBE129:
 1799              	.LBE128:
 1800              	 .loc 1 463 0
 1801 10d6 07F58061 	 add r1,r7,#1024
 1802 10da C1E90023 	 strd r2,[r1]
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc2 = __SMLALDX(x2, c0, acc2);
 1803              	 .loc 1 464 0
 1804 10de D7F8A423 	 ldr r2,[r7,#932]
 1805 10e2 D7F8A843 	 ldr r4,[r7,#936]
 1806 10e6 07F57E73 	 add r3,r7,#1016
 1807 10ea D3E90001 	 ldrd r0,[r3]
 1808 10ee 07F5DE73 	 add r3,r7,#444
 1809 10f2 1A60     	 str r2,[r3]
 1810 10f4 07F5DC73 	 add r3,r7,#440
 1811 10f8 1C60     	 str r4,[r3]
 1812 10fa 07F5D873 	 add r3,r7,#432
 1813 10fe C3E90001 	 strd r0,[r3]
 1814              	.LBB130:
 1815              	.LBB131:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1816              	 .loc 2 1759 0
 1817 1102 07F59071 	 add r1,r7,#288
 1818 1106 07F5D873 	 add r3,r7,#432
 1819 110a D3E90023 	 ldrd r2,[r3]
 1820 110e C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1821              	 .loc 2 1762 0
 1822 1112 07F59073 	 add r3,r7,#288
 1823 1116 1A68     	 ldr r2,[r3]
 1824 1118 07F59073 	 add r3,r7,#288
 1825 111c 5968     	 ldr r1,[r3,#4]
 1826 111e 07F5DE73 	 add r3,r7,#444
 1827 1122 1868     	 ldr r0,[r3]
 1828 1124 07F5DC73 	 add r3,r7,#440
 1829 1128 1B68     	 ldr r3,[r3]
 1830              	
 1831 112a C0FBD321 	 smlaldx r2,r1,r0,r3
 1832              	
 1833              	 .thumb
 1834 112e 07F59073 	 add r3,r7,#288
 1835 1132 1A60     	 str r2,[r3]
 1836 1134 07F59073 	 add r3,r7,#288
 1837 1138 5960     	 str r1,[r3,#4]
 1838              	 .loc 2 1767 0
 1839 113a 07F59073 	 add r3,r7,#288
 1840 113e D3E90023 	 ldrd r2,[r3]
 1841              	.LBE131:
 1842              	.LBE130:
 1843              	 .loc 1 464 0
 1844 1142 07F57E71 	 add r1,r7,#1016
 1845 1146 C1E90023 	 strd r2,[r1]
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         acc3 = __SMLALDX(x3, c0, acc3);
 1846              	 .loc 1 465 0
 1847 114a D7F8A023 	 ldr r2,[r7,#928]
 1848 114e D7F8A843 	 ldr r4,[r7,#936]
 1849 1152 07F57C73 	 add r3,r7,#1008
 1850 1156 D3E90001 	 ldrd r0,[r3]
 1851 115a 07F5D673 	 add r3,r7,#428
 1852 115e 1A60     	 str r2,[r3]
 1853 1160 07F5D473 	 add r3,r7,#424
 1854 1164 1C60     	 str r4,[r3]
 1855 1166 07F5D073 	 add r3,r7,#416
 1856 116a C3E90001 	 strd r0,[r3]
 1857              	.LBB132:
 1858              	.LBB133:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 1859              	 .loc 2 1759 0
 1860 116e 07F59471 	 add r1,r7,#296
 1861 1172 07F5D073 	 add r3,r7,#416
 1862 1176 D3E90023 	 ldrd r2,[r3]
 1863 117a C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 1864              	 .loc 2 1762 0
 1865 117e 07F59473 	 add r3,r7,#296
 1866 1182 1A68     	 ldr r2,[r3]
 1867 1184 07F59473 	 add r3,r7,#296
 1868 1188 5968     	 ldr r1,[r3,#4]
 1869 118a 07F5D673 	 add r3,r7,#428
 1870 118e 1868     	 ldr r0,[r3]
 1871 1190 07F5D473 	 add r3,r7,#424
 1872 1194 1B68     	 ldr r3,[r3]
 1873              	
 1874 1196 C0FBD321 	 smlaldx r2,r1,r0,r3
 1875              	
 1876              	 .thumb
 1877 119a 07F59473 	 add r3,r7,#296
 1878 119e 1A60     	 str r2,[r3]
 1879 11a0 07F59473 	 add r3,r7,#296
 1880 11a4 5960     	 str r1,[r3,#4]
 1881              	 .loc 2 1767 0
 1882 11a6 07F59473 	 add r3,r7,#296
 1883 11aa D3E90023 	 ldrd r2,[r3]
 1884              	.LBE133:
 1885              	.LBE132:
 1886              	 .loc 1 465 0
 1887 11ae 07F57C71 	 add r1,r7,#1008
 1888 11b2 C1E90023 	 strd r2,[r1]
 1889              	.L52:
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the results in the accumulators in the destination buffer. */
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #ifndef  ARM_MATH_BIG_ENDIAN
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       *__SIMD32(pOut)++ =
 1890              	 .loc 1 473 0
 1891 11b6 07F5AE72 	 add r2,r7,#348
 1892 11ba 1068     	 ldr r0,[r2]
 1893 11bc 031D     	 adds r3,r0,#4
 1894 11be 1360     	 str r3,[r2]
 1895              	.LBB134:
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16);
 1896              	 .loc 1 474 0
 1897 11c0 07F58163 	 add r3,r7,#1032
 1898 11c4 D3E90023 	 ldrd r2,[r3]
 1899 11c8 D10B     	 lsrs r1,r2,#15
 1900 11ca B963     	 str r1,[r7,#56]
 1901 11cc B96B     	 ldr r1,[r7,#56]
 1902 11ce 41EA4341 	 orr r1,r1,r3,lsl#17
 1903 11d2 B963     	 str r1,[r7,#56]
 1904 11d4 DB13     	 asrs r3,r3,#15
 1905 11d6 FB63     	 str r3,[r7,#60]
 1906 11d8 BB6B     	 ldr r3,[r7,#56]
 1907 11da C7F89C33 	 str r3,[r7,#924]
 1908 11de D7F89C33 	 ldr r3,[r7,#924]
 1909              	
 1910 11e2 03F30F03 	 ssat r3,#16,r3
 1911              	
 1912              	 .thumb
 1913 11e6 C7F89833 	 str r3,[r7,#920]
 1914 11ea D7F89833 	 ldr r3,[r7,#920]
 1915              	.LBE134:
 1916 11ee 99B2     	 uxth r1,r3
 1917              	.LBB135:
 1918 11f0 07F58063 	 add r3,r7,#1024
 1919 11f4 D3E90023 	 ldrd r2,[r3]
 1920 11f8 D40B     	 lsrs r4,r2,#15
 1921 11fa 3C63     	 str r4,[r7,#48]
 1922 11fc 3C6B     	 ldr r4,[r7,#48]
 1923 11fe 44EA4344 	 orr r4,r4,r3,lsl#17
 1924 1202 3C63     	 str r4,[r7,#48]
 1925 1204 DB13     	 asrs r3,r3,#15
 1926 1206 7B63     	 str r3,[r7,#52]
 1927 1208 3B6B     	 ldr r3,[r7,#48]
 1928 120a C7F89433 	 str r3,[r7,#916]
 1929 120e D7F89433 	 ldr r3,[r7,#916]
 1930              	
 1931 1212 03F30F03 	 ssat r3,#16,r3
 1932              	
 1933              	 .thumb
 1934 1216 C7F89033 	 str r3,[r7,#912]
 1935 121a D7F89033 	 ldr r3,[r7,#912]
 1936              	.LBE135:
 1937 121e 1B04     	 lsls r3,r3,#16
 1938 1220 0B43     	 orrs r3,r3,r1
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16);
 1939              	 .loc 1 473 0
 1940 1222 0360     	 str r3,[r0]
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       *__SIMD32(pOut)++ =
 1941              	 .loc 1 475 0
 1942 1224 07F5AE72 	 add r2,r7,#348
 1943 1228 1068     	 ldr r0,[r2]
 1944 122a 031D     	 adds r3,r0,#4
 1945 122c 1360     	 str r3,[r2]
 1946              	.LBB136:
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         __PKHBT(__SSAT((acc2 >> 15), 16), __SSAT((acc3 >> 15), 16), 16);
 1947              	 .loc 1 476 0
 1948 122e 07F57E73 	 add r3,r7,#1016
 1949 1232 D3E90023 	 ldrd r2,[r3]
 1950 1236 D10B     	 lsrs r1,r2,#15
 1951 1238 B962     	 str r1,[r7,#40]
 1952 123a B96A     	 ldr r1,[r7,#40]
 1953 123c 41EA4341 	 orr r1,r1,r3,lsl#17
 1954 1240 B962     	 str r1,[r7,#40]
 1955 1242 DB13     	 asrs r3,r3,#15
 1956 1244 FB62     	 str r3,[r7,#44]
 1957 1246 BB6A     	 ldr r3,[r7,#40]
 1958 1248 C7F88C33 	 str r3,[r7,#908]
 1959 124c D7F88C33 	 ldr r3,[r7,#908]
 1960              	
 1961 1250 03F30F03 	 ssat r3,#16,r3
 1962              	
 1963              	 .thumb
 1964 1254 C7F88833 	 str r3,[r7,#904]
 1965 1258 D7F88833 	 ldr r3,[r7,#904]
 1966              	.LBE136:
 1967 125c 99B2     	 uxth r1,r3
 1968              	.LBB137:
 1969 125e 07F57C73 	 add r3,r7,#1008
 1970 1262 D3E90023 	 ldrd r2,[r3]
 1971 1266 D40B     	 lsrs r4,r2,#15
 1972 1268 3C62     	 str r4,[r7,#32]
 1973 126a 3C6A     	 ldr r4,[r7,#32]
 1974 126c 44EA4344 	 orr r4,r4,r3,lsl#17
 1975 1270 3C62     	 str r4,[r7,#32]
 1976 1272 DB13     	 asrs r3,r3,#15
 1977 1274 7B62     	 str r3,[r7,#36]
 1978 1276 3B6A     	 ldr r3,[r7,#32]
 1979 1278 C7F88433 	 str r3,[r7,#900]
 1980 127c D7F88433 	 ldr r3,[r7,#900]
 1981              	
 1982 1280 03F30F03 	 ssat r3,#16,r3
 1983              	
 1984              	 .thumb
 1985 1284 C7F88033 	 str r3,[r7,#896]
 1986 1288 D7F88033 	 ldr r3,[r7,#896]
 1987              	.LBE137:
 1988 128c 1B04     	 lsls r3,r3,#16
 1989 128e 0B43     	 orrs r3,r3,r1
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       *__SIMD32(pOut)++ =
 1990              	 .loc 1 475 0
 1991 1290 0360     	 str r3,[r0]
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #else
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       *__SIMD32(pOut)++ =
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         __PKHBT(__SSAT((acc1 >> 15), 16), __SSAT((acc0 >> 15), 16), 16);
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       *__SIMD32(pOut)++ =
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         __PKHBT(__SSAT((acc3 >> 15), 16), __SSAT((acc2 >> 15), 16), 16);
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #endif /*      #ifndef  ARM_MATH_BIG_ENDIAN    */
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Increment the pointer pIn1 index, count by 4 */
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       count += 4u;
 1992              	 .loc 1 488 0
 1993 1292 D7F8D433 	 ldr r3,[r7,#980]
 1994 1296 0433     	 adds r3,r3,#4
 1995 1298 C7F8D433 	 str r3,[r7,#980]
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       px = pIn1 + count;
 1996              	 .loc 1 491 0
 1997 129c D7F8D433 	 ldr r3,[r7,#980]
 1998 12a0 5A00     	 lsls r2,r3,#1
 1999 12a2 D7F81C34 	 ldr r3,[r7,#1052]
 2000 12a6 1A44     	 add r2,r2,r3
 2001 12a8 07F5AC73 	 add r3,r7,#344
 2002 12ac 1A60     	 str r2,[r3]
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       py = pSrc2;
 2003              	 .loc 1 492 0
 2004 12ae 07F5AA72 	 add r2,r7,#340
 2005 12b2 D7F8E833 	 ldr r3,[r7,#1000]
 2006 12b6 1360     	 str r3,[r2]
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement the loop counter */
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         blkCnt--;
 2007              	 .loc 1 495 0
 2008 12b8 D7F8D033 	 ldr r3,[r7,#976]
 2009 12bc 013B     	 subs r3,r3,#1
 2010 12be C7F8D033 	 str r3,[r7,#976]
 2011              	.L32:
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 2012              	 .loc 1 307 0
 2013 12c2 D7F8D033 	 ldr r3,[r7,#976]
 2014 12c6 002B     	 cmp r3,#0
 2015 12c8 7FF471A9 	 bne .L61
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        ** No loop unrolling is used. */
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       blkCnt = (uint32_t) blockSize2 % 0x4u;
 2016              	 .loc 1 500 0
 2017 12cc D7F8BC33 	 ldr r3,[r7,#956]
 2018 12d0 03F00303 	 and r3,r3,#3
 2019 12d4 C7F8D033 	 str r3,[r7,#976]
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       while (blkCnt > 0u)
 2020              	 .loc 1 502 0
 2021 12d8 0BE1     	 b .L62
 2022              	.L67:
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Accumulator is made zero for every iteration */
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         sum = 0;
 2023              	 .loc 1 505 0
 2024 12da 4FF00002 	 mov r2,#0
 2025 12de 4FF00003 	 mov r3,#0
 2026 12e2 07F58261 	 add r1,r7,#1040
 2027 12e6 C1E90023 	 strd r2,[r1]
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         k = srcBLen >> 2u;
 2028              	 .loc 1 508 0
 2029 12ea 07F14003 	 add r3,r7,#64
 2030 12ee 1B68     	 ldr r3,[r3]
 2031 12f0 9B08     	 lsrs r3,r3,#2
 2032 12f2 C7F8D833 	 str r3,[r7,#984]
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         while (k > 0u)
 2033              	 .loc 1 512 0
 2034 12f6 8CE0     	 b .L63
 2035              	.L64:
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         {
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           /* Perform the multiply-accumulates */
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) * px++ * *py--);
 2036              	 .loc 1 515 0
 2037 12f8 07F5AC73 	 add r3,r7,#344
 2038 12fc 1B68     	 ldr r3,[r3]
 2039 12fe 991C     	 adds r1,r3,#2
 2040 1300 07F5AC72 	 add r2,r7,#344
 2041 1304 1160     	 str r1,[r2]
 2042 1306 1B88     	 ldrh r3,[r3]
 2043 1308 1AB2     	 sxth r2,r3
 2044 130a 07F5AA73 	 add r3,r7,#340
 2045 130e 1B68     	 ldr r3,[r3]
 2046 1310 981E     	 subs r0,r3,#2
 2047 1312 07F5AA71 	 add r1,r7,#340
 2048 1316 0860     	 str r0,[r1]
 2049 1318 1B88     	 ldrh r3,[r3]
 2050 131a 1BB2     	 sxth r3,r3
 2051 131c 03FB02F3 	 mul r3,r3,r2
 2052 1320 1A46     	 mov r2,r3
 2053 1322 4FEAE273 	 asr r3,r2,#31
 2054 1326 07F58261 	 add r1,r7,#1040
 2055 132a D1E90001 	 ldrd r0,[r1]
 2056 132e 1218     	 adds r2,r2,r0
 2057 1330 43EB0103 	 adc r3,r3,r1
 2058 1334 07F58261 	 add r1,r7,#1040
 2059 1338 C1E90023 	 strd r2,[r1]
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) * px++ * *py--);
 2060              	 .loc 1 516 0
 2061 133c 07F5AC73 	 add r3,r7,#344
 2062 1340 1B68     	 ldr r3,[r3]
 2063 1342 991C     	 adds r1,r3,#2
 2064 1344 07F5AC72 	 add r2,r7,#344
 2065 1348 1160     	 str r1,[r2]
 2066 134a 1B88     	 ldrh r3,[r3]
 2067 134c 1AB2     	 sxth r2,r3
 2068 134e 07F5AA73 	 add r3,r7,#340
 2069 1352 1B68     	 ldr r3,[r3]
 2070 1354 981E     	 subs r0,r3,#2
 2071 1356 07F5AA71 	 add r1,r7,#340
 2072 135a 0860     	 str r0,[r1]
 2073 135c 1B88     	 ldrh r3,[r3]
 2074 135e 1BB2     	 sxth r3,r3
 2075 1360 03FB02F3 	 mul r3,r3,r2
 2076 1364 1A46     	 mov r2,r3
 2077 1366 4FEAE273 	 asr r3,r2,#31
 2078 136a 07F58261 	 add r1,r7,#1040
 2079 136e D1E90001 	 ldrd r0,[r1]
 2080 1372 1218     	 adds r2,r2,r0
 2081 1374 43EB0103 	 adc r3,r3,r1
 2082 1378 07F58261 	 add r1,r7,#1040
 2083 137c C1E90023 	 strd r2,[r1]
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) * px++ * *py--);
 2084              	 .loc 1 517 0
 2085 1380 07F5AC73 	 add r3,r7,#344
 2086 1384 1B68     	 ldr r3,[r3]
 2087 1386 991C     	 adds r1,r3,#2
 2088 1388 07F5AC72 	 add r2,r7,#344
 2089 138c 1160     	 str r1,[r2]
 2090 138e 1B88     	 ldrh r3,[r3]
 2091 1390 1AB2     	 sxth r2,r3
 2092 1392 07F5AA73 	 add r3,r7,#340
 2093 1396 1B68     	 ldr r3,[r3]
 2094 1398 981E     	 subs r0,r3,#2
 2095 139a 07F5AA71 	 add r1,r7,#340
 2096 139e 0860     	 str r0,[r1]
 2097 13a0 1B88     	 ldrh r3,[r3]
 2098 13a2 1BB2     	 sxth r3,r3
 2099 13a4 03FB02F3 	 mul r3,r3,r2
 2100 13a8 1A46     	 mov r2,r3
 2101 13aa 4FEAE273 	 asr r3,r2,#31
 2102 13ae 07F58261 	 add r1,r7,#1040
 2103 13b2 D1E90001 	 ldrd r0,[r1]
 2104 13b6 1218     	 adds r2,r2,r0
 2105 13b8 43EB0103 	 adc r3,r3,r1
 2106 13bc 07F58261 	 add r1,r7,#1040
 2107 13c0 C1E90023 	 strd r2,[r1]
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) * px++ * *py--);
 2108              	 .loc 1 518 0
 2109 13c4 07F5AC73 	 add r3,r7,#344
 2110 13c8 1B68     	 ldr r3,[r3]
 2111 13ca 991C     	 adds r1,r3,#2
 2112 13cc 07F5AC72 	 add r2,r7,#344
 2113 13d0 1160     	 str r1,[r2]
 2114 13d2 1B88     	 ldrh r3,[r3]
 2115 13d4 1AB2     	 sxth r2,r3
 2116 13d6 07F5AA73 	 add r3,r7,#340
 2117 13da 1B68     	 ldr r3,[r3]
 2118 13dc 981E     	 subs r0,r3,#2
 2119 13de 07F5AA71 	 add r1,r7,#340
 2120 13e2 0860     	 str r0,[r1]
 2121 13e4 1B88     	 ldrh r3,[r3]
 2122 13e6 1BB2     	 sxth r3,r3
 2123 13e8 03FB02F3 	 mul r3,r3,r2
 2124 13ec 1A46     	 mov r2,r3
 2125 13ee 4FEAE273 	 asr r3,r2,#31
 2126 13f2 07F58261 	 add r1,r7,#1040
 2127 13f6 D1E90001 	 ldrd r0,[r1]
 2128 13fa 1218     	 adds r2,r2,r0
 2129 13fc 43EB0103 	 adc r3,r3,r1
 2130 1400 07F58261 	 add r1,r7,#1040
 2131 1404 C1E90023 	 strd r2,[r1]
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           /* Decrement the loop counter */
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           k--;
 2132              	 .loc 1 521 0
 2133 1408 D7F8D833 	 ldr r3,[r7,#984]
 2134 140c 013B     	 subs r3,r3,#1
 2135 140e C7F8D833 	 str r3,[r7,#984]
 2136              	.L63:
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         {
 2137              	 .loc 1 512 0
 2138 1412 D7F8D833 	 ldr r3,[r7,#984]
 2139 1416 002B     	 cmp r3,#0
 2140 1418 7FF46EAF 	 bne .L64
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         }
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****          ** No loop unrolling is used. */
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         k = srcBLen % 0x4u;
 2141              	 .loc 1 526 0
 2142 141c 07F14003 	 add r3,r7,#64
 2143 1420 1B68     	 ldr r3,[r3]
 2144 1422 03F00303 	 and r3,r3,#3
 2145 1426 C7F8D833 	 str r3,[r7,#984]
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         while (k > 0u)
 2146              	 .loc 1 528 0
 2147 142a 26E0     	 b .L65
 2148              	.L66:
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         {
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           /* Perform the multiply-accumulates */
 531:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) * px++ * *py--);
 2149              	 .loc 1 531 0
 2150 142c 07F5AC73 	 add r3,r7,#344
 2151 1430 1B68     	 ldr r3,[r3]
 2152 1432 991C     	 adds r1,r3,#2
 2153 1434 07F5AC72 	 add r2,r7,#344
 2154 1438 1160     	 str r1,[r2]
 2155 143a 1B88     	 ldrh r3,[r3]
 2156 143c 1AB2     	 sxth r2,r3
 2157 143e 07F5AA73 	 add r3,r7,#340
 2158 1442 1B68     	 ldr r3,[r3]
 2159 1444 981E     	 subs r0,r3,#2
 2160 1446 07F5AA71 	 add r1,r7,#340
 2161 144a 0860     	 str r0,[r1]
 2162 144c 1B88     	 ldrh r3,[r3]
 2163 144e 1BB2     	 sxth r3,r3
 2164 1450 03FB02F3 	 mul r3,r3,r2
 2165 1454 1A46     	 mov r2,r3
 2166 1456 4FEAE273 	 asr r3,r2,#31
 2167 145a 07F58261 	 add r1,r7,#1040
 2168 145e D1E90001 	 ldrd r0,[r1]
 2169 1462 1218     	 adds r2,r2,r0
 2170 1464 43EB0103 	 adc r3,r3,r1
 2171 1468 07F58261 	 add r1,r7,#1040
 2172 146c C1E90023 	 strd r2,[r1]
 532:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 533:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           /* Decrement the loop counter */
 534:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           k--;
 2173              	 .loc 1 534 0
 2174 1470 D7F8D833 	 ldr r3,[r7,#984]
 2175 1474 013B     	 subs r3,r3,#1
 2176 1476 C7F8D833 	 str r3,[r7,#984]
 2177              	.L65:
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         {
 2178              	 .loc 1 528 0
 2179 147a D7F8D833 	 ldr r3,[r7,#984]
 2180 147e 002B     	 cmp r3,#0
 2181 1480 D4D1     	 bne .L66
 535:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         }
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 537:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         *pOut++ = (q15_t) (__SSAT(sum >> 15, 16));
 2182              	 .loc 1 538 0
 2183 1482 07F5AE73 	 add r3,r7,#348
 2184 1486 1968     	 ldr r1,[r3]
 2185 1488 8A1C     	 adds r2,r1,#2
 2186 148a 07F5AE73 	 add r3,r7,#348
 2187 148e 1A60     	 str r2,[r3]
 2188              	.LBB138:
 2189 1490 07F58263 	 add r3,r7,#1040
 2190 1494 D3E90023 	 ldrd r2,[r3]
 2191 1498 D00B     	 lsrs r0,r2,#15
 2192 149a B861     	 str r0,[r7,#24]
 2193 149c B869     	 ldr r0,[r7,#24]
 2194 149e 40EA4340 	 orr r0,r0,r3,lsl#17
 2195 14a2 B861     	 str r0,[r7,#24]
 2196 14a4 DB13     	 asrs r3,r3,#15
 2197 14a6 FB61     	 str r3,[r7,#28]
 2198 14a8 BB69     	 ldr r3,[r7,#24]
 2199 14aa C7F87C33 	 str r3,[r7,#892]
 2200 14ae D7F87C33 	 ldr r3,[r7,#892]
 2201              	
 2202 14b2 03F30F03 	 ssat r3,#16,r3
 2203              	
 2204              	 .thumb
 2205 14b6 C7F87833 	 str r3,[r7,#888]
 2206 14ba D7F87833 	 ldr r3,[r7,#888]
 2207              	.LBE138:
 2208 14be 9BB2     	 uxth r3,r3
 2209 14c0 0B80     	 strh r3,[r1]
 539:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 540:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Increment the pointer pIn1 index, count by 1 */
 541:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         count++;
 2210              	 .loc 1 541 0
 2211 14c2 D7F8D433 	 ldr r3,[r7,#980]
 2212 14c6 0133     	 adds r3,r3,#1
 2213 14c8 C7F8D433 	 str r3,[r7,#980]
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 543:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 544:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         px = pIn1 + count;
 2214              	 .loc 1 544 0
 2215 14cc D7F8D433 	 ldr r3,[r7,#980]
 2216 14d0 5B00     	 lsls r3,r3,#1
 2217 14d2 D7F81C24 	 ldr r2,[r7,#1052]
 2218 14d6 1A44     	 add r2,r2,r3
 2219 14d8 07F5AC73 	 add r3,r7,#344
 2220 14dc 1A60     	 str r2,[r3]
 545:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         py = pSrc2;
 2221              	 .loc 1 545 0
 2222 14de 07F5AA73 	 add r3,r7,#340
 2223 14e2 D7F8E823 	 ldr r2,[r7,#1000]
 2224 14e6 1A60     	 str r2,[r3]
 546:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement the loop counter */
 548:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         blkCnt--;
 2225              	 .loc 1 548 0
 2226 14e8 D7F8D033 	 ldr r3,[r7,#976]
 2227 14ec 013B     	 subs r3,r3,#1
 2228 14ee C7F8D033 	 str r3,[r7,#976]
 2229              	.L62:
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 2230              	 .loc 1 502 0
 2231 14f2 D7F8D033 	 ldr r3,[r7,#976]
 2232 14f6 002B     	 cmp r3,#0
 2233 14f8 7FF4EFAE 	 bne .L67
 2234 14fc 79E0     	 b .L68
 2235              	.L31:
 549:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 550:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 551:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     else
 552:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 553:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* If the srcBLen is not a multiple of 4,
 554:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        * the blockSize2 loop cannot be unrolled by 4 */
 555:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       blkCnt = (uint32_t) blockSize2;
 2236              	 .loc 1 555 0
 2237 14fe D7F8BC33 	 ldr r3,[r7,#956]
 2238 1502 C7F8D033 	 str r3,[r7,#976]
 556:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       while (blkCnt > 0u)
 2239              	 .loc 1 557 0
 2240 1506 70E0     	 b .L69
 2241              	.L72:
 558:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 559:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Accumulator is made zero for every iteration */
 560:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         sum = 0;
 2242              	 .loc 1 560 0
 2243 1508 4FF00002 	 mov r2,#0
 2244 150c 4FF00003 	 mov r3,#0
 2245 1510 07F58261 	 add r1,r7,#1040
 2246 1514 C1E90023 	 strd r2,[r1]
 561:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 562:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* srcBLen number of MACS should be performed */
 563:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         k = srcBLen;
 2247              	 .loc 1 563 0
 2248 1518 07F14003 	 add r3,r7,#64
 2249 151c 1B68     	 ldr r3,[r3]
 2250 151e C7F8D833 	 str r3,[r7,#984]
 564:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 565:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         while (k > 0u)
 2251              	 .loc 1 565 0
 2252 1522 26E0     	 b .L70
 2253              	.L71:
 566:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         {
 567:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           /* Perform the multiply-accumulate */
 568:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) * px++ * *py--);
 2254              	 .loc 1 568 0
 2255 1524 07F5AC73 	 add r3,r7,#344
 2256 1528 1B68     	 ldr r3,[r3]
 2257 152a 991C     	 adds r1,r3,#2
 2258 152c 07F5AC72 	 add r2,r7,#344
 2259 1530 1160     	 str r1,[r2]
 2260 1532 1B88     	 ldrh r3,[r3]
 2261 1534 1AB2     	 sxth r2,r3
 2262 1536 07F5AA73 	 add r3,r7,#340
 2263 153a 1B68     	 ldr r3,[r3]
 2264 153c 981E     	 subs r0,r3,#2
 2265 153e 07F5AA71 	 add r1,r7,#340
 2266 1542 0860     	 str r0,[r1]
 2267 1544 1B88     	 ldrh r3,[r3]
 2268 1546 1BB2     	 sxth r3,r3
 2269 1548 03FB02F3 	 mul r3,r3,r2
 2270 154c 1A46     	 mov r2,r3
 2271 154e 4FEAE273 	 asr r3,r2,#31
 2272 1552 07F58261 	 add r1,r7,#1040
 2273 1556 D1E90001 	 ldrd r0,[r1]
 2274 155a 1218     	 adds r2,r2,r0
 2275 155c 43EB0103 	 adc r3,r3,r1
 2276 1560 07F58261 	 add r1,r7,#1040
 2277 1564 C1E90023 	 strd r2,[r1]
 569:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 570:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           /* Decrement the loop counter */
 571:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           k--;
 2278              	 .loc 1 571 0
 2279 1568 D7F8D833 	 ldr r3,[r7,#984]
 2280 156c 013B     	 subs r3,r3,#1
 2281 156e C7F8D833 	 str r3,[r7,#984]
 2282              	.L70:
 565:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         {
 2283              	 .loc 1 565 0
 2284 1572 D7F8D833 	 ldr r3,[r7,#984]
 2285 1576 002B     	 cmp r3,#0
 2286 1578 D4D1     	 bne .L71
 572:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         }
 573:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 574:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
 575:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         *pOut++ = (q15_t) (__SSAT(sum >> 15, 16));
 2287              	 .loc 1 575 0
 2288 157a 07F5AE73 	 add r3,r7,#348
 2289 157e 1968     	 ldr r1,[r3]
 2290 1580 8A1C     	 adds r2,r1,#2
 2291 1582 07F5AE73 	 add r3,r7,#348
 2292 1586 1A60     	 str r2,[r3]
 2293              	.LBB139:
 2294 1588 07F58263 	 add r3,r7,#1040
 2295 158c D3E90023 	 ldrd r2,[r3]
 2296 1590 D00B     	 lsrs r0,r2,#15
 2297 1592 3861     	 str r0,[r7,#16]
 2298 1594 3869     	 ldr r0,[r7,#16]
 2299 1596 40EA4340 	 orr r0,r0,r3,lsl#17
 2300 159a 3861     	 str r0,[r7,#16]
 2301 159c DB13     	 asrs r3,r3,#15
 2302 159e 7B61     	 str r3,[r7,#20]
 2303 15a0 3B69     	 ldr r3,[r7,#16]
 2304 15a2 C7F87433 	 str r3,[r7,#884]
 2305 15a6 D7F87433 	 ldr r3,[r7,#884]
 2306              	
 2307 15aa 03F30F03 	 ssat r3,#16,r3
 2308              	
 2309              	 .thumb
 2310 15ae C7F87033 	 str r3,[r7,#880]
 2311 15b2 D7F87033 	 ldr r3,[r7,#880]
 2312              	.LBE139:
 2313 15b6 9BB2     	 uxth r3,r3
 2314 15b8 0B80     	 strh r3,[r1]
 576:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 577:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Increment the MAC count */
 578:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         count++;
 2315              	 .loc 1 578 0
 2316 15ba D7F8D433 	 ldr r3,[r7,#980]
 2317 15be 0133     	 adds r3,r3,#1
 2318 15c0 C7F8D433 	 str r3,[r7,#980]
 579:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 580:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 581:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         px = pIn1 + count;
 2319              	 .loc 1 581 0
 2320 15c4 D7F8D433 	 ldr r3,[r7,#980]
 2321 15c8 5B00     	 lsls r3,r3,#1
 2322 15ca D7F81C24 	 ldr r2,[r7,#1052]
 2323 15ce 1A44     	 add r2,r2,r3
 2324 15d0 07F5AC73 	 add r3,r7,#344
 2325 15d4 1A60     	 str r2,[r3]
 582:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         py = pSrc2;
 2326              	 .loc 1 582 0
 2327 15d6 07F5AA73 	 add r3,r7,#340
 2328 15da D7F8E823 	 ldr r2,[r7,#1000]
 2329 15de 1A60     	 str r2,[r3]
 583:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 584:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement the loop counter */
 585:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         blkCnt--;
 2330              	 .loc 1 585 0
 2331 15e0 D7F8D033 	 ldr r3,[r7,#976]
 2332 15e4 013B     	 subs r3,r3,#1
 2333 15e6 C7F8D033 	 str r3,[r7,#976]
 2334              	.L69:
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 2335              	 .loc 1 557 0
 2336 15ea D7F8D033 	 ldr r3,[r7,#976]
 2337 15ee 002B     	 cmp r3,#0
 2338 15f0 8AD1     	 bne .L72
 2339              	.L68:
 586:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 587:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 588:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 589:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 590:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* --------------------------
 591:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * Initializations of stage3
 592:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * -------------------------*/
 593:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 594:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[src
 595:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[src
 596:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * ....
 597:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 598:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * sum +=  x[srcALen-1] * y[srcBLen-1]
 599:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      */
 600:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 601:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* In this stage the MAC operations are decreased by 1 for every iteration.
 602:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        The count variable holds the number of MAC operations performed */
 603:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     count = srcBLen - 1u;
 2340              	 .loc 1 603 0
 2341 15f2 07F14003 	 add r3,r7,#64
 2342 15f6 1B68     	 ldr r3,[r3]
 2343 15f8 013B     	 subs r3,r3,#1
 2344 15fa C7F8D433 	 str r3,[r7,#980]
 604:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 605:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputA */
 606:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
 2345              	 .loc 1 606 0
 2346 15fe 07F14802 	 add r2,r7,#72
 2347 1602 07F14003 	 add r3,r7,#64
 2348 1606 1268     	 ldr r2,[r2]
 2349 1608 1B68     	 ldr r3,[r3]
 2350 160a D31A     	 subs r3,r2,r3
 2351 160c 0133     	 adds r3,r3,#1
 2352 160e 5B00     	 lsls r3,r3,#1
 2353 1610 D7F81C24 	 ldr r2,[r7,#1052]
 2354 1614 1344     	 add r3,r3,r2
 2355 1616 C7F8EC33 	 str r3,[r7,#1004]
 607:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     px = pSrc1;
 2356              	 .loc 1 607 0
 2357 161a 07F5AC73 	 add r3,r7,#344
 2358 161e D7F8EC23 	 ldr r2,[r7,#1004]
 2359 1622 1A60     	 str r2,[r3]
 608:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 609:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputB */
 610:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1u);
 2360              	 .loc 1 610 0
 2361 1624 07F14003 	 add r3,r7,#64
 2362 1628 1B68     	 ldr r3,[r3]
 2363 162a 03F10043 	 add r3,r3,#-2147483648
 2364 162e 013B     	 subs r3,r3,#1
 2365 1630 5B00     	 lsls r3,r3,#1
 2366 1632 D7F81824 	 ldr r2,[r7,#1048]
 2367 1636 1344     	 add r3,r3,r2
 2368 1638 C7F8E833 	 str r3,[r7,#1000]
 611:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     pIn2 = pSrc2 - 1u;
 2369              	 .loc 1 611 0
 2370 163c D7F8E833 	 ldr r3,[r7,#1000]
 2371 1640 023B     	 subs r3,r3,#2
 2372 1642 C7F81834 	 str r3,[r7,#1048]
 612:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     py = pIn2;
 2373              	 .loc 1 612 0
 2374 1646 07F5AA73 	 add r3,r7,#340
 2375 164a D7F81824 	 ldr r2,[r7,#1048]
 2376 164e 1A60     	 str r2,[r3]
 613:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 614:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* -------------------
 615:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * Stage3 process
 616:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * ------------------*/
 617:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 618:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 619:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* First part of this stage computes the MAC operations greater than 4 */
 620:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Second part of this stage computes the MAC operations less than or equal to 4 */
 621:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 622:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* The first part of the stage starts here */
 623:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     j = count >> 2u;
 2377              	 .loc 1 623 0
 2378 1650 D7F8D433 	 ldr r3,[r7,#980]
 2379 1654 9B08     	 lsrs r3,r3,#2
 2380 1656 C7F8DC33 	 str r3,[r7,#988]
 624:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 625:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     while ((j > 0u) && (blockSize3 > 0))
 2381              	 .loc 1 625 0
 2382 165a 33E1     	 b .L73
 2383              	.L82:
 626:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 627:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Accumulator is made zero for every iteration */
 628:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       sum = 0;
 2384              	 .loc 1 628 0
 2385 165c 4FF00002 	 mov r2,#0
 2386 1660 4FF00003 	 mov r3,#0
 2387 1664 07F58261 	 add r1,r7,#1040
 2388 1668 C1E90023 	 strd r2,[r1]
 629:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 630:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 631:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       k = count >> 2u;
 2389              	 .loc 1 631 0
 2390 166c D7F8D433 	 ldr r3,[r7,#980]
 2391 1670 9B08     	 lsrs r3,r3,#2
 2392 1672 C7F8D833 	 str r3,[r7,#984]
 632:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 633:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 634:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 635:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0u)
 2393              	 .loc 1 635 0
 2394 1676 86E0     	 b .L74
 2395              	.L77:
 636:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 637:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* x[srcALen - srcBLen + 1], x[srcALen - srcBLen + 2] are multiplied
 638:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****          * with y[srcBLen - 1], y[srcBLen - 2] respectively */
 639:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALDX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 2396              	 .loc 1 639 0
 2397 1678 07F5AC72 	 add r2,r7,#344
 2398 167c 1368     	 ldr r3,[r2]
 2399 167e 191D     	 adds r1,r3,#4
 2400 1680 1160     	 str r1,[r2]
 2401 1682 1B68     	 ldr r3,[r3]
 2402 1684 1C46     	 mov r4,r3
 2403 1686 07F5AA72 	 add r2,r7,#340
 2404 168a 1368     	 ldr r3,[r2]
 2405 168c 191F     	 subs r1,r3,#4
 2406 168e 1160     	 str r1,[r2]
 2407 1690 1B68     	 ldr r3,[r3]
 2408 1692 1846     	 mov r0,r3
 2409 1694 07F58263 	 add r3,r7,#1040
 2410 1698 D3E90023 	 ldrd r2,[r3]
 2411 169c 07F5CE71 	 add r1,r7,#412
 2412 16a0 0C60     	 str r4,[r1]
 2413 16a2 07F5CC71 	 add r1,r7,#408
 2414 16a6 0860     	 str r0,[r1]
 2415 16a8 07F5C871 	 add r1,r7,#400
 2416 16ac C1E90023 	 strd r2,[r1]
 2417              	.LBB140:
 2418              	.LBB141:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 2419              	 .loc 2 1759 0
 2420 16b0 07F59871 	 add r1,r7,#304
 2421 16b4 07F5C873 	 add r3,r7,#400
 2422 16b8 D3E90023 	 ldrd r2,[r3]
 2423 16bc C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 2424              	 .loc 2 1762 0
 2425 16c0 07F59873 	 add r3,r7,#304
 2426 16c4 1A68     	 ldr r2,[r3]
 2427 16c6 07F59873 	 add r3,r7,#304
 2428 16ca 5C68     	 ldr r4,[r3,#4]
 2429 16cc 07F5CE73 	 add r3,r7,#412
 2430 16d0 1968     	 ldr r1,[r3]
 2431 16d2 07F5CC73 	 add r3,r7,#408
 2432 16d6 1868     	 ldr r0,[r3]
 2433 16d8 2346     	 mov r3,r4
 2434              	
 2435 16da C1FBD023 	 smlaldx r2,r3,r1,r0
 2436              	
 2437              	 .thumb
 2438 16de 07F59871 	 add r1,r7,#304
 2439 16e2 0A60     	 str r2,[r1]
 2440 16e4 07F59872 	 add r2,r7,#304
 2441 16e8 5360     	 str r3,[r2,#4]
 2442              	 .loc 2 1767 0
 2443 16ea 07F59873 	 add r3,r7,#304
 2444 16ee D3E90023 	 ldrd r2,[r3]
 2445              	.LBE141:
 2446              	.LBE140:
 2447              	 .loc 1 639 0
 2448 16f2 07F58261 	 add r1,r7,#1040
 2449 16f6 C1E90023 	 strd r2,[r1]
 640:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* x[srcALen - srcBLen + 3], x[srcALen - srcBLen + 4] are multiplied
 641:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****          * with y[srcBLen - 3], y[srcBLen - 4] respectively */
 642:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALDX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 2450              	 .loc 1 642 0
 2451 16fa 07F5AC72 	 add r2,r7,#344
 2452 16fe 1368     	 ldr r3,[r2]
 2453 1700 191D     	 adds r1,r3,#4
 2454 1702 1160     	 str r1,[r2]
 2455 1704 1B68     	 ldr r3,[r3]
 2456 1706 1C46     	 mov r4,r3
 2457 1708 07F5AA72 	 add r2,r7,#340
 2458 170c 1368     	 ldr r3,[r2]
 2459 170e 191F     	 subs r1,r3,#4
 2460 1710 1160     	 str r1,[r2]
 2461 1712 1B68     	 ldr r3,[r3]
 2462 1714 1846     	 mov r0,r3
 2463 1716 07F58263 	 add r3,r7,#1040
 2464 171a D3E90023 	 ldrd r2,[r3]
 2465 171e 07F5C671 	 add r1,r7,#396
 2466 1722 0C60     	 str r4,[r1]
 2467 1724 07F5C471 	 add r1,r7,#392
 2468 1728 0860     	 str r0,[r1]
 2469 172a 07F5C071 	 add r1,r7,#384
 2470 172e C1E90023 	 strd r2,[r1]
 2471              	.LBB142:
 2472              	.LBB143:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 2473              	 .loc 2 1759 0
 2474 1732 07F59C71 	 add r1,r7,#312
 2475 1736 07F5C073 	 add r3,r7,#384
 2476 173a D3E90023 	 ldrd r2,[r3]
 2477 173e C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 2478              	 .loc 2 1762 0
 2479 1742 07F59C73 	 add r3,r7,#312
 2480 1746 1A68     	 ldr r2,[r3]
 2481 1748 07F59C73 	 add r3,r7,#312
 2482 174c 5C68     	 ldr r4,[r3,#4]
 2483 174e 07F5C673 	 add r3,r7,#396
 2484 1752 1968     	 ldr r1,[r3]
 2485 1754 07F5C473 	 add r3,r7,#392
 2486 1758 1868     	 ldr r0,[r3]
 2487 175a 2346     	 mov r3,r4
 2488              	
 2489 175c C1FBD023 	 smlaldx r2,r3,r1,r0
 2490              	
 2491              	 .thumb
 2492 1760 07F59C71 	 add r1,r7,#312
 2493 1764 0A60     	 str r2,[r1]
 2494 1766 07F59C72 	 add r2,r7,#312
 2495 176a 5360     	 str r3,[r2,#4]
 2496              	 .loc 2 1767 0
 2497 176c 07F59C73 	 add r3,r7,#312
 2498 1770 D3E90023 	 ldrd r2,[r3]
 2499              	.LBE143:
 2500              	.LBE142:
 2501              	 .loc 1 642 0
 2502 1774 07F58261 	 add r1,r7,#1040
 2503 1778 C1E90023 	 strd r2,[r1]
 643:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 644:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement the loop counter */
 645:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
 2504              	 .loc 1 645 0
 2505 177c D7F8D833 	 ldr r3,[r7,#984]
 2506 1780 013B     	 subs r3,r3,#1
 2507 1782 C7F8D833 	 str r3,[r7,#984]
 2508              	.L74:
 635:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 2509              	 .loc 1 635 0
 2510 1786 D7F8D833 	 ldr r3,[r7,#984]
 2511 178a 002B     	 cmp r3,#0
 2512 178c 7FF474AF 	 bne .L77
 646:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 647:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 648:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* For the next MAC operations, the pointer py is used without SIMD
 649:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        * So, py is incremented by 1 */
 650:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       py = py + 1u;
 2513              	 .loc 1 650 0
 2514 1790 07F5AA73 	 add r3,r7,#340
 2515 1794 1B68     	 ldr r3,[r3]
 2516 1796 9A1C     	 adds r2,r3,#2
 2517 1798 07F5AA73 	 add r3,r7,#340
 2518 179c 1A60     	 str r2,[r3]
 651:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 652:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.
 653:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****        ** No loop unrolling is used. */
 654:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       k = count % 0x4u;
 2519              	 .loc 1 654 0
 2520 179e D7F8D433 	 ldr r3,[r7,#980]
 2521 17a2 03F00303 	 and r3,r3,#3
 2522 17a6 C7F8D833 	 str r3,[r7,#984]
 655:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 656:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0u)
 2523              	 .loc 1 656 0
 2524 17aa 49E0     	 b .L78
 2525              	.L80:
 657:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 658:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* sum += x[srcALen - srcBLen + 5] * y[srcBLen - 5] */
 659:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALD(*px++, *py--, sum);
 2526              	 .loc 1 659 0
 2527 17ac 07F5AC73 	 add r3,r7,#344
 2528 17b0 1B68     	 ldr r3,[r3]
 2529 17b2 991C     	 adds r1,r3,#2
 2530 17b4 07F5AC72 	 add r2,r7,#344
 2531 17b8 1160     	 str r1,[r2]
 2532 17ba 1B88     	 ldrh r3,[r3]
 2533 17bc 1CB2     	 sxth r4,r3
 2534 17be 07F5AA73 	 add r3,r7,#340
 2535 17c2 1B68     	 ldr r3,[r3]
 2536 17c4 991E     	 subs r1,r3,#2
 2537 17c6 07F5AA72 	 add r2,r7,#340
 2538 17ca 1160     	 str r1,[r2]
 2539 17cc 1B88     	 ldrh r3,[r3]
 2540 17ce 18B2     	 sxth r0,r3
 2541 17d0 07F58263 	 add r3,r7,#1040
 2542 17d4 D3E90023 	 ldrd r2,[r3]
 2543 17d8 07F5BE71 	 add r1,r7,#380
 2544 17dc 0C60     	 str r4,[r1]
 2545 17de 07F5BC71 	 add r1,r7,#376
 2546 17e2 0860     	 str r0,[r1]
 2547 17e4 07F5B871 	 add r1,r7,#368
 2548 17e8 C1E90023 	 strd r2,[r1]
 2549              	.LBB144:
 2550              	.LBB145:
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 2551              	 .loc 2 1742 0
 2552 17ec 07F5A071 	 add r1,r7,#320
 2553 17f0 07F5B873 	 add r3,r7,#368
 2554 17f4 D3E90023 	 ldrd r2,[r3]
 2555 17f8 C1E90023 	 strd r2,[r1]
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 2556              	 .loc 2 1745 0
 2557 17fc 07F5A073 	 add r3,r7,#320
 2558 1800 1A68     	 ldr r2,[r3]
 2559 1802 07F5A073 	 add r3,r7,#320
 2560 1806 5C68     	 ldr r4,[r3,#4]
 2561 1808 07F5BE73 	 add r3,r7,#380
 2562 180c 1968     	 ldr r1,[r3]
 2563 180e 07F5BC73 	 add r3,r7,#376
 2564 1812 1868     	 ldr r0,[r3]
 2565 1814 2346     	 mov r3,r4
 2566              	
 2567 1816 C1FBC023 	 smlald r2,r3,r1,r0
 2568              	
 2569              	 .thumb
 2570 181a 07F5A071 	 add r1,r7,#320
 2571 181e 0A60     	 str r2,[r1]
 2572 1820 07F5A072 	 add r2,r7,#320
 2573 1824 5360     	 str r3,[r2,#4]
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 2574              	 .loc 2 1750 0
 2575 1826 07F5A073 	 add r3,r7,#320
 2576 182a D3E90023 	 ldrd r2,[r3]
 2577              	.LBE145:
 2578              	.LBE144:
 2579              	 .loc 1 659 0
 2580 182e 07F58261 	 add r1,r7,#1040
 2581 1832 C1E90023 	 strd r2,[r1]
 660:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 661:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement the loop counter */
 662:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
 2582              	 .loc 1 662 0
 2583 1836 D7F8D833 	 ldr r3,[r7,#984]
 2584 183a 013B     	 subs r3,r3,#1
 2585 183c C7F8D833 	 str r3,[r7,#984]
 2586              	.L78:
 656:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 2587              	 .loc 1 656 0
 2588 1840 D7F8D833 	 ldr r3,[r7,#984]
 2589 1844 002B     	 cmp r3,#0
 2590 1846 B1D1     	 bne .L80
 663:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 664:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 665:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 666:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 2591              	 .loc 1 666 0
 2592 1848 07F5AE73 	 add r3,r7,#348
 2593 184c 1968     	 ldr r1,[r3]
 2594 184e 8A1C     	 adds r2,r1,#2
 2595 1850 07F5AE73 	 add r3,r7,#348
 2596 1854 1A60     	 str r2,[r3]
 2597              	.LBB146:
 2598 1856 07F58263 	 add r3,r7,#1040
 2599 185a D3E90023 	 ldrd r2,[r3]
 2600 185e D00B     	 lsrs r0,r2,#15
 2601 1860 B860     	 str r0,[r7,#8]
 2602 1862 B868     	 ldr r0,[r7,#8]
 2603 1864 40EA4340 	 orr r0,r0,r3,lsl#17
 2604 1868 B860     	 str r0,[r7,#8]
 2605 186a DB13     	 asrs r3,r3,#15
 2606 186c FB60     	 str r3,[r7,#12]
 2607 186e BB68     	 ldr r3,[r7,#8]
 2608 1870 C7F86C33 	 str r3,[r7,#876]
 2609 1874 D7F86C33 	 ldr r3,[r7,#876]
 2610              	
 2611 1878 03F30F03 	 ssat r3,#16,r3
 2612              	
 2613              	 .thumb
 2614 187c C7F86833 	 str r3,[r7,#872]
 2615 1880 D7F86833 	 ldr r3,[r7,#872]
 2616              	.LBE146:
 2617 1884 9BB2     	 uxth r3,r3
 2618 1886 0B80     	 strh r3,[r1]
 667:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 668:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 669:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       px = ++pSrc1;
 2619              	 .loc 1 669 0
 2620 1888 D7F8EC33 	 ldr r3,[r7,#1004]
 2621 188c 0233     	 adds r3,r3,#2
 2622 188e C7F8EC33 	 str r3,[r7,#1004]
 2623 1892 07F5AC73 	 add r3,r7,#344
 2624 1896 D7F8EC23 	 ldr r2,[r7,#1004]
 2625 189a 1A60     	 str r2,[r3]
 670:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       py = pIn2;
 2626              	 .loc 1 670 0
 2627 189c 07F5AA73 	 add r3,r7,#340
 2628 18a0 D7F81824 	 ldr r2,[r7,#1048]
 2629 18a4 1A60     	 str r2,[r3]
 671:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 672:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement the MAC count */
 673:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       count--;
 2630              	 .loc 1 673 0
 2631 18a6 D7F8D433 	 ldr r3,[r7,#980]
 2632 18aa 013B     	 subs r3,r3,#1
 2633 18ac C7F8D433 	 str r3,[r7,#980]
 674:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 675:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement the loop counter */
 676:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       blockSize3--;
 2634              	 .loc 1 676 0
 2635 18b0 D7F8C833 	 ldr r3,[r7,#968]
 2636 18b4 013B     	 subs r3,r3,#1
 2637 18b6 C7F8C833 	 str r3,[r7,#968]
 677:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 678:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       j--;
 2638              	 .loc 1 678 0
 2639 18ba D7F8DC33 	 ldr r3,[r7,#988]
 2640 18be 013B     	 subs r3,r3,#1
 2641 18c0 C7F8DC33 	 str r3,[r7,#988]
 2642              	.L73:
 625:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 2643              	 .loc 1 625 0
 2644 18c4 D7F8DC33 	 ldr r3,[r7,#988]
 2645 18c8 002B     	 cmp r3,#0
 2646 18ca 04D0     	 beq .L81
 625:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 2647              	 .loc 1 625 0 is_stmt 0 discriminator 1
 2648 18cc D7F8C833 	 ldr r3,[r7,#968]
 2649 18d0 002B     	 cmp r3,#0
 2650 18d2 3FF7C3AE 	 bgt .L82
 2651              	.L81:
 679:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 680:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 681:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* The second part of the stage starts here */
 682:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* SIMD is not used for the next MAC operations,
 683:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****      * so pointer py is updated to read only one sample at a time */
 684:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     py = py + 1u;
 2652              	 .loc 1 684 0 is_stmt 1
 2653 18d6 07F5AA73 	 add r3,r7,#340
 2654 18da 1B68     	 ldr r3,[r3]
 2655 18dc 9A1C     	 adds r2,r3,#2
 2656 18de 07F5AA73 	 add r3,r7,#340
 2657 18e2 1A60     	 str r2,[r3]
 685:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 686:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     while (blockSize3 > 0)
 2658              	 .loc 1 686 0
 2659 18e4 93E0     	 b .L83
 2660              	.L87:
 687:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 688:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Accumulator is made zero for every iteration */
 689:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       sum = 0;
 2661              	 .loc 1 689 0
 2662 18e6 4FF00002 	 mov r2,#0
 2663 18ea 4FF00003 	 mov r3,#0
 2664 18ee 07F58261 	 add r1,r7,#1040
 2665 18f2 C1E90023 	 strd r2,[r1]
 690:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 691:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 692:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       k = count;
 2666              	 .loc 1 692 0
 2667 18f6 D7F8D433 	 ldr r3,[r7,#980]
 2668 18fa C7F8D833 	 str r3,[r7,#984]
 693:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 694:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0u)
 2669              	 .loc 1 694 0
 2670 18fe 49E0     	 b .L84
 2671              	.L86:
 695:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 696:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 697:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 698:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALD(*px++, *py--, sum);
 2672              	 .loc 1 698 0
 2673 1900 07F5AC73 	 add r3,r7,#344
 2674 1904 1B68     	 ldr r3,[r3]
 2675 1906 991C     	 adds r1,r3,#2
 2676 1908 07F5AC72 	 add r2,r7,#344
 2677 190c 1160     	 str r1,[r2]
 2678 190e 1B88     	 ldrh r3,[r3]
 2679 1910 1CB2     	 sxth r4,r3
 2680 1912 07F5AA73 	 add r3,r7,#340
 2681 1916 1B68     	 ldr r3,[r3]
 2682 1918 991E     	 subs r1,r3,#2
 2683 191a 07F5AA72 	 add r2,r7,#340
 2684 191e 1160     	 str r1,[r2]
 2685 1920 1B88     	 ldrh r3,[r3]
 2686 1922 18B2     	 sxth r0,r3
 2687 1924 07F58263 	 add r3,r7,#1040
 2688 1928 D3E90023 	 ldrd r2,[r3]
 2689 192c 07F5B671 	 add r1,r7,#364
 2690 1930 0C60     	 str r4,[r1]
 2691 1932 07F5B471 	 add r1,r7,#360
 2692 1936 0860     	 str r0,[r1]
 2693 1938 07F5B071 	 add r1,r7,#352
 2694 193c C1E90023 	 strd r2,[r1]
 2695              	.LBB147:
 2696              	.LBB148:
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 2697              	 .loc 2 1742 0
 2698 1940 07F5A471 	 add r1,r7,#328
 2699 1944 07F5B073 	 add r3,r7,#352
 2700 1948 D3E90023 	 ldrd r2,[r3]
 2701 194c C1E90023 	 strd r2,[r1]
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 2702              	 .loc 2 1745 0
 2703 1950 07F5A473 	 add r3,r7,#328
 2704 1954 1A68     	 ldr r2,[r3]
 2705 1956 07F5A473 	 add r3,r7,#328
 2706 195a 5C68     	 ldr r4,[r3,#4]
 2707 195c 07F5B673 	 add r3,r7,#364
 2708 1960 1968     	 ldr r1,[r3]
 2709 1962 07F5B473 	 add r3,r7,#360
 2710 1966 1868     	 ldr r0,[r3]
 2711 1968 2346     	 mov r3,r4
 2712              	
 2713 196a C1FBC023 	 smlald r2,r3,r1,r0
 2714              	
 2715              	 .thumb
 2716 196e 07F5A471 	 add r1,r7,#328
 2717 1972 0A60     	 str r2,[r1]
 2718 1974 07F5A472 	 add r2,r7,#328
 2719 1978 5360     	 str r3,[r2,#4]
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 2720              	 .loc 2 1750 0
 2721 197a 07F5A473 	 add r3,r7,#328
 2722 197e D3E90023 	 ldrd r2,[r3]
 2723              	.LBE148:
 2724              	.LBE147:
 2725              	 .loc 1 698 0
 2726 1982 07F58261 	 add r1,r7,#1040
 2727 1986 C1E90023 	 strd r2,[r1]
 699:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 700:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement the loop counter */
 701:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
 2728              	 .loc 1 701 0
 2729 198a D7F8D833 	 ldr r3,[r7,#984]
 2730 198e 013B     	 subs r3,r3,#1
 2731 1990 C7F8D833 	 str r3,[r7,#984]
 2732              	.L84:
 694:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 2733              	 .loc 1 694 0
 2734 1994 D7F8D833 	 ldr r3,[r7,#984]
 2735 1998 002B     	 cmp r3,#0
 2736 199a B1D1     	 bne .L86
 702:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 703:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 704:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 705:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 2737              	 .loc 1 705 0
 2738 199c 07F5AE73 	 add r3,r7,#348
 2739 19a0 1968     	 ldr r1,[r3]
 2740 19a2 8A1C     	 adds r2,r1,#2
 2741 19a4 07F5AE73 	 add r3,r7,#348
 2742 19a8 1A60     	 str r2,[r3]
 2743              	.LBB149:
 2744 19aa 07F58263 	 add r3,r7,#1040
 2745 19ae D3E90023 	 ldrd r2,[r3]
 2746 19b2 D00B     	 lsrs r0,r2,#15
 2747 19b4 3860     	 str r0,[r7]
 2748 19b6 3868     	 ldr r0,[r7]
 2749 19b8 40EA4340 	 orr r0,r0,r3,lsl#17
 2750 19bc 3860     	 str r0,[r7]
 2751 19be DB13     	 asrs r3,r3,#15
 2752 19c0 7B60     	 str r3,[r7,#4]
 2753 19c2 3B68     	 ldr r3,[r7]
 2754 19c4 C7F86433 	 str r3,[r7,#868]
 2755 19c8 D7F86433 	 ldr r3,[r7,#868]
 2756              	
 2757 19cc 03F30F03 	 ssat r3,#16,r3
 2758              	
 2759              	 .thumb
 2760 19d0 C7F86033 	 str r3,[r7,#864]
 2761 19d4 D7F86033 	 ldr r3,[r7,#864]
 2762              	.LBE149:
 2763 19d8 9BB2     	 uxth r3,r3
 2764 19da 0B80     	 strh r3,[r1]
 706:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 707:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 708:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       px = ++pSrc1;
 2765              	 .loc 1 708 0
 2766 19dc D7F8EC33 	 ldr r3,[r7,#1004]
 2767 19e0 0233     	 adds r3,r3,#2
 2768 19e2 C7F8EC33 	 str r3,[r7,#1004]
 2769 19e6 07F5AC73 	 add r3,r7,#344
 2770 19ea D7F8EC23 	 ldr r2,[r7,#1004]
 2771 19ee 1A60     	 str r2,[r3]
 709:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       py = pSrc2;
 2772              	 .loc 1 709 0
 2773 19f0 07F5AA73 	 add r3,r7,#340
 2774 19f4 D7F8E823 	 ldr r2,[r7,#1000]
 2775 19f8 1A60     	 str r2,[r3]
 710:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 711:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement the MAC count */
 712:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       count--;
 2776              	 .loc 1 712 0
 2777 19fa D7F8D433 	 ldr r3,[r7,#980]
 2778 19fe 013B     	 subs r3,r3,#1
 2779 1a00 C7F8D433 	 str r3,[r7,#980]
 713:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 714:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement the loop counter */
 715:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       blockSize3--;
 2780              	 .loc 1 715 0
 2781 1a04 D7F8C833 	 ldr r3,[r7,#968]
 2782 1a08 013B     	 subs r3,r3,#1
 2783 1a0a C7F8C833 	 str r3,[r7,#968]
 2784              	.L83:
 686:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 2785              	 .loc 1 686 0
 2786 1a0e D7F8C833 	 ldr r3,[r7,#968]
 2787 1a12 002B     	 cmp r3,#0
 2788 1a14 3FF767AF 	 bgt .L87
 716:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 717:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 718:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* set status as ARM_MATH_SUCCESS */
 719:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     status = ARM_MATH_SUCCESS;
 2789              	 .loc 1 719 0
 2790 1a18 0023     	 movs r3,#0
 2791 1a1a 87F8C733 	 strb r3,[r7,#967]
 2792              	.L3:
 720:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   }
 721:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 722:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   /* Return to application */
 723:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   return (status);
 2793              	 .loc 1 723 0
 2794 1a1e 97F8C733 	 ldrb r3,[r7,#967]
 2795 1a22 5BB2     	 sxtb r3,r3
 724:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 725:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #else
 726:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 727:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   /* Run the below code for Cortex-M0 */
 728:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 729:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t *pIn1 = pSrcA;                           /* inputA pointer */
 730:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q15_t *pIn2 = pSrcB;                           /* inputB pointer */
 731:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   q63_t sum;                                     /* Accumulator */
 732:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   uint32_t i, j;                                 /* loop counters */
 733:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   arm_status status;                             /* status of Partial convolution */
 734:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 735:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   /* Check for range of output samples to be calculated */
 736:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1u))))
 737:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   {
 738:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Set status as ARM_ARGUMENT_ERROR */
 739:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     status = ARM_MATH_ARGUMENT_ERROR;
 740:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   }
 741:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   else
 742:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   {
 743:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* Loop to calculate convolution for output length number of values */
 744:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     for (i = firstIndex; i <= (firstIndex + numPoints - 1); i++)
 745:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     {
 746:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Initialize sum with zero to carry on MAC operations */
 747:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       sum = 0;
 748:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 749:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Loop to perform MAC operations according to convolution equation */
 750:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       for (j = 0; j <= i; j++)
 751:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       {
 752:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         /* Check the array limitations */
 753:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         if (((i - j) < srcBLen) && (j < srcALen))
 754:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         {
 755:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           /* z[i] += x[i-j] * y[j] */
 756:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****           sum += ((q31_t) pIn1[j] * (pIn2[i - j]));
 757:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****         }
 758:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       }
 759:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 760:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the output in the destination buffer */
 761:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****       pDst[i] = (q15_t) __SSAT((sum >> 15u), 16u);
 762:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     }
 763:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     /* set status as ARM_SUCCESS as there are no argument errors */
 764:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****     status = ARM_MATH_SUCCESS;
 765:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   }
 766:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c ****   return (status);
 767:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 768:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** #endif /* #if (defined(ARM_MATH_CM7) || defined(ARM_MATH_CM4) || defined(ARM_MATH_CM3)) && !defined
 769:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** 
 770:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_q15.c **** }
 2796              	 .loc 1 770 0
 2797 1a24 1846     	 mov r0,r3
 2798 1a26 07F58467 	 add r7,r7,#1056
 2799              	.LCFI3:
 2800              	 .cfi_def_cfa_offset 24
 2801 1a2a BD46     	 mov sp,r7
 2802              	.LCFI4:
 2803              	 .cfi_def_cfa_register 13
 2804              	 
 2805 1a2c BDE8900F 	 pop {r4,r7,r8,r9,r10,fp}
 2806              	.LCFI5:
 2807              	 .cfi_restore 11
 2808              	 .cfi_restore 10
 2809              	 .cfi_restore 9
 2810              	 .cfi_restore 8
 2811              	 .cfi_restore 7
 2812              	 .cfi_restore 4
 2813              	 .cfi_def_cfa_offset 0
 2814 1a30 7047     	 bx lr
 2815              	 .cfi_endproc
 2816              	.LFE135:
 2818 1a32 00BF     	 .text
 2819              	.Letext0:
 2820              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2821              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2822              	 .file 5 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_partial_q15.c
    {standard input}:20     .text.arm_conv_partial_q15:00000000 $t
    {standard input}:25     .text.arm_conv_partial_q15:00000000 arm_conv_partial_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
