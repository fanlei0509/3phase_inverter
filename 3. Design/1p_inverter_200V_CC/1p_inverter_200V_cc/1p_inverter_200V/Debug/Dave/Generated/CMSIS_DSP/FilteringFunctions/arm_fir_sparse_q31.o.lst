   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_fir_sparse_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_fir_sparse_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_fir_sparse_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_fir_sparse_q31:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * Title:        arm_fir_sparse_q31.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * Description:  Q31 sparse FIR filter processing function
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** /**
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * @addtogroup FIR_Sparse
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * @{
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  */
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** /**
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * @brief Processing function for the Q31 sparse FIR filter.
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * @param[in]  *S          points to an instance of the Q31 sparse FIR structure.
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * @param[in]  *pSrc       points to the block of input data.
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * @param[out] *pDst       points to the block of output data
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * @param[in]  *pScratchIn points to a temporary buffer of size blockSize.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * @param[in]  blockSize   number of input samples to process per call.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * @return none.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  *
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * \par
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * The function is implemented using an internal 32-bit accumulator.
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * The 1.31 x 1.31 multiplications are truncated to 2.30 format.
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * This leads to loss of precision on the intermediate multiplications and provides only a single g
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * If the accumulator result overflows, it wraps around rather than saturate.
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  * In order to avoid overflows the input signal or coefficients must be scaled down by log2(numTaps
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****  */
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** void arm_fir_sparse_q31(
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   arm_fir_sparse_instance_q31 * S,
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t * pSrc,
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t * pDst,
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t * pScratchIn,
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   uint32_t blockSize)
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** {
  28              	 .loc 1 61 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 2DE9F00F 	 push {r4,r5,r6,r7,r8,r9,r10,fp}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 32
  36              	 .cfi_offset 4,-32
  37              	 .cfi_offset 5,-28
  38              	 .cfi_offset 6,-24
  39              	 .cfi_offset 7,-20
  40              	 .cfi_offset 8,-16
  41              	 .cfi_offset 9,-12
  42              	 .cfi_offset 10,-8
  43              	 .cfi_offset 11,-4
  44 0004 DCB0     	 sub sp,sp,#368
  45              	.LCFI1:
  46              	 .cfi_def_cfa_offset 400
  47 0006 00AF     	 add r7,sp,#0
  48              	.LCFI2:
  49              	 .cfi_def_cfa_register 7
  50 0008 7867     	 str r0,[r7,#116]
  51 000a 07F17000 	 add r0,r7,#112
  52 000e 0160     	 str r1,[r0]
  53 0010 07F16C01 	 add r1,r7,#108
  54 0014 0A60     	 str r2,[r1]
  55 0016 07F16802 	 add r2,r7,#104
  56 001a 1360     	 str r3,[r2]
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t *pState = S->pState;                     /* State pointer */
  57              	 .loc 1 63 0
  58 001c 7B6F     	 ldr r3,[r7,#116]
  59 001e 5B68     	 ldr r3,[r3,#4]
  60 0020 C7F85031 	 str r3,[r7,#336]
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  61              	 .loc 1 64 0
  62 0024 7B6F     	 ldr r3,[r7,#116]
  63 0026 9B68     	 ldr r3,[r3,#8]
  64 0028 C7F86C31 	 str r3,[r7,#364]
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t *px;                                     /* Scratch buffer pointer */
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t *py = pState;                            /* Temporary pointers for state buffer */
  65              	 .loc 1 66 0
  66 002c D7F85031 	 ldr r3,[r7,#336]
  67 0030 C7F84C31 	 str r3,[r7,#332]
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t *pb = pScratchIn;                        /* Temporary pointers for scratch buffer */
  68              	 .loc 1 67 0
  69 0034 07F16803 	 add r3,r7,#104
  70 0038 1B68     	 ldr r3,[r3]
  71 003a C7F84831 	 str r3,[r7,#328]
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t *pOut;                                   /* Destination pointer */
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q63_t out;                                     /* Temporary output variable */
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of the n
  72              	 .loc 1 70 0
  73 003e 7B6F     	 ldr r3,[r7,#116]
  74 0040 1B69     	 ldr r3,[r3,#16]
  75 0042 C7F86031 	 str r3,[r7,#352]
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   uint32_t delaySize = S->maxDelay + blockSize;  /* state length */
  76              	 .loc 1 71 0
  77 0046 7B6F     	 ldr r3,[r7,#116]
  78 0048 9B89     	 ldrh r3,[r3,#12]
  79 004a 1A46     	 mov r2,r3
  80 004c D7F89031 	 ldr r3,[r7,#400]
  81 0050 1344     	 add r3,r3,r2
  82 0052 C7F84431 	 str r3,[r7,#324]
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   uint16_t numTaps = S->numTaps;                 /* Filter order */
  83              	 .loc 1 72 0
  84 0056 7B6F     	 ldr r3,[r7,#116]
  85 0058 1B88     	 ldrh r3,[r3]
  86 005a A7F84231 	 strh r3,[r7,#322]
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   int32_t readIndex;                             /* Read index of the state buffer */
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   uint32_t tapCnt, blkCnt;                       /* loop counters */
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t coeff = *pCoeffs++;                      /* Read the first coefficient value */
  87              	 .loc 1 75 0
  88 005e D7F86C21 	 ldr r2,[r7,#364]
  89 0062 131D     	 adds r3,r2,#4
  90 0064 C7F86C31 	 str r3,[r7,#364]
  91 0068 1368     	 ldr r3,[r2]
  92 006a C7F85431 	 str r3,[r7,#340]
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   q31_t in;
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* BlockSize of Input samples are copied into the state buffer */
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* StateIndex points to the starting position to write in the state buffer */
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   arm_circularWrite_f32((int32_t *) py, delaySize, &S->stateIndex, 1,
  93              	 .loc 1 81 0
  94 006e D7F84411 	 ldr r1,[r7,#324]
  95 0072 7B6F     	 ldr r3,[r7,#116]
  96 0074 9A1C     	 adds r2,r3,#2
  97 0076 D7F84C31 	 ldr r3,[r7,#332]
  98 007a C7F83031 	 str r3,[r7,#304]
  99 007e C7F82C11 	 str r1,[r7,#300]
 100 0082 C7F82821 	 str r2,[r7,#296]
 101 0086 0123     	 movs r3,#1
 102 0088 C7F82431 	 str r3,[r7,#292]
 103 008c 07F17003 	 add r3,r7,#112
 104 0090 1B68     	 ldr r3,[r3]
 105 0092 C7F82031 	 str r3,[r7,#288]
 106 0096 0123     	 movs r3,#1
 107 0098 C7F81C31 	 str r3,[r7,#284]
 108 009c D7F89031 	 ldr r3,[r7,#400]
 109 00a0 C7F81831 	 str r3,[r7,#280]
 110              	.LBB10:
 111              	.LBB11:
 112              	 .file 2 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
   1:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* ----------------------------------------------------------------------
   2:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Project:      CMSIS DSP Library
   3:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Title:        CMSIS_DSP/cmsis_dsp.h
   4:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
   6:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * $Date:        27. January 2017
   7:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * $Revision:    V.1.5.1
   8:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
   9:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Target Processor: Cortex-M cores
  10:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * -------------------------------------------------------------------- */
  11:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*
  12:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  14:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  16:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * not use this file except in compliance with the License.
  18:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * You may obtain a copy of the License at
  19:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  20:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  22:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * See the License for the specific language governing permissions and
  26:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * limitations under the License.
  27:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
  28:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
  29:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
  30:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  32:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Introduction
  33:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  34:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  35:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  38:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Basic math functions
  40:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Fast math functions
  41:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Complex math functions
  42:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Filters
  43:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Matrix functions
  44:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Transforms
  45:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Motor control functions
  46:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Statistical functions
  47:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Support functions
  48:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Interpolation functions
  49:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  50:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  53:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Using the Library
  54:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  55:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  56:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  77:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library functions are declared in the public file <code>CMSIS_DSP/cmsis_dsp.h</code> which
  78:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * public header file <code> CMSIS_DSP/cmsis_dsp.h</code> for Cortex-M cores with little endian a
  80:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * 
  85:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  86:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Examples
  87:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * --------
  88:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  89:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  90:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  91:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Toolchain Support
  92:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  93:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  94:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  97:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Building the Library
  98:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  99:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Pre-processor Macros
 107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Each library project have differant pre-processor macros.
 110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_CMx:
 128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * on ARMv8M Mainline target.
 137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - __FPU_PRESENT:
 139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - __DSP_PRESENT:
 143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * -----------------------------
 149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |File/Folder                   |Content                                                       
 152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Revision History of CMSIS-DSP
 160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Copyright Notice
 164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * operate on individual values and not arrays.
 179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions operates on complex data vectors.
 186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * (real, imag, real, imag, ...).
 188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * real values.
 191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * the type
 203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * definition for the floating-point matrix structure is shown
 204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * below:
 205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     typedef struct
 207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     {
 208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     } arm_matrix_instance_f32;
 212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * matrix element (i, j) is stored at:
 219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     pData[i*numCols + j]
 221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par Init Functions
 224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * data structure.
 226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par
 231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * To place the instance structure in a const data
 234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * data array.
 243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par Size Checking
 245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * columns.  If the size check fails the functions return:
 249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Otherwise the functions return
 253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SUCCESS
 255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupController Controller Functions
 274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupSupport Support Functions
 281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupExamples Examples
 292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef _ARM_MATH_H
 294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define _ARM_MATH_H
 295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* ignore some GCC warnings */
 297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined ( __GNUC__ )
 298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic push
 299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined(ARM_MATH_CM7)
 307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm7.h"
 308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_DSP
 309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm4.h"
 311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_DSP
 312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm3.h"
 314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0.h"
 316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0plus.h"
 319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_armv8mbl.h"
 322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_armv8mml.h"
 325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ARM_MATH_DSP
 327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #include "string.h"
 334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #include "math.h"
 335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifdef   __cplusplus
 336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** extern "C"
 337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** {
 338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q31          (0x100)
 346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q15          0x5
 347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define INDEX_MASK         0x0000003F
 348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef PI
 349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define PI               3.14159265358979f
 350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macro for Unaligned Support
 372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if defined  (__GNUC__)
 377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #else
 379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __align(4)
 380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef enum
 388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_status;
 397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int8_t q7_t;
 402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int16_t q15_t;
 407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int32_t q31_t;
 412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int64_t q63_t;
 417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef float float32_t;
 422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef double float64_t;
 427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if   defined ( __CC_ARM )
 432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __GNUC__ )
 442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __ICCARM__ )
 447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __TI_ARM__ )
 452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __CSMC__ )
 457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __TASKING__ )
 462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #error Unknown compiler
 468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
 489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q31 to Q7 values.
 529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x)
 532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x)
 542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x,
 553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t y)
 554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*
 560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __CLZ __clz
 562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t data);
 568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t data)
 571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t count = 0;
 573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t mask = 0x80000000;
 574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     while ((data & mask) == 0)
 576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       count += 1u;
 578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       mask = mask >> 1u;
 579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (count);
 582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t in,
 591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * dst,
 592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pRecipTable)
 593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t out;
 595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t tempVal;
 596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t index, i;
 597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t signBits;
 598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (in > 0)
 600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
 604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Convert input sample to 1.31 format */
 609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     in = (in << signBits);
 610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* calculation of index for initial approximated Val */
 612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (uint32_t)(in >> 24);
 613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (index & INDEX_MASK);
 614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* 1.31 with exp 1 */
 616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = pRecipTable[index];
 617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* calculation of reciprocal value */
 619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* running approximation for two iterations */
 620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     for (i = 0u; i < 2u; i++)
 621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /*      1.31 with exp 1 */
 625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* write output */
 630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *dst = out;
 631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return num of signbits of out = 1/in value */
 633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (signBits + 1u);
 634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
 641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t in,
 642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * dst,
 643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pRecipTable)
 644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t out = 0;
 646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t tempVal = 0;
 647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t index = 0, i = 0;
 648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t signBits = 0;
 649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (in > 0)
 651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
 655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Convert input sample to 1.15 format */
 660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     in = (in << signBits);
 661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* calculation of index for initial approximated Val */
 663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (uint32_t)(in >>  8);
 664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (index & INDEX_MASK);
 665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /*      1.15 with exp 1  */
 667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = pRecipTable[index];
 668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* calculation of reciprocal value */
 670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* running approximation for two iterations */
 671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     for (i = 0u; i < 2u; i++)
 672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /*      1.15 with exp 1 */
 676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* write output */
 681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *dst = out;
 682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return num of signbits of out = 1/in value */
 684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (signBits + 1);
 685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t __SSAT(
 693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x,
 694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t posMax, negMin;
 697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t i;
 698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     posMax = 1;
 700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     for (i = 0; i < (y - 1); i++)
 701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       posMax = posMax * 2;
 703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (x > 0)
 706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       posMax = (posMax - 1);
 708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (x > posMax)
 710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         x = posMax;
 712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
 715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       negMin = -posMax;
 717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (x < negMin)
 719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         x = negMin;
 721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (x);
 724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if !defined (ARM_MATH_DSP)
 733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
 738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s, t, u;
 742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
 756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s, t, u;
 760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
 774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r = 0, s = 0;
 779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
 791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
 807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
 823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
 839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
 855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
 871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
 887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
 903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
 914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
 926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t x,
 927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t y)
 928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
 937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t x,
 938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t y)
 939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
 948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
 950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t sum)
 951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
 962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
 964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t sum)
 965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMLSDX for M3 and M0 processors
 974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLSDX(
 976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
 978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t sum)
 979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMLALD for M3 and M0 processors
 988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALD(
 990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
 992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint64_t sum)
 993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
 995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMLALDX for M3 and M0 processors
1003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALDX(
1005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
1006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
1007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint64_t sum)
1008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
1010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
1011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
1012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
1013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMUAD for M3 and M0 processors
1018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUAD(
1020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
1021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
1022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
1024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMUSD for M3 and M0 processors
1030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSD(
1032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
1033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
1034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
1036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SXTB16 for M3 and M0 processors
1042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SXTB16(
1044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x)
1045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
1047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
1048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMMLA for M3 and M0 processors
1052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __SMMLA(
1054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t x,
1055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t y,
1056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t sum)
1057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (sum + (int32_t) (((int64_t) x * y) >> 32));
1059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if 0
1062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined PKHBT for unavailable DSP extension
1064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __PKHBT(
1066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
1067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
1068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t leftshift)
1069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ( ((x             ) & 0x0000FFFFUL) |
1071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****              ((y << leftshift) & 0xFFFF0000UL)  );
1072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined PKHTB for unavailable DSP extension
1076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __PKHTB(
1078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
1079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
1080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t rightshift)
1081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ( ((x              ) & 0xFFFF0000UL) |
1083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****              ((y >> rightshift) & 0x0000FFFFUL)  );
1084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
1086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
1088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
1089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q7 FIR filter.
1093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;        /**< number of filter coefficients in the filter. */
1097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t *pState;            /**< points to the state variable array. The array is of length numTap
1098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*
1099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_instance_q7;
1100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 FIR filter.
1103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;            /**< points to the state variable array. The array is of length numTa
1108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_instance_q15;
1110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 FIR filter.
1113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;            /**< points to the state variable array. The array is of length numTa
1118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_instance_q31;
1120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point FIR filter.
1123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;     /**< number of filter coefficients in the filter. */
1127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
1128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
1129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_instance_f32;
1130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q7 FIR filter.
1134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q7 FIR filter structure.
1135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_q7(
1140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_q7 * S,
1141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
1142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
1143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q7 FIR filter.
1148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 FIR structure.
1149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that are processed.
1153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_init_q7(
1155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_instance_q7 * S,
1156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
1157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pCoeffs,
1158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pState,
1159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 FIR filter.
1164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR structure.
1165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_q15(
1170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_q15 * S,
1171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
1172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
1173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4.
1178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR filter structure.
1179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_fast_q15(
1184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_q15 * S,
1185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
1186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
1187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 FIR filter.
1192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
1193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greate
1194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARG
1198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>numTaps</code> is not a supported value.
1199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_init_q15(
1201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_instance_q15 * S,
1202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
1203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
1204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
1205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 FIR filter.
1210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_q31(
1216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_q31 * S,
1217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
1218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
1219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4.
1224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR structure.
1225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_fast_q31(
1230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_q31 * S,
1231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
1232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
1233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 FIR filter.
1238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR structure.
1239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_init_q31(
1245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_instance_q31 * S,
1246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
1247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
1248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
1249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point FIR filter.
1254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR structure.
1255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_f32(
1260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_f32 * S,
1261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
1262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
1263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point FIR filter.
1268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
1269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_init_f32(
1275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_instance_f32 * S,
1276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
1277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
1278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
1279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 Biquad cascade filter.
1284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is 2*num
1288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. */
1291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_casd_df1_inst_q15;
1292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 Biquad cascade filter.
1295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. */
1302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_casd_df1_inst_q31;
1303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point Biquad cascade filter.
1306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;       /**< Points to the array of state coefficients.  The array is of lengt
1311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of length 5*nu
1312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_casd_df1_inst_f32;
1313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 Biquad cascade filter.
1317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_q15(
1323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
1325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
1326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 Biquad cascade filter.
1331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
1332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_init_q15(
1338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_casd_df1_inst_q15 * S,
1339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
1340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
1341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
1342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t postShift);
1343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-
1347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_fast_q15(
1353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
1355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
1356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 Biquad cascade filter
1361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_q31(
1367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
1369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
1370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-
1375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_fast_q31(
1381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
1383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
1384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 Biquad cascade filter.
1389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
1390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_init_q31(
1396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_casd_df1_inst_q31 * S,
1397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
1398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
1399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
1400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t postShift);
1401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point Biquad cascade filter.
1405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
1406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_f32(
1411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_casd_df1_inst_f32 * S,
1412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
1413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
1414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point Biquad cascade filter.
1419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure
1420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_init_f32(
1425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_casd_df1_inst_f32 * S,
1426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
1427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
1428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState);
1429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pData;     /**< points to the data of the matrix. */
1439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_matrix_instance_f32;
1440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float64_t *pData;     /**< points to the data of the matrix. */
1450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_matrix_instance_f64;
1451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 matrix structure.
1454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pData;         /**< points to the data of the matrix. */
1460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_matrix_instance_q15;
1461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 matrix structure.
1464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pData;         /**< points to the data of the matrix. */
1470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_matrix_instance_q31;
1471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix addition.
1475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_add_f32(
1482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix addition.
1489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]   pSrcA  points to the first input matrix structure
1490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]   pSrcB  points to the second input matrix structure
1491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out]  pDst   points to output matrix structure
1492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_add_q15(
1496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst);
1499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix addition.
1503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_add_q31(
1510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point, complex, matrix multiplication.
1517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_cmplx_mult_f32(
1524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15, complex,  matrix multiplication.
1531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_cmplx_mult_q15(
1538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst,
1541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch);
1542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31, complex, matrix multiplication.
1546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_cmplx_mult_q31(
1553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix transpose.
1560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst  points to the output matrix
1562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_trans_f32(
1566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix transpose.
1572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst  points to the output matrix
1574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_trans_q15(
1578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst);
1580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix transpose.
1584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst  points to the output matrix
1586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_trans_q31(
1590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix multiplication
1596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_mult_f32(
1603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix multiplication
1610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst    points to output matrix structure
1613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_mult_q15(
1618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst,
1621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState);
1622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst    points to output matrix structure
1629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_mult_fast_q15(
1634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst,
1637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState);
1638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix multiplication
1642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_mult_q31(
1649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_mult_fast_q31(
1663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix subtraction
1670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_sub_f32(
1677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix subtraction
1684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_sub_q15(
1691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst);
1694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix subtraction
1698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_sub_q31(
1705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix scaling.
1712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc   points to the input matrix
1713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scale  scale factor
1714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to the output matrix
1715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_scale_f32(
1719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t scale,
1721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix scaling.
1726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to input matrix
1727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to output matrix
1730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_scale_q15(
1734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t scaleFract,
1736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t shift,
1737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst);
1738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix scaling.
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to input matrix
1743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to output matrix structure
1746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_scale_q31(
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t scaleFract,
1752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t shift,
1753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q31 matrix initialization.
1758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mat_init_q31(
1764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * S,
1765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nRows,
1766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nColumns,
1767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pData);
1768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q15 matrix initialization.
1772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mat_init_q15(
1778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * S,
1779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nRows,
1780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nColumns,
1781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pData);
1782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point matrix initialization.
1786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mat_init_f32(
1792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * S,
1793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nRows,
1794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nColumns,
1795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pData);
1796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 PID Control.
1801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
1805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if !defined (ARM_MATH_DSP)
1806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t A1;
1807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t A2;
1808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
1809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
1810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
1811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t state[3];     /**< The state array of length 3. */
1812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t Kp;           /**< The proportional gain. */
1813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t Ki;           /**< The integral gain. */
1814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t Kd;           /**< The derivative gain. */
1815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_pid_instance_q15;
1816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 PID Control.
1819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
1823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
1824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t A2;            /**< The derived gain, A2 = Kd . */
1825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t state[3];      /**< The state array of length 3. */
1826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t Kp;            /**< The proportional gain. */
1827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t Ki;            /**< The integral gain. */
1828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t Kd;            /**< The derivative gain. */
1829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_pid_instance_q31;
1830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point PID Control.
1833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
1837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
1838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t A2;          /**< The derived gain, A2 = Kd . */
1839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t state[3];    /**< The state array of length 3. */
1840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t Kp;          /**< The proportional gain. */
1841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t Ki;          /**< The integral gain. */
1842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t Kd;          /**< The derivative gain. */
1843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_pid_instance_f32;
1844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point PID Control.
1849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S               points to an instance of the PID structure.
1850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_init_f32(
1853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_f32 * S,
1854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t resetStateFlag);
1855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Reset function for the floating-point PID Control.
1859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S  is an instance of the floating-point PID Control structure
1860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_reset_f32(
1862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_f32 * S);
1863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 PID Control.
1867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_init_q31(
1871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q31 * S,
1872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t resetStateFlag);
1873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Reset function for the Q31 PID Control.
1877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S   points to an instance of the Q31 PID Control structure
1878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_reset_q31(
1881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q31 * S);
1882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 PID Control.
1886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_init_q15(
1890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q15 * S,
1891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t resetStateFlag);
1892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Reset function for the Q15 PID Control.
1896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S  points to an instance of the q15 PID Control structure
1897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_reset_q15(
1899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q15 * S);
1900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point Linear Interpolate function.
1904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t nValues;           /**< nValues */
1908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t x1;               /**< x1 */
1909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t xSpacing;         /**< xSpacing */
1910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pYData;          /**< pointer to the table of Y values */
1911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_linear_interp_instance_f32;
1912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point bilinear interpolation function.
1915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pData;   /**< points to the data table. */
1921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_bilinear_interp_instance_f32;
1922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
1924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 bilinear interpolation function.
1925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pData;       /**< points to the data table. */
1931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_bilinear_interp_instance_q31;
1932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
1934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pData;       /**< points to the data table. */
1941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_bilinear_interp_instance_q15;
1942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
1944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t *pData;        /**< points to the data table. */
1951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_bilinear_interp_instance_q7;
1952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q7 vector multiplication.
1956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
1959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mult_q7(
1962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
1963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
1964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
1965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 vector multiplication.
1970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
1973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mult_q15(
1976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
1977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
1978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
1979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 vector multiplication.
1984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
1987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mult_q31(
1990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
1991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
1992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
1993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point vector multiplication.
1998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mult_f32(
2004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
2005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
2006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
2012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
2019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix2_instance_q15;
2023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix2_init_q15(
2026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix2_instance_q15 * S,
2027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix2_q15(
2033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix2_instance_q15 * S,
2034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc);
2035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
2039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
2046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix4_instance_q15;
2050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix4_init_q15(
2053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_q15 * S,
2054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix4_q15(
2060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix4_instance_q15 * S,
2061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc);
2062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
2065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
2072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix2_instance_q31;
2076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix2_init_q31(
2079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix2_instance_q31 * S,
2080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix2_q31(
2086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix2_instance_q31 * S,
2087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc);
2088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 CFFT/CIFFT function.
2091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
2098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix4_instance_q31;
2102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix4_q31(
2105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix4_instance_q31 * S,
2106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc);
2107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix4_init_q31(
2110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_q31 * S,
2111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix2_instance_f32;
2129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix2_init_f32(
2132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix2_instance_f32 * S,
2133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix2_f32(
2139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix2_instance_f32 * S,
2140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc);
2141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix4_instance_f32;
2156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix4_init_f32(
2159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_f32 * S,
2160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix4_f32(
2166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix4_instance_f32 * S,
2167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc);
2168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
2176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_instance_q15;
2179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** void arm_cfft_q15(
2181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const arm_cfft_instance_q15 * S,
2182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t * p1,
2183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag,
2184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag);
2185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
2193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_instance_q31;
2196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** void arm_cfft_q31(
2198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const arm_cfft_instance_q31 * S,
2199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t * p1,
2200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag,
2201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag);
2202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
2210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_instance_f32;
2213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_f32(
2215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_instance_f32 * S,
2216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * p1,
2217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 RFFT/RIFFT function.
2222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t fftLenReal;                      /**< length of the real FFT. */
2226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or inver
2227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or disable
2228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports diffe
2229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. */
2230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. */
2231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
2232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_rfft_instance_q15;
2233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_rfft_init_q15(
2235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_q15 * S,
2236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t fftLenReal,
2237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t ifftFlagR,
2238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t bitReverseFlag);
2239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_rfft_q15(
2241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_rfft_instance_q15 * S,
2242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst);
2244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 RFFT/RIFFT function.
2247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that supports dif
2254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table. */
2255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table. */
2256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
2257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_rfft_instance_q31;
2258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_rfft_init_q31(
2260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_q31 * S,
2261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t fftLenReal,
2262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t ifftFlagR,
2263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t bitReverseFlag);
2264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_rfft_q31(
2266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_rfft_instance_q31 * S,
2267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst);
2269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLenBy2;                         /**< length of the complex FFT. */
2277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that supports
2280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table. */
2281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table. */
2282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
2283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_rfft_instance_f32;
2284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_rfft_init_f32(
2286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_f32 * S,
2287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t fftLenReal,
2289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t ifftFlagR,
2290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t bitReverseFlag);
2291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_rfft_f32(
2293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_rfft_instance_f32 * S,
2294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst);
2296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** typedef struct
2301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
2303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLenRFFT;             /**< length of the real sequence */
2304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
2305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_rfft_fast_instance_f32 ;
2306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** arm_status arm_rfft_fast_init_f32 (
2308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    arm_rfft_fast_instance_f32 * S,
2309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    uint16_t fftLen);
2310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** void arm_rfft_fast_f32(
2312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_fast_instance_f32 * S,
2313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * p, float32_t * pOut,
2314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag);
2315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point DCT4/IDCT4 function.
2318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t normalize;                 /**< normalizing factor. */
2324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
2325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCosFactor;               /**< points to the cosFactor table. */
2326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
2327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
2328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_dct4_instance_f32;
2329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point DCT4/IDCT4.
2333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
2334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
2335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
2336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     N          length of the DCT4.
2337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     normalize  normalizing factor.
2339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_dct4_init_f32(
2342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_dct4_instance_f32 * S,
2343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_f32 * S_RFFT,
2344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t N,
2346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t Nby2,
2347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t normalize);
2348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point DCT4/IDCT4.
2352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure
2353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState         points to state buffer.
2354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dct4_f32(
2357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_dct4_instance_f32 * S,
2358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
2359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pInlineBuffer);
2360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 DCT4/IDCT4 function.
2364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t normalize;                     /**< normalizing factor. */
2370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
2371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCosFactor;                   /**< points to the cosFactor table. */
2372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
2373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
2374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_dct4_instance_q31;
2375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 DCT4/IDCT4.
2379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
2380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
2381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
2382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     N          length of the DCT4.
2383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     normalize  normalizing factor.
2385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_dct4_init_q31(
2388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_dct4_instance_q31 * S,
2389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_q31 * S_RFFT,
2390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_q31 * S_CFFT,
2391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t N,
2392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t Nby2,
2393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t normalize);
2394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 DCT4/IDCT4.
2398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S              points to an instance of the Q31 DCT4 structure.
2399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState         points to state buffer.
2400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dct4_q31(
2403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_dct4_instance_q31 * S,
2404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
2405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pInlineBuffer);
2406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 DCT4/IDCT4 function.
2410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t normalize;                     /**< normalizing factor. */
2416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
2417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCosFactor;                   /**< points to the cosFactor table. */
2418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
2419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
2420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_dct4_instance_q15;
2421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 DCT4/IDCT4.
2425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
2426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
2427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
2428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     N          length of the DCT4.
2429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     normalize  normalizing factor.
2431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_dct4_init_q15(
2434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_dct4_instance_q15 * S,
2435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_q15 * S_RFFT,
2436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_q15 * S_CFFT,
2437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t N,
2438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t Nby2,
2439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t normalize);
2440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 DCT4/IDCT4.
2444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S              points to an instance of the Q15 DCT4 structure.
2445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState         points to state buffer.
2446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dct4_q15(
2449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_dct4_instance_q15 * S,
2450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
2451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pInlineBuffer);
2452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point vector addition.
2456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_add_f32(
2462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
2463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
2464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q7 vector addition.
2470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_add_q7(
2476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
2477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
2478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 vector addition.
2484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_add_q15(
2490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
2491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
2492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 vector addition.
2498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_add_q31(
2504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
2505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
2506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point vector subtraction.
2512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sub_f32(
2518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
2519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
2520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q7 vector subtraction.
2526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sub_q7(
2532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
2533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
2534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 vector subtraction.
2540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sub_q15(
2546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
2547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
2548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 vector subtraction.
2554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sub_q31(
2560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
2561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
2562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies a floating-point vector by a scalar.
2568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scale      scale factor to be applied
2570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_scale_f32(
2574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t scale,
2576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies a Q7 vector by a scalar.
2582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
2583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
2586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_scale_q7(
2589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t scaleFract,
2591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shift,
2592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies a Q15 vector by a scalar.
2598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
2599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
2602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_scale_q15(
2605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t scaleFract,
2607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shift,
2608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies a Q31 vector by a scalar.
2614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
2615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
2618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_scale_q31(
2621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t scaleFract,
2623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shift,
2624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q7 vector absolute value.
2630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output buffer
2632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_abs_q7(
2635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point vector absolute value.
2642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output buffer
2644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_abs_f32(
2647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 vector absolute value.
2654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output buffer
2656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_abs_q15(
2659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 vector absolute value.
2666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output buffer
2668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_abs_q31(
2671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Dot product of floating-point vectors.
2678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] result     output result returned here
2682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dot_prod_f32(
2684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
2685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
2686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
2687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * result);
2688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Dot product of Q7 vectors.
2692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] result     output result returned here
2696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dot_prod_q7(
2698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
2699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
2700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
2701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * result);
2702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Dot product of Q15 vectors.
2706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] result     output result returned here
2710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dot_prod_q15(
2712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
2713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
2714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
2715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t * result);
2716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Dot product of Q31 vectors.
2720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] result     output result returned here
2724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dot_prod_q31(
2726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
2727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
2728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
2729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t * result);
2730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Shifts the elements of a Q7 vector a specified number of bits.
2734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_shift_q7(
2740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shiftBits,
2742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Shifts the elements of a Q15 vector a specified number of bits.
2748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_shift_q15(
2754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shiftBits,
2756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Shifts the elements of a Q31 vector a specified number of bits.
2762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_shift_q31(
2768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shiftBits,
2770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Adds a constant offset to a floating-point vector.
2776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  offset     is the offset to be added
2778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_offset_f32(
2782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t offset,
2784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Adds a constant offset to a Q7 vector.
2790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  offset     is the offset to be added
2792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_offset_q7(
2796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t offset,
2798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Adds a constant offset to a Q15 vector.
2804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  offset     is the offset to be added
2806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_offset_q15(
2810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t offset,
2812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Adds a constant offset to a Q31 vector.
2818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  offset     is the offset to be added
2820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_offset_q31(
2824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t offset,
2826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Negates the elements of a floating-point vector.
2832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_negate_f32(
2837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Negates the elements of a Q7 vector.
2844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_negate_q7(
2849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Negates the elements of a Q15 vector.
2856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_negate_q15(
2861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Negates the elements of a Q31 vector.
2868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_negate_q31(
2873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Copies the elements of a floating-point vector.
2880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
2881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_copy_f32(
2885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Copies the elements of a Q7 vector.
2892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
2893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_copy_q7(
2897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Copies the elements of a Q15 vector.
2904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
2905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_copy_q15(
2909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Copies the elements of a Q31 vector.
2916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
2917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_copy_q31(
2921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fills a constant value into a floating-point vector.
2928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  value      input value to be filled
2929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fill_f32(
2933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t value,
2934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fills a constant value into a Q7 vector.
2940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  value      input value to be filled
2941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fill_q7(
2945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t value,
2946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fills a constant value into a Q15 vector.
2952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  value      input value to be filled
2953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fill_q15(
2957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t value,
2958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fills a constant value into a Q31 vector.
2964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  value      input value to be filled
2965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fill_q31(
2969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t value,
2970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
2975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @brief Convolution of floating-point sequences.
2976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
2982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_f32(
2983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
2984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
2985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
2986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
2987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst);
2988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q15 sequences.
2992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_opt_q15(
3001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
3011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @brief Convolution of Q15 sequences.
3012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
3013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
3014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
3015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
3016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
3017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
3018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_q15(
3019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst);
3024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_fast_q15(
3035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****           q15_t * pSrcA,
3036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****           uint32_t srcALen,
3037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****           q15_t * pSrcB,
3038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****           uint32_t srcBLen,
3039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****           q15_t * pDst);
3040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
3050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
3051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_fast_opt_q15(
3053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q31 sequences.
3064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_q31(
3071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
3072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
3074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst);
3076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_fast_q31(
3087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
3088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
3090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst);
3092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /**
3095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q7 sequences.
3096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
3102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
3103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_opt_q7(
3105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
3106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
3108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
3110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q7 sequences.
3116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_q7(
3123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
3124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
3126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst);
3128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of floating-point sequences.
3132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_f32(
3142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
3143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
3145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_opt_q15(
3165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints,
3172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_q15(
3188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_fast_q15(
3209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_fast_opt_q15(
3232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints,
3239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q31 sequences.
3245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_q31(
3255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
3256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
3258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_fast_q31(
3276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
3277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
3279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q7 sequences
3287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) 
3295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen)
3296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_opt_q7(
3299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
3300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
3302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
3304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints,
3306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
3311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q7 sequences.
3312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_q7(
3322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
3323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
3325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
3327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 FIR decimator.
3333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;              /**< points to the state variable array. The array is of length num
3340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_decimate_instance_q15;
3341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 FIR decimator.
3344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;              /**< points to the state variable array. The array is of length num
3351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_decimate_instance_q31;
3352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point FIR decimator.
3355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length numTap
3361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;          /**< points to the state variable array. The array is of length num
3362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_decimate_instance_f32;
3363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point FIR decimator.
3367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR decimator structure.
3368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_decimate_f32(
3373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_decimate_instance_f32 * S,
3374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point FIR decimator.
3381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR decimator structure.
3382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     M          decimation factor.
3384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_decimate_init_f32(
3391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_decimate_instance_f32 * S,
3392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t M,
3394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
3395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
3396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 FIR decimator.
3401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_decimate_q15(
3407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
3409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_decimate_fast_q15(
3421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
3423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 FIR decimator.
3429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
3430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     M          decimation factor.
3432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_decimate_init_q15(
3439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_decimate_instance_q15 * S,
3440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t M,
3442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
3443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
3444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 FIR decimator.
3449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
3450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc  points to the block of input data.
3451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst  points to the block of output data
3452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize number of input samples to process per call.
3453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_decimate_q31(
3455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
3463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_decimate_fast_q31(
3468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 FIR decimator.
3476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
3477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     M          decimation factor.
3479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_decimate_init_q31(
3486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t M,
3489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
3490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
3491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 FIR interpolator.
3496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;                  /**< points to the state variable array. The array is of length
3503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_interpolate_instance_q15;
3504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 FIR interpolator.
3507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;                  /**< points to the state variable array. The array is of length
3514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_interpolate_instance_q31;
3515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point FIR interpolator.
3518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t L;                     /**< upsample factor. */
3522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t phaseLength;          /**< length of each polyphase filter component. */
3523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length L*p
3524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;             /**< points to the state variable array. The array is of length 
3525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_interpolate_instance_f32;
3526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 FIR interpolator.
3530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_interpolate_q15(
3536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_interpolate_instance_q15 * S,
3537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
3538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 FIR interpolator.
3544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
3545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     L          upsample factor.
3546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_interpolate_init_q15(
3554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_interpolate_instance_q15 * S,
3555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t L,
3556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
3558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
3559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 FIR interpolator.
3564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_interpolate_q31(
3570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_interpolate_instance_q31 * S,
3571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 FIR interpolator.
3578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
3579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     L          upsample factor.
3580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_interpolate_init_q31(
3588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_interpolate_instance_q31 * S,
3589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t L,
3590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
3592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
3593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point FIR interpolator.
3598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
3599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_interpolate_f32(
3604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_interpolate_instance_f32 * S,
3605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point FIR interpolator.
3612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR interpolator structu
3613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     L          upsample factor.
3614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_interpolate_init_f32(
3622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_interpolate_instance_f32 * S,
3623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t L,
3624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
3626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
3627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the high precision Q31 Biquad cascade filter.
3632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is 2*num
3636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q63_t *pState;           /**< points to the array of state coefficients.  The array is of lengt
3637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of length 5*nu
3638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. */
3639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_cas_df1_32x64_ins_q31;
3640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter s
3644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cas_df1_32x64_q31(
3649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
3650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filte
3657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficie
3661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cas_df1_32x64_init_q31(
3663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_cas_df1_32x64_ins_q31 * S,
3664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
3665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
3666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t * pState,
3667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t postShift);
3668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_cascade_df2T_instance_f32;
3679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_cascade_stereo_df2T_instance_f32;
3689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float64_t *pState;         /**< points to the array of state coefficients.  The array is of len
3697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_cascade_df2T_instance_f64;
3699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df2T_f32(
3709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_cascade_df2T_instance_f32 * S,
3710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_stereo_df2T_f32(
3723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df2T_f64(
3737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_cascade_df2T_instance_f64 * S,
3738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float64_t * pSrc,
3739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float64_t * pDst,
3740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df2T_init_f32(
3751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_cascade_df2T_instance_f32 * S,
3752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
3753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
3754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState);
3755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_stereo_df2T_init_f32(
3765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
3767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
3768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState);
3769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df2T_init_f64(
3779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_cascade_df2T_instance_f64 * S,
3780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
3781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float64_t * pCoeffs,
3782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float64_t * pState);
3783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 FIR lattice filter.
3787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_lattice_instance_q15;
3794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 FIR lattice filter.
3797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_lattice_instance_q31;
3804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point FIR lattice filter.
3807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;                  /**< points to the coefficient array. The array is of leng
3813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_lattice_instance_f32;
3814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for the Q15 FIR lattice filter.
3818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q15 FIR lattice structure.
3819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numStages  number of filter stages.
3820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages.
3822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_init_q15(
3824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_lattice_instance_q15 * S,
3825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
3826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
3827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState);
3828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 FIR lattice filter.
3832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
3833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_q15(
3838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_lattice_instance_q15 * S,
3839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
3840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for the Q31 FIR lattice filter.
3846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q31 FIR lattice structure.
3847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numStages  number of filter stages.
3848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to the state buffer.   The array is of length numStages.
3850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_init_q31(
3852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_lattice_instance_q31 * S,
3853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
3854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
3855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState);
3856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 FIR lattice filter.
3860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
3861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_q31(
3866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_lattice_instance_q31 * S,
3867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
3873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @brief Initialization function for the floating-point FIR lattice filter.
3874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] S          points to an instance of the floating-point FIR lattice structure.
3875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] numStages  number of filter stages.
3876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] pState     points to the state buffer.  The array is of length numStages.
3878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
3879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_init_f32(
3880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_lattice_instance_f32 * S,
3881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
3882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
3883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState);
3884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point FIR lattice filter.
3888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
3889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_f32(
3894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_lattice_instance_f32 * S,
3895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 IIR lattice filter.
3902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_iir_lattice_instance_q15;
3910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 IIR lattice filter.
3913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_iir_lattice_instance_q31;
3921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point IIR lattice filter.
3924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The array
3930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The array is 
3931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_iir_lattice_instance_f32;
3932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point IIR lattice filter.
3936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
3937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_f32(
3942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_iir_lattice_instance_f32 * S,
3943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for the floating-point IIR lattice filter.
3950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the floating-point IIR lattice structure.
3951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-
3955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
3956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_init_f32(
3958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_iir_lattice_instance_f32 * S,
3959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
3960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pkCoeffs,
3961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pvCoeffs,
3962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
3963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 IIR lattice filter.
3968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
3969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_q31(
3974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_iir_lattice_instance_q31 * S,
3975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for the Q31 IIR lattice filter.
3982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q31 IIR lattice structure.
3983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
3987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
3988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_init_q31(
3990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_iir_lattice_instance_q31 * S,
3991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
3992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pkCoeffs,
3993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pvCoeffs,
3994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
3995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 IIR lattice filter.
4000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
4001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
4003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_q15(
4006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_iir_lattice_instance_q15 * S,
4007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
4013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @brief Initialization function for the Q15 IIR lattice filter.
4014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
4015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] numStages  number of stages in the filter.
4016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages
4017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
4018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
4019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] blockSize  number of samples to process per call.
4020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
4021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_init_q15(
4022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_iir_lattice_instance_q15 * S,
4023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
4024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pkCoeffs,
4025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pvCoeffs,
4026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
4027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point LMS filter.
4032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;   /**< points to the state variable array. The array is of length numTaps+bl
4037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps. */
4038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t mu;        /**< step size that controls filter coefficient updates. */
4039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_instance_f32;
4040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for floating-point LMS filter.
4044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point LMS filter structure.
4045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_f32(
4052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_lms_instance_f32 * S,
4053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
4054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pRef,
4055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pOut,
4056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pErr,
4057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for floating-point LMS filter.
4062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to state buffer.
4066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_init_f32(
4070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_instance_f32 * S,
4071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
4073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
4074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t mu,
4075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 LMS filter.
4080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t mu;            /**< step size that controls filter coefficient updates. */
4087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_instance_q15;
4089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for the Q15 LMS filter.
4093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q15 LMS filter structure.
4094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to the state buffer.
4097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_init_q15(
4102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_instance_q15 * S,
4103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
4105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
4106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t mu,
4107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
4108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t postShift);
4109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for Q15 LMS filter.
4113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_q15(
4121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_lms_instance_q15 * S,
4122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pRef,
4124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pOut,
4125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pErr,
4126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 LMS filter.
4131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t mu;            /**< step size that controls filter coefficient updates. */
4138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_instance_q31;
4140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for Q31 LMS filter.
4144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_q31(
4152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_lms_instance_q31 * S,
4153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
4154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pRef,
4155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pOut,
4156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pErr,
4157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for Q31 LMS filter.
4162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q31 LMS filter structure.
4163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to state buffer.
4166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_init_q31(
4171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_instance_q31 * S,
4172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
4174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
4175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t mu,
4176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
4177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t postShift);
4178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point normalized LMS filter.
4182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
4187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
4188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t mu;         /**< step size that control filter coefficient updates. */
4189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t energy;     /**< saves previous frame energy. */
4190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t x0;         /**< saves previous input sample. */
4191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_norm_instance_f32;
4192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for floating-point normalized LMS filter.
4196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point normalized LMS filter struc
4197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_f32(
4204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_f32 * S,
4205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
4206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pRef,
4207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pOut,
4208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pErr,
4209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for floating-point normalized LMS filter.
4214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to state buffer.
4218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_init_f32(
4222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_f32 * S,
4223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
4225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
4226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t mu,
4227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 normalized LMS filter.
4232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t mu;             /**< step size that controls filter coefficient updates. */
4239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *recipTable;    /**< points to the reciprocal initial value table. */
4241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t energy;         /**< saves previous frame energy. */
4242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t x0;             /**< saves previous input sample. */
4243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_norm_instance_q31;
4244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for Q31 normalized LMS filter.
4248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
4249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_q31(
4256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_q31 * S,
4257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
4258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pRef,
4259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pOut,
4260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pErr,
4261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for Q31 normalized LMS filter.
4266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
4267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to state buffer.
4270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_init_q31(
4275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_q31 * S,
4276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
4278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
4279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t mu,
4280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
4281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t postShift);
4282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 normalized LMS filter.
4286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;     /**< Number of coefficients in the filter. */
4290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t mu;             /**< step size that controls filter coefficient updates. */
4293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
4295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t energy;         /**< saves previous frame energy. */
4296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t x0;             /**< saves previous input sample. */
4297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_norm_instance_q15;
4298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for Q15 normalized LMS filter.
4302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
4303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_q15(
4310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_q15 * S,
4311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pRef,
4313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pOut,
4314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pErr,
4315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for Q15 normalized LMS filter.
4320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
4321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to state buffer.
4324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_init_q15(
4329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_q15 * S,
4330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
4332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
4333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t mu,
4334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
4335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t postShift);
4336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of floating-point sequences.
4340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_f32(
4347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
4348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
4350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst);
4352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
4355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q15 sequences
4356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_opt_q15(
4364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
4365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
4367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch);
4370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q15 sequences.
4374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_q15(
4382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
4383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
4385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst);
4387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_fast_q15(
4399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
4400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
4402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst);
4404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_fast_opt_q15(
4416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
4417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
4419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch);
4422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q31 sequences.
4426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_q31(
4433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
4434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
4436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst);
4438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
4442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_fast_q31(
4449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
4450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
4452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst);
4454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  /**
4457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q7 sequences.
4458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
4459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
4460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
4461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
4462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 
4463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
4464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
4465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_opt_q7(
4467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
4468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
4470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
4472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
4473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
4474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q7 sequences.
4478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_q7(
4485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
4486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
4488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst);
4490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point sparse FIR filter.
4494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;            /**< points to the state buffer array. The array is of length max
4500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;           /**< points to the coefficient array. The array is of length numT
4501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_sparse_instance_f32;
4504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 sparse FIR filter.
4507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;                /**< points to the state buffer array. The array is of length max
4513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_sparse_instance_q31;
4517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 sparse FIR filter.
4520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;                /**< points to the state buffer array. The array is of length max
4526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_sparse_instance_q15;
4530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q7 sparse FIR filter.
4533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t *pState;                 /**< points to the state buffer array. The array is of length max
4539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t *pCoeffs;                /**< points to the coefficient array. The array is of length numT
4540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_sparse_instance_q7;
4543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point sparse FIR filter.
4547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
4548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
4550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_f32(
4554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
4556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
4557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pScratchIn,
4558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point sparse FIR filter.
4563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
4564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
4567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_init_f32(
4572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
4575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
4576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * pTapDelay,
4577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t maxDelay,
4578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 sparse FIR filter.
4583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
4584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
4586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_q31(
4590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
4592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
4593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pScratchIn,
4594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 sparse FIR filter.
4599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
4600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
4603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_init_q31(
4608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
4611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
4612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * pTapDelay,
4613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t maxDelay,
4614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 sparse FIR filter.
4619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
4620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst         points to the block of output data
4622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_q15(
4627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratchIn,
4631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pScratchOut,
4632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 sparse FIR filter.
4637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
4638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
4641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_init_q15(
4646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
4649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
4650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * pTapDelay,
4651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t maxDelay,
4652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q7 sparse FIR filter.
4657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
4658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst         points to the block of output data
4660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_q7(
4665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
4667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
4668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pScratchIn,
4669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pScratchOut,
4670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q7 sparse FIR filter.
4675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
4676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
4679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_init_q7(
4684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pCoeffs,
4687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pState,
4688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * pTapDelay,
4689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t maxDelay,
4690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point sin_cos function.
4695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  theta   input value in degrees
4696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pCosVal  points to the processed cos output.
4698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sin_cos_f32(
4700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t theta,
4701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSinVal,
4702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCosVal);
4703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q31 sin_cos function.
4707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  theta    scaled input value in degrees
4708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pCosVal  points to the processed cosine output.
4710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sin_cos_q31(
4712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t theta,
4713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSinVal,
4714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCosVal);
4715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point complex conjugate.
4719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
4720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
4721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_conj_f32(
4724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
4725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
4726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q31 complex conjugate.
4730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
4731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
4732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_conj_q31(
4735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
4736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
4737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q15 complex conjugate.
4742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
4743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
4744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_conj_q15(
4747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point complex magnitude squared
4754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the real output vector
4756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_mag_squared_f32(
4759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
4760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
4761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q31 complex magnitude squared
4766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the real output vector
4768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_mag_squared_q31(
4771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
4772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
4773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q15 complex magnitude squared
4778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the real output vector
4780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_mag_squared_q15(
4783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  /**
4789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupController
4790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup PID PID Motor Control
4794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * A Proportional Integral Derivative (PID) controller is a generic feedback control
4796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * loop mechanism widely used in industrial control systems.
4797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * A PID controller is the most commonly used type of feedback controller.
4798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This set of functions implements (PID) controllers
4800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
4801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * of data and each call to the function returns a single processed value.
4802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
4803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * is the input sample value. The functions return the output value.
4804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm:
4806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <pre>
4807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
4808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *    A0 = Kp + Ki + Kd
4809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *    A1 = (-Kp ) - (2 * Kd )
4810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *    A2 = Kd  </pre>
4811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative const
4814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html PID.gif "Proportional Integral Derivative Controller"
4817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The PID controller calculates an "error" value as the difference between
4820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the measured output and the reference input.
4821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The controller attempts to minimize the error by adjusting the process control inputs.
4822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The proportional value determines the reaction to the current error,
4823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the integral value determines the reaction based on the sum of recent errors,
4824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * and the derivative value determines the reaction based on the rate at which the error has been
4825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Instance Structure
4827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instan
4828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * A separate instance structure must be defined for each PID Controller.
4829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There are separate instance structure declarations for each of the 3 supported data types.
4830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Reset Functions
4832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is also an associated reset function for each data type which clears the state array.
4833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Initialization Functions
4835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is also an associated initialization function for each data type.
4836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The initialization function performs the following operations:
4837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
4838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Zeros out the values in the state buffer.
4839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Instance structure cannot be placed into a const data section and it is recommended to use the
4842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Fixed-Point Behavior
4844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Care must be taken when using the fixed-point versions of the PID Controller functions.
4845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used in each function m
4846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup PID
4851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
4852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the floating-point PID Control.
4856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S   is an instance of the floating-point PID Control structure
4857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     in  input sample to process
4858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return out processed output sample.
4859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE float32_t arm_pid_f32(
4861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_f32 * S,
4862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t in)
4863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t out;
4865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
4867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = (S->A0 * in) +
4868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
4869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update state */
4871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[1] = S->state[0];
4872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[0] = in;
4873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[2] = out;
4874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return to application */
4876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (out);
4877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
4879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the Q31 PID Control.
4882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S  points to an instance of the Q31 PID Control structure
4883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     in  input sample to process
4884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return out processed output sample.
4885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using an internal 64-bit accumulator.
4889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplicat
4890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Thus, if the accumulator result overflows it wraps around rather than clip.
4891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In order to avoid overflows completely the input signal must be scaled down by 2 bits as there
4892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 format
4893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t arm_pid_q31(
4895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q31 * S,
4896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t in)
4897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q63_t acc;
4899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t out;
4900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc = A0 * x[n]  */
4902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc = (q63_t) S->A0 * in;
4903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc += A1 * x[n-1] */
4905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc += (q63_t) S->A1 * S->state[0];
4906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc += A2 * x[n-2]  */
4908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc += (q63_t) S->A2 * S->state[1];
4909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* convert output to 1.31 format to add y[n-1] */
4911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = (q31_t) (acc >> 31u);
4912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* out += y[n-1] */
4914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out += S->state[2];
4915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update state */
4917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[1] = S->state[0];
4918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[0] = in;
4919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[2] = out;
4920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return to application */
4922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (out);
4923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
4924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the Q15 PID Control.
4928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S   points to an instance of the Q15 PID Control structure
4929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     in  input sample to process
4930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return out processed output sample.
4931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using a 64-bit internal accumulator.
4935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Both Gains and state variables are represented in 1.15 format and multiplications yield a 2.30
4936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
4937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is no risk of internal overflow with this approach and the full precision of intermediat
4938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * After all additions have been performed, the accumulator is truncated to 34.15 format by disca
4939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Lastly, the accumulator is saturated to yield a result in 1.15 format.
4940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t arm_pid_q15(
4942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q15 * S,
4943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t in)
4944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q63_t acc;
4946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t out;
4947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined (ARM_MATH_DSP)
4949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     __SIMD32_TYPE *vstate;
4950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Implementation of PID controller */
4952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc = A0 * x[n]  */
4954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc = (q31_t) __SMUAD((uint32_t)S->A0, (uint32_t)in);
4955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     vstate = __SIMD32_CONST(S->state);
4958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc = (q63_t)__SMLALD((uint32_t)S->A1, (uint32_t)*vstate, (uint64_t)acc);
4959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
4960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc = A0 * x[n]  */
4961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc = ((q31_t) S->A0) * in;
4962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc += (q31_t) S->A1 * S->state[0];
4965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc += (q31_t) S->A2 * S->state[1];
4966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
4967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc += y[n-1] */
4969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc += (q31_t) S->state[2] << 15;
4970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* saturate the output */
4972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = (q15_t) (__SSAT((acc >> 15), 16));
4973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update state */
4975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[1] = S->state[0];
4976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[0] = in;
4977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[2] = out;
4978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return to application */
4980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (out);
4981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
4982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of PID group
4985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix inverse.
4990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
4991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
4992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
4993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
4994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_inverse_f32(
4996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * src,
4997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * dst);
4998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix inverse.
5002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
5003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
5004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
5005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
5006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_inverse_f64(
5008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f64 * src,
5009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f64 * dst);
5010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupController
5015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup clarke Vector Clarke Transform
5019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Forward Clarke transform converts the instantaneous stator phases into a two-coordinate time i
5020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Generally the Clarke transform uses three-phase currents <code>Ia, Ib and Ic</code> to calcula
5021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * in the two-phase orthogonal stator axis <code>Ialpha</code> and <code>Ibeta</code>.
5022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * When <code>Ialpha</code> is superposed with <code>Ia</code> as shown in the figure below
5023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html clarke.gif Stator current space vector and its components in (a,b).
5024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * and <code>Ia + Ib + Ic = 0</code>, in this condition <code>Ialpha</code> and <code>Ibeta</code
5025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * can be calculated using only <code>Ia</code> and <code>Ib</code>.
5026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm
5030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html clarkeFormula.gif
5031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where <code>Ia</code> and <code>Ib</code> are the instantaneous stator phases and
5032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>pIalpha</code> and <code>pIbeta</code> are the two coordinates of time invariant vector.
5033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Fixed-Point Behavior
5034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup clarke
5041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point Clarke transform
5047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
5048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
5049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_clarke_f32(
5053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ia,
5054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ib,
5055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIalpha,
5056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIbeta)
5057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Ia */
5059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIalpha = Ia;
5060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = (1/sqrt(3)) * Ia + (2/sqrt(3)) * Ib */
5062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIbeta = ((float32_t) 0.57735026919 * Ia + (float32_t) 1.15470053838 * Ib);
5063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Clarke transform for Q31 version
5068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
5069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
5070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_clarke_q31(
5080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ia,
5081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ib,
5082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIalpha,
5083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIbeta)
5084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculating pIalpha from Ia by equation pIalpha = Ia */
5088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIalpha = Ia;
5089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (1/(sqrt(3)) * Ia) */
5091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product1 = (q31_t) (((q63_t) Ia * 0x24F34E8B) >> 30);
5092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (2/sqrt(3) * Ib) */
5094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product2 = (q31_t) (((q63_t) Ib * 0x49E69D16) >> 30);
5095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* pIbeta is calculated by adding the intermediate products */
5097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIbeta = __QADD(product1, product2);
5098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of clarke group
5102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q31 vector.
5106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
5107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
5108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
5109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_q7_to_q31(
5111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
5112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
5113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
5114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupController
5119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup inv_clarke Vector Inverse Clarke Transform
5123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Inverse Clarke transform converts the two-coordinate time invariant vector into instantaneous 
5124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm
5128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html clarkeInvFormula.gif
5129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where <code>pIa</code> and <code>pIb</code> are the instantaneous stator phases and
5130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>Ialpha</code> and <code>Ibeta</code> are the two coordinates of time invariant vector.
5131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Fixed-Point Behavior
5132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup inv_clarke
5139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
5143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point Inverse Clarke transform
5144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_inv_clarke_f32(
5150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ialpha,
5151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ibeta,
5152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIa,
5153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIb)
5154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIa = Ialpha;
5157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculating pIb from Ialpha and Ibeta by equation pIb = -(1/2) * Ialpha + (sqrt(3)/2) * Ibet
5159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIb = -0.5f * Ialpha + 0.8660254039f * Ibeta;
5160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Inverse Clarke transform for Q31 version
5165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is saturation on the subtraction, hence there is no risk of overflow.
5175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_inv_clarke_q31(
5177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ialpha,
5178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ibeta,
5179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIa,
5180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIb)
5181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIa = Ialpha;
5186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (1/(2*sqrt(3)) * Ia) */
5188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (0x40000000)) >> 31);
5189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (1/sqrt(3) * pIb) */
5191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (0x6ED9EBA1)) >> 31);
5192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* pIb is calculated by subtracting the products */
5194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIb = __QSUB(product2, product1);
5195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of inv_clarke group
5199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q15 vector.
5203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
5204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
5205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
5206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_q7_to_q15(
5208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
5209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
5210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
5211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupController
5216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup park Vector Park Transform
5220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Forward Park transform converts the input two-coordinate vector to flux and torque components.
5222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The Park transform can be used to realize the transformation of the <code>Ialpha</code> and th
5223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * from the stationary to the moving reference frame and control the spatial relationship between
5224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the stator vector current and rotor flux vector.
5225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * If we consider the d axis aligned with the rotor flux, the diagram below shows the
5226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * current vector and the relationship from the two reference frames:
5227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html park.gif "Stator current space vector and its component in (a,b) and in the d,q ro
5228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm
5232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html parkFormula.gif
5233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where <code>Ialpha</code> and <code>Ibeta</code> are the stator vector components,
5234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>pId</code> and <code>pIq</code> are rotor vector components and <code>cosVal</code> and 
5235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Fixed-Point Behavior
5237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup park
5244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point Park transform
5249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pId     points to output   rotor reference frame d
5252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIq     points to output   rotor reference frame q
5253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function implements the forward Park transform.
5257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_park_f32(
5260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ialpha,
5261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ibeta,
5262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pId,
5263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIq,
5264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t sinVal,
5265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t cosVal)
5266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pId using the equation, pId = Ialpha * cosVal + Ibeta * sinVal */
5268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pId = Ialpha * cosVal + Ibeta * sinVal;
5269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIq using the equation, pIq = - Ialpha * sinVal + Ibeta * cosVal */
5271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIq = -Ialpha * sinVal + Ibeta * cosVal;
5272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Park transform for Q31 version
5277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pId     points to output rotor reference frame d
5280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIq     points to output rotor reference frame q
5281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is saturation on the addition and subtraction, hence there is no risk of overflow.
5289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_park_q31(
5291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ialpha,
5292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ibeta,
5293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pId,
5294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIq,
5295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t sinVal,
5296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t cosVal)
5297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Ialpha * cosVal) */
5302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (cosVal)) >> 31);
5303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Ibeta * sinVal) */
5305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (sinVal)) >> 31);
5306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Ialpha * sinVal) */
5309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product3 = (q31_t) (((q63_t) (Ialpha) * (sinVal)) >> 31);
5310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Ibeta * cosVal) */
5312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product4 = (q31_t) (((q63_t) (Ibeta) * (cosVal)) >> 31);
5313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pId by adding the two intermediate products 1 and 2 */
5315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pId = __QADD(product1, product2);
5316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIq by subtracting the two intermediate products 3 from 4 */
5318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIq = __QSUB(product4, product3);
5319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of park group
5323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Converts the elements of the Q7 vector to floating-point vector.
5327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       is input pointer
5328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       is output pointer
5329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_q7_to_float(
5332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
5333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
5334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
5335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupController
5339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup inv_park Vector Inverse Park transform
5343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Inverse Park transform converts the input flux and torque components to two-coordinate vector.
5344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm
5348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html parkInvFormula.gif
5349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where <code>pIalpha</code> and <code>pIbeta</code> are the stator vector components,
5350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>Id</code> and <code>Iq</code> are rotor vector components and <code>cosVal</code> and <c
5351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Fixed-Point Behavior
5353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup inv_park
5360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
5364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point Inverse Park transform
5365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_inv_park_f32(
5373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Id,
5374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Iq,
5375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIalpha,
5376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIbeta,
5377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t sinVal,
5378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t cosVal)
5379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Id * cosVal - Iq * sinVal */
5381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIalpha = Id * cosVal - Iq * sinVal;
5382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = Id * sinVal + Iq * cosVal */
5384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIbeta = Id * sinVal + Iq * cosVal;
5385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Inverse Park transform for   Q31 version
5390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_inv_park_q31(
5404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Id,
5405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Iq,
5406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIalpha,
5407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIbeta,
5408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t sinVal,
5409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t cosVal)
5410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Id * cosVal) */
5415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product1 = (q31_t) (((q63_t) (Id) * (cosVal)) >> 31);
5416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Iq * sinVal) */
5418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product2 = (q31_t) (((q63_t) (Iq) * (sinVal)) >> 31);
5419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Id * sinVal) */
5422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product3 = (q31_t) (((q63_t) (Id) * (sinVal)) >> 31);
5423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Iq * cosVal) */
5425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product4 = (q31_t) (((q63_t) (Iq) * (cosVal)) >> 31);
5426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIalpha by using the two intermediate products 1 and 2 */
5428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIalpha = __QSUB(product1, product2);
5429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIbeta by using the two intermediate products 3 and 4 */
5431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIbeta = __QADD(product4, product3);
5432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of Inverse park group
5436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Converts the elements of the Q31 vector to floating-point vector.
5441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       is input pointer
5442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       is output pointer
5443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_q31_to_float(
5446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
5447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
5448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
5449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupInterpolation
5452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup LinearInterpolate Linear Interpolation
5456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Linear interpolation is a method of curve fitting using linear polynomials.
5458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Linear interpolation works by effectively drawing a straight line between two neighboring samp
5459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html LinearInterp.gif "Linear interpolation"
5462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * A  Linear Interpolate function calculates an output value(y), for the input(x)
5465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * using linear interpolation of the input values x0, x1( nearest input values) and the output va
5466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm:
5468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <pre>
5469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *       y = y0 + (x - x0) * ((y1 - y0)/(x1-x0))
5470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *       where x0, x1 are nearest values of input x
5471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *             y0, y1 are nearest values to output y
5472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * </pre>
5473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This set of functions implements Linear interpolation process
5476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * for Q7, Q15, Q31, and floating-point data types.  The functions operate on a single
5477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * sample of data and each call to the function returns a single processed value.
5478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>S</code> points to an instance of the Linear Interpolate function data structure.
5479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>x</code> is the input sample value. The functions returns the output value.
5480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * if x is outside of the table boundary, Linear interpolation returns first value of the table
5483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * if x is below input range and returns last value of table if x is above range.
5484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup LinearInterpolate
5488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the floating-point Linear Interpolation Function.
5493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S  is an instance of the floating-point Linear Interpolation structure
5494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     x  input sample to process
5495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return y processed output sample.
5496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE float32_t arm_linear_interp_f32(
5499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_linear_interp_instance_f32 * S,
5500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t x)
5501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t y;
5503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t x0, x1;                            /* Nearest input values */
5504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t y0, y1;                            /* Nearest output values */
5505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t xSpacing = S->xSpacing;            /* spacing between input values */
5506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t i;                                   /* Index variable */
5507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pYData = S->pYData;               /* pointer to output table */
5508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculation of index */
5510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     i = (int32_t) ((x - S->x1) / xSpacing);
5511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (i < 0)
5513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Iniatilize output for below specified range as least output value of table */
5515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = pYData[0];
5516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else if ((uint32_t)i >= S->nValues)
5518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Iniatilize output for above specified range as last output value of table */
5520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = pYData[S->nValues - 1];
5521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
5523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of nearest input values */
5525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       x0 = S->x1 +  i      * xSpacing;
5526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       x1 = S->x1 + (i + 1) * xSpacing;
5527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Read of nearest output values */
5529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y0 = pYData[i];
5530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y1 = pYData[i + 1];
5531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of output */
5533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = y0 + (x - x0) * ((y1 - y0) / (x1 - x0));
5534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* returns output value */
5538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (y);
5539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
5543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the Q31 Linear Interpolation Function.
5545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pYData   pointer to Q31 Linear Interpolation table
5546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x        input sample to process
5547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] nValues  number of table values
5548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return y processed output sample.
5549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This function can support maximum of table size 2^12.
5553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t arm_linear_interp_q31(
5556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pYData,
5557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x,
5558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t nValues)
5559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t y;                                     /* output */
5561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t y0, y1;                                /* Nearest output values */
5562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t fract;                                 /* fractional part */
5563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Input is in 12.20 format */
5566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* 12 bits for the table index */
5567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Index value calculation */
5568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = ((x & (q31_t)0xFFF00000) >> 20);
5569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (index >= (int32_t)(nValues - 1))
5571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[nValues - 1]);
5573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else if (index < 0)
5575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[0]);
5577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
5579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* 20 bits for the fractional part */
5581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* shift left by 11 to keep fract in 1.31 format */
5582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       fract = (x & 0x000FFFFF) << 11;
5583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Read two nearest output values from the index in 1.31(q31) format */
5585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y0 = pYData[index];
5586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y1 = pYData[index + 1];
5587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 2.30 format */
5589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
5590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
5592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y += ((q31_t) (((q63_t) y1 * fract) >> 32));
5593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Convert y to 1.31 format */
5595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (y << 1u);
5596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the Q15 Linear Interpolation Function.
5603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pYData   pointer to Q15 Linear Interpolation table
5604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x        input sample to process
5605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] nValues  number of table values
5606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return y processed output sample.
5607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This function can support maximum of table size 2^12.
5611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t arm_linear_interp_q15(
5614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pYData,
5615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x,
5616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t nValues)
5617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q63_t y;                                     /* output */
5619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t y0, y1;                                /* Nearest output values */
5620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t fract;                                 /* fractional part */
5621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Input is in 12.20 format */
5624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* 12 bits for the table index */
5625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Index value calculation */
5626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = ((x & (int32_t)0xFFF00000) >> 20);
5627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (index >= (int32_t)(nValues - 1))
5629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[nValues - 1]);
5631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else if (index < 0)
5633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[0]);
5635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
5637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* 20 bits for the fractional part */
5639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* fract is in 12.20 format */
5640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       fract = (x & 0x000FFFFF);
5641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Read two nearest output values from the index */
5643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y0 = pYData[index];
5644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y1 = pYData[index + 1];
5645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 13.35 format */
5647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = ((q63_t) y0 * (0xFFFFF - fract));
5648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of (y0 * (1-fract) + y1 * fract) and y is in 13.35 format */
5650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y += ((q63_t) y1 * (fract));
5651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* convert y to 1.15 format */
5653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (q15_t) (y >> 20);
5654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the Q7 Linear Interpolation Function.
5661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pYData   pointer to Q7 Linear Interpolation table
5662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x        input sample to process
5663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] nValues  number of table values
5664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return y processed output sample.
5665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This function can support maximum of table size 2^12.
5669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t arm_linear_interp_q7(
5671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pYData,
5672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x,
5673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t nValues)
5674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t y;                                     /* output */
5676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t y0, y1;                                 /* Nearest output values */
5677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t fract;                                 /* fractional part */
5678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t index;                              /* Index to read nearest output values */
5679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Input is in 12.20 format */
5681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* 12 bits for the table index */
5682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Index value calculation */
5683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (x < 0)
5684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[0]);
5686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (x >> 20) & 0xfff;
5688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (index >= (nValues - 1))
5690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[nValues - 1]);
5692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
5694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* 20 bits for the fractional part */
5696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* fract is in 12.20 format */
5697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       fract = (x & 0x000FFFFF);
5698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Read two nearest output values from the index and are in 1.7(q7) format */
5700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y0 = pYData[index];
5701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y1 = pYData[index + 1];
5702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of y0 * (1-fract ) and y is in 13.27(q27) format */
5704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = ((y0 * (0xFFFFF - fract)));
5705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of y1 * fract + y0 * (1-fract) and y is in 13.27(q27) format */
5707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y += (y1 * fract);
5708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* convert y to 1.7(q7) format */
5710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (q7_t) (y >> 20);
5711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****      }
5712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of LinearInterpolate group
5716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for floating-point data.
5720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  input value in radians.
5721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  sin(x).
5722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t arm_sin_f32(
5724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t x);
5725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q31 data.
5729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  Scaled input value in radians.
5730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  sin(x).
5731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t arm_sin_q31(
5733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x);
5734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q15 data.
5738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  Scaled input value in radians.
5739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  sin(x).
5740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t arm_sin_q15(
5742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t x);
5743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for floating-point data.
5747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  input value in radians.
5748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  cos(x).
5749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t arm_cos_f32(
5751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t x);
5752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Fast approximation to the trigonometric cosine function for Q31 data.
5756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  Scaled input value in radians.
5757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  cos(x).
5758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t arm_cos_q31(
5760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x);
5761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for Q15 data.
5765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  Scaled input value in radians.
5766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  cos(x).
5767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t arm_cos_q15(
5769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t x);
5770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupFastMath
5774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup SQRT Square Root
5779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Computes the square root of a number.
5781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There are separate functions for Q15, Q31, and floating-point data types.
5782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The square root function is computed using the Newton-Raphson algorithm.
5783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This is an iterative algorithm of the form:
5784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <pre>
5785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *      x1 = x0 - f(x0)/f'(x0)
5786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * </pre>
5787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where <code>x1</code> is the current estimate,
5788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>x0</code> is the previous estimate, and
5789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>f'(x0)</code> is the derivative of <code>f()</code> evaluated at <code>x0</code>.
5790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * For the square root function, the algorithm reduces to:
5791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <pre>
5792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *     x0 = in/2                         [initial guess]
5793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *     x1 = 1/2 * ( x0 + in / x0)        [each iteration]
5794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * </pre>
5795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup SQRT
5800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point square root function.
5805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  in    input value.
5806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut  square root of input value.
5807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARG
5808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>in</code> is negative value and returns zero output for negative values.
5809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE arm_status arm_sqrt_f32(
5811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t in,
5812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pOut)
5813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (in >= 0.0f)
5815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if   (__FPU_USED == 1) && defined ( __CC_ARM   )
5818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *pOut = __sqrtf(in);
5819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif (__FPU_USED == 1) && (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050))
5820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *pOut = __builtin_sqrtf(in);
5821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif (__FPU_USED == 1) && defined(__GNUC__)
5822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *pOut = __builtin_sqrtf(in);
5823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif (__FPU_USED == 1) && defined ( __ICCARM__ ) && (__VER__ >= 6040000)
5824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
5825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
5826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *pOut = sqrtf(in);
5827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
5828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (ARM_MATH_SUCCESS);
5830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
5832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *pOut = 0.0f;
5834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (ARM_MATH_ARGUMENT_ERROR);
5835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 square root function.
5841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  in    input value.  The range of the input value is [0 +1) or 0x00000000 to 0x7FFF
5842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut  square root of input value.
5843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARG
5844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>in</code> is negative value and returns zero output for negative values.
5845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_sqrt_q31(
5847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t in,
5848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pOut);
5849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q15 square root function.
5853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  in    input value.  The range of the input value is [0 +1) or 0x0000 to 0x7FFF.
5854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut  square root of input value.
5855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARG
5856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>in</code> is negative value and returns zero output for negative values.
5857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_sqrt_q15(
5859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t in,
5860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pOut);
5861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of SQRT group
5864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief floating-point Circular write function.
5869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_circularWrite_f32(
5871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * circBuffer,
5872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t L,
5873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t * writeOffset,
5874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t bufferInc,
5875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const int32_t * src,
5876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t srcInc,
5877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize)
5878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t i = 0u;
 113              	 .loc 2 5879 0
 114 00a4 0023     	 movs r3,#0
 115 00a6 C7F81431 	 str r3,[r7,#276]
5880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t wOffset;
5881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Copy the value of Index pointer that points
5883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****      * to the current location where the input samples to be copied */
5884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     wOffset = *writeOffset;
 116              	 .loc 2 5884 0
 117 00aa D7F82831 	 ldr r3,[r7,#296]
 118 00ae 1B88     	 ldrh r3,[r3]
 119 00b0 C7F81031 	 str r3,[r7,#272]
5885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Loop over the blockSize */
5887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     i = blockSize;
 120              	 .loc 2 5887 0
 121 00b4 D7F81831 	 ldr r3,[r7,#280]
 122 00b8 C7F81431 	 str r3,[r7,#276]
 123 00bc 2AE0     	 b .L2
 124              	.L4:
5888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     while (i > 0u)
5890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* copy the input sample to the circular buffer */
5892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       circBuffer[wOffset] = *src;
 125              	 .loc 2 5892 0
 126 00be D7F81031 	 ldr r3,[r7,#272]
 127 00c2 9A00     	 lsls r2,r3,#2
 128 00c4 D7F83031 	 ldr r3,[r7,#304]
 129 00c8 1A44     	 add r2,r2,r3
 130 00ca D7F82031 	 ldr r3,[r7,#288]
 131 00ce 1B68     	 ldr r3,[r3]
 132 00d0 1360     	 str r3,[r2]
5893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Update the input pointer */
5895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       src += srcInc;
 133              	 .loc 2 5895 0
 134 00d2 D7F81C31 	 ldr r3,[r7,#284]
 135 00d6 9A00     	 lsls r2,r3,#2
 136 00d8 D7F82031 	 ldr r3,[r7,#288]
 137 00dc 1344     	 add r3,r3,r2
 138 00de C7F82031 	 str r3,[r7,#288]
5896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Circularly update wOffset.  Watch out for positive and negative value */
5898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       wOffset += bufferInc;
 139              	 .loc 2 5898 0
 140 00e2 D7F81021 	 ldr r2,[r7,#272]
 141 00e6 D7F82431 	 ldr r3,[r7,#292]
 142 00ea 1344     	 add r3,r3,r2
 143 00ec C7F81031 	 str r3,[r7,#272]
5899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (wOffset >= L)
 144              	 .loc 2 5899 0
 145 00f0 D7F82C21 	 ldr r2,[r7,#300]
 146 00f4 D7F81031 	 ldr r3,[r7,#272]
 147 00f8 9A42     	 cmp r2,r3
 148 00fa 06DC     	 bgt .L3
5900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         wOffset -= L;
 149              	 .loc 2 5900 0
 150 00fc D7F81021 	 ldr r2,[r7,#272]
 151 0100 D7F82C31 	 ldr r3,[r7,#300]
 152 0104 D31A     	 subs r3,r2,r3
 153 0106 C7F81031 	 str r3,[r7,#272]
 154              	.L3:
5901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Decrement the loop counter */
5903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       i--;
 155              	 .loc 2 5903 0
 156 010a D7F81431 	 ldr r3,[r7,#276]
 157 010e 013B     	 subs r3,r3,#1
 158 0110 C7F81431 	 str r3,[r7,#276]
 159              	.L2:
5889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 160              	 .loc 2 5889 0
 161 0114 D7F81431 	 ldr r3,[r7,#276]
 162 0118 002B     	 cmp r3,#0
 163 011a D0D1     	 bne .L4
5904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update the index pointer */
5907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *writeOffset = (uint16_t)wOffset;
 164              	 .loc 2 5907 0
 165 011c D7F81031 	 ldr r3,[r7,#272]
 166 0120 9BB2     	 uxth r3,r3
 167 0122 D7F82821 	 ldr r2,[r7,#296]
 168 0126 1380     	 strh r3,[r2]
 169              	.LBE11:
 170              	.LBE10:
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****                         (int32_t *) pSrc, 1, blockSize);
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Read Index, from where the state buffer should be read, is calculated. */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   readIndex = (int32_t) (S->stateIndex - blockSize) - *pTapDelay++;
 171              	 .loc 1 85 0
 172 0128 7B6F     	 ldr r3,[r7,#116]
 173 012a 5B88     	 ldrh r3,[r3,#2]
 174 012c 1A46     	 mov r2,r3
 175 012e D7F89031 	 ldr r3,[r7,#400]
 176 0132 D31A     	 subs r3,r2,r3
 177 0134 1946     	 mov r1,r3
 178 0136 D7F86021 	 ldr r2,[r7,#352]
 179 013a 131D     	 adds r3,r2,#4
 180 013c C7F86031 	 str r3,[r7,#352]
 181 0140 1368     	 ldr r3,[r2]
 182 0142 CB1A     	 subs r3,r1,r3
 183 0144 FB67     	 str r3,[r7,#124]
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Wraparound of readIndex */
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   if (readIndex < 0)
 184              	 .loc 1 88 0
 185 0146 FB6F     	 ldr r3,[r7,#124]
 186 0148 002B     	 cmp r3,#0
 187 014a 04DA     	 bge .L5
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     readIndex += (int32_t) delaySize;
 188              	 .loc 1 90 0
 189 014c FA6F     	 ldr r2,[r7,#124]
 190 014e D7F84431 	 ldr r3,[r7,#324]
 191 0152 1344     	 add r3,r3,r2
 192 0154 FB67     	 str r3,[r7,#124]
 193              	.L5:
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Working pointer for state buffer is updated */
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   py = pState;
 194              	 .loc 1 94 0
 195 0156 D7F85031 	 ldr r3,[r7,#336]
 196 015a C7F84C31 	 str r3,[r7,#332]
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* blockSize samples are read from the state buffer */
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,
 197              	 .loc 1 97 0
 198 015e D7F84421 	 ldr r2,[r7,#324]
 199 0162 D7F89011 	 ldr r1,[r7,#400]
 200 0166 D7F84C31 	 ldr r3,[r7,#332]
 201 016a C7F80C31 	 str r3,[r7,#268]
 202 016e C7F80821 	 str r2,[r7,#264]
 203 0172 07F17C03 	 add r3,r7,#124
 204 0176 C7F80431 	 str r3,[r7,#260]
 205 017a 0123     	 movs r3,#1
 206 017c C7F80031 	 str r3,[r7,#256]
 207 0180 D7F84831 	 ldr r3,[r7,#328]
 208 0184 C7F8FC30 	 str r3,[r7,#252]
 209 0188 D7F84831 	 ldr r3,[r7,#328]
 210 018c C7F8F830 	 str r3,[r7,#248]
 211 0190 C7F8F410 	 str r1,[r7,#244]
 212 0194 0123     	 movs r3,#1
 213 0196 C7F8F030 	 str r3,[r7,#240]
 214 019a D7F89031 	 ldr r3,[r7,#400]
 215 019e C7F8EC30 	 str r3,[r7,#236]
 216              	.LBB12:
 217              	.LBB13:
5908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief floating-point Circular Read function.
5914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_circularRead_f32(
5916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * circBuffer,
5917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t L,
5918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * readOffset,
5919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t bufferInc,
5920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * dst,
5921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * dst_base,
5922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t dst_length,
5923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t dstInc,
5924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize)
5925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t i = 0u;
 218              	 .loc 2 5926 0
 219 01a2 0023     	 movs r3,#0
 220 01a4 C7F8E830 	 str r3,[r7,#232]
5927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t rOffset, dst_end;
5928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Copy the value of Index pointer that points
5930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****      * to the current location from where the input samples to be read */
5931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     rOffset = *readOffset;
 221              	 .loc 2 5931 0
 222 01a8 D7F80431 	 ldr r3,[r7,#260]
 223 01ac 1B68     	 ldr r3,[r3]
 224 01ae C7F8E430 	 str r3,[r7,#228]
5932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     dst_end = (int32_t) (dst_base + dst_length);
 225              	 .loc 2 5932 0
 226 01b2 D7F8F430 	 ldr r3,[r7,#244]
 227 01b6 9A00     	 lsls r2,r3,#2
 228 01b8 D7F8F830 	 ldr r3,[r7,#248]
 229 01bc 1344     	 add r3,r3,r2
 230 01be C7F8E030 	 str r3,[r7,#224]
5933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Loop over the blockSize */
5935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     i = blockSize;
 231              	 .loc 2 5935 0
 232 01c2 D7F8EC30 	 ldr r3,[r7,#236]
 233 01c6 C7F8E830 	 str r3,[r7,#232]
 234 01ca 34E0     	 b .L6
 235              	.L9:
5936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     while (i > 0u)
5938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* copy the sample from the circular buffer to the destination buffer */
5940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *dst = circBuffer[rOffset];
 236              	 .loc 2 5940 0
 237 01cc D7F8E430 	 ldr r3,[r7,#228]
 238 01d0 9A00     	 lsls r2,r3,#2
 239 01d2 D7F80C31 	 ldr r3,[r7,#268]
 240 01d6 1344     	 add r3,r3,r2
 241 01d8 1A68     	 ldr r2,[r3]
 242 01da D7F8FC30 	 ldr r3,[r7,#252]
 243 01de 1A60     	 str r2,[r3]
5941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Update the input pointer */
5943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       dst += dstInc;
 244              	 .loc 2 5943 0
 245 01e0 D7F8F030 	 ldr r3,[r7,#240]
 246 01e4 9A00     	 lsls r2,r3,#2
 247 01e6 D7F8FC30 	 ldr r3,[r7,#252]
 248 01ea 1344     	 add r3,r3,r2
 249 01ec C7F8FC30 	 str r3,[r7,#252]
5944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (dst == (int32_t *) dst_end)
 250              	 .loc 2 5945 0
 251 01f0 D7F8E020 	 ldr r2,[r7,#224]
 252 01f4 D7F8FC30 	 ldr r3,[r7,#252]
 253 01f8 9342     	 cmp r3,r2
 254 01fa 03D1     	 bne .L7
5946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
5947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         dst = dst_base;
 255              	 .loc 2 5947 0
 256 01fc D7F8F830 	 ldr r3,[r7,#248]
 257 0200 C7F8FC30 	 str r3,[r7,#252]
 258              	.L7:
5948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
5949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Circularly update rOffset.  Watch out for positive and negative value  */
5951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       rOffset += bufferInc;
 259              	 .loc 2 5951 0
 260 0204 D7F8E420 	 ldr r2,[r7,#228]
 261 0208 D7F80031 	 ldr r3,[r7,#256]
 262 020c 1344     	 add r3,r3,r2
 263 020e C7F8E430 	 str r3,[r7,#228]
5952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (rOffset >= L)
 264              	 .loc 2 5953 0
 265 0212 D7F80821 	 ldr r2,[r7,#264]
 266 0216 D7F8E430 	 ldr r3,[r7,#228]
 267 021a 9A42     	 cmp r2,r3
 268 021c 06DC     	 bgt .L8
5954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
5955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         rOffset -= L;
 269              	 .loc 2 5955 0
 270 021e D7F8E420 	 ldr r2,[r7,#228]
 271 0222 D7F80831 	 ldr r3,[r7,#264]
 272 0226 D31A     	 subs r3,r2,r3
 273 0228 C7F8E430 	 str r3,[r7,#228]
 274              	.L8:
5956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
5957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Decrement the loop counter */
5959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       i--;
 275              	 .loc 2 5959 0
 276 022c D7F8E830 	 ldr r3,[r7,#232]
 277 0230 013B     	 subs r3,r3,#1
 278 0232 C7F8E830 	 str r3,[r7,#232]
 279              	.L6:
5937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 280              	 .loc 2 5937 0
 281 0236 D7F8E830 	 ldr r3,[r7,#232]
 282 023a 002B     	 cmp r3,#0
 283 023c C6D1     	 bne .L9
5960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update the index pointer */
5963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *readOffset = rOffset;
 284              	 .loc 2 5963 0
 285 023e D7F80421 	 ldr r2,[r7,#260]
 286 0242 D7F8E430 	 ldr r3,[r7,#228]
 287 0246 1360     	 str r3,[r2]
 288              	.LBE13:
 289              	.LBE12:
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****                        (int32_t *) pb, (int32_t *) pb, blockSize, 1,
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****                        blockSize);
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Working pointer for the scratch buffer of state values */
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   px = pb;
 290              	 .loc 1 102 0
 291 0248 D7F84831 	 ldr r3,[r7,#328]
 292 024c C7F86831 	 str r3,[r7,#360]
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Working pointer for scratch buffer of output values */
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   pOut = pDst;
 293              	 .loc 1 105 0
 294 0250 07F16C03 	 add r3,r7,#108
 295 0254 1B68     	 ldr r3,[r3]
 296 0256 C7F86431 	 str r3,[r7,#356]
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** #if defined (ARM_MATH_DSP)
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Loop over the blockSize. Unroll by a factor of 4.
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****    * Compute 4 Multiplications at a time. */
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   blkCnt = blockSize >> 2;
 297              	 .loc 1 114 0
 298 025a D7F89031 	 ldr r3,[r7,#400]
 299 025e 9B08     	 lsrs r3,r3,#2
 300 0260 C7F85831 	 str r3,[r7,#344]
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   while (blkCnt > 0u)
 301              	 .loc 1 116 0
 302 0264 8AE0     	 b .L10
 303              	.L11:
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Perform Multiplications and store in the destination buffer */
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = (q31_t) (((q63_t) * px++ * coeff) >> 32);
 304              	 .loc 1 119 0
 305 0266 D7F86461 	 ldr r6,[r7,#356]
 306 026a 331D     	 adds r3,r6,#4
 307 026c C7F86431 	 str r3,[r7,#356]
 308 0270 D7F86821 	 ldr r2,[r7,#360]
 309 0274 131D     	 adds r3,r2,#4
 310 0276 C7F86831 	 str r3,[r7,#360]
 311 027a 1368     	 ldr r3,[r2]
 312 027c 1846     	 mov r0,r3
 313 027e 4FEAE071 	 asr r1,r0,#31
 314 0282 D7F85431 	 ldr r3,[r7,#340]
 315 0286 1A46     	 mov r2,r3
 316 0288 4FEAE273 	 asr r3,r2,#31
 317 028c 02FB01F5 	 mul r5,r2,r1
 318 0290 00FB03F4 	 mul r4,r0,r3
 319 0294 2C44     	 add r4,r4,r5
 320 0296 A0FB0223 	 umull r2,r3,r0,r2
 321 029a E118     	 adds r1,r4,r3
 322 029c 0B46     	 mov r3,r1
 323 029e 1900     	 movs r1,r3
 324 02a0 3966     	 str r1,[r7,#96]
 325 02a2 DB17     	 asrs r3,r3,#31
 326 02a4 7B66     	 str r3,[r7,#100]
 327 02a6 3B6E     	 ldr r3,[r7,#96]
 328 02a8 3360     	 str r3,[r6]
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = (q31_t) (((q63_t) * px++ * coeff) >> 32);
 329              	 .loc 1 120 0
 330 02aa D7F86461 	 ldr r6,[r7,#356]
 331 02ae 331D     	 adds r3,r6,#4
 332 02b0 C7F86431 	 str r3,[r7,#356]
 333 02b4 D7F86821 	 ldr r2,[r7,#360]
 334 02b8 131D     	 adds r3,r2,#4
 335 02ba C7F86831 	 str r3,[r7,#360]
 336 02be 1368     	 ldr r3,[r2]
 337 02c0 1846     	 mov r0,r3
 338 02c2 4FEAE071 	 asr r1,r0,#31
 339 02c6 D7F85431 	 ldr r3,[r7,#340]
 340 02ca 1A46     	 mov r2,r3
 341 02cc 4FEAE273 	 asr r3,r2,#31
 342 02d0 02FB01F5 	 mul r5,r2,r1
 343 02d4 00FB03F4 	 mul r4,r0,r3
 344 02d8 2C44     	 add r4,r4,r5
 345 02da A0FB0223 	 umull r2,r3,r0,r2
 346 02de E118     	 adds r1,r4,r3
 347 02e0 0B46     	 mov r3,r1
 348 02e2 1900     	 movs r1,r3
 349 02e4 B965     	 str r1,[r7,#88]
 350 02e6 DB17     	 asrs r3,r3,#31
 351 02e8 FB65     	 str r3,[r7,#92]
 352 02ea BB6D     	 ldr r3,[r7,#88]
 353 02ec 3360     	 str r3,[r6]
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = (q31_t) (((q63_t) * px++ * coeff) >> 32);
 354              	 .loc 1 121 0
 355 02ee D7F86461 	 ldr r6,[r7,#356]
 356 02f2 331D     	 adds r3,r6,#4
 357 02f4 C7F86431 	 str r3,[r7,#356]
 358 02f8 D7F86821 	 ldr r2,[r7,#360]
 359 02fc 131D     	 adds r3,r2,#4
 360 02fe C7F86831 	 str r3,[r7,#360]
 361 0302 1368     	 ldr r3,[r2]
 362 0304 1846     	 mov r0,r3
 363 0306 4FEAE071 	 asr r1,r0,#31
 364 030a D7F85431 	 ldr r3,[r7,#340]
 365 030e 1A46     	 mov r2,r3
 366 0310 4FEAE273 	 asr r3,r2,#31
 367 0314 02FB01F5 	 mul r5,r2,r1
 368 0318 00FB03F4 	 mul r4,r0,r3
 369 031c 2C44     	 add r4,r4,r5
 370 031e A0FB0223 	 umull r2,r3,r0,r2
 371 0322 E118     	 adds r1,r4,r3
 372 0324 0B46     	 mov r3,r1
 373 0326 9A46     	 mov r10,r3
 374 0328 4FEAE37B 	 asr fp,r3,#31
 375 032c 5346     	 mov r3,r10
 376 032e 3360     	 str r3,[r6]
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = (q31_t) (((q63_t) * px++ * coeff) >> 32);
 377              	 .loc 1 122 0
 378 0330 D7F86461 	 ldr r6,[r7,#356]
 379 0334 331D     	 adds r3,r6,#4
 380 0336 C7F86431 	 str r3,[r7,#356]
 381 033a D7F86821 	 ldr r2,[r7,#360]
 382 033e 131D     	 adds r3,r2,#4
 383 0340 C7F86831 	 str r3,[r7,#360]
 384 0344 1368     	 ldr r3,[r2]
 385 0346 1846     	 mov r0,r3
 386 0348 4FEAE071 	 asr r1,r0,#31
 387 034c D7F85431 	 ldr r3,[r7,#340]
 388 0350 1A46     	 mov r2,r3
 389 0352 4FEAE273 	 asr r3,r2,#31
 390 0356 02FB01F5 	 mul r5,r2,r1
 391 035a 00FB03F4 	 mul r4,r0,r3
 392 035e 2C44     	 add r4,r4,r5
 393 0360 A0FB0223 	 umull r2,r3,r0,r2
 394 0364 E118     	 adds r1,r4,r3
 395 0366 0B46     	 mov r3,r1
 396 0368 9846     	 mov r8,r3
 397 036a 4FEAE379 	 asr r9,r3,#31
 398 036e 4346     	 mov r3,r8
 399 0370 3360     	 str r3,[r6]
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Decrement the loop counter */
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     blkCnt--;
 400              	 .loc 1 125 0
 401 0372 D7F85831 	 ldr r3,[r7,#344]
 402 0376 013B     	 subs r3,r3,#1
 403 0378 C7F85831 	 str r3,[r7,#344]
 404              	.L10:
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 405              	 .loc 1 116 0
 406 037c D7F85831 	 ldr r3,[r7,#344]
 407 0380 002B     	 cmp r3,#0
 408 0382 7FF470AF 	 bne .L11
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* If the blockSize is not a multiple of 4,
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****    * compute the remaining samples */
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   blkCnt = blockSize % 0x4u;
 409              	 .loc 1 130 0
 410 0386 D7F89031 	 ldr r3,[r7,#400]
 411 038a 03F00303 	 and r3,r3,#3
 412 038e C7F85831 	 str r3,[r7,#344]
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   while (blkCnt > 0u)
 413              	 .loc 1 132 0
 414 0392 26E0     	 b .L12
 415              	.L13:
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Perform Multiplications and store in the destination buffer */
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = (q31_t) (((q63_t) * px++ * coeff) >> 32);
 416              	 .loc 1 135 0
 417 0394 D7F86461 	 ldr r6,[r7,#356]
 418 0398 331D     	 adds r3,r6,#4
 419 039a C7F86431 	 str r3,[r7,#356]
 420 039e D7F86821 	 ldr r2,[r7,#360]
 421 03a2 131D     	 adds r3,r2,#4
 422 03a4 C7F86831 	 str r3,[r7,#360]
 423 03a8 1368     	 ldr r3,[r2]
 424 03aa 1846     	 mov r0,r3
 425 03ac 4FEAE071 	 asr r1,r0,#31
 426 03b0 D7F85431 	 ldr r3,[r7,#340]
 427 03b4 1A46     	 mov r2,r3
 428 03b6 4FEAE273 	 asr r3,r2,#31
 429 03ba 02FB01F5 	 mul r5,r2,r1
 430 03be 00FB03F4 	 mul r4,r0,r3
 431 03c2 2C44     	 add r4,r4,r5
 432 03c4 A0FB0223 	 umull r2,r3,r0,r2
 433 03c8 E118     	 adds r1,r4,r3
 434 03ca 0B46     	 mov r3,r1
 435 03cc 1900     	 movs r1,r3
 436 03ce 3965     	 str r1,[r7,#80]
 437 03d0 DB17     	 asrs r3,r3,#31
 438 03d2 7B65     	 str r3,[r7,#84]
 439 03d4 3B6D     	 ldr r3,[r7,#80]
 440 03d6 3360     	 str r3,[r6]
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Decrement the loop counter */
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     blkCnt--;
 441              	 .loc 1 138 0
 442 03d8 D7F85831 	 ldr r3,[r7,#344]
 443 03dc 013B     	 subs r3,r3,#1
 444 03de C7F85831 	 str r3,[r7,#344]
 445              	.L12:
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 446              	 .loc 1 132 0
 447 03e2 D7F85831 	 ldr r3,[r7,#344]
 448 03e6 002B     	 cmp r3,#0
 449 03e8 D4D1     	 bne .L13
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Load the coefficient value and
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****    * increment the coefficient buffer for the next set of state values */
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   coeff = *pCoeffs++;
 450              	 .loc 1 143 0
 451 03ea D7F86C21 	 ldr r2,[r7,#364]
 452 03ee 131D     	 adds r3,r2,#4
 453 03f0 C7F86C31 	 str r3,[r7,#364]
 454 03f4 1368     	 ldr r3,[r2]
 455 03f6 C7F85431 	 str r3,[r7,#340]
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Read Index, from where the state buffer should be read, is calculated. */
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   readIndex = (int32_t) (S->stateIndex - blockSize) - *pTapDelay++;
 456              	 .loc 1 146 0
 457 03fa 7B6F     	 ldr r3,[r7,#116]
 458 03fc 5B88     	 ldrh r3,[r3,#2]
 459 03fe 1A46     	 mov r2,r3
 460 0400 D7F89031 	 ldr r3,[r7,#400]
 461 0404 D31A     	 subs r3,r2,r3
 462 0406 1946     	 mov r1,r3
 463 0408 D7F86021 	 ldr r2,[r7,#352]
 464 040c 131D     	 adds r3,r2,#4
 465 040e C7F86031 	 str r3,[r7,#352]
 466 0412 1368     	 ldr r3,[r2]
 467 0414 CB1A     	 subs r3,r1,r3
 468 0416 FB67     	 str r3,[r7,#124]
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Wraparound of readIndex */
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   if (readIndex < 0)
 469              	 .loc 1 149 0
 470 0418 FB6F     	 ldr r3,[r7,#124]
 471 041a 002B     	 cmp r3,#0
 472 041c 04DA     	 bge .L14
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     readIndex += (int32_t) delaySize;
 473              	 .loc 1 151 0
 474 041e FA6F     	 ldr r2,[r7,#124]
 475 0420 D7F84431 	 ldr r3,[r7,#324]
 476 0424 1344     	 add r3,r3,r2
 477 0426 FB67     	 str r3,[r7,#124]
 478              	.L14:
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Loop over the number of taps. */
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   tapCnt = (uint32_t) numTaps - 2u;
 479              	 .loc 1 155 0
 480 0428 B7F84231 	 ldrh r3,[r7,#322]
 481 042c 023B     	 subs r3,r3,#2
 482 042e C7F85C31 	 str r3,[r7,#348]
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   while (tapCnt > 0u)
 483              	 .loc 1 157 0
 484 0432 F1E1     	 b .L15
 485              	.L25:
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Working pointer for state buffer is updated */
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     py = pState;
 486              	 .loc 1 160 0
 487 0434 D7F85031 	 ldr r3,[r7,#336]
 488 0438 C7F84C31 	 str r3,[r7,#332]
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* blockSize samples are read from the state buffer */
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,
 489              	 .loc 1 163 0
 490 043c D7F84421 	 ldr r2,[r7,#324]
 491 0440 D7F89011 	 ldr r1,[r7,#400]
 492 0444 D7F84C31 	 ldr r3,[r7,#332]
 493 0448 C7F8DC30 	 str r3,[r7,#220]
 494 044c C7F8D820 	 str r2,[r7,#216]
 495 0450 07F17C03 	 add r3,r7,#124
 496 0454 C7F8D430 	 str r3,[r7,#212]
 497 0458 0123     	 movs r3,#1
 498 045a C7F8D030 	 str r3,[r7,#208]
 499 045e D7F84831 	 ldr r3,[r7,#328]
 500 0462 C7F8CC30 	 str r3,[r7,#204]
 501 0466 D7F84831 	 ldr r3,[r7,#328]
 502 046a C7F8C830 	 str r3,[r7,#200]
 503 046e C7F8C410 	 str r1,[r7,#196]
 504 0472 0123     	 movs r3,#1
 505 0474 C7F8C030 	 str r3,[r7,#192]
 506 0478 D7F89031 	 ldr r3,[r7,#400]
 507 047c C7F8BC30 	 str r3,[r7,#188]
 508              	.LBB14:
 509              	.LBB15:
5926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t rOffset, dst_end;
 510              	 .loc 2 5926 0
 511 0480 0023     	 movs r3,#0
 512 0482 C7F8B830 	 str r3,[r7,#184]
5931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     dst_end = (int32_t) (dst_base + dst_length);
 513              	 .loc 2 5931 0
 514 0486 D7F8D430 	 ldr r3,[r7,#212]
 515 048a 1B68     	 ldr r3,[r3]
 516 048c C7F8B430 	 str r3,[r7,#180]
5932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 517              	 .loc 2 5932 0
 518 0490 D7F8C430 	 ldr r3,[r7,#196]
 519 0494 9A00     	 lsls r2,r3,#2
 520 0496 D7F8C830 	 ldr r3,[r7,#200]
 521 049a 1344     	 add r3,r3,r2
 522 049c C7F8B030 	 str r3,[r7,#176]
5935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 523              	 .loc 2 5935 0
 524 04a0 D7F8BC30 	 ldr r3,[r7,#188]
 525 04a4 C7F8B830 	 str r3,[r7,#184]
 526 04a8 34E0     	 b .L16
 527              	.L19:
5940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 528              	 .loc 2 5940 0
 529 04aa D7F8B430 	 ldr r3,[r7,#180]
 530 04ae 9A00     	 lsls r2,r3,#2
 531 04b0 D7F8DC30 	 ldr r3,[r7,#220]
 532 04b4 1344     	 add r3,r3,r2
 533 04b6 1A68     	 ldr r2,[r3]
 534 04b8 D7F8CC30 	 ldr r3,[r7,#204]
 535 04bc 1A60     	 str r2,[r3]
5943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 536              	 .loc 2 5943 0
 537 04be D7F8C030 	 ldr r3,[r7,#192]
 538 04c2 9A00     	 lsls r2,r3,#2
 539 04c4 D7F8CC30 	 ldr r3,[r7,#204]
 540 04c8 1344     	 add r3,r3,r2
 541 04ca C7F8CC30 	 str r3,[r7,#204]
5945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 542              	 .loc 2 5945 0
 543 04ce D7F8B020 	 ldr r2,[r7,#176]
 544 04d2 D7F8CC30 	 ldr r3,[r7,#204]
 545 04d6 9342     	 cmp r3,r2
 546 04d8 03D1     	 bne .L17
5947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 547              	 .loc 2 5947 0
 548 04da D7F8C830 	 ldr r3,[r7,#200]
 549 04de C7F8CC30 	 str r3,[r7,#204]
 550              	.L17:
5951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 551              	 .loc 2 5951 0
 552 04e2 D7F8B420 	 ldr r2,[r7,#180]
 553 04e6 D7F8D030 	 ldr r3,[r7,#208]
 554 04ea 1344     	 add r3,r3,r2
 555 04ec C7F8B430 	 str r3,[r7,#180]
5953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 556              	 .loc 2 5953 0
 557 04f0 D7F8D820 	 ldr r2,[r7,#216]
 558 04f4 D7F8B430 	 ldr r3,[r7,#180]
 559 04f8 9A42     	 cmp r2,r3
 560 04fa 06DC     	 bgt .L18
5955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 561              	 .loc 2 5955 0
 562 04fc D7F8B420 	 ldr r2,[r7,#180]
 563 0500 D7F8D830 	 ldr r3,[r7,#216]
 564 0504 D31A     	 subs r3,r2,r3
 565 0506 C7F8B430 	 str r3,[r7,#180]
 566              	.L18:
5959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 567              	 .loc 2 5959 0
 568 050a D7F8B830 	 ldr r3,[r7,#184]
 569 050e 013B     	 subs r3,r3,#1
 570 0510 C7F8B830 	 str r3,[r7,#184]
 571              	.L16:
5937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 572              	 .loc 2 5937 0
 573 0514 D7F8B830 	 ldr r3,[r7,#184]
 574 0518 002B     	 cmp r3,#0
 575 051a C6D1     	 bne .L19
 576              	 .loc 2 5963 0
 577 051c D7F8D420 	 ldr r2,[r7,#212]
 578 0520 D7F8B430 	 ldr r3,[r7,#180]
 579 0524 1360     	 str r3,[r2]
 580              	.LBE15:
 581              	.LBE14:
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****                          (int32_t *) pb, (int32_t *) pb, blockSize, 1,
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****                          blockSize);
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Working pointer for the scratch buffer of state values */
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     px = pb;
 582              	 .loc 1 168 0
 583 0526 D7F84831 	 ldr r3,[r7,#328]
 584 052a C7F86831 	 str r3,[r7,#360]
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Working pointer for scratch buffer of output values */
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     pOut = pDst;
 585              	 .loc 1 171 0
 586 052e 07F16C03 	 add r3,r7,#108
 587 0532 1B68     	 ldr r3,[r3]
 588 0534 C7F86431 	 str r3,[r7,#356]
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Loop over the blockSize. Unroll by a factor of 4.
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****      * Compute 4 MACS at a time. */
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     blkCnt = blockSize >> 2;
 589              	 .loc 1 175 0
 590 0538 D7F89031 	 ldr r3,[r7,#400]
 591 053c 9B08     	 lsrs r3,r3,#2
 592 053e C7F85831 	 str r3,[r7,#344]
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     while (blkCnt > 0u)
 593              	 .loc 1 177 0
 594 0542 F4E0     	 b .L20
 595              	.L21:
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     {
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out = *pOut;
 596              	 .loc 1 179 0
 597 0544 D7F86431 	 ldr r3,[r7,#356]
 598 0548 1B68     	 ldr r3,[r3]
 599 054a 1A46     	 mov r2,r3
 600 054c 4FEAE273 	 asr r3,r2,#31
 601 0550 07F59C71 	 add r1,r7,#312
 602 0554 C1E90023 	 strd r2,[r1]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out += ((q63_t) * px++ * coeff) >> 32;
 603              	 .loc 1 180 0
 604 0558 D7F86821 	 ldr r2,[r7,#360]
 605 055c 131D     	 adds r3,r2,#4
 606 055e C7F86831 	 str r3,[r7,#360]
 607 0562 1368     	 ldr r3,[r2]
 608 0564 1846     	 mov r0,r3
 609 0566 4FEAE071 	 asr r1,r0,#31
 610 056a D7F85431 	 ldr r3,[r7,#340]
 611 056e 1A46     	 mov r2,r3
 612 0570 4FEAE273 	 asr r3,r2,#31
 613 0574 02FB01F5 	 mul r5,r2,r1
 614 0578 00FB03F4 	 mul r4,r0,r3
 615 057c 2C44     	 add r4,r4,r5
 616 057e A0FB0223 	 umull r2,r3,r0,r2
 617 0582 E118     	 adds r1,r4,r3
 618 0584 0B46     	 mov r3,r1
 619 0586 1900     	 movs r1,r3
 620 0588 B964     	 str r1,[r7,#72]
 621 058a DB17     	 asrs r3,r3,#31
 622 058c FB64     	 str r3,[r7,#76]
 623 058e 07F59C73 	 add r3,r7,#312
 624 0592 D3E90023 	 ldrd r2,[r3]
 625 0596 D7E91201 	 ldrd r0,[r7,#72]
 626 059a 8018     	 adds r0,r0,r2
 627 059c 41EB0301 	 adc r1,r1,r3
 628 05a0 0246     	 mov r2,r0
 629 05a2 0B46     	 mov r3,r1
 630 05a4 07F59C71 	 add r1,r7,#312
 631 05a8 C1E90023 	 strd r2,[r1]
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       *pOut++ = (q31_t) (out);
 632              	 .loc 1 181 0
 633 05ac D7F86421 	 ldr r2,[r7,#356]
 634 05b0 131D     	 adds r3,r2,#4
 635 05b2 C7F86431 	 str r3,[r7,#356]
 636 05b6 D7F83831 	 ldr r3,[r7,#312]
 637 05ba 1360     	 str r3,[r2]
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out = *pOut;
 638              	 .loc 1 183 0
 639 05bc D7F86431 	 ldr r3,[r7,#356]
 640 05c0 1B68     	 ldr r3,[r3]
 641 05c2 1A46     	 mov r2,r3
 642 05c4 4FEAE273 	 asr r3,r2,#31
 643 05c8 07F59C71 	 add r1,r7,#312
 644 05cc C1E90023 	 strd r2,[r1]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out += ((q63_t) * px++ * coeff) >> 32;
 645              	 .loc 1 184 0
 646 05d0 D7F86821 	 ldr r2,[r7,#360]
 647 05d4 131D     	 adds r3,r2,#4
 648 05d6 C7F86831 	 str r3,[r7,#360]
 649 05da 1368     	 ldr r3,[r2]
 650 05dc 1846     	 mov r0,r3
 651 05de 4FEAE071 	 asr r1,r0,#31
 652 05e2 D7F85431 	 ldr r3,[r7,#340]
 653 05e6 1A46     	 mov r2,r3
 654 05e8 4FEAE273 	 asr r3,r2,#31
 655 05ec 02FB01F5 	 mul r5,r2,r1
 656 05f0 00FB03F4 	 mul r4,r0,r3
 657 05f4 2C44     	 add r4,r4,r5
 658 05f6 A0FB0223 	 umull r2,r3,r0,r2
 659 05fa E118     	 adds r1,r4,r3
 660 05fc 0B46     	 mov r3,r1
 661 05fe 1900     	 movs r1,r3
 662 0600 3964     	 str r1,[r7,#64]
 663 0602 DB17     	 asrs r3,r3,#31
 664 0604 7B64     	 str r3,[r7,#68]
 665 0606 07F59C73 	 add r3,r7,#312
 666 060a D3E90023 	 ldrd r2,[r3]
 667 060e D7E91001 	 ldrd r0,[r7,#64]
 668 0612 8018     	 adds r0,r0,r2
 669 0614 41EB0301 	 adc r1,r1,r3
 670 0618 0246     	 mov r2,r0
 671 061a 0B46     	 mov r3,r1
 672 061c 07F59C71 	 add r1,r7,#312
 673 0620 C1E90023 	 strd r2,[r1]
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       *pOut++ = (q31_t) (out);
 674              	 .loc 1 185 0
 675 0624 D7F86421 	 ldr r2,[r7,#356]
 676 0628 131D     	 adds r3,r2,#4
 677 062a C7F86431 	 str r3,[r7,#356]
 678 062e D7F83831 	 ldr r3,[r7,#312]
 679 0632 1360     	 str r3,[r2]
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out = *pOut;
 680              	 .loc 1 187 0
 681 0634 D7F86431 	 ldr r3,[r7,#356]
 682 0638 1B68     	 ldr r3,[r3]
 683 063a 1A46     	 mov r2,r3
 684 063c 4FEAE273 	 asr r3,r2,#31
 685 0640 07F59C71 	 add r1,r7,#312
 686 0644 C1E90023 	 strd r2,[r1]
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out += ((q63_t) * px++ * coeff) >> 32;
 687              	 .loc 1 188 0
 688 0648 D7F86821 	 ldr r2,[r7,#360]
 689 064c 131D     	 adds r3,r2,#4
 690 064e C7F86831 	 str r3,[r7,#360]
 691 0652 1368     	 ldr r3,[r2]
 692 0654 1846     	 mov r0,r3
 693 0656 4FEAE071 	 asr r1,r0,#31
 694 065a D7F85431 	 ldr r3,[r7,#340]
 695 065e 1A46     	 mov r2,r3
 696 0660 4FEAE273 	 asr r3,r2,#31
 697 0664 02FB01F5 	 mul r5,r2,r1
 698 0668 00FB03F4 	 mul r4,r0,r3
 699 066c 2C44     	 add r4,r4,r5
 700 066e A0FB0223 	 umull r2,r3,r0,r2
 701 0672 E118     	 adds r1,r4,r3
 702 0674 0B46     	 mov r3,r1
 703 0676 1900     	 movs r1,r3
 704 0678 B963     	 str r1,[r7,#56]
 705 067a DB17     	 asrs r3,r3,#31
 706 067c FB63     	 str r3,[r7,#60]
 707 067e 07F59C73 	 add r3,r7,#312
 708 0682 D3E90023 	 ldrd r2,[r3]
 709 0686 D7E90E01 	 ldrd r0,[r7,#56]
 710 068a 8018     	 adds r0,r0,r2
 711 068c 41EB0301 	 adc r1,r1,r3
 712 0690 0246     	 mov r2,r0
 713 0692 0B46     	 mov r3,r1
 714 0694 07F59C71 	 add r1,r7,#312
 715 0698 C1E90023 	 strd r2,[r1]
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       *pOut++ = (q31_t) (out);
 716              	 .loc 1 189 0
 717 069c D7F86421 	 ldr r2,[r7,#356]
 718 06a0 131D     	 adds r3,r2,#4
 719 06a2 C7F86431 	 str r3,[r7,#356]
 720 06a6 D7F83831 	 ldr r3,[r7,#312]
 721 06aa 1360     	 str r3,[r2]
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out = *pOut;
 722              	 .loc 1 191 0
 723 06ac D7F86431 	 ldr r3,[r7,#356]
 724 06b0 1B68     	 ldr r3,[r3]
 725 06b2 1A46     	 mov r2,r3
 726 06b4 4FEAE273 	 asr r3,r2,#31
 727 06b8 07F59C71 	 add r1,r7,#312
 728 06bc C1E90023 	 strd r2,[r1]
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out += ((q63_t) * px++ * coeff) >> 32;
 729              	 .loc 1 192 0
 730 06c0 D7F86821 	 ldr r2,[r7,#360]
 731 06c4 131D     	 adds r3,r2,#4
 732 06c6 C7F86831 	 str r3,[r7,#360]
 733 06ca 1368     	 ldr r3,[r2]
 734 06cc 1846     	 mov r0,r3
 735 06ce 4FEAE071 	 asr r1,r0,#31
 736 06d2 D7F85431 	 ldr r3,[r7,#340]
 737 06d6 1A46     	 mov r2,r3
 738 06d8 4FEAE273 	 asr r3,r2,#31
 739 06dc 02FB01F5 	 mul r5,r2,r1
 740 06e0 00FB03F4 	 mul r4,r0,r3
 741 06e4 2C44     	 add r4,r4,r5
 742 06e6 A0FB0223 	 umull r2,r3,r0,r2
 743 06ea E118     	 adds r1,r4,r3
 744 06ec 0B46     	 mov r3,r1
 745 06ee 1900     	 movs r1,r3
 746 06f0 3963     	 str r1,[r7,#48]
 747 06f2 DB17     	 asrs r3,r3,#31
 748 06f4 7B63     	 str r3,[r7,#52]
 749 06f6 07F59C73 	 add r3,r7,#312
 750 06fa D3E90023 	 ldrd r2,[r3]
 751 06fe D7E90C01 	 ldrd r0,[r7,#48]
 752 0702 8018     	 adds r0,r0,r2
 753 0704 41EB0301 	 adc r1,r1,r3
 754 0708 0246     	 mov r2,r0
 755 070a 0B46     	 mov r3,r1
 756 070c 07F59C71 	 add r1,r7,#312
 757 0710 C1E90023 	 strd r2,[r1]
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       *pOut++ = (q31_t) (out);
 758              	 .loc 1 193 0
 759 0714 D7F86421 	 ldr r2,[r7,#356]
 760 0718 131D     	 adds r3,r2,#4
 761 071a C7F86431 	 str r3,[r7,#356]
 762 071e D7F83831 	 ldr r3,[r7,#312]
 763 0722 1360     	 str r3,[r2]
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       /* Decrement the loop counter */
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       blkCnt--;
 764              	 .loc 1 196 0
 765 0724 D7F85831 	 ldr r3,[r7,#344]
 766 0728 013B     	 subs r3,r3,#1
 767 072a C7F85831 	 str r3,[r7,#344]
 768              	.L20:
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     {
 769              	 .loc 1 177 0
 770 072e D7F85831 	 ldr r3,[r7,#344]
 771 0732 002B     	 cmp r3,#0
 772 0734 7FF406AF 	 bne .L21
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     }
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* If the blockSize is not a multiple of 4,
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****      * compute the remaining samples */
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     blkCnt = blockSize % 0x4u;
 773              	 .loc 1 201 0
 774 0738 D7F89031 	 ldr r3,[r7,#400]
 775 073c 03F00303 	 and r3,r3,#3
 776 0740 C7F85831 	 str r3,[r7,#344]
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     while (blkCnt > 0u)
 777              	 .loc 1 203 0
 778 0744 40E0     	 b .L22
 779              	.L23:
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     {
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       /* Perform Multiply-Accumulate */
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out = *pOut;
 780              	 .loc 1 206 0
 781 0746 D7F86431 	 ldr r3,[r7,#356]
 782 074a 1B68     	 ldr r3,[r3]
 783 074c 1A46     	 mov r2,r3
 784 074e 4FEAE273 	 asr r3,r2,#31
 785 0752 07F59C71 	 add r1,r7,#312
 786 0756 C1E90023 	 strd r2,[r1]
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out += ((q63_t) * px++ * coeff) >> 32;
 787              	 .loc 1 207 0
 788 075a D7F86821 	 ldr r2,[r7,#360]
 789 075e 131D     	 adds r3,r2,#4
 790 0760 C7F86831 	 str r3,[r7,#360]
 791 0764 1368     	 ldr r3,[r2]
 792 0766 1846     	 mov r0,r3
 793 0768 4FEAE071 	 asr r1,r0,#31
 794 076c D7F85431 	 ldr r3,[r7,#340]
 795 0770 1A46     	 mov r2,r3
 796 0772 4FEAE273 	 asr r3,r2,#31
 797 0776 02FB01F5 	 mul r5,r2,r1
 798 077a 00FB03F4 	 mul r4,r0,r3
 799 077e 2C44     	 add r4,r4,r5
 800 0780 A0FB0223 	 umull r2,r3,r0,r2
 801 0784 E118     	 adds r1,r4,r3
 802 0786 0B46     	 mov r3,r1
 803 0788 1900     	 movs r1,r3
 804 078a B962     	 str r1,[r7,#40]
 805 078c DB17     	 asrs r3,r3,#31
 806 078e FB62     	 str r3,[r7,#44]
 807 0790 07F59C73 	 add r3,r7,#312
 808 0794 D3E90023 	 ldrd r2,[r3]
 809 0798 D7E90A01 	 ldrd r0,[r7,#40]
 810 079c 8018     	 adds r0,r0,r2
 811 079e 41EB0301 	 adc r1,r1,r3
 812 07a2 0246     	 mov r2,r0
 813 07a4 0B46     	 mov r3,r1
 814 07a6 07F59C71 	 add r1,r7,#312
 815 07aa C1E90023 	 strd r2,[r1]
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       *pOut++ = (q31_t) (out);
 816              	 .loc 1 208 0
 817 07ae D7F86421 	 ldr r2,[r7,#356]
 818 07b2 131D     	 adds r3,r2,#4
 819 07b4 C7F86431 	 str r3,[r7,#356]
 820 07b8 D7F83831 	 ldr r3,[r7,#312]
 821 07bc 1360     	 str r3,[r2]
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       /* Decrement the loop counter */
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       blkCnt--;
 822              	 .loc 1 211 0
 823 07be D7F85831 	 ldr r3,[r7,#344]
 824 07c2 013B     	 subs r3,r3,#1
 825 07c4 C7F85831 	 str r3,[r7,#344]
 826              	.L22:
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     {
 827              	 .loc 1 203 0
 828 07c8 D7F85831 	 ldr r3,[r7,#344]
 829 07cc 002B     	 cmp r3,#0
 830 07ce BAD1     	 bne .L23
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     }
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Load the coefficient value and
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****      * increment the coefficient buffer for the next set of state values */
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     coeff = *pCoeffs++;
 831              	 .loc 1 216 0
 832 07d0 D7F86C21 	 ldr r2,[r7,#364]
 833 07d4 131D     	 adds r3,r2,#4
 834 07d6 C7F86C31 	 str r3,[r7,#364]
 835 07da 1368     	 ldr r3,[r2]
 836 07dc C7F85431 	 str r3,[r7,#340]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Read Index, from where the state buffer should be read, is calculated. */
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     readIndex = (int32_t) (S->stateIndex - blockSize) - *pTapDelay++;
 837              	 .loc 1 219 0
 838 07e0 7B6F     	 ldr r3,[r7,#116]
 839 07e2 5B88     	 ldrh r3,[r3,#2]
 840 07e4 1A46     	 mov r2,r3
 841 07e6 D7F89031 	 ldr r3,[r7,#400]
 842 07ea D31A     	 subs r3,r2,r3
 843 07ec 1946     	 mov r1,r3
 844 07ee D7F86021 	 ldr r2,[r7,#352]
 845 07f2 131D     	 adds r3,r2,#4
 846 07f4 C7F86031 	 str r3,[r7,#352]
 847 07f8 1368     	 ldr r3,[r2]
 848 07fa CB1A     	 subs r3,r1,r3
 849 07fc FB67     	 str r3,[r7,#124]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Wraparound of readIndex */
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     if (readIndex < 0)
 850              	 .loc 1 222 0
 851 07fe FB6F     	 ldr r3,[r7,#124]
 852 0800 002B     	 cmp r3,#0
 853 0802 04DA     	 bge .L24
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     {
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       readIndex += (int32_t) delaySize;
 854              	 .loc 1 224 0
 855 0804 FA6F     	 ldr r2,[r7,#124]
 856 0806 D7F84431 	 ldr r3,[r7,#324]
 857 080a 1344     	 add r3,r3,r2
 858 080c FB67     	 str r3,[r7,#124]
 859              	.L24:
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     }
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Decrement the tap loop counter */
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     tapCnt--;
 860              	 .loc 1 228 0
 861 080e D7F85C31 	 ldr r3,[r7,#348]
 862 0812 013B     	 subs r3,r3,#1
 863 0814 C7F85C31 	 str r3,[r7,#348]
 864              	.L15:
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 865              	 .loc 1 157 0
 866 0818 D7F85C31 	 ldr r3,[r7,#348]
 867 081c 002B     	 cmp r3,#0
 868 081e 7FF409AE 	 bne .L25
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* Compute last tap without the final read of pTapDelay */
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* Working pointer for state buffer is updated */
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	py = pState;
 869              	 .loc 1 234 0
 870 0822 D7F85031 	 ldr r3,[r7,#336]
 871 0826 C7F84C31 	 str r3,[r7,#332]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* blockSize samples are read from the state buffer */
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,
 872              	 .loc 1 237 0
 873 082a D7F84421 	 ldr r2,[r7,#324]
 874 082e D7F89031 	 ldr r3,[r7,#400]
 875 0832 D7F84C11 	 ldr r1,[r7,#332]
 876 0836 C7F8AC10 	 str r1,[r7,#172]
 877 083a C7F8A820 	 str r2,[r7,#168]
 878 083e 07F17C02 	 add r2,r7,#124
 879 0842 C7F8A420 	 str r2,[r7,#164]
 880 0846 0122     	 movs r2,#1
 881 0848 C7F8A020 	 str r2,[r7,#160]
 882 084c D7F84821 	 ldr r2,[r7,#328]
 883 0850 C7F89C20 	 str r2,[r7,#156]
 884 0854 D7F84821 	 ldr r2,[r7,#328]
 885 0858 C7F89820 	 str r2,[r7,#152]
 886 085c C7F89430 	 str r3,[r7,#148]
 887 0860 0123     	 movs r3,#1
 888 0862 C7F89030 	 str r3,[r7,#144]
 889 0866 D7F89031 	 ldr r3,[r7,#400]
 890 086a C7F88C30 	 str r3,[r7,#140]
 891              	.LBB16:
 892              	.LBB17:
5926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t rOffset, dst_end;
 893              	 .loc 2 5926 0
 894 086e 0023     	 movs r3,#0
 895 0870 C7F88830 	 str r3,[r7,#136]
5931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     dst_end = (int32_t) (dst_base + dst_length);
 896              	 .loc 2 5931 0
 897 0874 D7F8A430 	 ldr r3,[r7,#164]
 898 0878 1B68     	 ldr r3,[r3]
 899 087a C7F88430 	 str r3,[r7,#132]
5932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 900              	 .loc 2 5932 0
 901 087e D7F89430 	 ldr r3,[r7,#148]
 902 0882 9B00     	 lsls r3,r3,#2
 903 0884 D7F89820 	 ldr r2,[r7,#152]
 904 0888 1344     	 add r3,r3,r2
 905 088a C7F88030 	 str r3,[r7,#128]
5935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 906              	 .loc 2 5935 0
 907 088e D7F88C30 	 ldr r3,[r7,#140]
 908 0892 C7F88830 	 str r3,[r7,#136]
 909 0896 34E0     	 b .L26
 910              	.L29:
5940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 911              	 .loc 2 5940 0
 912 0898 D7F88430 	 ldr r3,[r7,#132]
 913 089c 9B00     	 lsls r3,r3,#2
 914 089e D7F8AC20 	 ldr r2,[r7,#172]
 915 08a2 1344     	 add r3,r3,r2
 916 08a4 1A68     	 ldr r2,[r3]
 917 08a6 D7F89C30 	 ldr r3,[r7,#156]
 918 08aa 1A60     	 str r2,[r3]
5943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 919              	 .loc 2 5943 0
 920 08ac D7F89030 	 ldr r3,[r7,#144]
 921 08b0 9B00     	 lsls r3,r3,#2
 922 08b2 D7F89C20 	 ldr r2,[r7,#156]
 923 08b6 1344     	 add r3,r3,r2
 924 08b8 C7F89C30 	 str r3,[r7,#156]
5945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 925              	 .loc 2 5945 0
 926 08bc D7F88030 	 ldr r3,[r7,#128]
 927 08c0 D7F89C20 	 ldr r2,[r7,#156]
 928 08c4 9A42     	 cmp r2,r3
 929 08c6 03D1     	 bne .L27
5947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 930              	 .loc 2 5947 0
 931 08c8 D7F89830 	 ldr r3,[r7,#152]
 932 08cc C7F89C30 	 str r3,[r7,#156]
 933              	.L27:
5951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 934              	 .loc 2 5951 0
 935 08d0 D7F88420 	 ldr r2,[r7,#132]
 936 08d4 D7F8A030 	 ldr r3,[r7,#160]
 937 08d8 1344     	 add r3,r3,r2
 938 08da C7F88430 	 str r3,[r7,#132]
5953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 939              	 .loc 2 5953 0
 940 08de D7F8A820 	 ldr r2,[r7,#168]
 941 08e2 D7F88430 	 ldr r3,[r7,#132]
 942 08e6 9A42     	 cmp r2,r3
 943 08e8 06DC     	 bgt .L28
5955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 944              	 .loc 2 5955 0
 945 08ea D7F88420 	 ldr r2,[r7,#132]
 946 08ee D7F8A830 	 ldr r3,[r7,#168]
 947 08f2 D31A     	 subs r3,r2,r3
 948 08f4 C7F88430 	 str r3,[r7,#132]
 949              	.L28:
5959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 950              	 .loc 2 5959 0
 951 08f8 D7F88830 	 ldr r3,[r7,#136]
 952 08fc 013B     	 subs r3,r3,#1
 953 08fe C7F88830 	 str r3,[r7,#136]
 954              	.L26:
5937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 955              	 .loc 2 5937 0
 956 0902 D7F88830 	 ldr r3,[r7,#136]
 957 0906 002B     	 cmp r3,#0
 958 0908 C6D1     	 bne .L29
 959              	 .loc 2 5963 0
 960 090a D7F8A430 	 ldr r3,[r7,#164]
 961 090e D7F88420 	 ldr r2,[r7,#132]
 962 0912 1A60     	 str r2,[r3]
 963              	.LBE17:
 964              	.LBE16:
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 											 (int32_t *) pb, (int32_t *) pb, blockSize, 1,
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 											 blockSize);
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* Working pointer for the scratch buffer of state values */
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	px = pb;
 965              	 .loc 1 242 0
 966 0914 D7F84831 	 ldr r3,[r7,#328]
 967 0918 C7F86831 	 str r3,[r7,#360]
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* Working pointer for scratch buffer of output values */
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	pOut = pDst;
 968              	 .loc 1 245 0
 969 091c 07F16C03 	 add r3,r7,#108
 970 0920 1B68     	 ldr r3,[r3]
 971 0922 C7F86431 	 str r3,[r7,#356]
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* Loop over the blockSize. Unroll by a factor of 4.
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	 * Compute 4 MACS at a time. */
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	blkCnt = blockSize >> 2;
 972              	 .loc 1 249 0
 973 0926 D7F89031 	 ldr r3,[r7,#400]
 974 092a 9B08     	 lsrs r3,r3,#2
 975 092c C7F85831 	 str r3,[r7,#344]
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	while (blkCnt > 0u)
 976              	 .loc 1 251 0
 977 0930 F4E0     	 b .L30
 978              	.L31:
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	{
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out = *pOut;
 979              	 .loc 1 253 0
 980 0932 D7F86431 	 ldr r3,[r7,#356]
 981 0936 1B68     	 ldr r3,[r3]
 982 0938 1A46     	 mov r2,r3
 983 093a 4FEAE273 	 asr r3,r2,#31
 984 093e 07F59C71 	 add r1,r7,#312
 985 0942 C1E90023 	 strd r2,[r1]
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out += ((q63_t) * px++ * coeff) >> 32;
 986              	 .loc 1 254 0
 987 0946 D7F86831 	 ldr r3,[r7,#360]
 988 094a 1A1D     	 adds r2,r3,#4
 989 094c C7F86821 	 str r2,[r7,#360]
 990 0950 1B68     	 ldr r3,[r3]
 991 0952 1A46     	 mov r2,r3
 992 0954 4FEAE273 	 asr r3,r2,#31
 993 0958 D7F85411 	 ldr r1,[r7,#340]
 994 095c 0846     	 mov r0,r1
 995 095e 4FEAE071 	 asr r1,r0,#31
 996 0962 00FB03F5 	 mul r5,r0,r3
 997 0966 02FB01F4 	 mul r4,r2,r1
 998 096a 2C44     	 add r4,r4,r5
 999 096c A2FB0023 	 umull r2,r3,r2,r0
 1000 0970 E118     	 adds r1,r4,r3
 1001 0972 0B46     	 mov r3,r1
 1002 0974 1900     	 movs r1,r3
 1003 0976 3962     	 str r1,[r7,#32]
 1004 0978 DB17     	 asrs r3,r3,#31
 1005 097a 7B62     	 str r3,[r7,#36]
 1006 097c 07F59C73 	 add r3,r7,#312
 1007 0980 D3E90023 	 ldrd r2,[r3]
 1008 0984 D7E90801 	 ldrd r0,[r7,#32]
 1009 0988 8018     	 adds r0,r0,r2
 1010 098a 41EB0301 	 adc r1,r1,r3
 1011 098e 0246     	 mov r2,r0
 1012 0990 0B46     	 mov r3,r1
 1013 0992 07F59C71 	 add r1,r7,#312
 1014 0996 C1E90023 	 strd r2,[r1]
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		*pOut++ = (q31_t) (out);
 1015              	 .loc 1 255 0
 1016 099a D7F86431 	 ldr r3,[r7,#356]
 1017 099e 1A1D     	 adds r2,r3,#4
 1018 09a0 C7F86421 	 str r2,[r7,#356]
 1019 09a4 D7F83821 	 ldr r2,[r7,#312]
 1020 09a8 1A60     	 str r2,[r3]
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out = *pOut;
 1021              	 .loc 1 257 0
 1022 09aa D7F86431 	 ldr r3,[r7,#356]
 1023 09ae 1B68     	 ldr r3,[r3]
 1024 09b0 1A46     	 mov r2,r3
 1025 09b2 4FEAE273 	 asr r3,r2,#31
 1026 09b6 07F59C71 	 add r1,r7,#312
 1027 09ba C1E90023 	 strd r2,[r1]
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out += ((q63_t) * px++ * coeff) >> 32;
 1028              	 .loc 1 258 0
 1029 09be D7F86831 	 ldr r3,[r7,#360]
 1030 09c2 1A1D     	 adds r2,r3,#4
 1031 09c4 C7F86821 	 str r2,[r7,#360]
 1032 09c8 1B68     	 ldr r3,[r3]
 1033 09ca 1A46     	 mov r2,r3
 1034 09cc 4FEAE273 	 asr r3,r2,#31
 1035 09d0 D7F85411 	 ldr r1,[r7,#340]
 1036 09d4 0846     	 mov r0,r1
 1037 09d6 4FEAE071 	 asr r1,r0,#31
 1038 09da 00FB03F5 	 mul r5,r0,r3
 1039 09de 02FB01F4 	 mul r4,r2,r1
 1040 09e2 2C44     	 add r4,r4,r5
 1041 09e4 A2FB0023 	 umull r2,r3,r2,r0
 1042 09e8 E118     	 adds r1,r4,r3
 1043 09ea 0B46     	 mov r3,r1
 1044 09ec 1900     	 movs r1,r3
 1045 09ee B961     	 str r1,[r7,#24]
 1046 09f0 DB17     	 asrs r3,r3,#31
 1047 09f2 FB61     	 str r3,[r7,#28]
 1048 09f4 07F59C73 	 add r3,r7,#312
 1049 09f8 D3E90023 	 ldrd r2,[r3]
 1050 09fc D7E90601 	 ldrd r0,[r7,#24]
 1051 0a00 8018     	 adds r0,r0,r2
 1052 0a02 41EB0301 	 adc r1,r1,r3
 1053 0a06 0246     	 mov r2,r0
 1054 0a08 0B46     	 mov r3,r1
 1055 0a0a 07F59C71 	 add r1,r7,#312
 1056 0a0e C1E90023 	 strd r2,[r1]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		*pOut++ = (q31_t) (out);
 1057              	 .loc 1 259 0
 1058 0a12 D7F86431 	 ldr r3,[r7,#356]
 1059 0a16 1A1D     	 adds r2,r3,#4
 1060 0a18 C7F86421 	 str r2,[r7,#356]
 1061 0a1c D7F83821 	 ldr r2,[r7,#312]
 1062 0a20 1A60     	 str r2,[r3]
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out = *pOut;
 1063              	 .loc 1 261 0
 1064 0a22 D7F86431 	 ldr r3,[r7,#356]
 1065 0a26 1B68     	 ldr r3,[r3]
 1066 0a28 1A46     	 mov r2,r3
 1067 0a2a 4FEAE273 	 asr r3,r2,#31
 1068 0a2e 07F59C71 	 add r1,r7,#312
 1069 0a32 C1E90023 	 strd r2,[r1]
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out += ((q63_t) * px++ * coeff) >> 32;
 1070              	 .loc 1 262 0
 1071 0a36 D7F86831 	 ldr r3,[r7,#360]
 1072 0a3a 1A1D     	 adds r2,r3,#4
 1073 0a3c C7F86821 	 str r2,[r7,#360]
 1074 0a40 1B68     	 ldr r3,[r3]
 1075 0a42 1A46     	 mov r2,r3
 1076 0a44 4FEAE273 	 asr r3,r2,#31
 1077 0a48 D7F85411 	 ldr r1,[r7,#340]
 1078 0a4c 0846     	 mov r0,r1
 1079 0a4e 4FEAE071 	 asr r1,r0,#31
 1080 0a52 00FB03F5 	 mul r5,r0,r3
 1081 0a56 02FB01F4 	 mul r4,r2,r1
 1082 0a5a 2C44     	 add r4,r4,r5
 1083 0a5c A2FB0023 	 umull r2,r3,r2,r0
 1084 0a60 E118     	 adds r1,r4,r3
 1085 0a62 0B46     	 mov r3,r1
 1086 0a64 1900     	 movs r1,r3
 1087 0a66 3961     	 str r1,[r7,#16]
 1088 0a68 DB17     	 asrs r3,r3,#31
 1089 0a6a 7B61     	 str r3,[r7,#20]
 1090 0a6c 07F59C73 	 add r3,r7,#312
 1091 0a70 D3E90023 	 ldrd r2,[r3]
 1092 0a74 D7E90401 	 ldrd r0,[r7,#16]
 1093 0a78 8018     	 adds r0,r0,r2
 1094 0a7a 41EB0301 	 adc r1,r1,r3
 1095 0a7e 0246     	 mov r2,r0
 1096 0a80 0B46     	 mov r3,r1
 1097 0a82 07F59C71 	 add r1,r7,#312
 1098 0a86 C1E90023 	 strd r2,[r1]
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		*pOut++ = (q31_t) (out);
 1099              	 .loc 1 263 0
 1100 0a8a D7F86431 	 ldr r3,[r7,#356]
 1101 0a8e 1A1D     	 adds r2,r3,#4
 1102 0a90 C7F86421 	 str r2,[r7,#356]
 1103 0a94 D7F83821 	 ldr r2,[r7,#312]
 1104 0a98 1A60     	 str r2,[r3]
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out = *pOut;
 1105              	 .loc 1 265 0
 1106 0a9a D7F86431 	 ldr r3,[r7,#356]
 1107 0a9e 1B68     	 ldr r3,[r3]
 1108 0aa0 1A46     	 mov r2,r3
 1109 0aa2 4FEAE273 	 asr r3,r2,#31
 1110 0aa6 07F59C71 	 add r1,r7,#312
 1111 0aaa C1E90023 	 strd r2,[r1]
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out += ((q63_t) * px++ * coeff) >> 32;
 1112              	 .loc 1 266 0
 1113 0aae D7F86831 	 ldr r3,[r7,#360]
 1114 0ab2 1A1D     	 adds r2,r3,#4
 1115 0ab4 C7F86821 	 str r2,[r7,#360]
 1116 0ab8 1B68     	 ldr r3,[r3]
 1117 0aba 1A46     	 mov r2,r3
 1118 0abc 4FEAE273 	 asr r3,r2,#31
 1119 0ac0 D7F85411 	 ldr r1,[r7,#340]
 1120 0ac4 0846     	 mov r0,r1
 1121 0ac6 4FEAE071 	 asr r1,r0,#31
 1122 0aca 00FB03F5 	 mul r5,r0,r3
 1123 0ace 02FB01F4 	 mul r4,r2,r1
 1124 0ad2 2C44     	 add r4,r4,r5
 1125 0ad4 A2FB0023 	 umull r2,r3,r2,r0
 1126 0ad8 E118     	 adds r1,r4,r3
 1127 0ada 0B46     	 mov r3,r1
 1128 0adc 1900     	 movs r1,r3
 1129 0ade B960     	 str r1,[r7,#8]
 1130 0ae0 DB17     	 asrs r3,r3,#31
 1131 0ae2 FB60     	 str r3,[r7,#12]
 1132 0ae4 07F59C73 	 add r3,r7,#312
 1133 0ae8 D3E90023 	 ldrd r2,[r3]
 1134 0aec D7E90201 	 ldrd r0,[r7,#8]
 1135 0af0 8018     	 adds r0,r0,r2
 1136 0af2 41EB0301 	 adc r1,r1,r3
 1137 0af6 0246     	 mov r2,r0
 1138 0af8 0B46     	 mov r3,r1
 1139 0afa 07F59C71 	 add r1,r7,#312
 1140 0afe C1E90023 	 strd r2,[r1]
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		*pOut++ = (q31_t) (out);
 1141              	 .loc 1 267 0
 1142 0b02 D7F86431 	 ldr r3,[r7,#356]
 1143 0b06 1A1D     	 adds r2,r3,#4
 1144 0b08 C7F86421 	 str r2,[r7,#356]
 1145 0b0c D7F83821 	 ldr r2,[r7,#312]
 1146 0b10 1A60     	 str r2,[r3]
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		/* Decrement the loop counter */
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		blkCnt--;
 1147              	 .loc 1 270 0
 1148 0b12 D7F85831 	 ldr r3,[r7,#344]
 1149 0b16 013B     	 subs r3,r3,#1
 1150 0b18 C7F85831 	 str r3,[r7,#344]
 1151              	.L30:
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	{
 1152              	 .loc 1 251 0
 1153 0b1c D7F85831 	 ldr r3,[r7,#344]
 1154 0b20 002B     	 cmp r3,#0
 1155 0b22 7FF406AF 	 bne .L31
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	}
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* If the blockSize is not a multiple of 4,
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	 * compute the remaining samples */
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	blkCnt = blockSize % 0x4u;
 1156              	 .loc 1 275 0
 1157 0b26 D7F89031 	 ldr r3,[r7,#400]
 1158 0b2a 03F00303 	 and r3,r3,#3
 1159 0b2e C7F85831 	 str r3,[r7,#344]
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	while (blkCnt > 0u)
 1160              	 .loc 1 277 0
 1161 0b32 40E0     	 b .L32
 1162              	.L33:
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	{
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		/* Perform Multiply-Accumulate */
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out = *pOut;
 1163              	 .loc 1 280 0
 1164 0b34 D7F86431 	 ldr r3,[r7,#356]
 1165 0b38 1B68     	 ldr r3,[r3]
 1166 0b3a 1A46     	 mov r2,r3
 1167 0b3c 4FEAE273 	 asr r3,r2,#31
 1168 0b40 07F59C71 	 add r1,r7,#312
 1169 0b44 C1E90023 	 strd r2,[r1]
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out += ((q63_t) * px++ * coeff) >> 32;
 1170              	 .loc 1 281 0
 1171 0b48 D7F86831 	 ldr r3,[r7,#360]
 1172 0b4c 1A1D     	 adds r2,r3,#4
 1173 0b4e C7F86821 	 str r2,[r7,#360]
 1174 0b52 1B68     	 ldr r3,[r3]
 1175 0b54 1846     	 mov r0,r3
 1176 0b56 4FEAE071 	 asr r1,r0,#31
 1177 0b5a D7F85431 	 ldr r3,[r7,#340]
 1178 0b5e 1A46     	 mov r2,r3
 1179 0b60 4FEAE273 	 asr r3,r2,#31
 1180 0b64 02FB01F5 	 mul r5,r2,r1
 1181 0b68 00FB03F4 	 mul r4,r0,r3
 1182 0b6c 2C44     	 add r4,r4,r5
 1183 0b6e A0FB0223 	 umull r2,r3,r0,r2
 1184 0b72 E118     	 adds r1,r4,r3
 1185 0b74 0B46     	 mov r3,r1
 1186 0b76 1900     	 movs r1,r3
 1187 0b78 3960     	 str r1,[r7]
 1188 0b7a DB17     	 asrs r3,r3,#31
 1189 0b7c 7B60     	 str r3,[r7,#4]
 1190 0b7e 07F59C73 	 add r3,r7,#312
 1191 0b82 D3E90023 	 ldrd r2,[r3]
 1192 0b86 D7E90001 	 ldrd r0,[r7]
 1193 0b8a 8018     	 adds r0,r0,r2
 1194 0b8c 41EB0301 	 adc r1,r1,r3
 1195 0b90 0246     	 mov r2,r0
 1196 0b92 0B46     	 mov r3,r1
 1197 0b94 07F59C71 	 add r1,r7,#312
 1198 0b98 C1E90023 	 strd r2,[r1]
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		*pOut++ = (q31_t) (out);
 1199              	 .loc 1 282 0
 1200 0b9c D7F86431 	 ldr r3,[r7,#356]
 1201 0ba0 1A1D     	 adds r2,r3,#4
 1202 0ba2 C7F86421 	 str r2,[r7,#356]
 1203 0ba6 D7F83821 	 ldr r2,[r7,#312]
 1204 0baa 1A60     	 str r2,[r3]
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		/* Decrement the loop counter */
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		blkCnt--;
 1205              	 .loc 1 285 0
 1206 0bac D7F85831 	 ldr r3,[r7,#344]
 1207 0bb0 013B     	 subs r3,r3,#1
 1208 0bb2 C7F85831 	 str r3,[r7,#344]
 1209              	.L32:
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	{
 1210              	 .loc 1 277 0
 1211 0bb6 D7F85831 	 ldr r3,[r7,#344]
 1212 0bba 002B     	 cmp r3,#0
 1213 0bbc BAD1     	 bne .L33
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	}
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Working output pointer is updated */
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   pOut = pDst;
 1214              	 .loc 1 289 0
 1215 0bbe 07F16C03 	 add r3,r7,#108
 1216 0bc2 1B68     	 ldr r3,[r3]
 1217 0bc4 C7F86431 	 str r3,[r7,#356]
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Output is converted into 1.31 format. */
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Loop over the blockSize. Unroll by a factor of 4.
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****    * process 4 output samples at a time. */
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   blkCnt = blockSize >> 2;
 1218              	 .loc 1 294 0
 1219 0bc8 D7F89031 	 ldr r3,[r7,#400]
 1220 0bcc 9B08     	 lsrs r3,r3,#2
 1221 0bce C7F85831 	 str r3,[r7,#344]
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   while (blkCnt > 0u)
 1222              	 .loc 1 296 0
 1223 0bd2 3CE0     	 b .L34
 1224              	.L35:
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     in = *pOut << 1;
 1225              	 .loc 1 298 0
 1226 0bd4 D7F86431 	 ldr r3,[r7,#356]
 1227 0bd8 1B68     	 ldr r3,[r3]
 1228 0bda 5B00     	 lsls r3,r3,#1
 1229 0bdc C7F83431 	 str r3,[r7,#308]
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = in;
 1230              	 .loc 1 299 0
 1231 0be0 D7F86431 	 ldr r3,[r7,#356]
 1232 0be4 1A1D     	 adds r2,r3,#4
 1233 0be6 C7F86421 	 str r2,[r7,#356]
 1234 0bea D7F83421 	 ldr r2,[r7,#308]
 1235 0bee 1A60     	 str r2,[r3]
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     in = *pOut << 1;
 1236              	 .loc 1 300 0
 1237 0bf0 D7F86431 	 ldr r3,[r7,#356]
 1238 0bf4 1B68     	 ldr r3,[r3]
 1239 0bf6 5B00     	 lsls r3,r3,#1
 1240 0bf8 C7F83431 	 str r3,[r7,#308]
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = in;
 1241              	 .loc 1 301 0
 1242 0bfc D7F86431 	 ldr r3,[r7,#356]
 1243 0c00 1A1D     	 adds r2,r3,#4
 1244 0c02 C7F86421 	 str r2,[r7,#356]
 1245 0c06 D7F83421 	 ldr r2,[r7,#308]
 1246 0c0a 1A60     	 str r2,[r3]
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     in = *pOut << 1;
 1247              	 .loc 1 302 0
 1248 0c0c D7F86431 	 ldr r3,[r7,#356]
 1249 0c10 1B68     	 ldr r3,[r3]
 1250 0c12 5B00     	 lsls r3,r3,#1
 1251 0c14 C7F83431 	 str r3,[r7,#308]
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = in;
 1252              	 .loc 1 303 0
 1253 0c18 D7F86431 	 ldr r3,[r7,#356]
 1254 0c1c 1A1D     	 adds r2,r3,#4
 1255 0c1e C7F86421 	 str r2,[r7,#356]
 1256 0c22 D7F83421 	 ldr r2,[r7,#308]
 1257 0c26 1A60     	 str r2,[r3]
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     in = *pOut << 1;
 1258              	 .loc 1 304 0
 1259 0c28 D7F86431 	 ldr r3,[r7,#356]
 1260 0c2c 1B68     	 ldr r3,[r3]
 1261 0c2e 5B00     	 lsls r3,r3,#1
 1262 0c30 C7F83431 	 str r3,[r7,#308]
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = in;
 1263              	 .loc 1 305 0
 1264 0c34 D7F86431 	 ldr r3,[r7,#356]
 1265 0c38 1A1D     	 adds r2,r3,#4
 1266 0c3a C7F86421 	 str r2,[r7,#356]
 1267 0c3e D7F83421 	 ldr r2,[r7,#308]
 1268 0c42 1A60     	 str r2,[r3]
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Decrement the loop counter */
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     blkCnt--;
 1269              	 .loc 1 308 0
 1270 0c44 D7F85831 	 ldr r3,[r7,#344]
 1271 0c48 013B     	 subs r3,r3,#1
 1272 0c4a C7F85831 	 str r3,[r7,#344]
 1273              	.L34:
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 1274              	 .loc 1 296 0
 1275 0c4e D7F85831 	 ldr r3,[r7,#344]
 1276 0c52 002B     	 cmp r3,#0
 1277 0c54 BED1     	 bne .L35
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* If the blockSize is not a multiple of 4,
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****    * process the remaining output samples */
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   blkCnt = blockSize % 0x4u;
 1278              	 .loc 1 313 0
 1279 0c56 D7F89031 	 ldr r3,[r7,#400]
 1280 0c5a 03F00303 	 and r3,r3,#3
 1281 0c5e C7F85831 	 str r3,[r7,#344]
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   while (blkCnt > 0u)
 1282              	 .loc 1 315 0
 1283 0c62 12E0     	 b .L36
 1284              	.L37:
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     in = *pOut << 1;
 1285              	 .loc 1 317 0
 1286 0c64 D7F86431 	 ldr r3,[r7,#356]
 1287 0c68 1B68     	 ldr r3,[r3]
 1288 0c6a 5B00     	 lsls r3,r3,#1
 1289 0c6c C7F83431 	 str r3,[r7,#308]
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = in;
 1290              	 .loc 1 318 0
 1291 0c70 D7F86431 	 ldr r3,[r7,#356]
 1292 0c74 1A1D     	 adds r2,r3,#4
 1293 0c76 C7F86421 	 str r2,[r7,#356]
 1294 0c7a D7F83421 	 ldr r2,[r7,#308]
 1295 0c7e 1A60     	 str r2,[r3]
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Decrement the loop counter */
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     blkCnt--;
 1296              	 .loc 1 321 0
 1297 0c80 D7F85831 	 ldr r3,[r7,#344]
 1298 0c84 013B     	 subs r3,r3,#1
 1299 0c86 C7F85831 	 str r3,[r7,#344]
 1300              	.L36:
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 1301              	 .loc 1 315 0
 1302 0c8a D7F85831 	 ldr r3,[r7,#344]
 1303 0c8e 002B     	 cmp r3,#0
 1304 0c90 E8D1     	 bne .L37
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** #else
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Run the below code for Cortex-M0 */
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   blkCnt = blockSize;
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   while (blkCnt > 0u)
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Perform Multiplications and store in the destination buffer */
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = (q31_t) (((q63_t) * px++ * coeff) >> 32);
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Decrement the loop counter */
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     blkCnt--;
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Load the coefficient value and
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****    * increment the coefficient buffer for the next set of state values */
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   coeff = *pCoeffs++;
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Read Index, from where the state buffer should be read, is calculated. */
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   readIndex = (int32_t) (S->stateIndex - blockSize) - *pTapDelay++;
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Wraparound of readIndex */
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   if (readIndex < 0)
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     readIndex += (int32_t) delaySize;
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Loop over the number of taps. */
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   tapCnt = (uint32_t) numTaps - 2u;
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   while (tapCnt > 0u)
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Working pointer for state buffer is updated */
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     py = pState;
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* blockSize samples are read from the state buffer */
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****                          (int32_t *) pb, (int32_t *) pb, blockSize, 1,
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****                          blockSize);
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Working pointer for the scratch buffer of state values */
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     px = pb;
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Working pointer for scratch buffer of output values */
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     pOut = pDst;
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     blkCnt = blockSize;
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     while (blkCnt > 0u)
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     {
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       /* Perform Multiply-Accumulate */
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out = *pOut;
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       out += ((q63_t) * px++ * coeff) >> 32;
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       *pOut++ = (q31_t) (out);
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       /* Decrement the loop counter */
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       blkCnt--;
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     }
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Load the coefficient value and
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****      * increment the coefficient buffer for the next set of state values */
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     coeff = *pCoeffs++;
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Read Index, from where the state buffer should be read, is calculated. */
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     readIndex = (int32_t) (S->stateIndex - blockSize) - *pTapDelay++;
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Wraparound of readIndex */
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     if (readIndex < 0)
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     {
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****       readIndex += (int32_t) delaySize;
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     }
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Decrement the tap loop counter */
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     tapCnt--;
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* Compute last tap without the final read of pTapDelay */
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* Working pointer for state buffer is updated */
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	py = pState;
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* blockSize samples are read from the state buffer */
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	arm_circularRead_f32((int32_t *) py, delaySize, &readIndex, 1,
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 											 (int32_t *) pb, (int32_t *) pb, blockSize, 1,
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 											 blockSize);
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* Working pointer for the scratch buffer of state values */
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	px = pb;
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	/* Working pointer for scratch buffer of output values */
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	pOut = pDst;
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	blkCnt = blockSize;
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	while (blkCnt > 0u)
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	{
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		/* Perform Multiply-Accumulate */
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out = *pOut;
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		out += ((q63_t) * px++ * coeff) >> 32;
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		*pOut++ = (q31_t) (out);
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		/* Decrement the loop counter */
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 		blkCnt--;
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 	}
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Working output pointer is updated */
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   pOut = pDst;
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   /* Output is converted into 1.31 format. */
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   blkCnt = blockSize;
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   while (blkCnt > 0u)
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   {
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     in = *pOut << 1;
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     *pOut++ = in;
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     /* Decrement the loop counter */
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****     blkCnt--;
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c ****   }
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** #endif /*   #if defined (ARM_MATH_DSP) */
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** 
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q31.c **** }
 1305              	 .loc 1 446 0
 1306 0c92 07F5B877 	 add r7,r7,#368
 1307              	.LCFI3:
 1308              	 .cfi_def_cfa_offset 32
 1309 0c96 BD46     	 mov sp,r7
 1310              	.LCFI4:
 1311              	 .cfi_def_cfa_register 13
 1312              	 
 1313 0c98 BDE8F00F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp}
 1314              	.LCFI5:
 1315              	 .cfi_restore 11
 1316              	 .cfi_restore 10
 1317              	 .cfi_restore 9
 1318              	 .cfi_restore 8
 1319              	 .cfi_restore 7
 1320              	 .cfi_restore 6
 1321              	 .cfi_restore 5
 1322              	 .cfi_restore 4
 1323              	 .cfi_def_cfa_offset 0
 1324 0c9c 7047     	 bx lr
 1325              	 .cfi_endproc
 1326              	.LFE135:
 1328 0c9e 00BF     	 .text
 1329              	.Letext0:
 1330              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1331              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fir_sparse_q31.c
    {standard input}:20     .text.arm_fir_sparse_q31:00000000 $t
    {standard input}:25     .text.arm_fir_sparse_q31:00000000 arm_fir_sparse_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
