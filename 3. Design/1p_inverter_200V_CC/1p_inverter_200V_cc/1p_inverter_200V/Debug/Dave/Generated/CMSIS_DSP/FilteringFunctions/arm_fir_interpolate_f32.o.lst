   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_fir_interpolate_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_fir_interpolate_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_fir_interpolate_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_fir_interpolate_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Title:        arm_fir_interpolate_f32.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Description:  Floating-point FIR interpolation sequences
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @defgroup FIR_Interpolate Finite Impulse Response (FIR) Interpolator
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * These functions combine an upsampler (zero stuffer) and an FIR filter.
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * They are used in multirate systems for increasing the sample rate of a signal without introducin
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Conceptually, the functions are equivalent to the block diagram below:
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \image html FIRInterpolator.gif "Components included in the FIR Interpolator functions"
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * After upsampling by a factor of <code>L</code>, the signal should be filtered by a lowpass filte
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * cutoff frequency of <code>1/L</code> in order to eliminate high frequency copies of the spectrum
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The user of the function is responsible for providing the filter coefficients.
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The FIR interpolator functions provided in the CMSIS DSP Library combine the upsampler and FIR f
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The upsampler inserts <code>L-1</code> zeros between each sample.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Instead of multiplying by these zero values, the FIR filter is designed to skip them.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * This leads to an efficient implementation without any wasted effort.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The functions operate on blocks of input and output data.
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pSrc</code> points to an array of <code>blockSize</code> input values and
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pDst</code> points to an array of <code>blockSize*L</code> output values.
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The library provides separate functions for Q15, Q31, and floating-point data types.
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par Algorithm:
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The functions use a polyphase filter structure:
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <pre>
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    y[n] = b[0] * x[n] + b[L]   * x[n-1] + ... + b[L*(phaseLength-1)] * x[n-phaseLength+1]
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    y[n+1] = b[1] * x[n] + b[L+1] * x[n-1] + ... + b[L*(phaseLength-1)+1] * x[n-phaseLength+1]
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    ...
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    y[n+(L-1)] = b[L-1] * x[n] + b[2*L-1] * x[n-1] + ....+ b[L*(phaseLength-1)+(L-1)] * x[n-phase
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * </pre>
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * This approach is more efficient than straightforward upsample-then-filter algorithms.
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * With this method the computation is reduced by a factor of <code>1/L</code> when compared to usi
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pCoeffs</code> points to a coefficient array of size <code>numTaps</code>.
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>numTaps</code> must be a multiple of the interpolation factor <code>L</code> and this is c
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * initialization functions.
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Internally, the function divides the FIR filter's impulse response into shorter filters of lengt
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>phaseLength=numTaps/L</code>.
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Coefficients are stored in time reversed order.
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <pre>
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    {b[numTaps-1], b[numTaps-2], b[N-2], ..., b[1], b[0]}
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * </pre>
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pState</code> points to a state array of size <code>blockSize + phaseLength - 1</code>.
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Samples in the state buffer are stored in the order:
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <pre>
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    {x[n-phaseLength+1], x[n-phaseLength], x[n-phaseLength-1], x[n-phaseLength-2]....x[0], x[1], 
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * </pre>
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The state variables are updated after each block of data is processed, the coefficients are unto
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par Instance Structure
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The coefficients and state variables for a filter are stored together in an instance data struct
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * A separate instance structure must be defined for each filter.
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Coefficient arrays may be shared among several instances while state variable array should be al
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * There are separate instance structure declarations for each of the 3 supported data types.
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par Initialization Functions
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * There is also an associated initialization function for each data type.
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The initialization function performs the following operations:
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * - Sets the values of the internal structure fields.
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * - Zeros out the values in the state buffer.
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * - Checks to make sure that the length of the filter is a multiple of the interpolation factor.
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * To do this manually without calling the init function, assign the follow subfields of the instan
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * L (interpolation factor), pCoeffs, phaseLength (numTaps / L), pState. Also set all of the values
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Use of the initialization function is optional.
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * However, if the initialization function is used, then the instance structure cannot be placed in
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * To place an instance structure into a const data section, the instance structure must be manuall
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The code below statically initializes each of the 3 different data type filter instance structur
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <pre>
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * arm_fir_interpolate_instance_f32 S = {L, phaseLength, pCoeffs, pState};
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * arm_fir_interpolate_instance_q31 S = {L, phaseLength, pCoeffs, pState};
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * arm_fir_interpolate_instance_q15 S = {L, phaseLength, pCoeffs, pState};
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * </pre>
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * where <code>L</code> is the interpolation factor; <code>phaseLength=numTaps/L</code> is the
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * length of each of the shorter FIR filters used internally,
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pCoeffs</code> is the address of the coefficient buffer;
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pState</code> is the address of the state buffer.
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Be sure to set the values in the state buffer to zeros when doing static initialization.
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par Fixed-Point Behavior
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Care must be taken when using the fixed-point versions of the FIR interpolate filter functions.
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * In particular, the overflow and saturation behavior of the accumulator used in each function mus
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Refer to the function specific documentation below for usage guidelines.
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** /**
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @addtogroup FIR_Interpolate
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @{
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** /**
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @brief Processing function for the floating-point FIR interpolator.
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @param[in] *S        points to an instance of the floating-point FIR interpolator structure.
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @param[in] *pSrc     points to the block of input data.
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @param[out] *pDst    points to the block of output data.
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @param[in] blockSize number of input samples to process per call.
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @return none.
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined (ARM_MATH_DSP)
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** void arm_fir_interpolate_f32(
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   const arm_fir_interpolate_instance_f32 * S,
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t * pSrc,
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t * pDst,
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t blockSize)
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** {
  28              	 .loc 1 141 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 9DB0     	 sub sp,sp,#116
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 120
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *pState = S->pState;                 /* State pointer */
  47              	 .loc 1 142 0
  48 000e FB68     	 ldr r3,[r7,#12]
  49 0010 9B68     	 ldr r3,[r3,#8]
  50 0012 FB66     	 str r3,[r7,#108]
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
  51              	 .loc 1 143 0
  52 0014 FB68     	 ldr r3,[r7,#12]
  53 0016 5B68     	 ldr r3,[r3,#4]
  54 0018 BB62     	 str r3,[r7,#40]
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *pStateCurnt;                        /* Points to the current sample of the state */
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *ptr1, *ptr2;                        /* Temporary pointers for state and coefficient bu
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t sum0;                                /* Accumulators */
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t x0, c0;                              /* Temporary variables to hold state and coefficie
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t i, blkCnt, j;                         /* Loop counters */
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint16_t phaseLen = S->phaseLength, tapCnt;    /* Length of each polyphase filter component */
  55              	 .loc 1 149 0
  56 001a FB68     	 ldr r3,[r7,#12]
  57 001c 5B88     	 ldrh r3,[r3,#2]
  58 001e FB84     	 strh r3,[r7,#38]
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t acc0, acc1, acc2, acc3;
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t x1, x2, x3;
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t blkCntN4;
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t c1, c2, c3;
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* S->pState buffer contains previous frame (phaseLen - 1) samples */
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* pStateCurnt points to the location where the new input data should be written */
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCurnt = S->pState + (phaseLen - 1u);
  59              	 .loc 1 157 0
  60 0020 FB68     	 ldr r3,[r7,#12]
  61 0022 9A68     	 ldr r2,[r3,#8]
  62 0024 FB8C     	 ldrh r3,[r7,#38]
  63 0026 03F18043 	 add r3,r3,#1073741824
  64 002a 013B     	 subs r3,r3,#1
  65 002c 9B00     	 lsls r3,r3,#2
  66 002e 1344     	 add r3,r3,r2
  67 0030 BB66     	 str r3,[r7,#104]
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Initialise  blkCnt */
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize / 4;
  68              	 .loc 1 160 0
  69 0032 3B68     	 ldr r3,[r7]
  70 0034 9B08     	 lsrs r3,r3,#2
  71 0036 3B65     	 str r3,[r7,#80]
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCntN4 = blockSize - (4 * blkCnt);
  72              	 .loc 1 161 0
  73 0038 3B6D     	 ldr r3,[r7,#80]
  74 003a 9B00     	 lsls r3,r3,#2
  75 003c 3A68     	 ldr r2,[r7]
  76 003e D31A     	 subs r3,r2,r3
  77 0040 FB62     	 str r3,[r7,#44]
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Samples loop unrolled by 4 */
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCnt > 0u)
  78              	 .loc 1 164 0
  79 0042 E2E1     	 b .L2
  80              	.L9:
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
  81              	 .loc 1 167 0
  82 0044 BB6E     	 ldr r3,[r7,#104]
  83 0046 1A1D     	 adds r2,r3,#4
  84 0048 BA66     	 str r2,[r7,#104]
  85 004a BA68     	 ldr r2,[r7,#8]
  86 004c 111D     	 adds r1,r2,#4
  87 004e B960     	 str r1,[r7,#8]
  88 0050 1268     	 ldr r2,[r2]
  89 0052 1A60     	 str r2,[r3]
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
  90              	 .loc 1 168 0
  91 0054 BB6E     	 ldr r3,[r7,#104]
  92 0056 1A1D     	 adds r2,r3,#4
  93 0058 BA66     	 str r2,[r7,#104]
  94 005a BA68     	 ldr r2,[r7,#8]
  95 005c 111D     	 adds r1,r2,#4
  96 005e B960     	 str r1,[r7,#8]
  97 0060 1268     	 ldr r2,[r2]
  98 0062 1A60     	 str r2,[r3]
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
  99              	 .loc 1 169 0
 100 0064 BB6E     	 ldr r3,[r7,#104]
 101 0066 1A1D     	 adds r2,r3,#4
 102 0068 BA66     	 str r2,[r7,#104]
 103 006a BA68     	 ldr r2,[r7,#8]
 104 006c 111D     	 adds r1,r2,#4
 105 006e B960     	 str r1,[r7,#8]
 106 0070 1268     	 ldr r2,[r2]
 107 0072 1A60     	 str r2,[r3]
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
 108              	 .loc 1 170 0
 109 0074 BB6E     	 ldr r3,[r7,#104]
 110 0076 1A1D     	 adds r2,r3,#4
 111 0078 BA66     	 str r2,[r7,#104]
 112 007a BA68     	 ldr r2,[r7,#8]
 113 007c 111D     	 adds r1,r2,#4
 114 007e B960     	 str r1,[r7,#8]
 115 0080 1268     	 ldr r2,[r2]
 116 0082 1A60     	 str r2,[r3]
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1u;
 117              	 .loc 1 173 0
 118 0084 0123     	 movs r3,#1
 119 0086 FB64     	 str r3,[r7,#76]
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = (S->L);
 120              	 .loc 1 176 0
 121 0088 FB68     	 ldr r3,[r7,#12]
 122 008a 1B78     	 ldrb r3,[r3]
 123 008c 7B65     	 str r3,[r7,#84]
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0u)
 124              	 .loc 1 178 0
 125 008e A7E1     	 b .L3
 126              	.L8:
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc0 = 0.0f;
 127              	 .loc 1 181 0
 128 0090 4FF00003 	 mov r3,#0
 129 0094 7B64     	 str r3,[r7,#68]
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc1 = 0.0f;
 130              	 .loc 1 182 0
 131 0096 4FF00003 	 mov r3,#0
 132 009a 3B64     	 str r3,[r7,#64]
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc2 = 0.0f;
 133              	 .loc 1 183 0
 134 009c 4FF00003 	 mov r3,#0
 135 00a0 FB63     	 str r3,[r7,#60]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc3 = 0.0f;
 136              	 .loc 1 184 0
 137 00a2 4FF00003 	 mov r3,#0
 138 00a6 BB63     	 str r3,[r7,#56]
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 139              	 .loc 1 187 0
 140 00a8 FB6E     	 ldr r3,[r7,#108]
 141 00aa 7B66     	 str r3,[r7,#100]
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 142              	 .loc 1 190 0
 143 00ac FB68     	 ldr r3,[r7,#12]
 144 00ae 1B78     	 ldrb r3,[r3]
 145 00b0 1A46     	 mov r2,r3
 146 00b2 FB6C     	 ldr r3,[r7,#76]
 147 00b4 D31A     	 subs r3,r2,r3
 148 00b6 9B00     	 lsls r3,r3,#2
 149 00b8 BA6A     	 ldr r2,[r7,#40]
 150 00ba 1344     	 add r3,r3,r2
 151 00bc 3B66     	 str r3,[r7,#96]
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length. Unroll by a factor of 4.
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****        ** Repeat until we've computed numTaps-(4*S->L) coefficients. */
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2u;
 152              	 .loc 1 194 0
 153 00be FB8C     	 ldrh r3,[r7,#38]
 154 00c0 9B08     	 lsrs r3,r3,#2
 155 00c2 A7F84A30 	 strh r3,[r7,#74]
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       x0 = *(ptr1++);
 156              	 .loc 1 196 0
 157 00c6 7B6E     	 ldr r3,[r7,#100]
 158 00c8 1A1D     	 adds r2,r3,#4
 159 00ca 7A66     	 str r2,[r7,#100]
 160 00cc 1B68     	 ldr r3,[r3]
 161 00ce BB65     	 str r3,[r7,#88]
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       x1 = *(ptr1++);
 162              	 .loc 1 197 0
 163 00d0 7B6E     	 ldr r3,[r7,#100]
 164 00d2 1A1D     	 adds r2,r3,#4
 165 00d4 7A66     	 str r2,[r7,#100]
 166 00d6 1B68     	 ldr r3,[r3]
 167 00d8 7B63     	 str r3,[r7,#52]
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       x2 = *(ptr1++);
 168              	 .loc 1 198 0
 169 00da 7B6E     	 ldr r3,[r7,#100]
 170 00dc 1A1D     	 adds r2,r3,#4
 171 00de 7A66     	 str r2,[r7,#100]
 172 00e0 1B68     	 ldr r3,[r3]
 173 00e2 3B63     	 str r3,[r7,#48]
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0u)
 174              	 .loc 1 200 0
 175 00e4 FDE0     	 b .L4
 176              	.L5:
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x3 = *(ptr1++);
 177              	 .loc 1 204 0
 178 00e6 7B6E     	 ldr r3,[r7,#100]
 179 00e8 1A1D     	 adds r2,r3,#4
 180 00ea 7A66     	 str r2,[r7,#100]
 181 00ec 1B68     	 ldr r3,[r3]
 182 00ee 3B62     	 str r3,[r7,#32]
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 183              	 .loc 1 207 0
 184 00f0 3B6E     	 ldr r3,[r7,#96]
 185 00f2 1B68     	 ldr r3,[r3]
 186 00f4 FB61     	 str r3,[r7,#28]
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x0 * c0;
 187              	 .loc 1 210 0
 188 00f6 97ED167A 	 flds s14,[r7,#88]
 189 00fa D7ED077A 	 flds s15,[r7,#28]
 190 00fe 67EE277A 	 fmuls s15,s14,s15
 191 0102 97ED117A 	 flds s14,[r7,#68]
 192 0106 77EE277A 	 fadds s15,s14,s15
 193 010a C7ED117A 	 fsts s15,[r7,#68]
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x1 * c0;
 194              	 .loc 1 211 0
 195 010e 97ED0D7A 	 flds s14,[r7,#52]
 196 0112 D7ED077A 	 flds s15,[r7,#28]
 197 0116 67EE277A 	 fmuls s15,s14,s15
 198 011a 97ED107A 	 flds s14,[r7,#64]
 199 011e 77EE277A 	 fadds s15,s14,s15
 200 0122 C7ED107A 	 fsts s15,[r7,#64]
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x2 * c0;
 201              	 .loc 1 212 0
 202 0126 97ED0C7A 	 flds s14,[r7,#48]
 203 012a D7ED077A 	 flds s15,[r7,#28]
 204 012e 67EE277A 	 fmuls s15,s14,s15
 205 0132 97ED0F7A 	 flds s14,[r7,#60]
 206 0136 77EE277A 	 fadds s15,s14,s15
 207 013a C7ED0F7A 	 fsts s15,[r7,#60]
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x3 * c0;
 208              	 .loc 1 213 0
 209 013e 97ED087A 	 flds s14,[r7,#32]
 210 0142 D7ED077A 	 flds s15,[r7,#28]
 211 0146 67EE277A 	 fmuls s15,s14,s15
 212 014a 97ED0E7A 	 flds s14,[r7,#56]
 213 014e 77EE277A 	 fadds s15,s14,s15
 214 0152 C7ED0E7A 	 fsts s15,[r7,#56]
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c1 = *(ptr2 + S->L);
 215              	 .loc 1 216 0
 216 0156 FB68     	 ldr r3,[r7,#12]
 217 0158 1B78     	 ldrb r3,[r3]
 218 015a 9B00     	 lsls r3,r3,#2
 219 015c 3A6E     	 ldr r2,[r7,#96]
 220 015e 1344     	 add r3,r3,r2
 221 0160 1B68     	 ldr r3,[r3]
 222 0162 BB61     	 str r3,[r7,#24]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 223              	 .loc 1 219 0
 224 0164 7B6E     	 ldr r3,[r7,#100]
 225 0166 1A1D     	 adds r2,r3,#4
 226 0168 7A66     	 str r2,[r7,#100]
 227 016a 1B68     	 ldr r3,[r3]
 228 016c BB65     	 str r3,[r7,#88]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x1 * c1;
 229              	 .loc 1 222 0
 230 016e 97ED0D7A 	 flds s14,[r7,#52]
 231 0172 D7ED067A 	 flds s15,[r7,#24]
 232 0176 67EE277A 	 fmuls s15,s14,s15
 233 017a 97ED117A 	 flds s14,[r7,#68]
 234 017e 77EE277A 	 fadds s15,s14,s15
 235 0182 C7ED117A 	 fsts s15,[r7,#68]
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x2 * c1;
 236              	 .loc 1 223 0
 237 0186 97ED0C7A 	 flds s14,[r7,#48]
 238 018a D7ED067A 	 flds s15,[r7,#24]
 239 018e 67EE277A 	 fmuls s15,s14,s15
 240 0192 97ED107A 	 flds s14,[r7,#64]
 241 0196 77EE277A 	 fadds s15,s14,s15
 242 019a C7ED107A 	 fsts s15,[r7,#64]
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x3 * c1;
 243              	 .loc 1 224 0
 244 019e 97ED087A 	 flds s14,[r7,#32]
 245 01a2 D7ED067A 	 flds s15,[r7,#24]
 246 01a6 67EE277A 	 fmuls s15,s14,s15
 247 01aa 97ED0F7A 	 flds s14,[r7,#60]
 248 01ae 77EE277A 	 fadds s15,s14,s15
 249 01b2 C7ED0F7A 	 fsts s15,[r7,#60]
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x0 * c1;
 250              	 .loc 1 225 0
 251 01b6 97ED167A 	 flds s14,[r7,#88]
 252 01ba D7ED067A 	 flds s15,[r7,#24]
 253 01be 67EE277A 	 fmuls s15,s14,s15
 254 01c2 97ED0E7A 	 flds s14,[r7,#56]
 255 01c6 77EE277A 	 fadds s15,s14,s15
 256 01ca C7ED0E7A 	 fsts s15,[r7,#56]
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c2 = *(ptr2 + S->L * 2);
 257              	 .loc 1 228 0
 258 01ce FB68     	 ldr r3,[r7,#12]
 259 01d0 1B78     	 ldrb r3,[r3]
 260 01d2 DB00     	 lsls r3,r3,#3
 261 01d4 1A46     	 mov r2,r3
 262 01d6 3B6E     	 ldr r3,[r7,#96]
 263 01d8 1344     	 add r3,r3,r2
 264 01da 1B68     	 ldr r3,[r3]
 265 01dc 7B61     	 str r3,[r7,#20]
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1 = *(ptr1++);
 266              	 .loc 1 231 0
 267 01de 7B6E     	 ldr r3,[r7,#100]
 268 01e0 1A1D     	 adds r2,r3,#4
 269 01e2 7A66     	 str r2,[r7,#100]
 270 01e4 1B68     	 ldr r3,[r3]
 271 01e6 7B63     	 str r3,[r7,#52]
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x2 * c2;
 272              	 .loc 1 234 0
 273 01e8 97ED0C7A 	 flds s14,[r7,#48]
 274 01ec D7ED057A 	 flds s15,[r7,#20]
 275 01f0 67EE277A 	 fmuls s15,s14,s15
 276 01f4 97ED117A 	 flds s14,[r7,#68]
 277 01f8 77EE277A 	 fadds s15,s14,s15
 278 01fc C7ED117A 	 fsts s15,[r7,#68]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x3 * c2;
 279              	 .loc 1 235 0
 280 0200 97ED087A 	 flds s14,[r7,#32]
 281 0204 D7ED057A 	 flds s15,[r7,#20]
 282 0208 67EE277A 	 fmuls s15,s14,s15
 283 020c 97ED107A 	 flds s14,[r7,#64]
 284 0210 77EE277A 	 fadds s15,s14,s15
 285 0214 C7ED107A 	 fsts s15,[r7,#64]
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x0 * c2;
 286              	 .loc 1 236 0
 287 0218 97ED167A 	 flds s14,[r7,#88]
 288 021c D7ED057A 	 flds s15,[r7,#20]
 289 0220 67EE277A 	 fmuls s15,s14,s15
 290 0224 97ED0F7A 	 flds s14,[r7,#60]
 291 0228 77EE277A 	 fadds s15,s14,s15
 292 022c C7ED0F7A 	 fsts s15,[r7,#60]
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x1 * c2;
 293              	 .loc 1 237 0
 294 0230 97ED0D7A 	 flds s14,[r7,#52]
 295 0234 D7ED057A 	 flds s15,[r7,#20]
 296 0238 67EE277A 	 fmuls s15,s14,s15
 297 023c 97ED0E7A 	 flds s14,[r7,#56]
 298 0240 77EE277A 	 fadds s15,s14,s15
 299 0244 C7ED0E7A 	 fsts s15,[r7,#56]
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c3 = *(ptr2 + S->L * 3);
 300              	 .loc 1 240 0
 301 0248 FB68     	 ldr r3,[r7,#12]
 302 024a 1B78     	 ldrb r3,[r3]
 303 024c 1A46     	 mov r2,r3
 304 024e 1346     	 mov r3,r2
 305 0250 5B00     	 lsls r3,r3,#1
 306 0252 1344     	 add r3,r3,r2
 307 0254 9B00     	 lsls r3,r3,#2
 308 0256 1A46     	 mov r2,r3
 309 0258 3B6E     	 ldr r3,[r7,#96]
 310 025a 1344     	 add r3,r3,r2
 311 025c 1B68     	 ldr r3,[r3]
 312 025e 3B61     	 str r3,[r7,#16]
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x2 = *(ptr1++);
 313              	 .loc 1 243 0
 314 0260 7B6E     	 ldr r3,[r7,#100]
 315 0262 1A1D     	 adds r2,r3,#4
 316 0264 7A66     	 str r2,[r7,#100]
 317 0266 1B68     	 ldr r3,[r3]
 318 0268 3B63     	 str r3,[r7,#48]
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x3 * c3;
 319              	 .loc 1 246 0
 320 026a 97ED087A 	 flds s14,[r7,#32]
 321 026e D7ED047A 	 flds s15,[r7,#16]
 322 0272 67EE277A 	 fmuls s15,s14,s15
 323 0276 97ED117A 	 flds s14,[r7,#68]
 324 027a 77EE277A 	 fadds s15,s14,s15
 325 027e C7ED117A 	 fsts s15,[r7,#68]
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x0 * c3;
 326              	 .loc 1 247 0
 327 0282 97ED167A 	 flds s14,[r7,#88]
 328 0286 D7ED047A 	 flds s15,[r7,#16]
 329 028a 67EE277A 	 fmuls s15,s14,s15
 330 028e 97ED107A 	 flds s14,[r7,#64]
 331 0292 77EE277A 	 fadds s15,s14,s15
 332 0296 C7ED107A 	 fsts s15,[r7,#64]
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x1 * c3;
 333              	 .loc 1 248 0
 334 029a 97ED0D7A 	 flds s14,[r7,#52]
 335 029e D7ED047A 	 flds s15,[r7,#16]
 336 02a2 67EE277A 	 fmuls s15,s14,s15
 337 02a6 97ED0F7A 	 flds s14,[r7,#60]
 338 02aa 77EE277A 	 fadds s15,s14,s15
 339 02ae C7ED0F7A 	 fsts s15,[r7,#60]
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x2 * c3;
 340              	 .loc 1 249 0
 341 02b2 97ED0C7A 	 flds s14,[r7,#48]
 342 02b6 D7ED047A 	 flds s15,[r7,#16]
 343 02ba 67EE277A 	 fmuls s15,s14,s15
 344 02be 97ED0E7A 	 flds s14,[r7,#56]
 345 02c2 77EE277A 	 fadds s15,s14,s15
 346 02c6 C7ED0E7A 	 fsts s15,[r7,#56]
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += 4 * S->L;
 347              	 .loc 1 255 0
 348 02ca FB68     	 ldr r3,[r7,#12]
 349 02cc 1B78     	 ldrb r3,[r3]
 350 02ce 1B01     	 lsls r3,r3,#4
 351 02d0 1A46     	 mov r2,r3
 352 02d2 3B6E     	 ldr r3,[r7,#96]
 353 02d4 1344     	 add r3,r3,r2
 354 02d6 3B66     	 str r3,[r7,#96]
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 355              	 .loc 1 258 0
 356 02d8 B7F84A30 	 ldrh r3,[r7,#74]
 357 02dc 013B     	 subs r3,r3,#1
 358 02de A7F84A30 	 strh r3,[r7,#74]
 359              	.L4:
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 360              	 .loc 1 200 0
 361 02e2 B7F84A30 	 ldrh r3,[r7,#74]
 362 02e6 002B     	 cmp r3,#0
 363 02e8 7FF4FDAE 	 bne .L5
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* If the polyPhase length is not a multiple of 4, compute the remaining filter taps */
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4u;
 364              	 .loc 1 262 0
 365 02ec FB8C     	 ldrh r3,[r7,#38]
 366 02ee 03F00303 	 and r3,r3,#3
 367 02f2 A7F84A30 	 strh r3,[r7,#74]
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0u)
 368              	 .loc 1 264 0
 369 02f6 48E0     	 b .L6
 370              	.L7:
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x3 = *(ptr1++);
 371              	 .loc 1 268 0
 372 02f8 7B6E     	 ldr r3,[r7,#100]
 373 02fa 1A1D     	 adds r2,r3,#4
 374 02fc 7A66     	 str r2,[r7,#100]
 375 02fe 1B68     	 ldr r3,[r3]
 376 0300 3B62     	 str r3,[r7,#32]
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 377              	 .loc 1 271 0
 378 0302 3B6E     	 ldr r3,[r7,#96]
 379 0304 1B68     	 ldr r3,[r3]
 380 0306 FB61     	 str r3,[r7,#28]
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x0 * c0;
 381              	 .loc 1 274 0
 382 0308 97ED167A 	 flds s14,[r7,#88]
 383 030c D7ED077A 	 flds s15,[r7,#28]
 384 0310 67EE277A 	 fmuls s15,s14,s15
 385 0314 97ED117A 	 flds s14,[r7,#68]
 386 0318 77EE277A 	 fadds s15,s14,s15
 387 031c C7ED117A 	 fsts s15,[r7,#68]
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x1 * c0;
 388              	 .loc 1 275 0
 389 0320 97ED0D7A 	 flds s14,[r7,#52]
 390 0324 D7ED077A 	 flds s15,[r7,#28]
 391 0328 67EE277A 	 fmuls s15,s14,s15
 392 032c 97ED107A 	 flds s14,[r7,#64]
 393 0330 77EE277A 	 fadds s15,s14,s15
 394 0334 C7ED107A 	 fsts s15,[r7,#64]
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x2 * c0;
 395              	 .loc 1 276 0
 396 0338 97ED0C7A 	 flds s14,[r7,#48]
 397 033c D7ED077A 	 flds s15,[r7,#28]
 398 0340 67EE277A 	 fmuls s15,s14,s15
 399 0344 97ED0F7A 	 flds s14,[r7,#60]
 400 0348 77EE277A 	 fadds s15,s14,s15
 401 034c C7ED0F7A 	 fsts s15,[r7,#60]
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x3 * c0;
 402              	 .loc 1 277 0
 403 0350 97ED087A 	 flds s14,[r7,#32]
 404 0354 D7ED077A 	 flds s15,[r7,#28]
 405 0358 67EE277A 	 fmuls s15,s14,s15
 406 035c 97ED0E7A 	 flds s14,[r7,#56]
 407 0360 77EE277A 	 fadds s15,s14,s15
 408 0364 C7ED0E7A 	 fsts s15,[r7,#56]
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 409              	 .loc 1 280 0
 410 0368 FB68     	 ldr r3,[r7,#12]
 411 036a 1B78     	 ldrb r3,[r3]
 412 036c 9B00     	 lsls r3,r3,#2
 413 036e 3A6E     	 ldr r2,[r7,#96]
 414 0370 1344     	 add r3,r3,r2
 415 0372 3B66     	 str r3,[r7,#96]
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* update states for next sample processing */
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = x1;
 416              	 .loc 1 283 0
 417 0374 7B6B     	 ldr r3,[r7,#52]
 418 0376 BB65     	 str r3,[r7,#88]
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1 = x2;
 419              	 .loc 1 284 0
 420 0378 3B6B     	 ldr r3,[r7,#48]
 421 037a 7B63     	 str r3,[r7,#52]
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x2 = x3;
 422              	 .loc 1 285 0
 423 037c 3B6A     	 ldr r3,[r7,#32]
 424 037e 3B63     	 str r3,[r7,#48]
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 425              	 .loc 1 288 0
 426 0380 B7F84A30 	 ldrh r3,[r7,#74]
 427 0384 013B     	 subs r3,r3,#1
 428 0386 A7F84A30 	 strh r3,[r7,#74]
 429              	.L6:
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 430              	 .loc 1 264 0
 431 038a B7F84A30 	 ldrh r3,[r7,#74]
 432 038e 002B     	 cmp r3,#0
 433 0390 B2D1     	 bne .L7
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst = acc0;
 434              	 .loc 1 292 0
 435 0392 7B68     	 ldr r3,[r7,#4]
 436 0394 7A6C     	 ldr r2,[r7,#68]
 437 0396 1A60     	 str r2,[r3]
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + S->L) = acc1;
 438              	 .loc 1 293 0
 439 0398 FB68     	 ldr r3,[r7,#12]
 440 039a 1B78     	 ldrb r3,[r3]
 441 039c 9B00     	 lsls r3,r3,#2
 442 039e 7A68     	 ldr r2,[r7,#4]
 443 03a0 1344     	 add r3,r3,r2
 444 03a2 3A6C     	 ldr r2,[r7,#64]
 445 03a4 1A60     	 str r2,[r3]
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 2 * S->L) = acc2;
 446              	 .loc 1 294 0
 447 03a6 FB68     	 ldr r3,[r7,#12]
 448 03a8 1B78     	 ldrb r3,[r3]
 449 03aa DB00     	 lsls r3,r3,#3
 450 03ac 1A46     	 mov r2,r3
 451 03ae 7B68     	 ldr r3,[r7,#4]
 452 03b0 1344     	 add r3,r3,r2
 453 03b2 FA6B     	 ldr r2,[r7,#60]
 454 03b4 1A60     	 str r2,[r3]
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 3 * S->L) = acc3;
 455              	 .loc 1 295 0
 456 03b6 FB68     	 ldr r3,[r7,#12]
 457 03b8 1B78     	 ldrb r3,[r3]
 458 03ba 1A46     	 mov r2,r3
 459 03bc 1346     	 mov r3,r2
 460 03be 5B00     	 lsls r3,r3,#1
 461 03c0 1344     	 add r3,r3,r2
 462 03c2 9B00     	 lsls r3,r3,#2
 463 03c4 1A46     	 mov r2,r3
 464 03c6 7B68     	 ldr r3,[r7,#4]
 465 03c8 1344     	 add r3,r3,r2
 466 03ca BA6B     	 ldr r2,[r7,#56]
 467 03cc 1A60     	 str r2,[r3]
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       pDst++;
 468              	 .loc 1 297 0
 469 03ce 7B68     	 ldr r3,[r7,#4]
 470 03d0 0433     	 adds r3,r3,#4
 471 03d2 7B60     	 str r3,[r7,#4]
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 472              	 .loc 1 300 0
 473 03d4 FB6C     	 ldr r3,[r7,#76]
 474 03d6 0133     	 adds r3,r3,#1
 475 03d8 FB64     	 str r3,[r7,#76]
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement the loop counter */
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 476              	 .loc 1 303 0
 477 03da 7B6D     	 ldr r3,[r7,#84]
 478 03dc 013B     	 subs r3,r3,#1
 479 03de 7B65     	 str r3,[r7,#84]
 480              	.L3:
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 481              	 .loc 1 178 0
 482 03e0 7B6D     	 ldr r3,[r7,#84]
 483 03e2 002B     	 cmp r3,#0
 484 03e4 7FF454AE 	 bne .L8
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 4;
 485              	 .loc 1 308 0
 486 03e8 FB6E     	 ldr r3,[r7,#108]
 487 03ea 1033     	 adds r3,r3,#16
 488 03ec FB66     	 str r3,[r7,#108]
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     pDst += S->L * 3;
 489              	 .loc 1 310 0
 490 03ee FB68     	 ldr r3,[r7,#12]
 491 03f0 1B78     	 ldrb r3,[r3]
 492 03f2 1A46     	 mov r2,r3
 493 03f4 1346     	 mov r3,r2
 494 03f6 5B00     	 lsls r3,r3,#1
 495 03f8 1344     	 add r3,r3,r2
 496 03fa 9B00     	 lsls r3,r3,#2
 497 03fc 1A46     	 mov r2,r3
 498 03fe 7B68     	 ldr r3,[r7,#4]
 499 0400 1344     	 add r3,r3,r2
 500 0402 7B60     	 str r3,[r7,#4]
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt--;
 501              	 .loc 1 313 0
 502 0404 3B6D     	 ldr r3,[r7,#80]
 503 0406 013B     	 subs r3,r3,#1
 504 0408 3B65     	 str r3,[r7,#80]
 505              	.L2:
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 506              	 .loc 1 164 0
 507 040a 3B6D     	 ldr r3,[r7,#80]
 508 040c 002B     	 cmp r3,#0
 509 040e 7FF419AE 	 bne .L9
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** No loop unrolling is used. */
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCntN4 > 0u)
 510              	 .loc 1 319 0
 511 0412 CBE0     	 b .L10
 512              	.L17:
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
 513              	 .loc 1 322 0
 514 0414 BB6E     	 ldr r3,[r7,#104]
 515 0416 1A1D     	 adds r2,r3,#4
 516 0418 BA66     	 str r2,[r7,#104]
 517 041a BA68     	 ldr r2,[r7,#8]
 518 041c 111D     	 adds r1,r2,#4
 519 041e B960     	 str r1,[r7,#8]
 520 0420 1268     	 ldr r2,[r2]
 521 0422 1A60     	 str r2,[r3]
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1u;
 522              	 .loc 1 325 0
 523 0424 0123     	 movs r3,#1
 524 0426 FB64     	 str r3,[r7,#76]
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = S->L;
 525              	 .loc 1 328 0
 526 0428 FB68     	 ldr r3,[r7,#12]
 527 042a 1B78     	 ldrb r3,[r3]
 528 042c 7B65     	 str r3,[r7,#84]
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0u)
 529              	 .loc 1 329 0
 530 042e B3E0     	 b .L11
 531              	.L16:
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       sum0 = 0.0f;
 532              	 .loc 1 332 0
 533 0430 4FF00003 	 mov r3,#0
 534 0434 FB65     	 str r3,[r7,#92]
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 535              	 .loc 1 335 0
 536 0436 FB6E     	 ldr r3,[r7,#108]
 537 0438 7B66     	 str r3,[r7,#100]
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 538              	 .loc 1 338 0
 539 043a FB68     	 ldr r3,[r7,#12]
 540 043c 1B78     	 ldrb r3,[r3]
 541 043e 1A46     	 mov r2,r3
 542 0440 FB6C     	 ldr r3,[r7,#76]
 543 0442 D31A     	 subs r3,r2,r3
 544 0444 9B00     	 lsls r3,r3,#2
 545 0446 BA6A     	 ldr r2,[r7,#40]
 546 0448 1344     	 add r3,r3,r2
 547 044a 3B66     	 str r3,[r7,#96]
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length. Unroll by a factor of 4.
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****        ** Repeat until we've computed numTaps-(4*S->L) coefficients. */
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2u;
 548              	 .loc 1 342 0
 549 044c FB8C     	 ldrh r3,[r7,#38]
 550 044e 9B08     	 lsrs r3,r3,#2
 551 0450 A7F84A30 	 strh r3,[r7,#74]
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0u)
 552              	 .loc 1 343 0
 553 0454 6CE0     	 b .L12
 554              	.L13:
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 555              	 .loc 1 347 0
 556 0456 3B6E     	 ldr r3,[r7,#96]
 557 0458 1B68     	 ldr r3,[r3]
 558 045a FB61     	 str r3,[r7,#28]
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 559              	 .loc 1 352 0
 560 045c FB68     	 ldr r3,[r7,#12]
 561 045e 1B78     	 ldrb r3,[r3]
 562 0460 9B00     	 lsls r3,r3,#2
 563 0462 3A6E     	 ldr r2,[r7,#96]
 564 0464 1344     	 add r3,r3,r2
 565 0466 3B66     	 str r3,[r7,#96]
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 566              	 .loc 1 355 0
 567 0468 7B6E     	 ldr r3,[r7,#100]
 568 046a 1A1D     	 adds r2,r3,#4
 569 046c 7A66     	 str r2,[r7,#100]
 570 046e 1B68     	 ldr r3,[r3]
 571 0470 BB65     	 str r3,[r7,#88]
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += x0 * c0;
 572              	 .loc 1 358 0
 573 0472 97ED167A 	 flds s14,[r7,#88]
 574 0476 D7ED077A 	 flds s15,[r7,#28]
 575 047a 67EE277A 	 fmuls s15,s14,s15
 576 047e 97ED177A 	 flds s14,[r7,#92]
 577 0482 77EE277A 	 fadds s15,s14,s15
 578 0486 C7ED177A 	 fsts s15,[r7,#92]
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 579              	 .loc 1 361 0
 580 048a 3B6E     	 ldr r3,[r7,#96]
 581 048c 1B68     	 ldr r3,[r3]
 582 048e FB61     	 str r3,[r7,#28]
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 583              	 .loc 1 364 0
 584 0490 FB68     	 ldr r3,[r7,#12]
 585 0492 1B78     	 ldrb r3,[r3]
 586 0494 9B00     	 lsls r3,r3,#2
 587 0496 3A6E     	 ldr r2,[r7,#96]
 588 0498 1344     	 add r3,r3,r2
 589 049a 3B66     	 str r3,[r7,#96]
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 590              	 .loc 1 367 0
 591 049c 7B6E     	 ldr r3,[r7,#100]
 592 049e 1A1D     	 adds r2,r3,#4
 593 04a0 7A66     	 str r2,[r7,#100]
 594 04a2 1B68     	 ldr r3,[r3]
 595 04a4 BB65     	 str r3,[r7,#88]
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += x0 * c0;
 596              	 .loc 1 370 0
 597 04a6 97ED167A 	 flds s14,[r7,#88]
 598 04aa D7ED077A 	 flds s15,[r7,#28]
 599 04ae 67EE277A 	 fmuls s15,s14,s15
 600 04b2 97ED177A 	 flds s14,[r7,#92]
 601 04b6 77EE277A 	 fadds s15,s14,s15
 602 04ba C7ED177A 	 fsts s15,[r7,#92]
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 603              	 .loc 1 373 0
 604 04be 3B6E     	 ldr r3,[r7,#96]
 605 04c0 1B68     	 ldr r3,[r3]
 606 04c2 FB61     	 str r3,[r7,#28]
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 607              	 .loc 1 376 0
 608 04c4 FB68     	 ldr r3,[r7,#12]
 609 04c6 1B78     	 ldrb r3,[r3]
 610 04c8 9B00     	 lsls r3,r3,#2
 611 04ca 3A6E     	 ldr r2,[r7,#96]
 612 04cc 1344     	 add r3,r3,r2
 613 04ce 3B66     	 str r3,[r7,#96]
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 614              	 .loc 1 379 0
 615 04d0 7B6E     	 ldr r3,[r7,#100]
 616 04d2 1A1D     	 adds r2,r3,#4
 617 04d4 7A66     	 str r2,[r7,#100]
 618 04d6 1B68     	 ldr r3,[r3]
 619 04d8 BB65     	 str r3,[r7,#88]
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += x0 * c0;
 620              	 .loc 1 382 0
 621 04da 97ED167A 	 flds s14,[r7,#88]
 622 04de D7ED077A 	 flds s15,[r7,#28]
 623 04e2 67EE277A 	 fmuls s15,s14,s15
 624 04e6 97ED177A 	 flds s14,[r7,#92]
 625 04ea 77EE277A 	 fadds s15,s14,s15
 626 04ee C7ED177A 	 fsts s15,[r7,#92]
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 627              	 .loc 1 385 0
 628 04f2 3B6E     	 ldr r3,[r7,#96]
 629 04f4 1B68     	 ldr r3,[r3]
 630 04f6 FB61     	 str r3,[r7,#28]
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 631              	 .loc 1 388 0
 632 04f8 FB68     	 ldr r3,[r7,#12]
 633 04fa 1B78     	 ldrb r3,[r3]
 634 04fc 9B00     	 lsls r3,r3,#2
 635 04fe 3A6E     	 ldr r2,[r7,#96]
 636 0500 1344     	 add r3,r3,r2
 637 0502 3B66     	 str r3,[r7,#96]
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 638              	 .loc 1 391 0
 639 0504 7B6E     	 ldr r3,[r7,#100]
 640 0506 1A1D     	 adds r2,r3,#4
 641 0508 7A66     	 str r2,[r7,#100]
 642 050a 1B68     	 ldr r3,[r3]
 643 050c BB65     	 str r3,[r7,#88]
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += x0 * c0;
 644              	 .loc 1 394 0
 645 050e 97ED167A 	 flds s14,[r7,#88]
 646 0512 D7ED077A 	 flds s15,[r7,#28]
 647 0516 67EE277A 	 fmuls s15,s14,s15
 648 051a 97ED177A 	 flds s14,[r7,#92]
 649 051e 77EE277A 	 fadds s15,s14,s15
 650 0522 C7ED177A 	 fsts s15,[r7,#92]
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 651              	 .loc 1 397 0
 652 0526 B7F84A30 	 ldrh r3,[r7,#74]
 653 052a 013B     	 subs r3,r3,#1
 654 052c A7F84A30 	 strh r3,[r7,#74]
 655              	.L12:
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 656              	 .loc 1 343 0
 657 0530 B7F84A30 	 ldrh r3,[r7,#74]
 658 0534 002B     	 cmp r3,#0
 659 0536 8ED1     	 bne .L13
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* If the polyPhase length is not a multiple of 4, compute the remaining filter taps */
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4u;
 660              	 .loc 1 401 0
 661 0538 FB8C     	 ldrh r3,[r7,#38]
 662 053a 03F00303 	 and r3,r3,#3
 663 053e A7F84A30 	 strh r3,[r7,#74]
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0u)
 664              	 .loc 1 403 0
 665 0542 1AE0     	 b .L14
 666              	.L15:
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *(ptr1++) * (*ptr2);
 667              	 .loc 1 406 0
 668 0544 7B6E     	 ldr r3,[r7,#100]
 669 0546 1A1D     	 adds r2,r3,#4
 670 0548 7A66     	 str r2,[r7,#100]
 671 054a 93ED007A 	 flds s14,[r3]
 672 054e 3B6E     	 ldr r3,[r7,#96]
 673 0550 D3ED007A 	 flds s15,[r3]
 674 0554 67EE277A 	 fmuls s15,s14,s15
 675 0558 97ED177A 	 flds s14,[r7,#92]
 676 055c 77EE277A 	 fadds s15,s14,s15
 677 0560 C7ED177A 	 fsts s15,[r7,#92]
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 678              	 .loc 1 409 0
 679 0564 FB68     	 ldr r3,[r7,#12]
 680 0566 1B78     	 ldrb r3,[r3]
 681 0568 9B00     	 lsls r3,r3,#2
 682 056a 3A6E     	 ldr r2,[r7,#96]
 683 056c 1344     	 add r3,r3,r2
 684 056e 3B66     	 str r3,[r7,#96]
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 685              	 .loc 1 412 0
 686 0570 B7F84A30 	 ldrh r3,[r7,#74]
 687 0574 013B     	 subs r3,r3,#1
 688 0576 A7F84A30 	 strh r3,[r7,#74]
 689              	.L14:
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 690              	 .loc 1 403 0
 691 057a B7F84A30 	 ldrh r3,[r7,#74]
 692 057e 002B     	 cmp r3,#0
 693 0580 E0D1     	 bne .L15
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst++ = sum0;
 694              	 .loc 1 416 0
 695 0582 7B68     	 ldr r3,[r7,#4]
 696 0584 1A1D     	 adds r2,r3,#4
 697 0586 7A60     	 str r2,[r7,#4]
 698 0588 FA6D     	 ldr r2,[r7,#92]
 699 058a 1A60     	 str r2,[r3]
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 700              	 .loc 1 419 0
 701 058c FB6C     	 ldr r3,[r7,#76]
 702 058e 0133     	 adds r3,r3,#1
 703 0590 FB64     	 str r3,[r7,#76]
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement the loop counter */
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 704              	 .loc 1 422 0
 705 0592 7B6D     	 ldr r3,[r7,#84]
 706 0594 013B     	 subs r3,r3,#1
 707 0596 7B65     	 str r3,[r7,#84]
 708              	.L11:
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 709              	 .loc 1 329 0
 710 0598 7B6D     	 ldr r3,[r7,#84]
 711 059a 002B     	 cmp r3,#0
 712 059c 7FF448AF 	 bne .L16
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 1;
 713              	 .loc 1 427 0
 714 05a0 FB6E     	 ldr r3,[r7,#108]
 715 05a2 0433     	 adds r3,r3,#4
 716 05a4 FB66     	 str r3,[r7,#108]
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCntN4--;
 717              	 .loc 1 430 0
 718 05a6 FB6A     	 ldr r3,[r7,#44]
 719 05a8 013B     	 subs r3,r3,#1
 720 05aa FB62     	 str r3,[r7,#44]
 721              	.L10:
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 722              	 .loc 1 319 0
 723 05ac FB6A     	 ldr r3,[r7,#44]
 724 05ae 002B     	 cmp r3,#0
 725 05b0 7FF430AF 	 bne .L17
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Processing is complete.
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** Now copy the last phaseLen - 1 samples to the satrt of the state buffer.
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** This prepares the state buffer for the next function call. */
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Points to the start of the state buffer */
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCurnt = S->pState;
 726              	 .loc 1 438 0
 727 05b4 FB68     	 ldr r3,[r7,#12]
 728 05b6 9B68     	 ldr r3,[r3,#8]
 729 05b8 BB66     	 str r3,[r7,#104]
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1u) >> 2u;
 730              	 .loc 1 440 0
 731 05ba FB8C     	 ldrh r3,[r7,#38]
 732 05bc 013B     	 subs r3,r3,#1
 733 05be 9B08     	 lsrs r3,r3,#2
 734 05c0 A7F84A30 	 strh r3,[r7,#74]
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* copy data */
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0u)
 735              	 .loc 1 443 0
 736 05c4 24E0     	 b .L18
 737              	.L19:
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 738              	 .loc 1 445 0
 739 05c6 BB6E     	 ldr r3,[r7,#104]
 740 05c8 1A1D     	 adds r2,r3,#4
 741 05ca BA66     	 str r2,[r7,#104]
 742 05cc FA6E     	 ldr r2,[r7,#108]
 743 05ce 111D     	 adds r1,r2,#4
 744 05d0 F966     	 str r1,[r7,#108]
 745 05d2 1268     	 ldr r2,[r2]
 746 05d4 1A60     	 str r2,[r3]
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 747              	 .loc 1 446 0
 748 05d6 BB6E     	 ldr r3,[r7,#104]
 749 05d8 1A1D     	 adds r2,r3,#4
 750 05da BA66     	 str r2,[r7,#104]
 751 05dc FA6E     	 ldr r2,[r7,#108]
 752 05de 111D     	 adds r1,r2,#4
 753 05e0 F966     	 str r1,[r7,#108]
 754 05e2 1268     	 ldr r2,[r2]
 755 05e4 1A60     	 str r2,[r3]
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 756              	 .loc 1 447 0
 757 05e6 BB6E     	 ldr r3,[r7,#104]
 758 05e8 1A1D     	 adds r2,r3,#4
 759 05ea BA66     	 str r2,[r7,#104]
 760 05ec FA6E     	 ldr r2,[r7,#108]
 761 05ee 111D     	 adds r1,r2,#4
 762 05f0 F966     	 str r1,[r7,#108]
 763 05f2 1268     	 ldr r2,[r2]
 764 05f4 1A60     	 str r2,[r3]
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 765              	 .loc 1 448 0
 766 05f6 BB6E     	 ldr r3,[r7,#104]
 767 05f8 1A1D     	 adds r2,r3,#4
 768 05fa BA66     	 str r2,[r7,#104]
 769 05fc FA6E     	 ldr r2,[r7,#108]
 770 05fe 111D     	 adds r1,r2,#4
 771 0600 F966     	 str r1,[r7,#108]
 772 0602 1268     	 ldr r2,[r2]
 773 0604 1A60     	 str r2,[r3]
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 774              	 .loc 1 451 0
 775 0606 B7F84A30 	 ldrh r3,[r7,#74]
 776 060a 013B     	 subs r3,r3,#1
 777 060c A7F84A30 	 strh r3,[r7,#74]
 778              	.L18:
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 779              	 .loc 1 443 0
 780 0610 B7F84A30 	 ldrh r3,[r7,#74]
 781 0614 002B     	 cmp r3,#0
 782 0616 D6D1     	 bne .L19
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1u) % 0x04u;
 783              	 .loc 1 454 0
 784 0618 FB8C     	 ldrh r3,[r7,#38]
 785 061a 013B     	 subs r3,r3,#1
 786 061c 9BB2     	 uxth r3,r3
 787 061e 03F00303 	 and r3,r3,#3
 788 0622 A7F84A30 	 strh r3,[r7,#74]
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* copy data */
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0u)
 789              	 .loc 1 457 0
 790 0626 0CE0     	 b .L20
 791              	.L21:
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 792              	 .loc 1 459 0
 793 0628 BB6E     	 ldr r3,[r7,#104]
 794 062a 1A1D     	 adds r2,r3,#4
 795 062c BA66     	 str r2,[r7,#104]
 796 062e FA6E     	 ldr r2,[r7,#108]
 797 0630 111D     	 adds r1,r2,#4
 798 0632 F966     	 str r1,[r7,#108]
 799 0634 1268     	 ldr r2,[r2]
 800 0636 1A60     	 str r2,[r3]
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 801              	 .loc 1 462 0
 802 0638 B7F84A30 	 ldrh r3,[r7,#74]
 803 063c 013B     	 subs r3,r3,#1
 804 063e A7F84A30 	 strh r3,[r7,#74]
 805              	.L20:
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 806              	 .loc 1 457 0
 807 0642 B7F84A30 	 ldrh r3,[r7,#74]
 808 0646 002B     	 cmp r3,#0
 809 0648 EED1     	 bne .L21
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** }
 810              	 .loc 1 464 0
 811 064a 7437     	 adds r7,r7,#116
 812              	.LCFI3:
 813              	 .cfi_def_cfa_offset 4
 814 064c BD46     	 mov sp,r7
 815              	.LCFI4:
 816              	 .cfi_def_cfa_register 13
 817              	 
 818 064e 5DF8047B 	 ldr r7,[sp],#4
 819              	.LCFI5:
 820              	 .cfi_restore 7
 821              	 .cfi_def_cfa_offset 0
 822 0652 7047     	 bx lr
 823              	 .cfi_endproc
 824              	.LFE135:
 826              	 .text
 827              	.Letext0:
 828              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 829              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 830              	 .file 4 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fir_interpolate_f32.c
    {standard input}:20     .text.arm_fir_interpolate_f32:00000000 $t
    {standard input}:25     .text.arm_fir_interpolate_f32:00000000 arm_fir_interpolate_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
