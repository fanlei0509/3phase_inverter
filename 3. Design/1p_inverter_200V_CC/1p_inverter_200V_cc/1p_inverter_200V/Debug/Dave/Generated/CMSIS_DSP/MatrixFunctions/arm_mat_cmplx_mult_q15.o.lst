   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_mat_cmplx_mult_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_mat_cmplx_mult_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_mat_cmplx_mult_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_mat_cmplx_mult_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c"
   1:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * Title:        arm_cmplx_mat_mult_q15.c
   4:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * Description:  Q15 complex matrix multiplication
   5:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * @ingroup groupMatrix
  33:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * @addtogroup CmplxMatrixMult
  37:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
  41:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** /**
  42:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * @brief Q15 Complex matrix multiplication
  43:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * @param[in]       *pSrcA points to the first input complex matrix structure
  44:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * @param[in]       *pSrcB points to the second input complex matrix structure
  45:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * @param[out]      *pDst points to output complex matrix structure
  46:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * @param[in]		*pScratch points to the array for storing intermediate results
  47:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * @return     		The function returns either
  48:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of siz
  49:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
  50:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * \par Conditions for optimum performance
  51:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *  Input, output and state buffers should be aligned by 32-bit
  52:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
  53:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * \par Restrictions
  54:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *  If the silicon does not support unaligned memory access enable the macro UNALIGNED_SUPPORT_DISA
  55:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *	In this case input, output, scratch buffers should be aligned by 32-bit
  56:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
  57:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * @details
  58:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  59:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
  60:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * \par
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * The function is implemented using a 64-bit internal accumulator. The inputs to the
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * multiplications are in 1.15 format and multiplications yield a 2.30 result.
  63:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * The 2.30 intermediate
  64:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * results are accumulated in a 64-bit accumulator in 34.30 format. This approach
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * provides 33 guard bits and there is no risk of overflow. The 34.30 result is then
  66:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * truncated to 34.15 format by discarding the low 15 bits and then saturated to
  67:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * 1.15 format.
  68:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
  69:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * \par
  70:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  * Refer to <code>arm_mat_mult_fast_q15()</code> for a faster but less precise version of this func
  71:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  *
  72:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****  */
  73:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
  74:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
  75:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
  76:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
  77:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** arm_status arm_mat_cmplx_mult_q15(
  78:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   const arm_matrix_instance_q15 * pSrcA,
  79:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   const arm_matrix_instance_q15 * pSrcB,
  80:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   arm_matrix_instance_q15 * pDst,
  81:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q15_t * pScratch)
  82:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** {
  28              	 .loc 1 82 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 2DE9B003 	 push {r4,r5,r7,r8,r9}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 20
  36              	 .cfi_offset 4,-20
  37              	 .cfi_offset 5,-16
  38              	 .cfi_offset 7,-12
  39              	 .cfi_offset 8,-8
  40              	 .cfi_offset 9,-4
  41 0004 AFB0     	 sub sp,sp,#188
  42              	.LCFI1:
  43              	 .cfi_def_cfa_offset 208
  44 0006 00AF     	 add r7,sp,#0
  45              	.LCFI2:
  46              	 .cfi_def_cfa_register 7
  47 0008 F860     	 str r0,[r7,#12]
  48 000a B960     	 str r1,[r7,#8]
  49 000c 7A60     	 str r2,[r7,#4]
  50 000e 3B60     	 str r3,[r7]
  83:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   /* accumulator */
  84:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q15_t *pSrcBT = pScratch;                      /* input data matrix pointer for transpose */
  51              	 .loc 1 84 0
  52 0010 3B68     	 ldr r3,[r7]
  53 0012 C7F89430 	 str r3,[r7,#148]
  85:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q15_t *pInA = pSrcA->pData;                    /* input data matrix pointer A of Q15 type */
  54              	 .loc 1 85 0
  55 0016 FB68     	 ldr r3,[r7,#12]
  56 0018 5B68     	 ldr r3,[r3,#4]
  57 001a FB61     	 str r3,[r7,#28]
  86:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q15_t *pInB = pSrcB->pData;                    /* input data matrix pointer B of Q15 type */
  58              	 .loc 1 86 0
  59 001c BB68     	 ldr r3,[r7,#8]
  60 001e 5B68     	 ldr r3,[r3,#4]
  61 0020 BB61     	 str r3,[r7,#24]
  87:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q15_t *px;                                     /* Temporary output data matrix pointer */
  88:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   uint16_t numRowsA = pSrcA->numRows;            /* number of rows of input matrix A    */
  62              	 .loc 1 88 0
  63 0022 FB68     	 ldr r3,[r7,#12]
  64 0024 1B88     	 ldrh r3,[r3]
  65 0026 A7F89230 	 strh r3,[r7,#146]
  89:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   uint16_t numColsB = pSrcB->numCols;            /* number of columns of input matrix B */
  66              	 .loc 1 89 0
  67 002a BB68     	 ldr r3,[r7,#8]
  68 002c 5B88     	 ldrh r3,[r3,#2]
  69 002e A7F89030 	 strh r3,[r7,#144]
  90:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   uint16_t numColsA = pSrcA->numCols;            /* number of columns of input matrix A */
  70              	 .loc 1 90 0
  71 0032 FB68     	 ldr r3,[r7,#12]
  72 0034 5B88     	 ldrh r3,[r3,#2]
  73 0036 A7F88E30 	 strh r3,[r7,#142]
  91:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   uint16_t numRowsB = pSrcB->numRows;            /* number of rows of input matrix A    */
  74              	 .loc 1 91 0
  75 003a BB68     	 ldr r3,[r7,#8]
  76 003c 1B88     	 ldrh r3,[r3]
  77 003e A7F88C30 	 strh r3,[r7,#140]
  92:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   uint16_t col, i = 0u, row = numRowsB, colCnt;  /* loop counters */
  78              	 .loc 1 92 0
  79 0042 0023     	 movs r3,#0
  80 0044 A7F8B430 	 strh r3,[r7,#180]
  81 0048 B7F88C30 	 ldrh r3,[r7,#140]
  82 004c A7F8B230 	 strh r3,[r7,#178]
  93:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   arm_status status;                             /* status of matrix multiplication */
  94:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q63_t sumReal, sumImag;
  95:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
  96:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #ifdef UNALIGNED_SUPPORT_DISABLE
  97:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q15_t in;                                      /* Temporary variable to hold the input value */
  98:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q15_t a, b, c, d;
  99:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #else
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q31_t in;                                      /* Temporary variable to hold the input value */
 101:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q31_t prod1, prod2;
 102:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   q31_t pSourceA, pSourceB;
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #endif
 104:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 105:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #ifdef ARM_MATH_MATRIX_CHECK
 106:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   /* Check for matrix mismatch condition */
 107:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
  83              	 .loc 1 107 0
  84 0050 FB68     	 ldr r3,[r7,#12]
  85 0052 5A88     	 ldrh r2,[r3,#2]
  86 0054 BB68     	 ldr r3,[r7,#8]
  87 0056 1B88     	 ldrh r3,[r3]
  88 0058 9A42     	 cmp r2,r3
  89 005a 0BD1     	 bne .L2
 108:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcB->numCols != pDst->numCols))
  90              	 .loc 1 108 0 discriminator 1
  91 005c FB68     	 ldr r3,[r7,#12]
  92 005e 1A88     	 ldrh r2,[r3]
  93 0060 7B68     	 ldr r3,[r7,#4]
  94 0062 1B88     	 ldrh r3,[r3]
 107:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcB->numCols != pDst->numCols))
  95              	 .loc 1 107 0 discriminator 1
  96 0064 9A42     	 cmp r2,r3
  97 0066 05D1     	 bne .L2
  98              	 .loc 1 108 0
  99 0068 BB68     	 ldr r3,[r7,#8]
 100 006a 5A88     	 ldrh r2,[r3,#2]
 101 006c 7B68     	 ldr r3,[r7,#4]
 102 006e 5B88     	 ldrh r3,[r3,#2]
 103 0070 9A42     	 cmp r2,r3
 104 0072 03D0     	 beq .L3
 105              	.L2:
 109:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   {
 110:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 111:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     status = ARM_MATH_SIZE_MISMATCH;
 106              	 .loc 1 111 0
 107 0074 FD23     	 movs r3,#253
 108 0076 87F8AF30 	 strb r3,[r7,#175]
 109 007a D6E1     	 b .L4
 110              	.L3:
 112:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   }
 113:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   else
 114:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #endif
 115:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   {
 116:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     /* Matrix transpose */
 117:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     do
 118:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     {
 119:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       /* Apply loop unrolling and exchange the columns with row elements */
 120:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       col = numColsB >> 2;
 111              	 .loc 1 120 0
 112 007c B7F89030 	 ldrh r3,[r7,#144]
 113 0080 9B08     	 lsrs r3,r3,#2
 114 0082 A7F8B630 	 strh r3,[r7,#182]
 121:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 122:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       /* The pointer px is set to starting address of the column being processed */
 123:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       px = pSrcBT + i;
 115              	 .loc 1 123 0
 116 0086 B7F8B430 	 ldrh r3,[r7,#180]
 117 008a 5B00     	 lsls r3,r3,#1
 118 008c D7F89420 	 ldr r2,[r7,#148]
 119 0090 1344     	 add r3,r3,r2
 120 0092 7B61     	 str r3,[r7,#20]
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 125:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 126:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****        ** a second loop below computes the remaining 1 to 3 samples. */
 127:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       while (col > 0u)
 121              	 .loc 1 127 0
 122 0094 54E0     	 b .L5
 123              	.L6:
 128:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       {
 129:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #ifdef UNALIGNED_SUPPORT_DISABLE
 130:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Read two elements from the row */
 131:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *pInB++;
 132:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *px = in;
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *pInB++;
 134:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px[1] = in;
 135:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 136:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 137:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px += numRowsB * 2;
 138:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 139:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Read two elements from the row */
 140:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *pInB++;
 141:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *px = in;
 142:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *pInB++;
 143:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px[1] = in;
 144:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 145:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 146:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px += numRowsB * 2;
 147:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 148:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Read two elements from the row */
 149:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *pInB++;
 150:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *px = in;
 151:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *pInB++;
 152:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px[1] = in;
 153:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 154:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 155:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px += numRowsB * 2;
 156:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 157:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Read two elements from the row */
 158:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *pInB++;
 159:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *px = in;
 160:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *pInB++;
 161:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px[1] = in;
 162:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 164:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px += numRowsB * 2;
 165:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 166:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Decrement the column loop counter */
 167:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         col--;
 168:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       }
 169:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 170:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       /* If the columns of pSrcB is not a multiple of 4, compute any remaining output samples here.
 171:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****        ** No loop unrolling is used. */
 172:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       col = numColsB % 0x4u;
 173:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 174:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       while (col > 0u)
 175:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       {
 176:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Read two elements from the row */
 177:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *pInB++;
 178:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *px = in;
 179:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *pInB++;
 180:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px[1] = in;
 181:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #else
 182:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 183:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Read two elements from the row */
 184:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *__SIMD32(pInB)++;
 124              	 .loc 1 184 0
 125 0096 07F11802 	 add r2,r7,#24
 126 009a 1368     	 ldr r3,[r2]
 127 009c 191D     	 adds r1,r3,#4
 128 009e 1160     	 str r1,[r2]
 129 00a0 1B68     	 ldr r3,[r3]
 130 00a2 C7F88830 	 str r3,[r7,#136]
 185:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 186:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *__SIMD32(px) = in;
 131              	 .loc 1 186 0
 132 00a6 07F11403 	 add r3,r7,#20
 133 00aa 1B68     	 ldr r3,[r3]
 134 00ac D7F88820 	 ldr r2,[r7,#136]
 135 00b0 1A60     	 str r2,[r3]
 187:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 188:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 189:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px += numRowsB * 2;
 136              	 .loc 1 189 0
 137 00b2 7B69     	 ldr r3,[r7,#20]
 138 00b4 B7F88C20 	 ldrh r2,[r7,#140]
 139 00b8 9200     	 lsls r2,r2,#2
 140 00ba 1344     	 add r3,r3,r2
 141 00bc 7B61     	 str r3,[r7,#20]
 190:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 191:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 192:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Read two elements from the row */
 193:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *__SIMD32(pInB)++;
 142              	 .loc 1 193 0
 143 00be 07F11802 	 add r2,r7,#24
 144 00c2 1368     	 ldr r3,[r2]
 145 00c4 191D     	 adds r1,r3,#4
 146 00c6 1160     	 str r1,[r2]
 147 00c8 1B68     	 ldr r3,[r3]
 148 00ca C7F88830 	 str r3,[r7,#136]
 194:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 195:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *__SIMD32(px) = in;
 149              	 .loc 1 195 0
 150 00ce 07F11403 	 add r3,r7,#20
 151 00d2 1B68     	 ldr r3,[r3]
 152 00d4 D7F88820 	 ldr r2,[r7,#136]
 153 00d8 1A60     	 str r2,[r3]
 196:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 197:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 198:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px += numRowsB * 2;
 154              	 .loc 1 198 0
 155 00da 7B69     	 ldr r3,[r7,#20]
 156 00dc B7F88C20 	 ldrh r2,[r7,#140]
 157 00e0 9200     	 lsls r2,r2,#2
 158 00e2 1344     	 add r3,r3,r2
 159 00e4 7B61     	 str r3,[r7,#20]
 199:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 200:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Read two elements from the row */
 201:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *__SIMD32(pInB)++;
 160              	 .loc 1 201 0
 161 00e6 07F11802 	 add r2,r7,#24
 162 00ea 1368     	 ldr r3,[r2]
 163 00ec 191D     	 adds r1,r3,#4
 164 00ee 1160     	 str r1,[r2]
 165 00f0 1B68     	 ldr r3,[r3]
 166 00f2 C7F88830 	 str r3,[r7,#136]
 202:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 203:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *__SIMD32(px) = in;
 167              	 .loc 1 203 0
 168 00f6 07F11403 	 add r3,r7,#20
 169 00fa 1B68     	 ldr r3,[r3]
 170 00fc D7F88820 	 ldr r2,[r7,#136]
 171 0100 1A60     	 str r2,[r3]
 204:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 205:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 206:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px += numRowsB * 2;
 172              	 .loc 1 206 0
 173 0102 7B69     	 ldr r3,[r7,#20]
 174 0104 B7F88C20 	 ldrh r2,[r7,#140]
 175 0108 9200     	 lsls r2,r2,#2
 176 010a 1344     	 add r3,r3,r2
 177 010c 7B61     	 str r3,[r7,#20]
 207:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 208:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Read two elements from the row */
 209:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *__SIMD32(pInB)++;
 178              	 .loc 1 209 0
 179 010e 07F11802 	 add r2,r7,#24
 180 0112 1368     	 ldr r3,[r2]
 181 0114 191D     	 adds r1,r3,#4
 182 0116 1160     	 str r1,[r2]
 183 0118 1B68     	 ldr r3,[r3]
 184 011a C7F88830 	 str r3,[r7,#136]
 210:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 211:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *__SIMD32(px) = in;
 185              	 .loc 1 211 0
 186 011e 07F11403 	 add r3,r7,#20
 187 0122 1B68     	 ldr r3,[r3]
 188 0124 D7F88820 	 ldr r2,[r7,#136]
 189 0128 1A60     	 str r2,[r3]
 212:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 213:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 214:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px += numRowsB * 2;
 190              	 .loc 1 214 0
 191 012a 7B69     	 ldr r3,[r7,#20]
 192 012c B7F88C20 	 ldrh r2,[r7,#140]
 193 0130 9200     	 lsls r2,r2,#2
 194 0132 1344     	 add r3,r3,r2
 195 0134 7B61     	 str r3,[r7,#20]
 215:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 216:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Decrement the column loop counter */
 217:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         col--;
 196              	 .loc 1 217 0
 197 0136 B7F8B630 	 ldrh r3,[r7,#182]
 198 013a 013B     	 subs r3,r3,#1
 199 013c A7F8B630 	 strh r3,[r7,#182]
 200              	.L5:
 127:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       {
 201              	 .loc 1 127 0
 202 0140 B7F8B630 	 ldrh r3,[r7,#182]
 203 0144 002B     	 cmp r3,#0
 204 0146 A6D1     	 bne .L6
 218:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       }
 219:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 220:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       /* If the columns of pSrcB is not a multiple of 4, compute any remaining output samples here.
 221:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****        ** No loop unrolling is used. */
 222:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       col = numColsB % 0x4u;
 205              	 .loc 1 222 0
 206 0148 B7F89030 	 ldrh r3,[r7,#144]
 207 014c 03F00303 	 and r3,r3,#3
 208 0150 A7F8B630 	 strh r3,[r7,#182]
 223:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 224:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       while (col > 0u)
 209              	 .loc 1 224 0
 210 0154 18E0     	 b .L7
 211              	.L8:
 225:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       {
 226:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Read two elements from the row */
 227:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         in = *__SIMD32(pInB)++;
 212              	 .loc 1 227 0
 213 0156 07F11802 	 add r2,r7,#24
 214 015a 1368     	 ldr r3,[r2]
 215 015c 191D     	 adds r1,r3,#4
 216 015e 1160     	 str r1,[r2]
 217 0160 1B68     	 ldr r3,[r3]
 218 0162 C7F88830 	 str r3,[r7,#136]
 228:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 229:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *__SIMD32(px) = in;
 219              	 .loc 1 229 0
 220 0166 07F11403 	 add r3,r7,#20
 221 016a 1B68     	 ldr r3,[r3]
 222 016c D7F88820 	 ldr r2,[r7,#136]
 223 0170 1A60     	 str r2,[r3]
 230:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #endif
 231:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 232:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 233:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         px += numRowsB * 2;
 224              	 .loc 1 233 0
 225 0172 7B69     	 ldr r3,[r7,#20]
 226 0174 B7F88C20 	 ldrh r2,[r7,#140]
 227 0178 9200     	 lsls r2,r2,#2
 228 017a 1344     	 add r3,r3,r2
 229 017c 7B61     	 str r3,[r7,#20]
 234:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 235:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Decrement the column loop counter */
 236:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         col--;
 230              	 .loc 1 236 0
 231 017e B7F8B630 	 ldrh r3,[r7,#182]
 232 0182 013B     	 subs r3,r3,#1
 233 0184 A7F8B630 	 strh r3,[r7,#182]
 234              	.L7:
 224:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       {
 235              	 .loc 1 224 0
 236 0188 B7F8B630 	 ldrh r3,[r7,#182]
 237 018c 002B     	 cmp r3,#0
 238 018e E2D1     	 bne .L8
 237:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       }
 238:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 239:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       i = i + 2u;
 239              	 .loc 1 239 0
 240 0190 B7F8B430 	 ldrh r3,[r7,#180]
 241 0194 0233     	 adds r3,r3,#2
 242 0196 A7F8B430 	 strh r3,[r7,#180]
 240:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 241:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       /* Decrement the row loop counter */
 242:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       row--;
 243              	 .loc 1 242 0
 244 019a B7F8B230 	 ldrh r3,[r7,#178]
 245 019e 013B     	 subs r3,r3,#1
 246 01a0 A7F8B230 	 strh r3,[r7,#178]
 243:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 244:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     } while (row > 0u);
 247              	 .loc 1 244 0
 248 01a4 B7F8B230 	 ldrh r3,[r7,#178]
 249 01a8 002B     	 cmp r3,#0
 250 01aa 7FF467AF 	 bne .L3
 245:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 246:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     /* Reset the variables for the usage in the following multiplication process */
 247:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     row = numRowsA;
 251              	 .loc 1 247 0
 252 01ae B7F89230 	 ldrh r3,[r7,#146]
 253 01b2 A7F8B230 	 strh r3,[r7,#178]
 248:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     i = 0u;
 254              	 .loc 1 248 0
 255 01b6 0023     	 movs r3,#0
 256 01b8 A7F8B430 	 strh r3,[r7,#180]
 249:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     px = pDst->pData;
 257              	 .loc 1 249 0
 258 01bc 7B68     	 ldr r3,[r7,#4]
 259 01be 5B68     	 ldr r3,[r3,#4]
 260 01c0 7B61     	 str r3,[r7,#20]
 261              	.L19:
 250:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 251:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
 252:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     /* row loop */
 253:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     do
 254:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     {
 255:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       /* For every row wise process, the column loop counter is to be initiated */
 256:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       col = numColsB;
 262              	 .loc 1 256 0
 263 01c2 B7F89030 	 ldrh r3,[r7,#144]
 264 01c6 A7F8B630 	 strh r3,[r7,#182]
 257:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 258:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       /* For every row wise process, the pIn2 pointer is set
 259:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****        ** to the starting address of the transposed pSrcB data */
 260:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       pInB = pSrcBT;
 265              	 .loc 1 260 0
 266 01ca D7F89430 	 ldr r3,[r7,#148]
 267 01ce BB61     	 str r3,[r7,#24]
 268              	.L18:
 261:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 262:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       /* column loop */
 263:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       do
 264:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       {
 265:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 266:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         sumReal = 0;
 269              	 .loc 1 266 0
 270 01d0 4FF00002 	 mov r2,#0
 271 01d4 4FF00003 	 mov r3,#0
 272 01d8 C7E92823 	 strd r2,[r7,#160]
 267:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         sumImag = 0;
 273              	 .loc 1 267 0
 274 01dc 4FF00002 	 mov r2,#0
 275 01e0 4FF00003 	 mov r3,#0
 276 01e4 C7E92623 	 strd r2,[r7,#152]
 268:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 269:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Apply loop unrolling and compute 2 MACs simultaneously. */
 270:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         colCnt = numColsA >> 1;
 277              	 .loc 1 270 0
 278 01e8 B7F88E30 	 ldrh r3,[r7,#142]
 279 01ec 5B08     	 lsrs r3,r3,#1
 280 01ee A7F8B030 	 strh r3,[r7,#176]
 271:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 272:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Initiate the pointer pIn1 to point to the starting address of the column being processed
 273:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         pInA = pSrcA->pData + i * 2;
 281              	 .loc 1 273 0
 282 01f2 FB68     	 ldr r3,[r7,#12]
 283 01f4 5B68     	 ldr r3,[r3,#4]
 284 01f6 B7F8B420 	 ldrh r2,[r7,#180]
 285 01fa 9200     	 lsls r2,r2,#2
 286 01fc 1344     	 add r3,r3,r2
 287 01fe FB61     	 str r3,[r7,#28]
 274:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 275:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 276:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* matrix multiplication */
 277:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         while (colCnt > 0u)
 288              	 .loc 1 277 0
 289 0200 84E0     	 b .L9
 290              	.L14:
 278:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         {
 279:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 280:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 281:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #ifdef UNALIGNED_SUPPORT_DISABLE
 282:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 283:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* read real and imag values from pSrcA buffer */
 284:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           a = *pInA;
 285:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           b = *(pInA + 1u);
 286:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* read real and imag values from pSrcB buffer */
 287:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           c = *pInB;
 288:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           d = *(pInB + 1u);
 289:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 290:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* Multiply and Accumlates */
 291:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumReal += (q31_t) a *c;
 292:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumImag += (q31_t) a *d;
 293:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumReal -= (q31_t) b *d;
 294:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumImag += (q31_t) b *c;
 295:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 296:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* read next real and imag values from pSrcA buffer */
 297:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           a = *(pInA + 2u);
 298:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           b = *(pInA + 3u);
 299:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* read next real and imag values from pSrcB buffer */
 300:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           c = *(pInB + 2u);
 301:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           d = *(pInB + 3u);
 302:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 303:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* update pointer */
 304:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           pInA += 4u;
 305:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 306:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* Multiply and Accumlates */
 307:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumReal += (q31_t) a *c;
 308:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumImag += (q31_t) a *d;
 309:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumReal -= (q31_t) b *d;
 310:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumImag += (q31_t) b *c;
 311:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* update pointer */
 312:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           pInB += 4u;
 313:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #else
 314:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* read real and imag values from pSrcA and pSrcB buffer */
 315:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           pSourceA = *__SIMD32(pInA)++;
 291              	 .loc 1 315 0
 292 0202 07F11C02 	 add r2,r7,#28
 293 0206 1368     	 ldr r3,[r2]
 294 0208 191D     	 adds r1,r3,#4
 295 020a 1160     	 str r1,[r2]
 296 020c 1B68     	 ldr r3,[r3]
 297 020e C7F88430 	 str r3,[r7,#132]
 316:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           pSourceB = *__SIMD32(pInB)++;
 298              	 .loc 1 316 0
 299 0212 07F11802 	 add r2,r7,#24
 300 0216 1368     	 ldr r3,[r2]
 301 0218 191D     	 adds r1,r3,#4
 302 021a 1160     	 str r1,[r2]
 303 021c 1B68     	 ldr r3,[r3]
 304 021e C7F88030 	 str r3,[r7,#128]
 317:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 318:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* Multiply and Accumlates */
 319:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #ifdef ARM_MATH_BIG_ENDIAN
 320:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           prod1 = -__SMUSD(pSourceA, pSourceB);
 321:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #else
 322:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           prod1 = __SMUSD(pSourceA, pSourceB);
 305              	 .loc 1 322 0
 306 0222 D7F88420 	 ldr r2,[r7,#132]
 307 0226 D7F88030 	 ldr r3,[r7,#128]
 308 022a 7A66     	 str r2,[r7,#100]
 309 022c 3B66     	 str r3,[r7,#96]
 310              	.LBB16:
 311              	.LBB17:
 312              	 .file 2 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.1
   5:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     02. February 2017
   6:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  36:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                     __asm
  37:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  39:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                  inline
  40:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  41:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  44:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  47:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  48:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  50:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  51:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  53:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  65:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  71:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  72:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  76:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  77:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  78:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  79:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  83:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  85:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0U);
 644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   {
 864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     s--;
 867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Count leading zeros
 876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             number of leading zeros in value
 879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CLZ             __builtin_clz
 881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDREXB(volatile uint8_t *addr)
 894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDREXH(volatile uint16_t *addr)
 916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDREXW(volatile uint32_t *addr)
 938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *a
 955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXH(uint16_t value, volatile uint16_t 
 972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t 
 989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Remove the exclusive lock
 999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __CLREX(void)
1002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Signed Saturate
1017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates a signed value.
1018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Unsigned Saturate
1032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates an unsigned value.
1033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
1050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
1051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RRX(uint32_t value)
1053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDRT(volatile uint32_t *ptr)
1112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAB(volatile uint8_t *ptr)
1169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAH(volatile uint16_t *ptr)
1184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDA(volatile uint32_t *ptr)
1199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *p
1297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t 
1314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *
1331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated SIMD instructions
1347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
1348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** */
1349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__ARM_FEATURE_DSP == 1)                             /* ToDo ARMCLANG: This should be ARCH >= A
1351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32
1651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTB16(uint32_t op1)
1673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTB16(uint32_t op1)
1689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32
1721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint3
1729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint6
1737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   union llreg_u{
1739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t w32[2];
1740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint64_t w64;
1741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   } llr;
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   llr.w64 = acc;
1743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (o
1746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
1747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (o
1748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(llr.w64);
1751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint64_t __SMLALDX (uint32_t op1, uint32_t op2, uint
1754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   union llreg_u{
1756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t w32[2];
1757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint64_t w64;
1758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   } llr;
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   llr.w64 = acc;
1760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (
1763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
1764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (
1765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(llr.w64);
1768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUSD  (uint32_t op1, uint32_t op2)
1771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smusd %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 313              	 .loc 2 1774 0
 314 022e 7B6E     	 ldr r3,[r7,#100]
 315 0230 3A6E     	 ldr r2,[r7,#96]
 316              	
 317 0232 43FB02F3 	 smusd r3,r3,r2
 318              	
 319              	 .thumb
 320 0236 FB65     	 str r3,[r7,#92]
1775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 321              	 .loc 2 1775 0
 322 0238 FB6D     	 ldr r3,[r7,#92]
 323              	.LBE17:
 324              	.LBE16:
 325              	 .loc 1 322 0
 326 023a FB67     	 str r3,[r7,#124]
 323:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #endif
 324:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           prod2 = __SMUADX(pSourceA, pSourceB);
 327              	 .loc 1 324 0
 328 023c D7F88420 	 ldr r2,[r7,#132]
 329 0240 D7F88030 	 ldr r3,[r7,#128]
 330 0244 BA65     	 str r2,[r7,#88]
 331 0246 7B65     	 str r3,[r7,#84]
 332              	.LBB18:
 333              	.LBB19:
1716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 334              	 .loc 2 1716 0
 335 0248 BB6D     	 ldr r3,[r7,#88]
 336 024a 7A6D     	 ldr r2,[r7,#84]
 337              	
 338 024c 23FB12F3 	 smuadx r3,r3,r2
 339              	
 340              	 .thumb
 341 0250 3B65     	 str r3,[r7,#80]
1717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 342              	 .loc 2 1717 0
 343 0252 3B6D     	 ldr r3,[r7,#80]
 344              	.LBE19:
 345              	.LBE18:
 346              	 .loc 1 324 0
 347 0254 BB67     	 str r3,[r7,#120]
 325:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumReal += (q63_t) prod1;
 348              	 .loc 1 325 0
 349 0256 FB6F     	 ldr r3,[r7,#124]
 350 0258 1A46     	 mov r2,r3
 351 025a 4FEAE273 	 asr r3,r2,#31
 352 025e D7E92801 	 ldrd r0,[r7,#160]
 353 0262 1218     	 adds r2,r2,r0
 354 0264 43EB0103 	 adc r3,r3,r1
 355 0268 C7E92823 	 strd r2,[r7,#160]
 326:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumImag += (q63_t) prod2;
 356              	 .loc 1 326 0
 357 026c BB6F     	 ldr r3,[r7,#120]
 358 026e 1A46     	 mov r2,r3
 359 0270 4FEAE273 	 asr r3,r2,#31
 360 0274 D7E92601 	 ldrd r0,[r7,#152]
 361 0278 1218     	 adds r2,r2,r0
 362 027a 43EB0103 	 adc r3,r3,r1
 363 027e C7E92623 	 strd r2,[r7,#152]
 327:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 328:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* read real and imag values from pSrcA and pSrcB buffer */
 329:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           pSourceA = *__SIMD32(pInA)++;
 364              	 .loc 1 329 0
 365 0282 07F11C02 	 add r2,r7,#28
 366 0286 1368     	 ldr r3,[r2]
 367 0288 191D     	 adds r1,r3,#4
 368 028a 1160     	 str r1,[r2]
 369 028c 1B68     	 ldr r3,[r3]
 370 028e C7F88430 	 str r3,[r7,#132]
 330:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           pSourceB = *__SIMD32(pInB)++;
 371              	 .loc 1 330 0
 372 0292 07F11802 	 add r2,r7,#24
 373 0296 1368     	 ldr r3,[r2]
 374 0298 191D     	 adds r1,r3,#4
 375 029a 1160     	 str r1,[r2]
 376 029c 1B68     	 ldr r3,[r3]
 377 029e C7F88030 	 str r3,[r7,#128]
 331:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 332:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* Multiply and Accumlates */
 333:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #ifdef ARM_MATH_BIG_ENDIAN
 334:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           prod1 = -__SMUSD(pSourceA, pSourceB);
 335:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #else
 336:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           prod1 = __SMUSD(pSourceA, pSourceB);
 378              	 .loc 1 336 0
 379 02a2 D7F88420 	 ldr r2,[r7,#132]
 380 02a6 D7F88030 	 ldr r3,[r7,#128]
 381 02aa FA64     	 str r2,[r7,#76]
 382 02ac BB64     	 str r3,[r7,#72]
 383              	.LBB20:
 384              	.LBB21:
1774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 385              	 .loc 2 1774 0
 386 02ae FB6C     	 ldr r3,[r7,#76]
 387 02b0 BA6C     	 ldr r2,[r7,#72]
 388              	
 389 02b2 43FB02F3 	 smusd r3,r3,r2
 390              	
 391              	 .thumb
 392 02b6 7B64     	 str r3,[r7,#68]
 393              	 .loc 2 1775 0
 394 02b8 7B6C     	 ldr r3,[r7,#68]
 395              	.LBE21:
 396              	.LBE20:
 397              	 .loc 1 336 0
 398 02ba FB67     	 str r3,[r7,#124]
 337:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #endif
 338:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           prod2 = __SMUADX(pSourceA, pSourceB);
 399              	 .loc 1 338 0
 400 02bc D7F88420 	 ldr r2,[r7,#132]
 401 02c0 D7F88030 	 ldr r3,[r7,#128]
 402 02c4 3A64     	 str r2,[r7,#64]
 403 02c6 FB63     	 str r3,[r7,#60]
 404              	.LBB22:
 405              	.LBB23:
1716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 406              	 .loc 2 1716 0
 407 02c8 3B6C     	 ldr r3,[r7,#64]
 408 02ca FA6B     	 ldr r2,[r7,#60]
 409              	
 410 02cc 23FB12F3 	 smuadx r3,r3,r2
 411              	
 412              	 .thumb
 413 02d0 BB63     	 str r3,[r7,#56]
1717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 414              	 .loc 2 1717 0
 415 02d2 BB6B     	 ldr r3,[r7,#56]
 416              	.LBE23:
 417              	.LBE22:
 418              	 .loc 1 338 0
 419 02d4 BB67     	 str r3,[r7,#120]
 339:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumReal += (q63_t) prod1;
 420              	 .loc 1 339 0
 421 02d6 FB6F     	 ldr r3,[r7,#124]
 422 02d8 1A46     	 mov r2,r3
 423 02da 4FEAE273 	 asr r3,r2,#31
 424 02de D7E92801 	 ldrd r0,[r7,#160]
 425 02e2 1218     	 adds r2,r2,r0
 426 02e4 43EB0103 	 adc r3,r3,r1
 427 02e8 C7E92823 	 strd r2,[r7,#160]
 340:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumImag += (q63_t) prod2;
 428              	 .loc 1 340 0
 429 02ec BB6F     	 ldr r3,[r7,#120]
 430 02ee 1A46     	 mov r2,r3
 431 02f0 4FEAE273 	 asr r3,r2,#31
 432 02f4 D7E92601 	 ldrd r0,[r7,#152]
 433 02f8 1218     	 adds r2,r2,r0
 434 02fa 43EB0103 	 adc r3,r3,r1
 435 02fe C7E92623 	 strd r2,[r7,#152]
 341:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 342:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #endif /*      #ifdef UNALIGNED_SUPPORT_DISABLE */
 343:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 344:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* Decrement the loop counter */
 345:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           colCnt--;
 436              	 .loc 1 345 0
 437 0302 B7F8B030 	 ldrh r3,[r7,#176]
 438 0306 013B     	 subs r3,r3,#1
 439 0308 A7F8B030 	 strh r3,[r7,#176]
 440              	.L9:
 277:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         {
 441              	 .loc 1 277 0
 442 030c B7F8B030 	 ldrh r3,[r7,#176]
 443 0310 002B     	 cmp r3,#0
 444 0312 7FF476AF 	 bne .L14
 346:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         }
 347:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 348:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* process odd column samples */
 349:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         if ((numColsA & 0x1u) > 0u)
 445              	 .loc 1 349 0
 446 0316 B7F88E30 	 ldrh r3,[r7,#142]
 447 031a 03F00103 	 and r3,r3,#1
 448 031e 002B     	 cmp r3,#0
 449 0320 3FD0     	 beq .L15
 350:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         {
 351:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 352:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 353:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #ifdef UNALIGNED_SUPPORT_DISABLE
 354:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 355:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* read real and imag values from pSrcA and pSrcB buffer */
 356:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           a = *pInA++;
 357:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           b = *pInA++;
 358:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           c = *pInB++;
 359:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           d = *pInB++;
 360:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 361:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* Multiply and Accumlates */
 362:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumReal += (q31_t) a *c;
 363:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumImag += (q31_t) a *d;
 364:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumReal -= (q31_t) b *d;
 365:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumImag += (q31_t) b *c;
 366:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 367:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #else
 368:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* read real and imag values from pSrcA and pSrcB buffer */
 369:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           pSourceA = *__SIMD32(pInA)++;
 450              	 .loc 1 369 0
 451 0322 07F11C02 	 add r2,r7,#28
 452 0326 1368     	 ldr r3,[r2]
 453 0328 191D     	 adds r1,r3,#4
 454 032a 1160     	 str r1,[r2]
 455 032c 1B68     	 ldr r3,[r3]
 456 032e C7F88430 	 str r3,[r7,#132]
 370:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           pSourceB = *__SIMD32(pInB)++;
 457              	 .loc 1 370 0
 458 0332 07F11802 	 add r2,r7,#24
 459 0336 1368     	 ldr r3,[r2]
 460 0338 191D     	 adds r1,r3,#4
 461 033a 1160     	 str r1,[r2]
 462 033c 1B68     	 ldr r3,[r3]
 463 033e C7F88030 	 str r3,[r7,#128]
 371:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 372:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           /* Multiply and Accumlates */
 373:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #ifdef ARM_MATH_BIG_ENDIAN
 374:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           prod1 = -__SMUSD(pSourceA, pSourceB);
 375:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #else
 376:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           prod1 = __SMUSD(pSourceA, pSourceB);
 464              	 .loc 1 376 0
 465 0342 D7F88420 	 ldr r2,[r7,#132]
 466 0346 D7F88030 	 ldr r3,[r7,#128]
 467 034a 7A63     	 str r2,[r7,#52]
 468 034c 3B63     	 str r3,[r7,#48]
 469              	.LBB24:
 470              	.LBB25:
1774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 471              	 .loc 2 1774 0
 472 034e 7B6B     	 ldr r3,[r7,#52]
 473 0350 3A6B     	 ldr r2,[r7,#48]
 474              	
 475 0352 43FB02F3 	 smusd r3,r3,r2
 476              	
 477              	 .thumb
 478 0356 FB62     	 str r3,[r7,#44]
 479              	 .loc 2 1775 0
 480 0358 FB6A     	 ldr r3,[r7,#44]
 481              	.LBE25:
 482              	.LBE24:
 483              	 .loc 1 376 0
 484 035a FB67     	 str r3,[r7,#124]
 377:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #endif
 378:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           prod2 = __SMUADX(pSourceA, pSourceB);
 485              	 .loc 1 378 0
 486 035c D7F88420 	 ldr r2,[r7,#132]
 487 0360 D7F88030 	 ldr r3,[r7,#128]
 488 0364 BA62     	 str r2,[r7,#40]
 489 0366 7B62     	 str r3,[r7,#36]
 490              	.LBB26:
 491              	.LBB27:
1716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 492              	 .loc 2 1716 0
 493 0368 BB6A     	 ldr r3,[r7,#40]
 494 036a 7A6A     	 ldr r2,[r7,#36]
 495              	
 496 036c 23FB12F3 	 smuadx r3,r3,r2
 497              	
 498              	 .thumb
 499 0370 3B62     	 str r3,[r7,#32]
1717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 500              	 .loc 2 1717 0
 501 0372 3B6A     	 ldr r3,[r7,#32]
 502              	.LBE27:
 503              	.LBE26:
 504              	 .loc 1 378 0
 505 0374 BB67     	 str r3,[r7,#120]
 379:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumReal += (q63_t) prod1;
 506              	 .loc 1 379 0
 507 0376 FB6F     	 ldr r3,[r7,#124]
 508 0378 1A46     	 mov r2,r3
 509 037a 4FEAE273 	 asr r3,r2,#31
 510 037e D7E92801 	 ldrd r0,[r7,#160]
 511 0382 1218     	 adds r2,r2,r0
 512 0384 43EB0103 	 adc r3,r3,r1
 513 0388 C7E92823 	 strd r2,[r7,#160]
 380:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****           sumImag += (q63_t) prod2;
 514              	 .loc 1 380 0
 515 038c BB6F     	 ldr r3,[r7,#120]
 516 038e 1A46     	 mov r2,r3
 517 0390 4FEAE273 	 asr r3,r2,#31
 518 0394 D7E92601 	 ldrd r0,[r7,#152]
 519 0398 1218     	 adds r2,r2,r0
 520 039a 43EB0103 	 adc r3,r3,r1
 521 039e C7E92623 	 strd r2,[r7,#152]
 522              	.L15:
 381:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 382:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** #endif /*      #ifdef UNALIGNED_SUPPORT_DISABLE */
 383:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 384:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         }
 385:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 386:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Saturate and store the result in the destination buffer */
 387:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 388:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *px++ = (q15_t) (__SSAT(sumReal >> 15, 16));
 523              	 .loc 1 388 0
 524 03a2 7969     	 ldr r1,[r7,#20]
 525 03a4 8B1C     	 adds r3,r1,#2
 526 03a6 7B61     	 str r3,[r7,#20]
 527              	.LBB28:
 528 03a8 D7E92823 	 ldrd r2,[r7,#160]
 529 03ac D40B     	 lsrs r4,r2,#15
 530 03ae 44EA4344 	 orr r4,r4,r3,lsl#17
 531 03b2 DD13     	 asrs r5,r3,#15
 532 03b4 2346     	 mov r3,r4
 533 03b6 7B67     	 str r3,[r7,#116]
 534 03b8 7B6F     	 ldr r3,[r7,#116]
 535              	
 536 03ba 03F30F03 	 ssat r3,#16,r3
 537              	
 538              	 .thumb
 539 03be 3B67     	 str r3,[r7,#112]
 540 03c0 3B6F     	 ldr r3,[r7,#112]
 541              	.LBE28:
 542 03c2 9BB2     	 uxth r3,r3
 543 03c4 0B80     	 strh r3,[r1]
 389:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         *px++ = (q15_t) (__SSAT(sumImag >> 15, 16));
 544              	 .loc 1 389 0
 545 03c6 7969     	 ldr r1,[r7,#20]
 546 03c8 8B1C     	 adds r3,r1,#2
 547 03ca 7B61     	 str r3,[r7,#20]
 548              	.LBB29:
 549 03cc D7E92623 	 ldrd r2,[r7,#152]
 550 03d0 4FEAD238 	 lsr r8,r2,#15
 551 03d4 48EA4348 	 orr r8,r8,r3,lsl#17
 552 03d8 4FEAE339 	 asr r9,r3,#15
 553 03dc 4346     	 mov r3,r8
 554 03de FB66     	 str r3,[r7,#108]
 555 03e0 FB6E     	 ldr r3,[r7,#108]
 556              	
 557 03e2 03F30F03 	 ssat r3,#16,r3
 558              	
 559              	 .thumb
 560 03e6 BB66     	 str r3,[r7,#104]
 561 03e8 BB6E     	 ldr r3,[r7,#104]
 562              	.LBE29:
 563 03ea 9BB2     	 uxth r3,r3
 564 03ec 0B80     	 strh r3,[r1]
 390:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 391:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         /* Decrement the column loop counter */
 392:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****         col--;
 565              	 .loc 1 392 0
 566 03ee B7F8B630 	 ldrh r3,[r7,#182]
 567 03f2 013B     	 subs r3,r3,#1
 568 03f4 A7F8B630 	 strh r3,[r7,#182]
 393:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 394:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       } while (col > 0u);
 569              	 .loc 1 394 0
 570 03f8 B7F8B630 	 ldrh r3,[r7,#182]
 571 03fc 002B     	 cmp r3,#0
 572 03fe 7FF4E7AE 	 bne .L18
 395:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 396:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       i = i + numColsA;
 573              	 .loc 1 396 0
 574 0402 B7F8B420 	 ldrh r2,[r7,#180]
 575 0406 B7F88E30 	 ldrh r3,[r7,#142]
 576 040a 1344     	 add r3,r3,r2
 577 040c A7F8B430 	 strh r3,[r7,#180]
 397:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 398:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       /* Decrement the row loop counter */
 399:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****       row--;
 578              	 .loc 1 399 0
 579 0410 B7F8B230 	 ldrh r3,[r7,#178]
 580 0414 013B     	 subs r3,r3,#1
 581 0416 A7F8B230 	 strh r3,[r7,#178]
 400:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 401:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     } while (row > 0u);
 582              	 .loc 1 401 0
 583 041a B7F8B230 	 ldrh r3,[r7,#178]
 584 041e 002B     	 cmp r3,#0
 585 0420 7FF4CFAE 	 bne .L19
 402:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 403:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     /* set status as ARM_MATH_SUCCESS */
 404:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****     status = ARM_MATH_SUCCESS;
 586              	 .loc 1 404 0
 587 0424 0023     	 movs r3,#0
 588 0426 87F8AF30 	 strb r3,[r7,#175]
 589              	.L4:
 405:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   }
 406:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** 
 407:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   /* Return to application */
 408:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c ****   return (status);
 590              	 .loc 1 408 0
 591 042a 97F8AF30 	 ldrb r3,[r7,#175]
 592 042e 5BB2     	 sxtb r3,r3
 409:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q15.c **** }
 593              	 .loc 1 409 0
 594 0430 1846     	 mov r0,r3
 595 0432 BC37     	 adds r7,r7,#188
 596              	.LCFI3:
 597              	 .cfi_def_cfa_offset 20
 598 0434 BD46     	 mov sp,r7
 599              	.LCFI4:
 600              	 .cfi_def_cfa_register 13
 601              	 
 602 0436 BDE8B003 	 pop {r4,r5,r7,r8,r9}
 603              	.LCFI5:
 604              	 .cfi_restore 9
 605              	 .cfi_restore 8
 606              	 .cfi_restore 7
 607              	 .cfi_restore 5
 608              	 .cfi_restore 4
 609              	 .cfi_def_cfa_offset 0
 610 043a 7047     	 bx lr
 611              	 .cfi_endproc
 612              	.LFE135:
 614              	 .text
 615              	.Letext0:
 616              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 617              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 618              	 .file 5 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_cmplx_mult_q15.c
    {standard input}:20     .text.arm_mat_cmplx_mult_q15:00000000 $t
    {standard input}:25     .text.arm_mat_cmplx_mult_q15:00000000 arm_mat_cmplx_mult_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
