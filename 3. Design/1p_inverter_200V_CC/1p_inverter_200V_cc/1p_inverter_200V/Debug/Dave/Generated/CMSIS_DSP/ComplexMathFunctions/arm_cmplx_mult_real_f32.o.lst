   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_cmplx_mult_real_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_cmplx_mult_real_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_cmplx_mult_real_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_cmplx_mult_real_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Title:        arm_cmplx_mult_real_f32.c
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Description:  Floating-point complex by real multiplication
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @ingroup groupCmplxMath
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @defgroup CmplxByRealMult Complex-by-Real Multiplication
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Multiplies a complex vector by a real vector and generates a complex result.
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * The data in the complex arrays is stored in an interleaved fashion
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * (real, imag, real, imag, ...).
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * The parameter <code>numSamples</code> represents the number of complex
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * samples processed.  The complex arrays have a total of <code>2*numSamples</code>
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * real values while the real array has a total of <code>numSamples</code>
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * real values.
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * The underlying algorithm is used:
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * <pre>
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * for(n=0; n<numSamples; n++) {
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *     pCmplxDst[(2*n)+0] = pSrcCmplx[(2*n)+0] * pSrcReal[n];
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *     pCmplxDst[(2*n)+1] = pSrcCmplx[(2*n)+1] * pSrcReal[n];
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * }
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * </pre>
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * There are separate functions for floating-point, Q15, and Q31 data types.
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @addtogroup CmplxByRealMult
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @{
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @brief  Floating-point complex-by-real multiplication
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @param[in]  *pSrcCmplx points to the complex input vector
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @param[in]  *pSrcReal points to the real input vector
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @param[out]  *pCmplxDst points to the complex output vector
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @param[in]  numSamples number of samples in each vector
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @return none.
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** void arm_cmplx_mult_real_f32(
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t * pSrcCmplx,
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t * pSrcReal,
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t * pCmplxDst,
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   uint32_t numSamples)
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** {
  28              	 .loc 1 78 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 9BB0     	 sub sp,sp,#108
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 112
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t in;                                  /* Temporary variable to store input value */
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   uint32_t blkCnt;                               /* loop counters */
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #if defined (ARM_MATH_DSP)
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t inA1, inA2, inA3, inA4;              /* Temporary variables to hold input data */
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t inA5, inA6, inA7, inA8;              /* Temporary variables to hold input data */
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t inB1, inB2, inB3, inB4;              /* Temporary variables to hold input data */
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t out1, out2, out3, out4;              /* Temporary variables to hold output data */
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t out5, out6, out7, out8;              /* Temporary variables to hold output data */
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* loop Unrolling */
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   blkCnt = numSamples >> 2u;
  47              	 .loc 1 92 0
  48 000e 3B68     	 ldr r3,[r7]
  49 0010 9B08     	 lsrs r3,r3,#2
  50 0012 7B66     	 str r3,[r7,#100]
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   while (blkCnt > 0u)
  51              	 .loc 1 96 0
  52 0014 8EE0     	 b .L2
  53              	.L3:
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   {
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i] = A[2 * i] * B[i].            */
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i].        */
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA1 = pSrcCmplx[0];
  54              	 .loc 1 101 0
  55 0016 FB68     	 ldr r3,[r7,#12]
  56 0018 1B68     	 ldr r3,[r3]
  57 001a 3B66     	 str r3,[r7,#96]
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA2 = pSrcCmplx[1];
  58              	 .loc 1 102 0
  59 001c FB68     	 ldr r3,[r7,#12]
  60 001e 5B68     	 ldr r3,[r3,#4]
  61 0020 FB65     	 str r3,[r7,#92]
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from real input buffer */
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inB1 = pSrcReal[0];
  62              	 .loc 1 104 0
  63 0022 BB68     	 ldr r3,[r7,#8]
  64 0024 1B68     	 ldr r3,[r3]
  65 0026 BB65     	 str r3,[r7,#88]
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA3 = pSrcCmplx[2];
  66              	 .loc 1 107 0
  67 0028 FB68     	 ldr r3,[r7,#12]
  68 002a 9B68     	 ldr r3,[r3,#8]
  69 002c 7B65     	 str r3,[r7,#84]
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer real input with real buffer input */
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out1 = inA1 * inB1;
  70              	 .loc 1 110 0
  71 002e 97ED187A 	 flds s14,[r7,#96]
  72 0032 D7ED167A 	 flds s15,[r7,#88]
  73 0036 67EE277A 	 fmuls s15,s14,s15
  74 003a C7ED147A 	 fsts s15,[r7,#80]
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA4 = pSrcCmplx[3];
  75              	 .loc 1 113 0
  76 003e FB68     	 ldr r3,[r7,#12]
  77 0040 DB68     	 ldr r3,[r3,#12]
  78 0042 FB64     	 str r3,[r7,#76]
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer imaginary input with real buffer input */
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out2 = inA2 * inB1;
  79              	 .loc 1 116 0
  80 0044 97ED177A 	 flds s14,[r7,#92]
  81 0048 D7ED167A 	 flds s15,[r7,#88]
  82 004c 67EE277A 	 fmuls s15,s14,s15
  83 0050 C7ED127A 	 fsts s15,[r7,#72]
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from real input buffer */
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inB2 = pSrcReal[1];
  84              	 .loc 1 119 0
  85 0054 BB68     	 ldr r3,[r7,#8]
  86 0056 5B68     	 ldr r3,[r3,#4]
  87 0058 7B64     	 str r3,[r7,#68]
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA5 = pSrcCmplx[4];
  88              	 .loc 1 121 0
  89 005a FB68     	 ldr r3,[r7,#12]
  90 005c 1B69     	 ldr r3,[r3,#16]
  91 005e 3B64     	 str r3,[r7,#64]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer real input with real buffer input */
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out3 = inA3 * inB2;
  92              	 .loc 1 124 0
  93 0060 97ED157A 	 flds s14,[r7,#84]
  94 0064 D7ED117A 	 flds s15,[r7,#68]
  95 0068 67EE277A 	 fmuls s15,s14,s15
  96 006c C7ED0F7A 	 fsts s15,[r7,#60]
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA6 = pSrcCmplx[5];
  97              	 .loc 1 127 0
  98 0070 FB68     	 ldr r3,[r7,#12]
  99 0072 5B69     	 ldr r3,[r3,#20]
 100 0074 BB63     	 str r3,[r7,#56]
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from real input buffer */
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inB3 = pSrcReal[2];
 101              	 .loc 1 129 0
 102 0076 BB68     	 ldr r3,[r7,#8]
 103 0078 9B68     	 ldr r3,[r3,#8]
 104 007a 7B63     	 str r3,[r7,#52]
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer imaginary input with real buffer input */
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out4 = inA4 * inB2;
 105              	 .loc 1 132 0
 106 007c 97ED137A 	 flds s14,[r7,#76]
 107 0080 D7ED117A 	 flds s15,[r7,#68]
 108 0084 67EE277A 	 fmuls s15,s14,s15
 109 0088 C7ED0C7A 	 fsts s15,[r7,#48]
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA7 = pSrcCmplx[6];
 110              	 .loc 1 135 0
 111 008c FB68     	 ldr r3,[r7,#12]
 112 008e 9B69     	 ldr r3,[r3,#24]
 113 0090 FB62     	 str r3,[r7,#44]
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer real input with real buffer input */
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out5 = inA5 * inB3;
 114              	 .loc 1 138 0
 115 0092 97ED107A 	 flds s14,[r7,#64]
 116 0096 D7ED0D7A 	 flds s15,[r7,#52]
 117 009a 67EE277A 	 fmuls s15,s14,s15
 118 009e C7ED0A7A 	 fsts s15,[r7,#40]
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA8 = pSrcCmplx[7];
 119              	 .loc 1 141 0
 120 00a2 FB68     	 ldr r3,[r7,#12]
 121 00a4 DB69     	 ldr r3,[r3,#28]
 122 00a6 7B62     	 str r3,[r7,#36]
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer imaginary input with real buffer input */
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out6 = inA6 * inB3;
 123              	 .loc 1 144 0
 124 00a8 97ED0E7A 	 flds s14,[r7,#56]
 125 00ac D7ED0D7A 	 flds s15,[r7,#52]
 126 00b0 67EE277A 	 fmuls s15,s14,s15
 127 00b4 C7ED087A 	 fsts s15,[r7,#32]
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from real input buffer */
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inB4 = pSrcReal[3];
 128              	 .loc 1 147 0
 129 00b8 BB68     	 ldr r3,[r7,#8]
 130 00ba DB68     	 ldr r3,[r3,#12]
 131 00bc FB61     	 str r3,[r7,#28]
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result to destination bufer */
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[0] = out1;
 132              	 .loc 1 150 0
 133 00be 7B68     	 ldr r3,[r7,#4]
 134 00c0 3A6D     	 ldr r2,[r7,#80]
 135 00c2 1A60     	 str r2,[r3]
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer real input with real buffer input */
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out7 = inA7 * inB4;
 136              	 .loc 1 153 0
 137 00c4 97ED0B7A 	 flds s14,[r7,#44]
 138 00c8 D7ED077A 	 flds s15,[r7,#28]
 139 00cc 67EE277A 	 fmuls s15,s14,s15
 140 00d0 C7ED067A 	 fsts s15,[r7,#24]
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result to destination bufer */
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[1] = out2;
 141              	 .loc 1 156 0
 142 00d4 7B68     	 ldr r3,[r7,#4]
 143 00d6 0433     	 adds r3,r3,#4
 144 00d8 BA6C     	 ldr r2,[r7,#72]
 145 00da 1A60     	 str r2,[r3]
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer imaginary input with real buffer input */
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out8 = inA8 * inB4;
 146              	 .loc 1 159 0
 147 00dc 97ED097A 	 flds s14,[r7,#36]
 148 00e0 D7ED077A 	 flds s15,[r7,#28]
 149 00e4 67EE277A 	 fmuls s15,s14,s15
 150 00e8 C7ED057A 	 fsts s15,[r7,#20]
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result to destination bufer */
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[2] = out3;
 151              	 .loc 1 162 0
 152 00ec 7B68     	 ldr r3,[r7,#4]
 153 00ee 0833     	 adds r3,r3,#8
 154 00f0 FA6B     	 ldr r2,[r7,#60]
 155 00f2 1A60     	 str r2,[r3]
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[3] = out4;
 156              	 .loc 1 163 0
 157 00f4 7B68     	 ldr r3,[r7,#4]
 158 00f6 0C33     	 adds r3,r3,#12
 159 00f8 3A6B     	 ldr r2,[r7,#48]
 160 00fa 1A60     	 str r2,[r3]
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[4] = out5;
 161              	 .loc 1 164 0
 162 00fc 7B68     	 ldr r3,[r7,#4]
 163 00fe 1033     	 adds r3,r3,#16
 164 0100 BA6A     	 ldr r2,[r7,#40]
 165 0102 1A60     	 str r2,[r3]
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* incremnet complex input buffer by 8 to process next samples */
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pSrcCmplx += 8u;
 166              	 .loc 1 167 0
 167 0104 FB68     	 ldr r3,[r7,#12]
 168 0106 2033     	 adds r3,r3,#32
 169 0108 FB60     	 str r3,[r7,#12]
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result to destination bufer */
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[5] = out6;
 170              	 .loc 1 170 0
 171 010a 7B68     	 ldr r3,[r7,#4]
 172 010c 1433     	 adds r3,r3,#20
 173 010e 3A6A     	 ldr r2,[r7,#32]
 174 0110 1A60     	 str r2,[r3]
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* increment real input buffer by 4 to process next samples */
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pSrcReal += 4u;
 175              	 .loc 1 173 0
 176 0112 BB68     	 ldr r3,[r7,#8]
 177 0114 1033     	 adds r3,r3,#16
 178 0116 BB60     	 str r3,[r7,#8]
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result to destination bufer */
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[6] = out7;
 179              	 .loc 1 176 0
 180 0118 7B68     	 ldr r3,[r7,#4]
 181 011a 1833     	 adds r3,r3,#24
 182 011c BA69     	 ldr r2,[r7,#24]
 183 011e 1A60     	 str r2,[r3]
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[7] = out8;
 184              	 .loc 1 177 0
 185 0120 7B68     	 ldr r3,[r7,#4]
 186 0122 1C33     	 adds r3,r3,#28
 187 0124 7A69     	 ldr r2,[r7,#20]
 188 0126 1A60     	 str r2,[r3]
 178:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 179:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* increment destination buffer by 8 to process next sampels */
 180:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst += 8u;
 189              	 .loc 1 180 0
 190 0128 7B68     	 ldr r3,[r7,#4]
 191 012a 2033     	 adds r3,r3,#32
 192 012c 7B60     	 str r3,[r7,#4]
 181:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 182:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* Decrement the numSamples loop counter */
 183:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     blkCnt--;
 193              	 .loc 1 183 0
 194 012e 7B6E     	 ldr r3,[r7,#100]
 195 0130 013B     	 subs r3,r3,#1
 196 0132 7B66     	 str r3,[r7,#100]
 197              	.L2:
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   {
 198              	 .loc 1 96 0
 199 0134 7B6E     	 ldr r3,[r7,#100]
 200 0136 002B     	 cmp r3,#0
 201 0138 7FF46DAF 	 bne .L3
 184:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   }
 185:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 186:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 187:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****    ** No loop unrolling is used. */
 188:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   blkCnt = numSamples % 0x4u;
 202              	 .loc 1 188 0
 203 013c 3B68     	 ldr r3,[r7]
 204 013e 03F00303 	 and r3,r3,#3
 205 0142 7B66     	 str r3,[r7,#100]
 189:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 190:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #else
 191:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 192:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* Run the below code for Cortex-M0 */
 193:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   blkCnt = numSamples;
 194:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 195:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 196:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 197:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   while (blkCnt > 0u)
 206              	 .loc 1 197 0
 207 0144 23E0     	 b .L4
 208              	.L5:
 198:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   {
 199:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i] = A[2 * i] * B[i].            */
 200:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i].        */
 201:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     in = *pSrcReal++;
 209              	 .loc 1 201 0
 210 0146 BB68     	 ldr r3,[r7,#8]
 211 0148 1A1D     	 adds r2,r3,#4
 212 014a BA60     	 str r2,[r7,#8]
 213 014c 1B68     	 ldr r3,[r3]
 214 014e 3B61     	 str r3,[r7,#16]
 202:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store the result in the destination buffer. */
 203:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = (*pSrcCmplx++) * (in);
 215              	 .loc 1 203 0
 216 0150 7B68     	 ldr r3,[r7,#4]
 217 0152 1A1D     	 adds r2,r3,#4
 218 0154 7A60     	 str r2,[r7,#4]
 219 0156 FA68     	 ldr r2,[r7,#12]
 220 0158 111D     	 adds r1,r2,#4
 221 015a F960     	 str r1,[r7,#12]
 222 015c 92ED007A 	 flds s14,[r2]
 223 0160 D7ED047A 	 flds s15,[r7,#16]
 224 0164 67EE277A 	 fmuls s15,s14,s15
 225 0168 C3ED007A 	 fsts s15,[r3]
 204:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = (*pSrcCmplx++) * (in);
 226              	 .loc 1 204 0
 227 016c 7B68     	 ldr r3,[r7,#4]
 228 016e 1A1D     	 adds r2,r3,#4
 229 0170 7A60     	 str r2,[r7,#4]
 230 0172 FA68     	 ldr r2,[r7,#12]
 231 0174 111D     	 adds r1,r2,#4
 232 0176 F960     	 str r1,[r7,#12]
 233 0178 92ED007A 	 flds s14,[r2]
 234 017c D7ED047A 	 flds s15,[r7,#16]
 235 0180 67EE277A 	 fmuls s15,s14,s15
 236 0184 C3ED007A 	 fsts s15,[r3]
 205:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 206:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* Decrement the numSamples loop counter */
 207:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     blkCnt--;
 237              	 .loc 1 207 0
 238 0188 7B6E     	 ldr r3,[r7,#100]
 239 018a 013B     	 subs r3,r3,#1
 240 018c 7B66     	 str r3,[r7,#100]
 241              	.L4:
 197:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   {
 242              	 .loc 1 197 0
 243 018e 7B6E     	 ldr r3,[r7,#100]
 244 0190 002B     	 cmp r3,#0
 245 0192 D8D1     	 bne .L5
 208:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   }
 209:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** }
 246              	 .loc 1 209 0
 247 0194 6C37     	 adds r7,r7,#108
 248              	.LCFI3:
 249              	 .cfi_def_cfa_offset 4
 250 0196 BD46     	 mov sp,r7
 251              	.LCFI4:
 252              	 .cfi_def_cfa_register 13
 253              	 
 254 0198 5DF8047B 	 ldr r7,[sp],#4
 255              	.LCFI5:
 256              	 .cfi_restore 7
 257              	 .cfi_def_cfa_offset 0
 258 019c 7047     	 bx lr
 259              	 .cfi_endproc
 260              	.LFE135:
 262 019e 00BF     	 .text
 263              	.Letext0:
 264              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 265              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 266              	 .file 4 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mult_real_f32.c
    {standard input}:20     .text.arm_cmplx_mult_real_f32:00000000 $t
    {standard input}:25     .text.arm_cmplx_mult_real_f32:00000000 arm_cmplx_mult_real_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
