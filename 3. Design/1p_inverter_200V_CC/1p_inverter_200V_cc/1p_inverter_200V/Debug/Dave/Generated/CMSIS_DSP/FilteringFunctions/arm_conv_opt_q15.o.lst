   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_opt_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_opt_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_opt_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_opt_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * Title:        arm_conv_opt_q15.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * Description:  Convolution of Q15 sequences
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @addtogroup Conv
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @brief Convolution of Q15 sequences.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @param[in] srcALen length of the first input sequence.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @param[in] srcBLen length of the second input sequence.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @param[out] *pDst points to the location where the output result is written.  Length srcALen+src
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @param[in]  *pScratch1 points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, s
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @param[in]  *pScratch2 points to scratch buffer of size min(srcALen, srcBLen).
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @return none.
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * \par Restrictions
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *  If the silicon does not support unaligned memory access enable the macro UNALIGNED_SUPPORT_DISA
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *	In this case input, output, scratch1 and scratch2 buffers should be aligned by 32-bit
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * @details
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * \par
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * The function is implemented using a 64-bit internal accumulator.
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * Both inputs are in 1.15 format and multiplications yield a 2.30 result.
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * This approach provides 33 guard bits and there is no risk of overflow.
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * The 34.30 result is then truncated to 34.15 format by discarding the low 15 bits and then satura
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * \par
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  * Refer to <code>arm_conv_fast_q15()</code> for a faster but less precise version of this function
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  *
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****  */
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** void arm_conv_opt_q15(
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t * pSrcA,
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   uint32_t srcALen,
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t * pSrcB,
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   uint32_t srcBLen,
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t * pDst,
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t * pScratch1,
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t * pScratch2)
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** {
  28              	 .loc 1 81 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 2DE9904F 	 push {r4,r7,r8,r9,r10,fp,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 28
  35              	 .cfi_offset 4,-28
  36              	 .cfi_offset 7,-24
  37              	 .cfi_offset 8,-20
  38              	 .cfi_offset 9,-16
  39              	 .cfi_offset 10,-12
  40              	 .cfi_offset 11,-8
  41              	 .cfi_offset 14,-4
  42 0004 DDB0     	 sub sp,sp,#372
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 400
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 07F12404 	 add r4,r7,#36
  49 000c 2060     	 str r0,[r4]
  50 000e 07F12000 	 add r0,r7,#32
  51 0012 0160     	 str r1,[r0]
  52 0014 07F11C01 	 add r1,r7,#28
  53 0018 0A60     	 str r2,[r1]
  54 001a 07F11802 	 add r2,r7,#24
  55 001e 1360     	 str r3,[r2]
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q63_t acc0, acc1, acc2, acc3;                  /* Accumulator */
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q31_t x1, x2, x3;                              /* Temporary variables to hold state and coefficie
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q31_t y1, y2;                                  /* State variables */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t *pOut = pDst;                            /* output pointer */
  56              	 .loc 1 85 0
  57 0020 07F16C03 	 add r3,r7,#108
  58 0024 D7F89021 	 ldr r2,[r7,#400]
  59 0028 1A60     	 str r2,[r3]
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch1 */
  60              	 .loc 1 86 0
  61 002a 07F16803 	 add r3,r7,#104
  62 002e D7F89421 	 ldr r2,[r7,#404]
  63 0032 1A60     	 str r2,[r3]
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t *pScr2 = pScratch2;                      /* Temporary pointer for scratch1 */
  64              	 .loc 1 87 0
  65 0034 D7F89831 	 ldr r3,[r7,#408]
  66 0038 C7F84431 	 str r3,[r7,#324]
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t *pIn1;                                   /* inputA pointer */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t *pIn2;                                   /* inputB pointer */
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   uint32_t j, k, blkCnt;                         /* loop counter */
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   uint32_t tapCnt;                               /* loop count */
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifdef UNALIGNED_SUPPORT_DISABLE
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   q15_t a, b;
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* srcB is always made to slide across srcA. */
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   if (srcALen >= srcBLen)
  67              	 .loc 1 103 0
  68 003c 07F12002 	 add r2,r7,#32
  69 0040 07F11803 	 add r3,r7,#24
  70 0044 1268     	 ldr r2,[r2]
  71 0046 1B68     	 ldr r3,[r3]
  72 0048 9A42     	 cmp r2,r3
  73 004a 0AD3     	 bcc .L2
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Initialization of inputA pointer */
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pIn1 = pSrcA;
  74              	 .loc 1 106 0
  75 004c 07F12403 	 add r3,r7,#36
  76 0050 1B68     	 ldr r3,[r3]
  77 0052 C7F84031 	 str r3,[r7,#320]
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Initialization of inputB pointer */
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pIn2 = pSrcB;
  78              	 .loc 1 109 0
  79 0056 07F11C03 	 add r3,r7,#28
  80 005a 1B68     	 ldr r3,[r3]
  81 005c C7F83C31 	 str r3,[r7,#316]
  82 0060 19E0     	 b .L3
  83              	.L2:
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   }
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   else
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Initialization of inputA pointer */
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pIn1 = pSrcB;
  84              	 .loc 1 115 0
  85 0062 07F11C03 	 add r3,r7,#28
  86 0066 1B68     	 ldr r3,[r3]
  87 0068 C7F84031 	 str r3,[r7,#320]
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Initialization of inputB pointer */
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pIn2 = pSrcA;
  88              	 .loc 1 118 0
  89 006c 07F12403 	 add r3,r7,#36
  90 0070 1B68     	 ldr r3,[r3]
  91 0072 C7F83C31 	 str r3,[r7,#316]
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     j = srcBLen;
  92              	 .loc 1 121 0
  93 0076 07F11803 	 add r3,r7,#24
  94 007a 1B68     	 ldr r3,[r3]
  95 007c C7F82831 	 str r3,[r7,#296]
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     srcBLen = srcALen;
  96              	 .loc 1 122 0
  97 0080 07F11803 	 add r3,r7,#24
  98 0084 07F12002 	 add r2,r7,#32
  99 0088 1268     	 ldr r2,[r2]
 100 008a 1A60     	 str r2,[r3]
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     srcALen = j;
 101              	 .loc 1 123 0
 102 008c 07F12003 	 add r3,r7,#32
 103 0090 D7F82821 	 ldr r2,[r7,#296]
 104 0094 1A60     	 str r2,[r3]
 105              	.L3:
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   }
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* pointer to take end of scratch2 buffer */
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   pScr2 = pScratch2 + srcBLen - 1;
 106              	 .loc 1 127 0
 107 0096 07F11803 	 add r3,r7,#24
 108 009a 1B68     	 ldr r3,[r3]
 109 009c 03F10043 	 add r3,r3,#-2147483648
 110 00a0 013B     	 subs r3,r3,#1
 111 00a2 5B00     	 lsls r3,r3,#1
 112 00a4 D7F89821 	 ldr r2,[r7,#408]
 113 00a8 1344     	 add r3,r3,r2
 114 00aa C7F84431 	 str r3,[r7,#324]
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* points to smaller length sequence */
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   px = pIn2;
 115              	 .loc 1 130 0
 116 00ae D7F83C31 	 ldr r3,[r7,#316]
 117 00b2 C7F83831 	 str r3,[r7,#312]
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   k = srcBLen >> 2u;
 118              	 .loc 1 133 0
 119 00b6 07F11803 	 add r3,r7,#24
 120 00ba 1B68     	 ldr r3,[r3]
 121 00bc 9B08     	 lsrs r3,r3,#2
 122 00be C7F83431 	 str r3,[r7,#308]
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Copy smaller length input sequence in reverse order into second scratch buffer */
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   while (k > 0u)
 123              	 .loc 1 138 0
 124 00c2 34E0     	 b .L4
 125              	.L5:
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* copy second buffer in reversal manner */
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr2-- = *px++;
 126              	 .loc 1 141 0
 127 00c4 D7F84431 	 ldr r3,[r7,#324]
 128 00c8 9A1E     	 subs r2,r3,#2
 129 00ca C7F84421 	 str r2,[r7,#324]
 130 00ce D7F83821 	 ldr r2,[r7,#312]
 131 00d2 911C     	 adds r1,r2,#2
 132 00d4 C7F83811 	 str r1,[r7,#312]
 133 00d8 1288     	 ldrh r2,[r2]
 134 00da 1A80     	 strh r2,[r3]
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr2-- = *px++;
 135              	 .loc 1 142 0
 136 00dc D7F84431 	 ldr r3,[r7,#324]
 137 00e0 9A1E     	 subs r2,r3,#2
 138 00e2 C7F84421 	 str r2,[r7,#324]
 139 00e6 D7F83821 	 ldr r2,[r7,#312]
 140 00ea 911C     	 adds r1,r2,#2
 141 00ec C7F83811 	 str r1,[r7,#312]
 142 00f0 1288     	 ldrh r2,[r2]
 143 00f2 1A80     	 strh r2,[r3]
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr2-- = *px++;
 144              	 .loc 1 143 0
 145 00f4 D7F84431 	 ldr r3,[r7,#324]
 146 00f8 9A1E     	 subs r2,r3,#2
 147 00fa C7F84421 	 str r2,[r7,#324]
 148 00fe D7F83821 	 ldr r2,[r7,#312]
 149 0102 911C     	 adds r1,r2,#2
 150 0104 C7F83811 	 str r1,[r7,#312]
 151 0108 1288     	 ldrh r2,[r2]
 152 010a 1A80     	 strh r2,[r3]
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr2-- = *px++;
 153              	 .loc 1 144 0
 154 010c D7F84431 	 ldr r3,[r7,#324]
 155 0110 9A1E     	 subs r2,r3,#2
 156 0112 C7F84421 	 str r2,[r7,#324]
 157 0116 D7F83821 	 ldr r2,[r7,#312]
 158 011a 911C     	 adds r1,r2,#2
 159 011c C7F83811 	 str r1,[r7,#312]
 160 0120 1288     	 ldrh r2,[r2]
 161 0122 1A80     	 strh r2,[r3]
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Decrement the loop counter */
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     k--;
 162              	 .loc 1 147 0
 163 0124 D7F83431 	 ldr r3,[r7,#308]
 164 0128 013B     	 subs r3,r3,#1
 165 012a C7F83431 	 str r3,[r7,#308]
 166              	.L4:
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 167              	 .loc 1 138 0
 168 012e D7F83431 	 ldr r3,[r7,#308]
 169 0132 002B     	 cmp r3,#0
 170 0134 C6D1     	 bne .L5
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   }
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****    ** No loop unrolling is used. */
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   k = srcBLen % 0x4u;
 171              	 .loc 1 152 0
 172 0136 07F11803 	 add r3,r7,#24
 173 013a 1B68     	 ldr r3,[r3]
 174 013c 03F00303 	 and r3,r3,#3
 175 0140 C7F83431 	 str r3,[r7,#308]
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   while (k > 0u)
 176              	 .loc 1 154 0
 177 0144 10E0     	 b .L6
 178              	.L7:
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr2-- = *px++;
 179              	 .loc 1 157 0
 180 0146 D7F84431 	 ldr r3,[r7,#324]
 181 014a 9A1E     	 subs r2,r3,#2
 182 014c C7F84421 	 str r2,[r7,#324]
 183 0150 D7F83821 	 ldr r2,[r7,#312]
 184 0154 911C     	 adds r1,r2,#2
 185 0156 C7F83811 	 str r1,[r7,#312]
 186 015a 1288     	 ldrh r2,[r2]
 187 015c 1A80     	 strh r2,[r3]
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Decrement the loop counter */
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     k--;
 188              	 .loc 1 160 0
 189 015e D7F83431 	 ldr r3,[r7,#308]
 190 0162 013B     	 subs r3,r3,#1
 191 0164 C7F83431 	 str r3,[r7,#308]
 192              	.L6:
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 193              	 .loc 1 154 0
 194 0168 D7F83431 	 ldr r3,[r7,#308]
 195 016c 002B     	 cmp r3,#0
 196 016e EAD1     	 bne .L7
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   }
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Initialze temporary scratch pointer */
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   pScr1 = pScratch1;
 197              	 .loc 1 164 0
 198 0170 07F16803 	 add r3,r7,#104
 199 0174 D7F89421 	 ldr r2,[r7,#404]
 200 0178 1A60     	 str r2,[r3]
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Assuming scratch1 buffer is aligned by 32-bit */
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Fill (srcBLen - 1u) zeros in scratch buffer */
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1u));
 201              	 .loc 1 168 0
 202 017a 07F16803 	 add r3,r7,#104
 203 017e 1A68     	 ldr r2,[r3]
 204 0180 07F11803 	 add r3,r7,#24
 205 0184 1B68     	 ldr r3,[r3]
 206 0186 013B     	 subs r3,r3,#1
 207 0188 0020     	 movs r0,#0
 208 018a 1146     	 mov r1,r2
 209 018c 1A46     	 mov r2,r3
 210 018e FFF7FEFF 	 bl arm_fill_q15
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Update temporary scratch pointer */
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   pScr1 += (srcBLen - 1u);
 211              	 .loc 1 171 0
 212 0192 07F16803 	 add r3,r7,#104
 213 0196 1A68     	 ldr r2,[r3]
 214 0198 07F11803 	 add r3,r7,#24
 215 019c 1B68     	 ldr r3,[r3]
 216 019e 03F10043 	 add r3,r3,#-2147483648
 217 01a2 013B     	 subs r3,r3,#1
 218 01a4 5B00     	 lsls r3,r3,#1
 219 01a6 1A44     	 add r2,r2,r3
 220 01a8 07F16803 	 add r3,r7,#104
 221 01ac 1A60     	 str r2,[r3]
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Copy bigger length sequence(srcALen) samples in scratch1 buffer */
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Copy (srcALen) samples in scratch buffer */
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   arm_copy_q15(pIn1, pScr1, srcALen);
 222              	 .loc 1 178 0
 223 01ae 07F16803 	 add r3,r7,#104
 224 01b2 1A68     	 ldr r2,[r3]
 225 01b4 07F12003 	 add r3,r7,#32
 226 01b8 D7F84001 	 ldr r0,[r7,#320]
 227 01bc 1146     	 mov r1,r2
 228 01be 1A68     	 ldr r2,[r3]
 229 01c0 FFF7FEFF 	 bl arm_copy_q15
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Update pointers */
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   pScr1 += srcALen;
 230              	 .loc 1 181 0
 231 01c4 07F16803 	 add r3,r7,#104
 232 01c8 1A68     	 ldr r2,[r3]
 233 01ca 07F12003 	 add r3,r7,#32
 234 01ce 1B68     	 ldr r3,[r3]
 235 01d0 5B00     	 lsls r3,r3,#1
 236 01d2 1A44     	 add r2,r2,r3
 237 01d4 07F16803 	 add r3,r7,#104
 238 01d8 1A60     	 str r2,[r3]
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   k = srcALen >> 2u;
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   while (k > 0u)
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* copy second buffer in reversal manner */
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr1++ = *pIn1++;
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr1++ = *pIn1++;
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr1++ = *pIn1++;
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr1++ = *pIn1++;
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Decrement the loop counter */
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     k--;
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   }
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****    ** No loop unrolling is used. */
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   k = srcALen % 0x4u;
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   while (k > 0u)
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr1++ = *pIn1++;
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Decrement the loop counter */
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     k--;
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   }
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Fill (srcBLen - 1u) zeros at end of scratch buffer */
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1u));
 239              	 .loc 1 221 0
 240 01da 07F16803 	 add r3,r7,#104
 241 01de 1A68     	 ldr r2,[r3]
 242 01e0 07F11803 	 add r3,r7,#24
 243 01e4 1B68     	 ldr r3,[r3]
 244 01e6 013B     	 subs r3,r3,#1
 245 01e8 0020     	 movs r0,#0
 246 01ea 1146     	 mov r1,r2
 247 01ec 1A46     	 mov r2,r3
 248 01ee FFF7FEFF 	 bl arm_fill_q15
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Update pointer */
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   pScr1 += (srcBLen - 1u);
 249              	 .loc 1 224 0
 250 01f2 07F16803 	 add r3,r7,#104
 251 01f6 1A68     	 ldr r2,[r3]
 252 01f8 07F11803 	 add r3,r7,#24
 253 01fc 1B68     	 ldr r3,[r3]
 254 01fe 03F10043 	 add r3,r3,#-2147483648
 255 0202 013B     	 subs r3,r3,#1
 256 0204 5B00     	 lsls r3,r3,#1
 257 0206 1A44     	 add r2,r2,r3
 258 0208 07F16803 	 add r3,r7,#104
 259 020c 1A60     	 str r2,[r3]
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   k = (srcBLen - 1u) >> 2u;
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   while (k > 0u)
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* copy second buffer in reversal manner */
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr1++ = 0;
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr1++ = 0;
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr1++ = 0;
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr1++ = 0;
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Decrement the loop counter */
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     k--;
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   }
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****    ** No loop unrolling is used. */
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   k = (srcBLen - 1u) % 0x4u;
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   while (k > 0u)
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pScr1++ = 0;
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Decrement the loop counter */
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     k--;
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   }
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Temporary pointer for scratch2 */
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   py = pScratch2;
 260              	 .loc 1 261 0
 261 020e D7F89831 	 ldr r3,[r7,#408]
 262 0212 C7F82431 	 str r3,[r7,#292]
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Initialization of pIn2 pointer */
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   pIn2 = py;
 263              	 .loc 1 265 0
 264 0216 D7F82431 	 ldr r3,[r7,#292]
 265 021a C7F83C31 	 str r3,[r7,#316]
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* First part of the processing with loop unrolling process 4 data points at a time.
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****    ** a second loop below process for the remaining 1 to 3 samples. */
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Actual convolution process starts here */
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   blkCnt = (srcALen + srcBLen - 1u) >> 2;
 266              	 .loc 1 271 0
 267 021e 07F12002 	 add r2,r7,#32
 268 0222 07F11803 	 add r3,r7,#24
 269 0226 1268     	 ldr r2,[r2]
 270 0228 1B68     	 ldr r3,[r3]
 271 022a 1344     	 add r3,r3,r2
 272 022c 013B     	 subs r3,r3,#1
 273 022e 9B08     	 lsrs r3,r3,#2
 274 0230 C7F83031 	 str r3,[r7,#304]
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   while (blkCnt > 0)
 275              	 .loc 1 273 0
 276 0234 10E3     	 b .L8
 277              	.L21:
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Initialze temporary scratch pointer as scratch1 */
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pScr1 = pScratch1;
 278              	 .loc 1 276 0
 279 0236 07F16803 	 add r3,r7,#104
 280 023a D7F89421 	 ldr r2,[r7,#404]
 281 023e 1A60     	 str r2,[r3]
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Clear Accumlators */
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     acc0 = 0;
 282              	 .loc 1 279 0
 283 0240 4FF00002 	 mov r2,#0
 284 0244 4FF00003 	 mov r3,#0
 285 0248 07F5B471 	 add r1,r7,#360
 286 024c C1E90023 	 strd r2,[r1]
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     acc1 = 0;
 287              	 .loc 1 280 0
 288 0250 4FF00002 	 mov r2,#0
 289 0254 4FF00003 	 mov r3,#0
 290 0258 07F5B071 	 add r1,r7,#352
 291 025c C1E90023 	 strd r2,[r1]
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     acc2 = 0;
 292              	 .loc 1 281 0
 293 0260 4FF00002 	 mov r2,#0
 294 0264 4FF00003 	 mov r3,#0
 295 0268 07F5AC71 	 add r1,r7,#344
 296 026c C1E90023 	 strd r2,[r1]
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     acc3 = 0;
 297              	 .loc 1 282 0
 298 0270 4FF00002 	 mov r2,#0
 299 0274 4FF00003 	 mov r3,#0
 300 0278 07F5A871 	 add r1,r7,#336
 301 027c C1E90023 	 strd r2,[r1]
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Read two samples from scratch1 buffer */
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     x1 = *__SIMD32(pScr1)++;
 302              	 .loc 1 285 0
 303 0280 07F16802 	 add r2,r7,#104
 304 0284 1368     	 ldr r3,[r2]
 305 0286 191D     	 adds r1,r3,#4
 306 0288 1160     	 str r1,[r2]
 307 028a 1B68     	 ldr r3,[r3]
 308 028c C7F84C31 	 str r3,[r7,#332]
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Read next two samples from scratch1 buffer */
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     x2 = *__SIMD32(pScr1)++;
 309              	 .loc 1 288 0
 310 0290 07F16802 	 add r2,r7,#104
 311 0294 1368     	 ldr r3,[r2]
 312 0296 191D     	 adds r1,r3,#4
 313 0298 1160     	 str r1,[r2]
 314 029a 1B68     	 ldr r3,[r3]
 315 029c C7F84831 	 str r3,[r7,#328]
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     tapCnt = (srcBLen) >> 2u;
 316              	 .loc 1 290 0
 317 02a0 07F11803 	 add r3,r7,#24
 318 02a4 1B68     	 ldr r3,[r3]
 319 02a6 9B08     	 lsrs r3,r3,#2
 320 02a8 C7F82C31 	 str r3,[r7,#300]
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     while (tapCnt > 0u)
 321              	 .loc 1 292 0
 322 02ac BDE1     	 b .L9
 323              	.L18:
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     {
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* Read four samples from smaller buffer */
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       y1 = _SIMD32_OFFSET(pIn2);
 324              	 .loc 1 298 0
 325 02ae D7F83C31 	 ldr r3,[r7,#316]
 326 02b2 1B68     	 ldr r3,[r3]
 327 02b4 C7F82031 	 str r3,[r7,#288]
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       y2 = _SIMD32_OFFSET(pIn2 + 2u);
 328              	 .loc 1 299 0
 329 02b8 D7F83C31 	 ldr r3,[r7,#316]
 330 02bc 5B68     	 ldr r3,[r3,#4]
 331 02be C7F81C31 	 str r3,[r7,#284]
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* multiply and accumlate */
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc0 = __SMLALD(x1, y1, acc0);
 332              	 .loc 1 302 0
 333 02c2 D7F84C01 	 ldr r0,[r7,#332]
 334 02c6 D7F82011 	 ldr r1,[r7,#288]
 335 02ca 07F5B473 	 add r3,r7,#360
 336 02ce D3E90023 	 ldrd r2,[r3]
 337 02d2 C7F8EC00 	 str r0,[r7,#236]
 338 02d6 C7F8E810 	 str r1,[r7,#232]
 339 02da C7E93823 	 strd r2,[r7,#224]
 340              	.LBB23:
 341              	.LBB24:
 342              	 .file 2 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.1
   5:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     02. February 2017
   6:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  36:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                     __asm
  37:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  39:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                  inline
  40:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  41:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  44:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  47:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  48:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  50:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  51:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  53:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  65:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  71:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  72:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  76:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  77:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  78:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  79:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  83:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  85:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0U);
 644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //{
 729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** //}
 731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t s = (4 /*sizeof(v)*/ * 8) - 1; /* extra shift needed at end */
 860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   {
 864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     s--;
 867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Count leading zeros
 876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             number of leading zeros in value
 879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CLZ             __builtin_clz
 881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDREXB(volatile uint8_t *addr)
 894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDREXH(volatile uint16_t *addr)
 916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDREXW(volatile uint32_t *addr)
 938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *a
 955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXH(uint16_t value, volatile uint16_t 
 972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t 
 989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Remove the exclusive lock
 999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __CLREX(void)
1002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Signed Saturate
1017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates a signed value.
1018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Unsigned Saturate
1032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates an unsigned value.
1033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
1036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
1050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
1051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RRX(uint32_t value)
1053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
1096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
1099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDRT(volatile uint32_t *ptr)
1112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAB(volatile uint8_t *ptr)
1169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAH(volatile uint16_t *ptr)
1184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDA(volatile uint32_t *ptr)
1199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);
1255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);
1270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
1282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *p
1297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t 
1314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
1323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
1326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
1328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
1329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
1330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *
1331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
1333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
1336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated SIMD instructions
1347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
1348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** */
1349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__ARM_FEATURE_DSP == 1)                             /* ToDo ARMCLANG: This should be ARCH >= A
1351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32
1651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTB16(uint32_t op1)
1673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTB16(uint32_t op1)
1689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32
1721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint3
1729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint6
1737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   union llreg_u{
1739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t w32[2];
1740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint64_t w64;
1741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   } llr;
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   llr.w64 = acc;
 343              	 .loc 2 1742 0
 344 02de 07F12801 	 add r1,r7,#40
 345 02e2 D7E93823 	 ldrd r2,[r7,#224]
 346 02e6 C1E90023 	 strd r2,[r1]
1743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (o
 347              	 .loc 2 1745 0
 348 02ea 07F12803 	 add r3,r7,#40
 349 02ee 1A68     	 ldr r2,[r3]
 350 02f0 07F12803 	 add r3,r7,#40
 351 02f4 5B68     	 ldr r3,[r3,#4]
 352 02f6 D7F8EC00 	 ldr r0,[r7,#236]
 353 02fa D7F8E840 	 ldr r4,[r7,#232]
 354 02fe 1146     	 mov r1,r2
 355              	
 356 0300 C0FBC413 	 smlald r1,r3,r0,r4
 357              	
 358              	 .thumb
 359 0304 07F12802 	 add r2,r7,#40
 360 0308 1160     	 str r1,[r2]
 361 030a 07F12802 	 add r2,r7,#40
 362 030e 5360     	 str r3,[r2,#4]
1746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
1747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (o
1748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(llr.w64);
 363              	 .loc 2 1750 0
 364 0310 07F12803 	 add r3,r7,#40
 365 0314 D3E90023 	 ldrd r2,[r3]
 366              	.LBE24:
 367              	.LBE23:
 368              	 .loc 1 302 0
 369 0318 07F5B471 	 add r1,r7,#360
 370 031c C1E90023 	 strd r2,[r1]
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc2 = __SMLALD(x2, y1, acc2);
 371              	 .loc 1 303 0
 372 0320 D7F84801 	 ldr r0,[r7,#328]
 373 0324 D7F82011 	 ldr r1,[r7,#288]
 374 0328 07F5AC73 	 add r3,r7,#344
 375 032c D3E90023 	 ldrd r2,[r3]
 376 0330 C7F8DC00 	 str r0,[r7,#220]
 377 0334 C7F8D810 	 str r1,[r7,#216]
 378 0338 C7E93423 	 strd r2,[r7,#208]
 379              	.LBB25:
 380              	.LBB26:
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 381              	 .loc 2 1742 0
 382 033c 07F13001 	 add r1,r7,#48
 383 0340 D7E93423 	 ldrd r2,[r7,#208]
 384 0344 C1E90023 	 strd r2,[r1]
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 385              	 .loc 2 1745 0
 386 0348 07F13003 	 add r3,r7,#48
 387 034c 1A68     	 ldr r2,[r3]
 388 034e 07F13003 	 add r3,r7,#48
 389 0352 5B68     	 ldr r3,[r3,#4]
 390 0354 D7F8DC00 	 ldr r0,[r7,#220]
 391 0358 D7F8D840 	 ldr r4,[r7,#216]
 392 035c 1146     	 mov r1,r2
 393              	
 394 035e C0FBC413 	 smlald r1,r3,r0,r4
 395              	
 396              	 .thumb
 397 0362 07F13002 	 add r2,r7,#48
 398 0366 1160     	 str r1,[r2]
 399 0368 07F13002 	 add r2,r7,#48
 400 036c 5360     	 str r3,[r2,#4]
 401              	 .loc 2 1750 0
 402 036e 07F13003 	 add r3,r7,#48
 403 0372 D3E90023 	 ldrd r2,[r3]
 404              	.LBE26:
 405              	.LBE25:
 406              	 .loc 1 303 0
 407 0376 07F5AC71 	 add r1,r7,#344
 408 037a C1E90023 	 strd r2,[r1]
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* pack input data */
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 409              	 .loc 1 307 0
 410 037e D7F84831 	 ldr r3,[r7,#328]
 411 0382 9AB2     	 uxth r2,r3
 412 0384 D7F84C31 	 ldr r3,[r7,#332]
 413 0388 1B0C     	 lsrs r3,r3,#16
 414 038a 1B04     	 lsls r3,r3,#16
 415 038c 1343     	 orrs r3,r3,r2
 416 038e C7F81831 	 str r3,[r7,#280]
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* multiply and accumlate */
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc1 = __SMLALDX(x3, y1, acc1);
 417              	 .loc 1 313 0
 418 0392 D7F81801 	 ldr r0,[r7,#280]
 419 0396 D7F82011 	 ldr r1,[r7,#288]
 420 039a 07F5B073 	 add r3,r7,#352
 421 039e D3E90023 	 ldrd r2,[r3]
 422 03a2 C7F8CC00 	 str r0,[r7,#204]
 423 03a6 C7F8C810 	 str r1,[r7,#200]
 424 03aa C7E93023 	 strd r2,[r7,#192]
 425              	.LBB27:
 426              	.LBB28:
1751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint64_t __SMLALDX (uint32_t op1, uint32_t op2, uint
1754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   union llreg_u{
1756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t w32[2];
1757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint64_t w64;
1758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   } llr;
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   llr.w64 = acc;
 427              	 .loc 2 1759 0
 428 03ae 07F13801 	 add r1,r7,#56
 429 03b2 D7E93023 	 ldrd r2,[r7,#192]
 430 03b6 C1E90023 	 strd r2,[r1]
1760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (
 431              	 .loc 2 1762 0
 432 03ba 07F13803 	 add r3,r7,#56
 433 03be 1A68     	 ldr r2,[r3]
 434 03c0 07F13803 	 add r3,r7,#56
 435 03c4 5B68     	 ldr r3,[r3,#4]
 436 03c6 D7F8CC00 	 ldr r0,[r7,#204]
 437 03ca D7F8C840 	 ldr r4,[r7,#200]
 438 03ce 1146     	 mov r1,r2
 439              	
 440 03d0 C0FBD413 	 smlaldx r1,r3,r0,r4
 441              	
 442              	 .thumb
 443 03d4 07F13802 	 add r2,r7,#56
 444 03d8 1160     	 str r1,[r2]
 445 03da 07F13802 	 add r2,r7,#56
 446 03de 5360     	 str r3,[r2,#4]
1763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
1764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (
1765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
1766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(llr.w64);
 447              	 .loc 2 1767 0
 448 03e0 07F13803 	 add r3,r7,#56
 449 03e4 D3E90023 	 ldrd r2,[r3]
 450              	.LBE28:
 451              	.LBE27:
 452              	 .loc 1 313 0
 453 03e8 07F5B071 	 add r1,r7,#352
 454 03ec C1E90023 	 strd r2,[r1]
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* Read next two samples from scratch1 buffer */
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x1 = _SIMD32_OFFSET(pScr1);
 455              	 .loc 1 316 0
 456 03f0 07F16803 	 add r3,r7,#104
 457 03f4 1B68     	 ldr r3,[r3]
 458 03f6 1B68     	 ldr r3,[r3]
 459 03f8 C7F84C31 	 str r3,[r7,#332]
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* multiply and accumlate */
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc0 = __SMLALD(x2, y2, acc0);
 460              	 .loc 1 319 0
 461 03fc D7F84801 	 ldr r0,[r7,#328]
 462 0400 D7F81C11 	 ldr r1,[r7,#284]
 463 0404 07F5B473 	 add r3,r7,#360
 464 0408 D3E90023 	 ldrd r2,[r3]
 465 040c C7F8BC00 	 str r0,[r7,#188]
 466 0410 C7F8B810 	 str r1,[r7,#184]
 467 0414 C7E92C23 	 strd r2,[r7,#176]
 468              	.LBB29:
 469              	.LBB30:
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 470              	 .loc 2 1742 0
 471 0418 07F14001 	 add r1,r7,#64
 472 041c D7E92C23 	 ldrd r2,[r7,#176]
 473 0420 C1E90023 	 strd r2,[r1]
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 474              	 .loc 2 1745 0
 475 0424 07F14003 	 add r3,r7,#64
 476 0428 1A68     	 ldr r2,[r3]
 477 042a 07F14003 	 add r3,r7,#64
 478 042e 5B68     	 ldr r3,[r3,#4]
 479 0430 D7F8BC00 	 ldr r0,[r7,#188]
 480 0434 D7F8B840 	 ldr r4,[r7,#184]
 481 0438 1146     	 mov r1,r2
 482              	
 483 043a C0FBC413 	 smlald r1,r3,r0,r4
 484              	
 485              	 .thumb
 486 043e 07F14002 	 add r2,r7,#64
 487 0442 1160     	 str r1,[r2]
 488 0444 07F14002 	 add r2,r7,#64
 489 0448 5360     	 str r3,[r2,#4]
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 490              	 .loc 2 1750 0
 491 044a 07F14003 	 add r3,r7,#64
 492 044e D3E90023 	 ldrd r2,[r3]
 493              	.LBE30:
 494              	.LBE29:
 495              	 .loc 1 319 0
 496 0452 07F5B471 	 add r1,r7,#360
 497 0456 C1E90023 	 strd r2,[r1]
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc2 = __SMLALD(x1, y2, acc2);
 498              	 .loc 1 320 0
 499 045a D7F84C01 	 ldr r0,[r7,#332]
 500 045e D7F81C11 	 ldr r1,[r7,#284]
 501 0462 07F5AC73 	 add r3,r7,#344
 502 0466 D3E90023 	 ldrd r2,[r3]
 503 046a C7F8AC00 	 str r0,[r7,#172]
 504 046e C7F8A810 	 str r1,[r7,#168]
 505 0472 C7E92823 	 strd r2,[r7,#160]
 506              	.LBB31:
 507              	.LBB32:
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 508              	 .loc 2 1742 0
 509 0476 07F14801 	 add r1,r7,#72
 510 047a D7E92823 	 ldrd r2,[r7,#160]
 511 047e C1E90023 	 strd r2,[r1]
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 512              	 .loc 2 1745 0
 513 0482 07F14803 	 add r3,r7,#72
 514 0486 1A68     	 ldr r2,[r3]
 515 0488 07F14803 	 add r3,r7,#72
 516 048c 5B68     	 ldr r3,[r3,#4]
 517 048e D7F8AC00 	 ldr r0,[r7,#172]
 518 0492 D7F8A840 	 ldr r4,[r7,#168]
 519 0496 1146     	 mov r1,r2
 520              	
 521 0498 C0FBC413 	 smlald r1,r3,r0,r4
 522              	
 523              	 .thumb
 524 049c 07F14802 	 add r2,r7,#72
 525 04a0 1160     	 str r1,[r2]
 526 04a2 07F14802 	 add r2,r7,#72
 527 04a6 5360     	 str r3,[r2,#4]
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 528              	 .loc 2 1750 0
 529 04a8 07F14803 	 add r3,r7,#72
 530 04ac D3E90023 	 ldrd r2,[r3]
 531              	.LBE32:
 532              	.LBE31:
 533              	 .loc 1 320 0
 534 04b0 07F5AC71 	 add r1,r7,#344
 535 04b4 C1E90023 	 strd r2,[r1]
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* pack input data */
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 536              	 .loc 1 324 0
 537 04b8 D7F84C31 	 ldr r3,[r7,#332]
 538 04bc 9AB2     	 uxth r2,r3
 539 04be D7F84831 	 ldr r3,[r7,#328]
 540 04c2 1B0C     	 lsrs r3,r3,#16
 541 04c4 1B04     	 lsls r3,r3,#16
 542 04c6 1343     	 orrs r3,r3,r2
 543 04c8 C7F81831 	 str r3,[r7,#280]
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc3 = __SMLALDX(x3, y1, acc3);
 544              	 .loc 1 329 0
 545 04cc D7F81801 	 ldr r0,[r7,#280]
 546 04d0 D7F82011 	 ldr r1,[r7,#288]
 547 04d4 07F5A873 	 add r3,r7,#336
 548 04d8 D3E90023 	 ldrd r2,[r3]
 549 04dc C7F89C00 	 str r0,[r7,#156]
 550 04e0 C7F89810 	 str r1,[r7,#152]
 551 04e4 C7E92423 	 strd r2,[r7,#144]
 552              	.LBB33:
 553              	.LBB34:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 554              	 .loc 2 1759 0
 555 04e8 07F15001 	 add r1,r7,#80
 556 04ec D7E92423 	 ldrd r2,[r7,#144]
 557 04f0 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 558              	 .loc 2 1762 0
 559 04f4 07F15003 	 add r3,r7,#80
 560 04f8 1A68     	 ldr r2,[r3]
 561 04fa 07F15003 	 add r3,r7,#80
 562 04fe 5B68     	 ldr r3,[r3,#4]
 563 0500 D7F89C00 	 ldr r0,[r7,#156]
 564 0504 D7F89840 	 ldr r4,[r7,#152]
 565 0508 1146     	 mov r1,r2
 566              	
 567 050a C0FBD413 	 smlaldx r1,r3,r0,r4
 568              	
 569              	 .thumb
 570 050e 07F15002 	 add r2,r7,#80
 571 0512 1160     	 str r1,[r2]
 572 0514 07F15002 	 add r2,r7,#80
 573 0518 5360     	 str r3,[r2,#4]
 574              	 .loc 2 1767 0
 575 051a 07F15003 	 add r3,r7,#80
 576 051e D3E90023 	 ldrd r2,[r3]
 577              	.LBE34:
 578              	.LBE33:
 579              	 .loc 1 329 0
 580 0522 07F5A871 	 add r1,r7,#336
 581 0526 C1E90023 	 strd r2,[r1]
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc1 = __SMLALDX(x3, y2, acc1);
 582              	 .loc 1 330 0
 583 052a D7F81801 	 ldr r0,[r7,#280]
 584 052e D7F81C11 	 ldr r1,[r7,#284]
 585 0532 07F5B073 	 add r3,r7,#352
 586 0536 D3E90023 	 ldrd r2,[r3]
 587 053a C7F88C00 	 str r0,[r7,#140]
 588 053e C7F88810 	 str r1,[r7,#136]
 589 0542 C7E92023 	 strd r2,[r7,#128]
 590              	.LBB35:
 591              	.LBB36:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 592              	 .loc 2 1759 0
 593 0546 07F15801 	 add r1,r7,#88
 594 054a D7E92023 	 ldrd r2,[r7,#128]
 595 054e C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 596              	 .loc 2 1762 0
 597 0552 07F15803 	 add r3,r7,#88
 598 0556 1A68     	 ldr r2,[r3]
 599 0558 07F15803 	 add r3,r7,#88
 600 055c 5B68     	 ldr r3,[r3,#4]
 601 055e D7F88C00 	 ldr r0,[r7,#140]
 602 0562 D7F88840 	 ldr r4,[r7,#136]
 603 0566 1146     	 mov r1,r2
 604              	
 605 0568 C0FBD413 	 smlaldx r1,r3,r0,r4
 606              	
 607              	 .thumb
 608 056c 07F15802 	 add r2,r7,#88
 609 0570 1160     	 str r1,[r2]
 610 0572 07F15802 	 add r2,r7,#88
 611 0576 5360     	 str r3,[r2,#4]
 612              	 .loc 2 1767 0
 613 0578 07F15803 	 add r3,r7,#88
 614 057c D3E90023 	 ldrd r2,[r3]
 615              	.LBE36:
 616              	.LBE35:
 617              	 .loc 1 330 0
 618 0580 07F5B071 	 add r1,r7,#352
 619 0584 C1E90023 	 strd r2,[r1]
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x2 = _SIMD32_OFFSET(pScr1 + 2u);
 620              	 .loc 1 332 0
 621 0588 07F16803 	 add r3,r7,#104
 622 058c 1B68     	 ldr r3,[r3]
 623 058e 5B68     	 ldr r3,[r3,#4]
 624 0590 C7F84831 	 str r3,[r7,#328]
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 625              	 .loc 1 335 0
 626 0594 D7F84831 	 ldr r3,[r7,#328]
 627 0598 9AB2     	 uxth r2,r3
 628 059a D7F84C31 	 ldr r3,[r7,#332]
 629 059e 1B0C     	 lsrs r3,r3,#16
 630 05a0 1B04     	 lsls r3,r3,#16
 631 05a2 1343     	 orrs r3,r3,r2
 632 05a4 C7F81831 	 str r3,[r7,#280]
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc3 = __SMLALDX(x3, y2, acc3);
 633              	 .loc 1 340 0
 634 05a8 D7F81821 	 ldr r2,[r7,#280]
 635 05ac D7F81C31 	 ldr r3,[r7,#284]
 636 05b0 07F5A871 	 add r1,r7,#336
 637 05b4 D1E90001 	 ldrd r0,[r1]
 638 05b8 FA67     	 str r2,[r7,#124]
 639 05ba BB67     	 str r3,[r7,#120]
 640 05bc 07F17003 	 add r3,r7,#112
 641 05c0 C3E90001 	 strd r0,[r3]
 642              	.LBB37:
 643              	.LBB38:
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 644              	 .loc 2 1759 0
 645 05c4 07F16001 	 add r1,r7,#96
 646 05c8 07F17003 	 add r3,r7,#112
 647 05cc D3E90023 	 ldrd r2,[r3]
 648 05d0 C1E90023 	 strd r2,[r1]
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include\cmsis_gcc.h **** #else               /* Big endian */
 649              	 .loc 2 1762 0
 650 05d4 07F16003 	 add r3,r7,#96
 651 05d8 1A68     	 ldr r2,[r3]
 652 05da 07F16003 	 add r3,r7,#96
 653 05de 5B68     	 ldr r3,[r3,#4]
 654 05e0 F86F     	 ldr r0,[r7,#124]
 655 05e2 BC6F     	 ldr r4,[r7,#120]
 656 05e4 1146     	 mov r1,r2
 657              	
 658 05e6 C0FBD413 	 smlaldx r1,r3,r0,r4
 659              	
 660              	 .thumb
 661 05ea 07F16002 	 add r2,r7,#96
 662 05ee 1160     	 str r1,[r2]
 663 05f0 07F16002 	 add r2,r7,#96
 664 05f4 5360     	 str r3,[r2,#4]
 665              	 .loc 2 1767 0
 666 05f6 07F16003 	 add r3,r7,#96
 667 05fa D3E90023 	 ldrd r2,[r3]
 668              	.LBE38:
 669              	.LBE37:
 670              	 .loc 1 340 0
 671 05fe 07F5A871 	 add r1,r7,#336
 672 0602 C1E90023 	 strd r2,[r1]
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* Read four samples from smaller buffer */
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 	  a = *pIn2;
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 	  b = *(pIn2 + 1);
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       y1 = __PKHBT(a, b, 16);
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       y1 = __PKHBT(b, a, 16);
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 	  a = *(pIn2 + 2);
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 	  b = *(pIn2 + 3);
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       y2 = __PKHBT(a, b, 16);
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       y2 = __PKHBT(b, a, 16);
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc0 = __SMLALD(x1, y1, acc0);
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc2 = __SMLALD(x2, y1, acc2);
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc1 = __SMLALDX(x3, y1, acc1);
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 	  a = *pScr1;
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 	  b = *(pScr1 + 1);
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x1 = __PKHBT(a, b, 16);
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x1 = __PKHBT(b, a, 16);
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc0 = __SMLALD(x2, y2, acc0);
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc2 = __SMLALD(x1, y2, acc2);
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc3 = __SMLALDX(x3, y1, acc3);
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc1 = __SMLALDX(x3, y2, acc1);
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 	  a = *(pScr1 + 2);
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 	  b = *(pScr1 + 3);
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x2 = __PKHBT(a, b, 16);
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x2 = __PKHBT(b, a, 16);
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc3 = __SMLALDX(x3, y2, acc3);
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       pIn2 += 4u;
 673              	 .loc 1 416 0
 674 0606 D7F83C31 	 ldr r3,[r7,#316]
 675 060a 0833     	 adds r3,r3,#8
 676 060c C7F83C31 	 str r3,[r7,#316]
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       pScr1 += 4u;
 677              	 .loc 1 417 0
 678 0610 07F16803 	 add r3,r7,#104
 679 0614 1B68     	 ldr r3,[r3]
 680 0616 03F10802 	 add r2,r3,#8
 681 061a 07F16803 	 add r3,r7,#104
 682 061e 1A60     	 str r2,[r3]
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* Decrement the loop counter */
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       tapCnt--;
 683              	 .loc 1 421 0
 684 0620 D7F82C31 	 ldr r3,[r7,#300]
 685 0624 013B     	 subs r3,r3,#1
 686 0626 C7F82C31 	 str r3,[r7,#300]
 687              	.L9:
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     {
 688              	 .loc 1 292 0
 689 062a D7F82C31 	 ldr r3,[r7,#300]
 690 062e 002B     	 cmp r3,#0
 691 0630 7FF43DAE 	 bne .L18
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     }
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Update scratch pointer for remaining samples of smaller length sequence */
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pScr1 -= 4u;
 692              	 .loc 1 425 0
 693 0634 07F16803 	 add r3,r7,#104
 694 0638 1B68     	 ldr r3,[r3]
 695 063a A3F10802 	 sub r2,r3,#8
 696 063e 07F16803 	 add r3,r7,#104
 697 0642 1A60     	 str r2,[r3]
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* apply same above for remaining samples of smaller length sequence */
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     tapCnt = (srcBLen) & 3u;
 698              	 .loc 1 428 0
 699 0644 07F11803 	 add r3,r7,#24
 700 0648 1B68     	 ldr r3,[r3]
 701 064a 03F00303 	 and r3,r3,#3
 702 064e C7F82C31 	 str r3,[r7,#300]
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     while (tapCnt > 0u)
 703              	 .loc 1 430 0
 704 0652 82E0     	 b .L19
 705              	.L20:
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     {
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* accumlate the results */
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2);
 706              	 .loc 1 434 0
 707 0654 07F16803 	 add r3,r7,#104
 708 0658 1B68     	 ldr r3,[r3]
 709 065a 991C     	 adds r1,r3,#2
 710 065c 07F16802 	 add r2,r7,#104
 711 0660 1160     	 str r1,[r2]
 712 0662 1B88     	 ldrh r3,[r3]
 713 0664 1BB2     	 sxth r3,r3
 714 0666 D7F83C21 	 ldr r2,[r7,#316]
 715 066a 1288     	 ldrh r2,[r2]
 716 066c 12B2     	 sxth r2,r2
 717 066e 02FB03F3 	 mul r3,r2,r3
 718 0672 1A46     	 mov r2,r3
 719 0674 4FEAE273 	 asr r3,r2,#31
 720 0678 07F5B471 	 add r1,r7,#360
 721 067c D1E90001 	 ldrd r0,[r1]
 722 0680 1218     	 adds r2,r2,r0
 723 0682 43EB0103 	 adc r3,r3,r1
 724 0686 07F5B471 	 add r1,r7,#360
 725 068a C1E90023 	 strd r2,[r1]
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc1 += (*pScr1++ * *pIn2);
 726              	 .loc 1 435 0
 727 068e 07F16803 	 add r3,r7,#104
 728 0692 1B68     	 ldr r3,[r3]
 729 0694 991C     	 adds r1,r3,#2
 730 0696 07F16802 	 add r2,r7,#104
 731 069a 1160     	 str r1,[r2]
 732 069c 1B88     	 ldrh r3,[r3]
 733 069e 1BB2     	 sxth r3,r3
 734 06a0 D7F83C21 	 ldr r2,[r7,#316]
 735 06a4 1288     	 ldrh r2,[r2]
 736 06a6 12B2     	 sxth r2,r2
 737 06a8 02FB03F3 	 mul r3,r2,r3
 738 06ac 1A46     	 mov r2,r3
 739 06ae 4FEAE273 	 asr r3,r2,#31
 740 06b2 07F5B071 	 add r1,r7,#352
 741 06b6 D1E90001 	 ldrd r0,[r1]
 742 06ba 1218     	 adds r2,r2,r0
 743 06bc 43EB0103 	 adc r3,r3,r1
 744 06c0 07F5B071 	 add r1,r7,#352
 745 06c4 C1E90023 	 strd r2,[r1]
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc2 += (*pScr1++ * *pIn2);
 746              	 .loc 1 436 0
 747 06c8 07F16803 	 add r3,r7,#104
 748 06cc 1B68     	 ldr r3,[r3]
 749 06ce 991C     	 adds r1,r3,#2
 750 06d0 07F16802 	 add r2,r7,#104
 751 06d4 1160     	 str r1,[r2]
 752 06d6 1B88     	 ldrh r3,[r3]
 753 06d8 1BB2     	 sxth r3,r3
 754 06da D7F83C21 	 ldr r2,[r7,#316]
 755 06de 1288     	 ldrh r2,[r2]
 756 06e0 12B2     	 sxth r2,r2
 757 06e2 02FB03F3 	 mul r3,r2,r3
 758 06e6 1A46     	 mov r2,r3
 759 06e8 4FEAE273 	 asr r3,r2,#31
 760 06ec 07F5AC71 	 add r1,r7,#344
 761 06f0 D1E90001 	 ldrd r0,[r1]
 762 06f4 1218     	 adds r2,r2,r0
 763 06f6 43EB0103 	 adc r3,r3,r1
 764 06fa 07F5AC71 	 add r1,r7,#344
 765 06fe C1E90023 	 strd r2,[r1]
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc3 += (*pScr1++ * *pIn2++);
 766              	 .loc 1 437 0
 767 0702 07F16803 	 add r3,r7,#104
 768 0706 1B68     	 ldr r3,[r3]
 769 0708 991C     	 adds r1,r3,#2
 770 070a 07F16802 	 add r2,r7,#104
 771 070e 1160     	 str r1,[r2]
 772 0710 1B88     	 ldrh r3,[r3]
 773 0712 1AB2     	 sxth r2,r3
 774 0714 D7F83C31 	 ldr r3,[r7,#316]
 775 0718 991C     	 adds r1,r3,#2
 776 071a C7F83C11 	 str r1,[r7,#316]
 777 071e 1B88     	 ldrh r3,[r3]
 778 0720 1BB2     	 sxth r3,r3
 779 0722 03FB02F3 	 mul r3,r3,r2
 780 0726 1A46     	 mov r2,r3
 781 0728 4FEAE273 	 asr r3,r2,#31
 782 072c 07F5A871 	 add r1,r7,#336
 783 0730 D1E90001 	 ldrd r0,[r1]
 784 0734 1218     	 adds r2,r2,r0
 785 0736 43EB0103 	 adc r3,r3,r1
 786 073a 07F5A871 	 add r1,r7,#336
 787 073e C1E90023 	 strd r2,[r1]
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       pScr1 -= 3u;
 788              	 .loc 1 439 0
 789 0742 07F16803 	 add r3,r7,#104
 790 0746 1B68     	 ldr r3,[r3]
 791 0748 9A1F     	 subs r2,r3,#6
 792 074a 07F16803 	 add r3,r7,#104
 793 074e 1A60     	 str r2,[r3]
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* Decrement the loop counter */
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       tapCnt--;
 794              	 .loc 1 442 0
 795 0750 D7F82C31 	 ldr r3,[r7,#300]
 796 0754 013B     	 subs r3,r3,#1
 797 0756 C7F82C31 	 str r3,[r7,#300]
 798              	.L19:
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     {
 799              	 .loc 1 430 0
 800 075a D7F82C31 	 ldr r3,[r7,#300]
 801 075e 002B     	 cmp r3,#0
 802 0760 7FF478AF 	 bne .L20
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     }
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     blkCnt--;
 803              	 .loc 1 445 0
 804 0764 D7F83031 	 ldr r3,[r7,#304]
 805 0768 013B     	 subs r3,r3,#1
 806 076a C7F83031 	 str r3,[r7,#304]
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Store the results in the accumulators in the destination buffer. */
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *__SIMD32(pOut)++ =
 807              	 .loc 1 452 0
 808 076e 07F16C03 	 add r3,r7,#108
 809 0772 1968     	 ldr r1,[r3]
 810 0774 0A1D     	 adds r2,r1,#4
 811 0776 1A60     	 str r2,[r3]
 812              	.LBB39:
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16);
 813              	 .loc 1 453 0
 814 0778 07F5B473 	 add r3,r7,#360
 815 077c D3E90023 	 ldrd r2,[r3]
 816 0780 4FEAD23A 	 lsr r10,r2,#15
 817 0784 4AEA434A 	 orr r10,r10,r3,lsl#17
 818 0788 4FEAE33B 	 asr fp,r3,#15
 819 078c 5346     	 mov r3,r10
 820 078e C7F81431 	 str r3,[r7,#276]
 821 0792 D7F81431 	 ldr r3,[r7,#276]
 822              	
 823 0796 03F30F03 	 ssat r3,#16,r3
 824              	
 825              	 .thumb
 826 079a C7F81031 	 str r3,[r7,#272]
 827 079e D7F81031 	 ldr r3,[r7,#272]
 828              	.LBE39:
 829 07a2 98B2     	 uxth r0,r3
 830              	.LBB40:
 831 07a4 07F5B073 	 add r3,r7,#352
 832 07a8 D3E90023 	 ldrd r2,[r3]
 833 07ac D40B     	 lsrs r4,r2,#15
 834 07ae 3C61     	 str r4,[r7,#16]
 835 07b0 3C69     	 ldr r4,[r7,#16]
 836 07b2 44EA4344 	 orr r4,r4,r3,lsl#17
 837 07b6 3C61     	 str r4,[r7,#16]
 838 07b8 DB13     	 asrs r3,r3,#15
 839 07ba 7B61     	 str r3,[r7,#20]
 840 07bc 3B69     	 ldr r3,[r7,#16]
 841 07be C7F80C31 	 str r3,[r7,#268]
 842 07c2 D7F80C31 	 ldr r3,[r7,#268]
 843              	
 844 07c6 03F30F03 	 ssat r3,#16,r3
 845              	
 846              	 .thumb
 847 07ca C7F80831 	 str r3,[r7,#264]
 848 07ce D7F80831 	 ldr r3,[r7,#264]
 849              	.LBE40:
 850 07d2 1B04     	 lsls r3,r3,#16
 851 07d4 0343     	 orrs r3,r3,r0
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16);
 852              	 .loc 1 452 0
 853 07d6 0B60     	 str r3,[r1]
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *__SIMD32(pOut)++ =
 854              	 .loc 1 455 0
 855 07d8 07F16C03 	 add r3,r7,#108
 856 07dc 1968     	 ldr r1,[r3]
 857 07de 0A1D     	 adds r2,r1,#4
 858 07e0 1A60     	 str r2,[r3]
 859              	.LBB41:
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       __PKHBT(__SSAT((acc2 >> 15), 16), __SSAT((acc3 >> 15), 16), 16);
 860              	 .loc 1 456 0
 861 07e2 07F5AC73 	 add r3,r7,#344
 862 07e6 D3E90023 	 ldrd r2,[r3]
 863 07ea D00B     	 lsrs r0,r2,#15
 864 07ec B860     	 str r0,[r7,#8]
 865 07ee B868     	 ldr r0,[r7,#8]
 866 07f0 40EA4340 	 orr r0,r0,r3,lsl#17
 867 07f4 B860     	 str r0,[r7,#8]
 868 07f6 DB13     	 asrs r3,r3,#15
 869 07f8 FB60     	 str r3,[r7,#12]
 870 07fa BB68     	 ldr r3,[r7,#8]
 871 07fc C7F80431 	 str r3,[r7,#260]
 872 0800 D7F80431 	 ldr r3,[r7,#260]
 873              	
 874 0804 03F30F03 	 ssat r3,#16,r3
 875              	
 876              	 .thumb
 877 0808 C7F80031 	 str r3,[r7,#256]
 878 080c D7F80031 	 ldr r3,[r7,#256]
 879              	.LBE41:
 880 0810 98B2     	 uxth r0,r3
 881              	.LBB42:
 882 0812 07F5A873 	 add r3,r7,#336
 883 0816 D3E90023 	 ldrd r2,[r3]
 884 081a D40B     	 lsrs r4,r2,#15
 885 081c 3C60     	 str r4,[r7]
 886 081e 3C68     	 ldr r4,[r7]
 887 0820 44EA4344 	 orr r4,r4,r3,lsl#17
 888 0824 3C60     	 str r4,[r7]
 889 0826 DB13     	 asrs r3,r3,#15
 890 0828 7B60     	 str r3,[r7,#4]
 891 082a 3B68     	 ldr r3,[r7]
 892 082c C7F8FC30 	 str r3,[r7,#252]
 893 0830 D7F8FC30 	 ldr r3,[r7,#252]
 894              	
 895 0834 03F30F03 	 ssat r3,#16,r3
 896              	
 897              	 .thumb
 898 0838 C7F8F830 	 str r3,[r7,#248]
 899 083c D7F8F830 	 ldr r3,[r7,#248]
 900              	.LBE42:
 901 0840 1B04     	 lsls r3,r3,#16
 902 0842 0343     	 orrs r3,r3,r0
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       __PKHBT(__SSAT((acc2 >> 15), 16), __SSAT((acc3 >> 15), 16), 16);
 903              	 .loc 1 455 0
 904 0844 0B60     	 str r3,[r1]
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #else
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *__SIMD32(pOut)++ =
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       __PKHBT(__SSAT((acc1 >> 15), 16), __SSAT((acc0 >> 15), 16), 16);
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *__SIMD32(pOut)++ =
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       __PKHBT(__SSAT((acc3 >> 15), 16), __SSAT((acc2 >> 15), 16), 16);
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** #endif /*      #ifndef ARM_MATH_BIG_ENDIAN       */
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Initialization of inputB pointer */
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pIn2 = py;
 905              	 .loc 1 470 0
 906 0846 D7F82431 	 ldr r3,[r7,#292]
 907 084a C7F83C31 	 str r3,[r7,#316]
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pScratch1 += 4u;
 908              	 .loc 1 472 0
 909 084e D7F89431 	 ldr r3,[r7,#404]
 910 0852 0833     	 adds r3,r3,#8
 911 0854 C7F89431 	 str r3,[r7,#404]
 912              	.L8:
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 913              	 .loc 1 273 0
 914 0858 D7F83031 	 ldr r3,[r7,#304]
 915 085c 002B     	 cmp r3,#0
 916 085e 7FF4EAAC 	 bne .L21
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   }
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   blkCnt = (srcALen + srcBLen - 1u) & 0x3;
 917              	 .loc 1 477 0
 918 0862 07F12002 	 add r2,r7,#32
 919 0866 07F11803 	 add r3,r7,#24
 920 086a 1268     	 ldr r2,[r2]
 921 086c 1B68     	 ldr r3,[r3]
 922 086e 1344     	 add r3,r3,r2
 923 0870 013B     	 subs r3,r3,#1
 924 0872 03F00303 	 and r3,r3,#3
 925 0876 C7F83031 	 str r3,[r7,#304]
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   /* Calculate convolution for remaining samples of Bigger length sequence */
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   while (blkCnt > 0)
 926              	 .loc 1 480 0
 927 087a B9E0     	 b .L22
 928              	.L27:
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Initialze temporary scratch pointer as scratch1 */
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pScr1 = pScratch1;
 929              	 .loc 1 483 0
 930 087c 07F16803 	 add r3,r7,#104
 931 0880 D7F89421 	 ldr r2,[r7,#404]
 932 0884 1A60     	 str r2,[r3]
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Clear Accumlators */
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     acc0 = 0;
 933              	 .loc 1 486 0
 934 0886 4FF00002 	 mov r2,#0
 935 088a 4FF00003 	 mov r3,#0
 936 088e 07F5B471 	 add r1,r7,#360
 937 0892 C1E90023 	 strd r2,[r1]
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     tapCnt = (srcBLen) >> 1u;
 938              	 .loc 1 488 0
 939 0896 07F11803 	 add r3,r7,#24
 940 089a 1B68     	 ldr r3,[r3]
 941 089c 5B08     	 lsrs r3,r3,#1
 942 089e C7F82C31 	 str r3,[r7,#300]
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     while (tapCnt > 0u)
 943              	 .loc 1 490 0
 944 08a2 44E0     	 b .L23
 945              	.L24:
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     {
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* Read next two samples from scratch1 buffer */
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2++);
 946              	 .loc 1 494 0
 947 08a4 07F16803 	 add r3,r7,#104
 948 08a8 1B68     	 ldr r3,[r3]
 949 08aa 991C     	 adds r1,r3,#2
 950 08ac 07F16802 	 add r2,r7,#104
 951 08b0 1160     	 str r1,[r2]
 952 08b2 1B88     	 ldrh r3,[r3]
 953 08b4 1AB2     	 sxth r2,r3
 954 08b6 D7F83C31 	 ldr r3,[r7,#316]
 955 08ba 991C     	 adds r1,r3,#2
 956 08bc C7F83C11 	 str r1,[r7,#316]
 957 08c0 1B88     	 ldrh r3,[r3]
 958 08c2 1BB2     	 sxth r3,r3
 959 08c4 03FB02F3 	 mul r3,r3,r2
 960 08c8 1A46     	 mov r2,r3
 961 08ca 4FEAE273 	 asr r3,r2,#31
 962 08ce 07F5B471 	 add r1,r7,#360
 963 08d2 D1E90001 	 ldrd r0,[r1]
 964 08d6 1218     	 adds r2,r2,r0
 965 08d8 43EB0103 	 adc r3,r3,r1
 966 08dc 07F5B471 	 add r1,r7,#360
 967 08e0 C1E90023 	 strd r2,[r1]
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2++);
 968              	 .loc 1 495 0
 969 08e4 07F16803 	 add r3,r7,#104
 970 08e8 1B68     	 ldr r3,[r3]
 971 08ea 991C     	 adds r1,r3,#2
 972 08ec 07F16802 	 add r2,r7,#104
 973 08f0 1160     	 str r1,[r2]
 974 08f2 1B88     	 ldrh r3,[r3]
 975 08f4 1AB2     	 sxth r2,r3
 976 08f6 D7F83C31 	 ldr r3,[r7,#316]
 977 08fa 991C     	 adds r1,r3,#2
 978 08fc C7F83C11 	 str r1,[r7,#316]
 979 0900 1B88     	 ldrh r3,[r3]
 980 0902 1BB2     	 sxth r3,r3
 981 0904 03FB02F3 	 mul r3,r3,r2
 982 0908 1A46     	 mov r2,r3
 983 090a 4FEAE273 	 asr r3,r2,#31
 984 090e 07F5B471 	 add r1,r7,#360
 985 0912 D1E90001 	 ldrd r0,[r1]
 986 0916 1218     	 adds r2,r2,r0
 987 0918 43EB0103 	 adc r3,r3,r1
 988 091c 07F5B471 	 add r1,r7,#360
 989 0920 C1E90023 	 strd r2,[r1]
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* Decrement the loop counter */
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       tapCnt--;
 990              	 .loc 1 498 0
 991 0924 D7F82C31 	 ldr r3,[r7,#300]
 992 0928 013B     	 subs r3,r3,#1
 993 092a C7F82C31 	 str r3,[r7,#300]
 994              	.L23:
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     {
 995              	 .loc 1 490 0
 996 092e D7F82C31 	 ldr r3,[r7,#300]
 997 0932 002B     	 cmp r3,#0
 998 0934 B6D1     	 bne .L24
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     }
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     tapCnt = (srcBLen) & 1u;
 999              	 .loc 1 501 0
 1000 0936 07F11803 	 add r3,r7,#24
 1001 093a 1B68     	 ldr r3,[r3]
 1002 093c 03F00103 	 and r3,r3,#1
 1003 0940 C7F82C31 	 str r3,[r7,#300]
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* apply same above for remaining samples of smaller length sequence */
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     while (tapCnt > 0u)
 1004              	 .loc 1 504 0
 1005 0944 24E0     	 b .L25
 1006              	.L26:
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     {
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* accumlate the results */
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2++);
 1007              	 .loc 1 508 0
 1008 0946 07F16803 	 add r3,r7,#104
 1009 094a 1B68     	 ldr r3,[r3]
 1010 094c 991C     	 adds r1,r3,#2
 1011 094e 07F16802 	 add r2,r7,#104
 1012 0952 1160     	 str r1,[r2]
 1013 0954 1B88     	 ldrh r3,[r3]
 1014 0956 1AB2     	 sxth r2,r3
 1015 0958 D7F83C31 	 ldr r3,[r7,#316]
 1016 095c 991C     	 adds r1,r3,#2
 1017 095e C7F83C11 	 str r1,[r7,#316]
 1018 0962 1B88     	 ldrh r3,[r3]
 1019 0964 1BB2     	 sxth r3,r3
 1020 0966 03FB02F3 	 mul r3,r3,r2
 1021 096a 1A46     	 mov r2,r3
 1022 096c 4FEAE273 	 asr r3,r2,#31
 1023 0970 07F5B471 	 add r1,r7,#360
 1024 0974 D1E90001 	 ldrd r0,[r1]
 1025 0978 1218     	 adds r2,r2,r0
 1026 097a 43EB0103 	 adc r3,r3,r1
 1027 097e 07F5B471 	 add r1,r7,#360
 1028 0982 C1E90023 	 strd r2,[r1]
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       /* Decrement the loop counter */
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****       tapCnt--;
 1029              	 .loc 1 511 0
 1030 0986 D7F82C31 	 ldr r3,[r7,#300]
 1031 098a 013B     	 subs r3,r3,#1
 1032 098c C7F82C31 	 str r3,[r7,#300]
 1033              	.L25:
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     {
 1034              	 .loc 1 504 0
 1035 0990 D7F82C31 	 ldr r3,[r7,#300]
 1036 0994 002B     	 cmp r3,#0
 1037 0996 D6D1     	 bne .L26
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     }
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     blkCnt--;
 1038              	 .loc 1 514 0
 1039 0998 D7F83031 	 ldr r3,[r7,#304]
 1040 099c 013B     	 subs r3,r3,#1
 1041 099e C7F83031 	 str r3,[r7,#304]
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* The result is in 2.30 format.  Convert to 1.15 with saturation.
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****      ** Then store the output in the destination buffer. */
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     *pOut++ = (q15_t) (__SSAT((acc0 >> 15), 16));
 1042              	 .loc 1 518 0
 1043 09a2 07F16C03 	 add r3,r7,#108
 1044 09a6 1968     	 ldr r1,[r3]
 1045 09a8 8A1C     	 adds r2,r1,#2
 1046 09aa 07F16C03 	 add r3,r7,#108
 1047 09ae 1A60     	 str r2,[r3]
 1048              	.LBB43:
 1049 09b0 07F5B473 	 add r3,r7,#360
 1050 09b4 D3E90023 	 ldrd r2,[r3]
 1051 09b8 4FEAD238 	 lsr r8,r2,#15
 1052 09bc 48EA4348 	 orr r8,r8,r3,lsl#17
 1053 09c0 4FEAE339 	 asr r9,r3,#15
 1054 09c4 4346     	 mov r3,r8
 1055 09c6 C7F8F430 	 str r3,[r7,#244]
 1056 09ca D7F8F430 	 ldr r3,[r7,#244]
 1057              	
 1058 09ce 03F30F03 	 ssat r3,#16,r3
 1059              	
 1060              	 .thumb
 1061 09d2 C7F8F030 	 str r3,[r7,#240]
 1062 09d6 D7F8F030 	 ldr r3,[r7,#240]
 1063              	.LBE43:
 1064 09da 9BB2     	 uxth r3,r3
 1065 09dc 0B80     	 strh r3,[r1]
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     /* Initialization of inputB pointer */
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pIn2 = py;
 1066              	 .loc 1 522 0
 1067 09de D7F82431 	 ldr r3,[r7,#292]
 1068 09e2 C7F83C31 	 str r3,[r7,#316]
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****     pScratch1 += 1u;
 1069              	 .loc 1 524 0
 1070 09e6 D7F89431 	 ldr r3,[r7,#404]
 1071 09ea 0233     	 adds r3,r3,#2
 1072 09ec C7F89431 	 str r3,[r7,#404]
 1073              	.L22:
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   {
 1074              	 .loc 1 480 0
 1075 09f0 D7F83031 	 ldr r3,[r7,#304]
 1076 09f4 002B     	 cmp r3,#0
 1077 09f6 7FF441AF 	 bne .L27
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c ****   }
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** 
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_opt_q15.c **** }
 1078              	 .loc 1 528 0
 1079 09fa 07F5BA77 	 add r7,r7,#372
 1080              	.LCFI3:
 1081              	 .cfi_def_cfa_offset 28
 1082 09fe BD46     	 mov sp,r7
 1083              	.LCFI4:
 1084              	 .cfi_def_cfa_register 13
 1085              	 
 1086 0a00 BDE8908F 	 pop {r4,r7,r8,r9,r10,fp,pc}
 1087              	 .cfi_endproc
 1088              	.LFE135:
 1090              	 .text
 1091              	.Letext0:
 1092              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1093              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1094              	 .file 5 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_opt_q15.c
    {standard input}:20     .text.arm_conv_opt_q15:00000000 $t
    {standard input}:25     .text.arm_conv_opt_q15:00000000 arm_conv_opt_q15
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
arm_fill_q15
arm_copy_q15
