   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_fir_sparse_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_fir_sparse_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_fir_sparse_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_fir_sparse_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * Title:        arm_fir_sparse_q15.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * Description:  Q15 sparse FIR filter processing function
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * @addtogroup FIR_Sparse
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * @{
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  */
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** /**
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * @brief Processing function for the Q15 sparse FIR filter.
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * @param[in]  *S           points to an instance of the Q15 sparse FIR structure.
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * @param[in]  *pSrc        points to the block of input data.
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * @param[out] *pDst        points to the block of output data
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * @param[in]  *pScratchIn  points to a temporary buffer of size blockSize.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * @param[in]  *pScratchOut points to a temporary buffer of size blockSize.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * @param[in]  blockSize    number of input samples to process per call.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * @return none.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  *
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * \par
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * The function is implemented using an internal 32-bit accumulator.
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * The 1.15 x 1.15 multiplications yield a 2.30 result and these are added to a 2.30 accumulator.
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * Thus the full precision of the multiplications is maintained but there is only a single guard bi
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * If the accumulator result overflows it will wrap around rather than saturate.
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * After all multiply-accumulates are performed, the 2.30 accumulator is truncated to 2.15 format a
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  * In order to avoid overflows the input signal or coefficients must be scaled down by log2(numTaps
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****  */
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** void arm_fir_sparse_q15(
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   arm_fir_sparse_instance_q15 * S,
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t * pSrc,
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t * pDst,
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t * pScratchIn,
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q31_t * pScratchOut,
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   uint32_t blockSize)
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** {
  28              	 .loc 1 64 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 90B4     	 push {r4,r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 4,-8
  37              	 .cfi_offset 7,-4
  38 0002 CCB0     	 sub sp,sp,#304
  39              	.LCFI1:
  40              	 .cfi_def_cfa_offset 312
  41 0004 00AF     	 add r7,sp,#0
  42              	.LCFI2:
  43              	 .cfi_def_cfa_register 7
  44 0006 07F10C04 	 add r4,r7,#12
  45 000a 2060     	 str r0,[r4]
  46 000c 07F10800 	 add r0,r7,#8
  47 0010 0160     	 str r1,[r0]
  48 0012 391D     	 adds r1,r7,#4
  49 0014 0A60     	 str r2,[r1]
  50 0016 3A46     	 mov r2,r7
  51 0018 1360     	 str r3,[r2]
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t *pState = S->pState;                     /* State pointer */
  52              	 .loc 1 66 0
  53 001a 07F10C03 	 add r3,r7,#12
  54 001e 1B68     	 ldr r3,[r3]
  55 0020 5B68     	 ldr r3,[r3,#4]
  56 0022 C7F81031 	 str r3,[r7,#272]
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t *pIn = pSrc;                             /* Working pointer for input */
  57              	 .loc 1 67 0
  58 0026 07F10803 	 add r3,r7,#8
  59 002a 1B68     	 ldr r3,[r3]
  60 002c C7F80C31 	 str r3,[r7,#268]
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t *pOut = pDst;                            /* Working pointer for output */
  61              	 .loc 1 68 0
  62 0030 07F11403 	 add r3,r7,#20
  63 0034 3A1D     	 adds r2,r7,#4
  64 0036 1268     	 ldr r2,[r2]
  65 0038 1A60     	 str r2,[r3]
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  66              	 .loc 1 69 0
  67 003a 07F10C03 	 add r3,r7,#12
  68 003e 1B68     	 ldr r3,[r3]
  69 0040 9B68     	 ldr r3,[r3,#8]
  70 0042 C7F82C31 	 str r3,[r7,#300]
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t *px;                                     /* Temporary pointers for scratch buffer */
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t *pb = pScratchIn;                        /* Temporary pointers for scratch buffer */
  71              	 .loc 1 71 0
  72 0046 3B46     	 mov r3,r7
  73 0048 1B68     	 ldr r3,[r3]
  74 004a C7F80831 	 str r3,[r7,#264]
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t *py = pState;                            /* Temporary pointers for state buffer */
  75              	 .loc 1 72 0
  76 004e D7F81031 	 ldr r3,[r7,#272]
  77 0052 C7F80431 	 str r3,[r7,#260]
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of the n
  78              	 .loc 1 73 0
  79 0056 07F10C03 	 add r3,r7,#12
  80 005a 1B68     	 ldr r3,[r3]
  81 005c 1B69     	 ldr r3,[r3,#16]
  82 005e C7F82431 	 str r3,[r7,#292]
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   uint32_t delaySize = S->maxDelay + blockSize;  /* state length */
  83              	 .loc 1 74 0
  84 0062 07F10C03 	 add r3,r7,#12
  85 0066 1B68     	 ldr r3,[r3]
  86 0068 9B89     	 ldrh r3,[r3,#12]
  87 006a 1A46     	 mov r2,r3
  88 006c D7F83C31 	 ldr r3,[r7,#316]
  89 0070 1344     	 add r3,r3,r2
  90 0072 C7F80031 	 str r3,[r7,#256]
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   uint16_t numTaps = S->numTaps;                 /* Filter order */
  91              	 .loc 1 75 0
  92 0076 07F10C03 	 add r3,r7,#12
  93 007a 1B68     	 ldr r3,[r3]
  94 007c 1B88     	 ldrh r3,[r3]
  95 007e A7F8FE30 	 strh r3,[r7,#254]
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   int32_t readIndex;                             /* Read index of the state buffer */
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   uint32_t tapCnt, blkCnt;                       /* loop counters */
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q15_t coeff = *pCoeffs++;                      /* Read the first coefficient value */
  96              	 .loc 1 78 0
  97 0082 D7F82C31 	 ldr r3,[r7,#300]
  98 0086 9A1C     	 adds r2,r3,#2
  99 0088 C7F82C21 	 str r2,[r7,#300]
 100 008c 1B88     	 ldrh r3,[r3]
 101 008e A7F81A31 	 strh r3,[r7,#282]
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q31_t *pScr2 = pScratchOut;                    /* Working pointer for pScratchOut */
 102              	 .loc 1 79 0
 103 0092 D7F83831 	 ldr r3,[r7,#312]
 104 0096 C7F81431 	 str r3,[r7,#276]
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** #if defined (ARM_MATH_DSP)
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   q31_t in1, in2;                                /* Temporary variables */
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* BlockSize of Input samples are copied into the state buffer */
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* StateIndex points to the starting position to write in the state buffer */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   arm_circularWrite_q15(py, delaySize, &S->stateIndex, 1, pIn, 1, blockSize);
 105              	 .loc 1 91 0
 106 009a D7F80021 	 ldr r2,[r7,#256]
 107 009e 07F10C03 	 add r3,r7,#12
 108 00a2 1B68     	 ldr r3,[r3]
 109 00a4 0233     	 adds r3,r3,#2
 110 00a6 D7F80411 	 ldr r1,[r7,#260]
 111 00aa C7F8C810 	 str r1,[r7,#200]
 112 00ae C7F8C420 	 str r2,[r7,#196]
 113 00b2 C7F8C030 	 str r3,[r7,#192]
 114 00b6 0123     	 movs r3,#1
 115 00b8 C7F8BC30 	 str r3,[r7,#188]
 116 00bc D7F80C31 	 ldr r3,[r7,#268]
 117 00c0 C7F8B830 	 str r3,[r7,#184]
 118 00c4 0123     	 movs r3,#1
 119 00c6 C7F8B430 	 str r3,[r7,#180]
 120 00ca D7F83C31 	 ldr r3,[r7,#316]
 121 00ce C7F8B030 	 str r3,[r7,#176]
 122              	.LBB15:
 123              	.LBB16:
 124              	 .file 2 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
   1:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* ----------------------------------------------------------------------
   2:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Project:      CMSIS DSP Library
   3:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Title:        CMSIS_DSP/cmsis_dsp.h
   4:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
   6:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * $Date:        27. January 2017
   7:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * $Revision:    V.1.5.1
   8:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
   9:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Target Processor: Cortex-M cores
  10:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * -------------------------------------------------------------------- */
  11:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*
  12:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  14:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  16:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * not use this file except in compliance with the License.
  18:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * You may obtain a copy of the License at
  19:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  20:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  22:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * See the License for the specific language governing permissions and
  26:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * limitations under the License.
  27:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
  28:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
  29:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
  30:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  32:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Introduction
  33:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  34:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  35:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  38:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Basic math functions
  40:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Fast math functions
  41:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Complex math functions
  42:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Filters
  43:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Matrix functions
  44:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Transforms
  45:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Motor control functions
  46:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Statistical functions
  47:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Support functions
  48:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Interpolation functions
  49:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  50:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  53:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Using the Library
  54:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  55:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  56:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  77:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library functions are declared in the public file <code>CMSIS_DSP/cmsis_dsp.h</code> which
  78:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * public header file <code> CMSIS_DSP/cmsis_dsp.h</code> for Cortex-M cores with little endian a
  80:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * 
  85:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  86:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Examples
  87:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * --------
  88:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  89:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  90:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  91:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Toolchain Support
  92:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  93:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  94:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  97:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Building the Library
  98:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  99:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Pre-processor Macros
 107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Each library project have differant pre-processor macros.
 110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_CMx:
 128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * on ARMv8M Mainline target.
 137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - __FPU_PRESENT:
 139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - __DSP_PRESENT:
 143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * -----------------------------
 149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |File/Folder                   |Content                                                       
 152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Revision History of CMSIS-DSP
 160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Copyright Notice
 164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * operate on individual values and not arrays.
 179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions operates on complex data vectors.
 186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * (real, imag, real, imag, ...).
 188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * real values.
 191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * the type
 203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * definition for the floating-point matrix structure is shown
 204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * below:
 205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     typedef struct
 207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     {
 208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     } arm_matrix_instance_f32;
 212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * matrix element (i, j) is stored at:
 219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     pData[i*numCols + j]
 221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par Init Functions
 224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * data structure.
 226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par
 231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * To place the instance structure in a const data
 234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * data array.
 243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par Size Checking
 245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * columns.  If the size check fails the functions return:
 249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Otherwise the functions return
 253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SUCCESS
 255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupController Controller Functions
 274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupSupport Support Functions
 281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupExamples Examples
 292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef _ARM_MATH_H
 294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define _ARM_MATH_H
 295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* ignore some GCC warnings */
 297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined ( __GNUC__ )
 298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic push
 299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined(ARM_MATH_CM7)
 307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm7.h"
 308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_DSP
 309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm4.h"
 311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_DSP
 312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm3.h"
 314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0.h"
 316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0plus.h"
 319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_armv8mbl.h"
 322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_armv8mml.h"
 325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ARM_MATH_DSP
 327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #include "string.h"
 334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #include "math.h"
 335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifdef   __cplusplus
 336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** extern "C"
 337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** {
 338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q31          (0x100)
 346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q15          0x5
 347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define INDEX_MASK         0x0000003F
 348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef PI
 349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define PI               3.14159265358979f
 350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macro for Unaligned Support
 372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if defined  (__GNUC__)
 377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #else
 379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __align(4)
 380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef enum
 388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_status;
 397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int8_t q7_t;
 402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int16_t q15_t;
 407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int32_t q31_t;
 412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int64_t q63_t;
 417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef float float32_t;
 422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef double float64_t;
 427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if   defined ( __CC_ARM )
 432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __GNUC__ )
 442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __ICCARM__ )
 447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __TI_ARM__ )
 452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __CSMC__ )
 457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __TASKING__ )
 462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #error Unknown compiler
 468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
 489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q31 to Q7 values.
 529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x)
 532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x)
 542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x,
 553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t y)
 554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*
 560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __CLZ __clz
 562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t data);
 568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t data)
 571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t count = 0;
 573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t mask = 0x80000000;
 574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     while ((data & mask) == 0)
 576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       count += 1u;
 578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       mask = mask >> 1u;
 579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (count);
 582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t in,
 591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * dst,
 592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pRecipTable)
 593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t out;
 595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t tempVal;
 596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t index, i;
 597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t signBits;
 598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (in > 0)
 600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
 604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Convert input sample to 1.31 format */
 609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     in = (in << signBits);
 610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* calculation of index for initial approximated Val */
 612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (uint32_t)(in >> 24);
 613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (index & INDEX_MASK);
 614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* 1.31 with exp 1 */
 616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = pRecipTable[index];
 617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* calculation of reciprocal value */
 619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* running approximation for two iterations */
 620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     for (i = 0u; i < 2u; i++)
 621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /*      1.31 with exp 1 */
 625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* write output */
 630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *dst = out;
 631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return num of signbits of out = 1/in value */
 633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (signBits + 1u);
 634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
 641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t in,
 642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * dst,
 643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pRecipTable)
 644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t out = 0;
 646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t tempVal = 0;
 647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t index = 0, i = 0;
 648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t signBits = 0;
 649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (in > 0)
 651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
 655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Convert input sample to 1.15 format */
 660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     in = (in << signBits);
 661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* calculation of index for initial approximated Val */
 663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (uint32_t)(in >>  8);
 664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (index & INDEX_MASK);
 665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /*      1.15 with exp 1  */
 667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = pRecipTable[index];
 668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* calculation of reciprocal value */
 670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* running approximation for two iterations */
 671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     for (i = 0u; i < 2u; i++)
 672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /*      1.15 with exp 1 */
 676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* write output */
 681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *dst = out;
 682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return num of signbits of out = 1/in value */
 684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (signBits + 1);
 685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t __SSAT(
 693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x,
 694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t posMax, negMin;
 697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t i;
 698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     posMax = 1;
 700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     for (i = 0; i < (y - 1); i++)
 701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       posMax = posMax * 2;
 703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (x > 0)
 706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       posMax = (posMax - 1);
 708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (x > posMax)
 710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         x = posMax;
 712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
 715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       negMin = -posMax;
 717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (x < negMin)
 719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         x = negMin;
 721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (x);
 724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if !defined (ARM_MATH_DSP)
 733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
 738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s, t, u;
 742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
 756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s, t, u;
 760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
 774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r = 0, s = 0;
 779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
 791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
 807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
 823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
 839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
 855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
 871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
 887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t r, s;
 891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
 903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
 914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
 916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
 926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t x,
 927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t y)
 928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
 937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t x,
 938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t y)
 939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
 948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
 950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t sum)
 951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
 962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
 964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t sum)
 965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMLSDX for M3 and M0 processors
 974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLSDX(
 976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
 978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t sum)
 979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
 987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMLALD for M3 and M0 processors
 988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALD(
 990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
 991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
 992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint64_t sum)
 993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
 995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMLALDX for M3 and M0 processors
1003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALDX(
1005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
1006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
1007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint64_t sum)
1008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
1010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
1011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
1012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
1013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMUAD for M3 and M0 processors
1018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUAD(
1020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
1021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
1022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
1024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMUSD for M3 and M0 processors
1030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSD(
1032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
1033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y)
1034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
1036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SXTB16 for M3 and M0 processors
1042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SXTB16(
1044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x)
1045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
1047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                        ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
1048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined SMMLA for M3 and M0 processors
1052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __SMMLA(
1054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t x,
1055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t y,
1056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t sum)
1057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (sum + (int32_t) (((int64_t) x * y) >> 32));
1059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if 0
1062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined PKHBT for unavailable DSP extension
1064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __PKHBT(
1066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
1067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
1068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t leftshift)
1069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ( ((x             ) & 0x0000FFFFUL) |
1071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****              ((y << leftshift) & 0xFFFF0000UL)  );
1072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /*
1075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief C custom defined PKHTB for unavailable DSP extension
1076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __PKHTB(
1078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t x,
1079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t y,
1080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t rightshift)
1081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ( ((x              ) & 0xFFFF0000UL) |
1083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****              ((y >> rightshift) & 0x0000FFFFUL)  );
1084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
1085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
1086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
1088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
1089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q7 FIR filter.
1093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;        /**< number of filter coefficients in the filter. */
1097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t *pState;            /**< points to the state variable array. The array is of length numTap
1098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*
1099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_instance_q7;
1100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 FIR filter.
1103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;            /**< points to the state variable array. The array is of length numTa
1108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_instance_q15;
1110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 FIR filter.
1113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;            /**< points to the state variable array. The array is of length numTa
1118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_instance_q31;
1120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point FIR filter.
1123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;     /**< number of filter coefficients in the filter. */
1127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
1128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
1129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_instance_f32;
1130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q7 FIR filter.
1134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q7 FIR filter structure.
1135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_q7(
1140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_q7 * S,
1141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
1142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
1143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q7 FIR filter.
1148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 FIR structure.
1149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that are processed.
1153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_init_q7(
1155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_instance_q7 * S,
1156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
1157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pCoeffs,
1158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pState,
1159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 FIR filter.
1164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR structure.
1165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_q15(
1170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_q15 * S,
1171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
1172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
1173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4.
1178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR filter structure.
1179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_fast_q15(
1184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_q15 * S,
1185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
1186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
1187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 FIR filter.
1192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
1193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greate
1194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARG
1198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>numTaps</code> is not a supported value.
1199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_init_q15(
1201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_instance_q15 * S,
1202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
1203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
1204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
1205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 FIR filter.
1210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_q31(
1216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_q31 * S,
1217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
1218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
1219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4.
1224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR structure.
1225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_fast_q31(
1230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_q31 * S,
1231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
1232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
1233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 FIR filter.
1238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR structure.
1239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_init_q31(
1245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_instance_q31 * S,
1246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
1247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
1248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
1249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point FIR filter.
1254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR structure.
1255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_f32(
1260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_instance_f32 * S,
1261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
1262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
1263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point FIR filter.
1268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
1269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_init_f32(
1275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_instance_f32 * S,
1276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
1277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
1278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
1279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 Biquad cascade filter.
1284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is 2*num
1288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. */
1291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_casd_df1_inst_q15;
1292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 Biquad cascade filter.
1295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. */
1302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_casd_df1_inst_q31;
1303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point Biquad cascade filter.
1306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;       /**< Points to the array of state coefficients.  The array is of lengt
1311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of length 5*nu
1312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_casd_df1_inst_f32;
1313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 Biquad cascade filter.
1317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_q15(
1323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
1325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
1326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 Biquad cascade filter.
1331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
1332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_init_q15(
1338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_casd_df1_inst_q15 * S,
1339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
1340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
1341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
1342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t postShift);
1343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-
1347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_fast_q15(
1353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
1355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
1356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 Biquad cascade filter
1361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_q31(
1367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
1369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
1370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-
1375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_fast_q31(
1381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
1383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
1384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 Biquad cascade filter.
1389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
1390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_init_q31(
1396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_casd_df1_inst_q31 * S,
1397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
1398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
1399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
1400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t postShift);
1401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point Biquad cascade filter.
1405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
1406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
1408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_f32(
1411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_casd_df1_inst_f32 * S,
1412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
1413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
1414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point Biquad cascade filter.
1419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure
1420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
1423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df1_init_f32(
1425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_casd_df1_inst_f32 * S,
1426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
1427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
1428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState);
1429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pData;     /**< points to the data of the matrix. */
1439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_matrix_instance_f32;
1440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float64_t *pData;     /**< points to the data of the matrix. */
1450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_matrix_instance_f64;
1451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 matrix structure.
1454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pData;         /**< points to the data of the matrix. */
1460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_matrix_instance_q15;
1461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 matrix structure.
1464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pData;         /**< points to the data of the matrix. */
1470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_matrix_instance_q31;
1471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix addition.
1475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_add_f32(
1482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix addition.
1489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]   pSrcA  points to the first input matrix structure
1490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]   pSrcB  points to the second input matrix structure
1491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out]  pDst   points to output matrix structure
1492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_add_q15(
1496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst);
1499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix addition.
1503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_add_q31(
1510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point, complex, matrix multiplication.
1517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_cmplx_mult_f32(
1524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15, complex,  matrix multiplication.
1531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_cmplx_mult_q15(
1538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst,
1541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch);
1542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31, complex, matrix multiplication.
1546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_cmplx_mult_q31(
1553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix transpose.
1560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst  points to the output matrix
1562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_trans_f32(
1566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix transpose.
1572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst  points to the output matrix
1574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_trans_q15(
1578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst);
1580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix transpose.
1584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst  points to the output matrix
1586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_trans_q31(
1590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix multiplication
1596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_mult_f32(
1603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix multiplication
1610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst    points to output matrix structure
1613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_mult_q15(
1618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst,
1621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState);
1622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst    points to output matrix structure
1629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_mult_fast_q15(
1634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst,
1637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState);
1638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix multiplication
1642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_mult_q31(
1649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_mult_fast_q31(
1663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix subtraction
1670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_sub_f32(
1677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix subtraction
1684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_sub_q15(
1691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst);
1694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix subtraction
1698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to output matrix structure
1701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_sub_q31(
1705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix scaling.
1712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc   points to the input matrix
1713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scale  scale factor
1714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst   points to the output matrix
1715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_scale_f32(
1719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t scale,
1721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * pDst);
1722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 matrix scaling.
1726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to input matrix
1727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to output matrix
1730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_scale_q15(
1734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t scaleFract,
1736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t shift,
1737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * pDst);
1738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 matrix scaling.
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to input matrix
1743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to output matrix structure
1746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return     The function returns either
1747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_scale_q31(
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t scaleFract,
1752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t shift,
1753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * pDst);
1754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q31 matrix initialization.
1758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mat_init_q31(
1764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q31 * S,
1765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nRows,
1766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nColumns,
1767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pData);
1768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q15 matrix initialization.
1772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mat_init_q15(
1778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_q15 * S,
1779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nRows,
1780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nColumns,
1781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pData);
1782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point matrix initialization.
1786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mat_init_f32(
1792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * S,
1793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nRows,
1794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t nColumns,
1795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pData);
1796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 PID Control.
1801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
1805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if !defined (ARM_MATH_DSP)
1806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t A1;
1807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t A2;
1808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
1809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
1810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
1811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t state[3];     /**< The state array of length 3. */
1812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t Kp;           /**< The proportional gain. */
1813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t Ki;           /**< The integral gain. */
1814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t Kd;           /**< The derivative gain. */
1815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_pid_instance_q15;
1816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 PID Control.
1819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
1823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
1824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t A2;            /**< The derived gain, A2 = Kd . */
1825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t state[3];      /**< The state array of length 3. */
1826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t Kp;            /**< The proportional gain. */
1827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t Ki;            /**< The integral gain. */
1828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t Kd;            /**< The derivative gain. */
1829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_pid_instance_q31;
1830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point PID Control.
1833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
1837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
1838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t A2;          /**< The derived gain, A2 = Kd . */
1839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t state[3];    /**< The state array of length 3. */
1840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t Kp;          /**< The proportional gain. */
1841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t Ki;          /**< The integral gain. */
1842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t Kd;          /**< The derivative gain. */
1843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_pid_instance_f32;
1844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point PID Control.
1849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S               points to an instance of the PID structure.
1850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_init_f32(
1853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_f32 * S,
1854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t resetStateFlag);
1855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Reset function for the floating-point PID Control.
1859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S  is an instance of the floating-point PID Control structure
1860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_reset_f32(
1862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_f32 * S);
1863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 PID Control.
1867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_init_q31(
1871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q31 * S,
1872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t resetStateFlag);
1873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Reset function for the Q31 PID Control.
1877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S   points to an instance of the Q31 PID Control structure
1878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_reset_q31(
1881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q31 * S);
1882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 PID Control.
1886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_init_q15(
1890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q15 * S,
1891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t resetStateFlag);
1892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Reset function for the Q15 PID Control.
1896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S  points to an instance of the q15 PID Control structure
1897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_pid_reset_q15(
1899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q15 * S);
1900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point Linear Interpolate function.
1904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t nValues;           /**< nValues */
1908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t x1;               /**< x1 */
1909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t xSpacing;         /**< xSpacing */
1910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pYData;          /**< pointer to the table of Y values */
1911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_linear_interp_instance_f32;
1912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point bilinear interpolation function.
1915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pData;   /**< points to the data table. */
1921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_bilinear_interp_instance_f32;
1922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
1924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 bilinear interpolation function.
1925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pData;       /**< points to the data table. */
1931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_bilinear_interp_instance_q31;
1932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
1934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pData;       /**< points to the data table. */
1941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_bilinear_interp_instance_q15;
1942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
1944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
1947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
1948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t *pData;        /**< points to the data table. */
1951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_bilinear_interp_instance_q7;
1952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q7 vector multiplication.
1956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
1959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mult_q7(
1962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
1963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
1964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
1965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 vector multiplication.
1970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
1973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mult_q15(
1976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
1977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
1978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
1979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 vector multiplication.
1984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
1987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
1989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mult_q31(
1990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
1991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
1992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
1993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
1994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
1996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
1997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point vector multiplication.
1998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_mult_f32(
2004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
2005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
2006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
2012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
2019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix2_instance_q15;
2023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix2_init_q15(
2026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix2_instance_q15 * S,
2027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix2_q15(
2033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix2_instance_q15 * S,
2034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc);
2035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
2039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
2046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix4_instance_q15;
2050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix4_init_q15(
2053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_q15 * S,
2054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix4_q15(
2060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix4_instance_q15 * S,
2061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc);
2062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
2065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
2072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix2_instance_q31;
2076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix2_init_q31(
2079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix2_instance_q31 * S,
2080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix2_q31(
2086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix2_instance_q31 * S,
2087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc);
2088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 CFFT/CIFFT function.
2091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
2098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix4_instance_q31;
2102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix4_q31(
2105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix4_instance_q31 * S,
2106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc);
2107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix4_init_q31(
2110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_q31 * S,
2111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix2_instance_f32;
2129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix2_init_f32(
2132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix2_instance_f32 * S,
2133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix2_f32(
2139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix2_instance_f32 * S,
2140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc);
2141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_radix4_instance_f32;
2156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_cfft_radix4_init_f32(
2159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_f32 * S,
2160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t fftLen,
2161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* Deprecated */
2165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_radix4_f32(
2166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_radix4_instance_f32 * S,
2167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc);
2168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
2176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_instance_q15;
2179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** void arm_cfft_q15(
2181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const arm_cfft_instance_q15 * S,
2182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t * p1,
2183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag,
2184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag);
2185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
2193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_instance_q31;
2196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** void arm_cfft_q31(
2198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const arm_cfft_instance_q31 * S,
2199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t * p1,
2200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlag,
2201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlag);
2202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
2210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_cfft_instance_f32;
2213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cfft_f32(
2215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_cfft_instance_f32 * S,
2216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * p1,
2217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag,
2218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t bitReverseFlag);
2219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 RFFT/RIFFT function.
2222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t fftLenReal;                      /**< length of the real FFT. */
2226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or inver
2227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or disable
2228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports diffe
2229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. */
2230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. */
2231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
2232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_rfft_instance_q15;
2233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_rfft_init_q15(
2235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_q15 * S,
2236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t fftLenReal,
2237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t ifftFlagR,
2238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t bitReverseFlag);
2239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_rfft_q15(
2241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_rfft_instance_q15 * S,
2242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst);
2244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 RFFT/RIFFT function.
2247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that supports dif
2254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table. */
2255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table. */
2256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
2257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_rfft_instance_q31;
2258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_rfft_init_q31(
2260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_q31 * S,
2261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t fftLenReal,
2262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t ifftFlagR,
2263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t bitReverseFlag);
2264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_rfft_q31(
2266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_rfft_instance_q31 * S,
2267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst);
2269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLenBy2;                         /**< length of the complex FFT. */
2277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that supports
2280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table. */
2281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table. */
2282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
2283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_rfft_instance_f32;
2284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_rfft_init_f32(
2286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_f32 * S,
2287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t fftLenReal,
2289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t ifftFlagR,
2290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t bitReverseFlag);
2291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_rfft_f32(
2293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_rfft_instance_f32 * S,
2294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst);
2296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** typedef struct
2301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
2303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t fftLenRFFT;             /**< length of the real sequence */
2304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
2305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_rfft_fast_instance_f32 ;
2306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** arm_status arm_rfft_fast_init_f32 (
2308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    arm_rfft_fast_instance_f32 * S,
2309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    uint16_t fftLen);
2310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** void arm_rfft_fast_f32(
2312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_fast_instance_f32 * S,
2313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * p, float32_t * pOut,
2314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t ifftFlag);
2315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point DCT4/IDCT4 function.
2318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t normalize;                 /**< normalizing factor. */
2324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
2325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCosFactor;               /**< points to the cosFactor table. */
2326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
2327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
2328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_dct4_instance_f32;
2329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point DCT4/IDCT4.
2333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
2334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
2335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
2336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     N          length of the DCT4.
2337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     normalize  normalizing factor.
2339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_dct4_init_f32(
2342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_dct4_instance_f32 * S,
2343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_f32 * S_RFFT,
2344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t N,
2346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t Nby2,
2347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t normalize);
2348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point DCT4/IDCT4.
2352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure
2353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState         points to state buffer.
2354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dct4_f32(
2357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_dct4_instance_f32 * S,
2358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
2359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pInlineBuffer);
2360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 DCT4/IDCT4 function.
2364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t normalize;                     /**< normalizing factor. */
2370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
2371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCosFactor;                   /**< points to the cosFactor table. */
2372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
2373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
2374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_dct4_instance_q31;
2375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 DCT4/IDCT4.
2379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
2380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
2381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
2382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     N          length of the DCT4.
2383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     normalize  normalizing factor.
2385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_dct4_init_q31(
2388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_dct4_instance_q31 * S,
2389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_q31 * S_RFFT,
2390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_q31 * S_CFFT,
2391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t N,
2392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t Nby2,
2393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t normalize);
2394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 DCT4/IDCT4.
2398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S              points to an instance of the Q31 DCT4 structure.
2399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState         points to state buffer.
2400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dct4_q31(
2403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_dct4_instance_q31 * S,
2404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
2405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pInlineBuffer);
2406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 DCT4/IDCT4 function.
2410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
2412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
2413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t normalize;                     /**< normalizing factor. */
2416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
2417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCosFactor;                   /**< points to the cosFactor table. */
2418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
2419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
2420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_dct4_instance_q15;
2421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 DCT4/IDCT4.
2425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
2426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
2427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
2428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     N          length of the DCT4.
2429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     normalize  normalizing factor.
2431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_dct4_init_q15(
2434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_dct4_instance_q15 * S,
2435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_rfft_instance_q15 * S_RFFT,
2436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_cfft_radix4_instance_q15 * S_CFFT,
2437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t N,
2438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t Nby2,
2439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t normalize);
2440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 DCT4/IDCT4.
2444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     S              points to an instance of the Q15 DCT4 structure.
2445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState         points to state buffer.
2446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dct4_q15(
2449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_dct4_instance_q15 * S,
2450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
2451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pInlineBuffer);
2452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point vector addition.
2456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_add_f32(
2462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
2463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
2464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q7 vector addition.
2470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_add_q7(
2476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
2477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
2478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 vector addition.
2484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_add_q15(
2490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
2491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
2492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 vector addition.
2498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_add_q31(
2504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
2505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
2506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point vector subtraction.
2512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sub_f32(
2518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
2519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
2520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q7 vector subtraction.
2526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sub_q7(
2532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
2533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
2534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 vector subtraction.
2540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sub_q15(
2546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
2547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
2548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 vector subtraction.
2554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sub_q31(
2560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
2561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
2562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies a floating-point vector by a scalar.
2568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scale      scale factor to be applied
2570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_scale_f32(
2574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t scale,
2576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies a Q7 vector by a scalar.
2582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
2583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
2586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_scale_q7(
2589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t scaleFract,
2591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shift,
2592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies a Q15 vector by a scalar.
2598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
2599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
2602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_scale_q15(
2605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t scaleFract,
2607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shift,
2608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies a Q31 vector by a scalar.
2614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
2615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
2618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_scale_q31(
2621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t scaleFract,
2623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shift,
2624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q7 vector absolute value.
2630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output buffer
2632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_abs_q7(
2635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point vector absolute value.
2642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output buffer
2644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_abs_f32(
2647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 vector absolute value.
2654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output buffer
2656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_abs_q15(
2659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 vector absolute value.
2666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output buffer
2668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_abs_q31(
2671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Dot product of floating-point vectors.
2678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] result     output result returned here
2682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dot_prod_f32(
2684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
2685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
2686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
2687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * result);
2688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Dot product of Q7 vectors.
2692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] result     output result returned here
2696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dot_prod_q7(
2698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
2699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
2700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
2701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * result);
2702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Dot product of Q15 vectors.
2706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] result     output result returned here
2710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dot_prod_q15(
2712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
2713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
2714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
2715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t * result);
2716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Dot product of Q31 vectors.
2720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] result     output result returned here
2724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_dot_prod_q31(
2726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
2727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
2728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
2729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t * result);
2730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Shifts the elements of a Q7 vector a specified number of bits.
2734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_shift_q7(
2740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shiftBits,
2742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Shifts the elements of a Q15 vector a specified number of bits.
2748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_shift_q15(
2754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shiftBits,
2756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Shifts the elements of a Q31 vector a specified number of bits.
2762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_shift_q31(
2768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int8_t shiftBits,
2770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Adds a constant offset to a floating-point vector.
2776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  offset     is the offset to be added
2778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_offset_f32(
2782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t offset,
2784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Adds a constant offset to a Q7 vector.
2790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  offset     is the offset to be added
2792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_offset_q7(
2796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t offset,
2798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Adds a constant offset to a Q15 vector.
2804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  offset     is the offset to be added
2806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_offset_q15(
2810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t offset,
2812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Adds a constant offset to a Q31 vector.
2818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  offset     is the offset to be added
2820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_offset_q31(
2824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t offset,
2826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Negates the elements of a floating-point vector.
2832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_negate_f32(
2837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Negates the elements of a Q7 vector.
2844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_negate_q7(
2849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Negates the elements of a Q15 vector.
2856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_negate_q15(
2861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Negates the elements of a Q31 vector.
2868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the input vector
2869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the output vector
2870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_negate_q31(
2873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Copies the elements of a floating-point vector.
2880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
2881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_copy_f32(
2885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
2886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Copies the elements of a Q7 vector.
2892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
2893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_copy_q7(
2897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
2898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Copies the elements of a Q15 vector.
2904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
2905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_copy_q15(
2909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
2910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Copies the elements of a Q31 vector.
2916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
2917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_copy_q31(
2921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
2922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fills a constant value into a floating-point vector.
2928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  value      input value to be filled
2929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fill_f32(
2933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t value,
2934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
2935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fills a constant value into a Q7 vector.
2940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  value      input value to be filled
2941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fill_q7(
2945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t value,
2946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
2947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fills a constant value into a Q15 vector.
2952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  value      input value to be filled
2953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fill_q15(
2957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t value,
2958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
2959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fills a constant value into a Q31 vector.
2964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  value      input value to be filled
2965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
2966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
2967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
2968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fill_q31(
2969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t value,
2970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
2971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
2972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
2975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @brief Convolution of floating-point sequences.
2976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
2982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_f32(
2983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
2984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
2985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
2986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
2987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst);
2988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
2990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
2991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q15 sequences.
2992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_opt_q15(
3001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
3011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @brief Convolution of Q15 sequences.
3012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
3013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
3014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
3015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
3016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
3017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
3018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_q15(
3019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst);
3024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_fast_q15(
3035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****           q15_t * pSrcA,
3036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****           uint32_t srcALen,
3037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****           q15_t * pSrcB,
3038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****           uint32_t srcBLen,
3039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****           q15_t * pDst);
3040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
3050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
3051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_fast_opt_q15(
3053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q31 sequences.
3064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_q31(
3071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
3072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
3074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst);
3076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_fast_q31(
3087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
3088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
3090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst);
3092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /**
3095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q7 sequences.
3096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
3102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
3103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_opt_q7(
3105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
3106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
3108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
3110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Convolution of Q7 sequences.
3116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_conv_q7(
3123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
3124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
3126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst);
3128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of floating-point sequences.
3132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_f32(
3142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
3143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
3145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_opt_q15(
3165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints,
3172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_q15(
3188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_fast_q15(
3209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_fast_opt_q15(
3232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
3233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
3235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints,
3239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q31 sequences.
3245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_q31(
3255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
3256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
3258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_fast_q31(
3276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
3277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
3279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q7 sequences
3287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) 
3295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen)
3296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_opt_q7(
3299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
3300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
3302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
3304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints,
3306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
3307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
3308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
3311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Partial convolution of Q7 sequences.
3312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
3317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_conv_partial_q7(
3322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
3323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
3324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
3325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
3326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
3327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t firstIndex,
3328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numPoints);
3329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 FIR decimator.
3333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;              /**< points to the state variable array. The array is of length num
3340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_decimate_instance_q15;
3341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 FIR decimator.
3344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;              /**< points to the state variable array. The array is of length num
3351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_decimate_instance_q31;
3352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point FIR decimator.
3355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length numTap
3361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;          /**< points to the state variable array. The array is of length num
3362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_decimate_instance_f32;
3363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point FIR decimator.
3367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR decimator structure.
3368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_decimate_f32(
3373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_decimate_instance_f32 * S,
3374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point FIR decimator.
3381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR decimator structure.
3382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     M          decimation factor.
3384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_decimate_init_f32(
3391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_decimate_instance_f32 * S,
3392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t M,
3394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
3395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
3396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 FIR decimator.
3401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_decimate_q15(
3407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
3409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_decimate_fast_q15(
3421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
3423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 FIR decimator.
3429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
3430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     M          decimation factor.
3432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_decimate_init_q15(
3439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_decimate_instance_q15 * S,
3440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t M,
3442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
3443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
3444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 FIR decimator.
3449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
3450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc  points to the block of input data.
3451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst  points to the block of output data
3452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize number of input samples to process per call.
3453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_decimate_q31(
3455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
3463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_decimate_fast_q31(
3468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 FIR decimator.
3476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
3477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     M          decimation factor.
3479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_decimate_init_q31(
3486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t M,
3489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
3490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
3491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 FIR interpolator.
3496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;                  /**< points to the state variable array. The array is of length
3503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_interpolate_instance_q15;
3504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 FIR interpolator.
3507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;                  /**< points to the state variable array. The array is of length
3514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_interpolate_instance_q31;
3515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point FIR interpolator.
3518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t L;                     /**< upsample factor. */
3522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t phaseLength;          /**< length of each polyphase filter component. */
3523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length L*p
3524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;             /**< points to the state variable array. The array is of length 
3525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_interpolate_instance_f32;
3526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 FIR interpolator.
3530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_interpolate_q15(
3536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_interpolate_instance_q15 * S,
3537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
3538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 FIR interpolator.
3544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
3545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     L          upsample factor.
3546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_interpolate_init_q15(
3554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_interpolate_instance_q15 * S,
3555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t L,
3556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
3558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
3559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 FIR interpolator.
3564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_interpolate_q31(
3570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_interpolate_instance_q31 * S,
3571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 FIR interpolator.
3578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
3579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     L          upsample factor.
3580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_interpolate_init_q31(
3588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_interpolate_instance_q31 * S,
3589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t L,
3590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
3592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
3593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point FIR interpolator.
3598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
3599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_interpolate_f32(
3604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_interpolate_instance_f32 * S,
3605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point FIR interpolator.
3612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR interpolator structu
3613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     L          upsample factor.
3614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_fir_interpolate_init_f32(
3622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_interpolate_instance_f32 * S,
3623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t L,
3624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
3625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
3626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
3627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the high precision Q31 Biquad cascade filter.
3632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is 2*num
3636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q63_t *pState;           /**< points to the array of state coefficients.  The array is of lengt
3637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of length 5*nu
3638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. */
3639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_cas_df1_32x64_ins_q31;
3640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter s
3644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cas_df1_32x64_q31(
3649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
3650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filte
3657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficie
3661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cas_df1_32x64_init_q31(
3663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_cas_df1_32x64_ins_q31 * S,
3664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
3665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
3666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t * pState,
3667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t postShift);
3668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_cascade_df2T_instance_f32;
3679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_cascade_stereo_df2T_instance_f32;
3689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float64_t *pState;         /**< points to the array of state coefficients.  The array is of len
3697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_biquad_cascade_df2T_instance_f64;
3699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df2T_f32(
3709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_cascade_df2T_instance_f32 * S,
3710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_stereo_df2T_f32(
3723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df2T_f64(
3737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_biquad_cascade_df2T_instance_f64 * S,
3738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float64_t * pSrc,
3739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float64_t * pDst,
3740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df2T_init_f32(
3751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_cascade_df2T_instance_f32 * S,
3752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
3753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
3754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState);
3755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_stereo_df2T_init_f32(
3765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
3767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
3768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState);
3769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
3777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_biquad_cascade_df2T_init_f64(
3779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_biquad_cascade_df2T_instance_f64 * S,
3780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t numStages,
3781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float64_t * pCoeffs,
3782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float64_t * pState);
3783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 FIR lattice filter.
3787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_lattice_instance_q15;
3794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 FIR lattice filter.
3797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_lattice_instance_q31;
3804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point FIR lattice filter.
3807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;                  /**< points to the coefficient array. The array is of leng
3813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_lattice_instance_f32;
3814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for the Q15 FIR lattice filter.
3818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q15 FIR lattice structure.
3819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numStages  number of filter stages.
3820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages.
3822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_init_q15(
3824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_lattice_instance_q15 * S,
3825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
3826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
3827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState);
3828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 FIR lattice filter.
3832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
3833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_q15(
3838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_lattice_instance_q15 * S,
3839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
3840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
3841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for the Q31 FIR lattice filter.
3846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q31 FIR lattice structure.
3847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numStages  number of filter stages.
3848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to the state buffer.   The array is of length numStages.
3850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_init_q31(
3852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_lattice_instance_q31 * S,
3853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
3854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
3855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState);
3856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 FIR lattice filter.
3860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
3861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_q31(
3866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_lattice_instance_q31 * S,
3867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
3873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @brief Initialization function for the floating-point FIR lattice filter.
3874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] S          points to an instance of the floating-point FIR lattice structure.
3875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] numStages  number of filter stages.
3876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] pState     points to the state buffer.  The array is of length numStages.
3878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
3879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_init_f32(
3880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_lattice_instance_f32 * S,
3881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
3882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
3883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState);
3884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point FIR lattice filter.
3888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
3889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data
3891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_lattice_f32(
3894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_fir_lattice_instance_f32 * S,
3895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 IIR lattice filter.
3902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_iir_lattice_instance_q15;
3910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 IIR lattice filter.
3913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_iir_lattice_instance_q31;
3921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point IIR lattice filter.
3924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
3926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
3927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The array
3930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The array is 
3931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_iir_lattice_instance_f32;
3932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point IIR lattice filter.
3936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
3937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_f32(
3942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_iir_lattice_instance_f32 * S,
3943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
3944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
3945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for the floating-point IIR lattice filter.
3950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the floating-point IIR lattice structure.
3951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-
3955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
3956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_init_f32(
3958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_iir_lattice_instance_f32 * S,
3959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
3960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pkCoeffs,
3961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pvCoeffs,
3962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
3963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 IIR lattice filter.
3968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
3969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
3971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_q31(
3974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_iir_lattice_instance_q31 * S,
3975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
3976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
3977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for the Q31 IIR lattice filter.
3982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q31 IIR lattice structure.
3983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
3987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
3988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
3989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_init_q31(
3990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_iir_lattice_instance_q31 * S,
3991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
3992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pkCoeffs,
3993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pvCoeffs,
3994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
3995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
3996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
3998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
3999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 IIR lattice filter.
4000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
4001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data.
4003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_q15(
4006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_iir_lattice_instance_q15 * S,
4007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
4013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @brief Initialization function for the Q15 IIR lattice filter.
4014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
4015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] numStages  number of stages in the filter.
4016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages
4017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
4018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
4019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @param[in] blockSize  number of samples to process per call.
4020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
4021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_iir_lattice_init_q15(
4022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_iir_lattice_instance_q15 * S,
4023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numStages,
4024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pkCoeffs,
4025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pvCoeffs,
4026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
4027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point LMS filter.
4032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;   /**< points to the state variable array. The array is of length numTaps+bl
4037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps. */
4038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t mu;        /**< step size that controls filter coefficient updates. */
4039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_instance_f32;
4040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for floating-point LMS filter.
4044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point LMS filter structure.
4045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_f32(
4052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_lms_instance_f32 * S,
4053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
4054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pRef,
4055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pOut,
4056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pErr,
4057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for floating-point LMS filter.
4062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to state buffer.
4066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_init_f32(
4070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_instance_f32 * S,
4071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
4073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
4074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t mu,
4075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 LMS filter.
4080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t mu;            /**< step size that controls filter coefficient updates. */
4087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_instance_q15;
4089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for the Q15 LMS filter.
4093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q15 LMS filter structure.
4094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to the state buffer.
4097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_init_q15(
4102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_instance_q15 * S,
4103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
4105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
4106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t mu,
4107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
4108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t postShift);
4109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for Q15 LMS filter.
4113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_q15(
4121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_lms_instance_q15 * S,
4122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pRef,
4124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pOut,
4125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pErr,
4126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 LMS filter.
4131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t mu;            /**< step size that controls filter coefficient updates. */
4138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_instance_q31;
4140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for Q31 LMS filter.
4144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_q31(
4152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_lms_instance_q31 * S,
4153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
4154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pRef,
4155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pOut,
4156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pErr,
4157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for Q31 LMS filter.
4162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q31 LMS filter structure.
4163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to state buffer.
4166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_init_q31(
4171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_instance_q31 * S,
4172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
4174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
4175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t mu,
4176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
4177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t postShift);
4178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point normalized LMS filter.
4182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
4187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
4188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t mu;         /**< step size that control filter coefficient updates. */
4189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t energy;     /**< saves previous frame energy. */
4190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t x0;         /**< saves previous input sample. */
4191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_norm_instance_f32;
4192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for floating-point normalized LMS filter.
4196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the floating-point normalized LMS filter struc
4197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_f32(
4204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_f32 * S,
4205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
4206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pRef,
4207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pOut,
4208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pErr,
4209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for floating-point normalized LMS filter.
4214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to state buffer.
4218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_init_f32(
4222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_f32 * S,
4223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
4225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
4226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t mu,
4227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 normalized LMS filter.
4232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t mu;             /**< step size that controls filter coefficient updates. */
4239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *recipTable;    /**< points to the reciprocal initial value table. */
4241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t energy;         /**< saves previous frame energy. */
4242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t x0;             /**< saves previous input sample. */
4243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_norm_instance_q31;
4244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for Q31 normalized LMS filter.
4248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
4249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_q31(
4256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_q31 * S,
4257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
4258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pRef,
4259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pOut,
4260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pErr,
4261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for Q31 normalized LMS filter.
4266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
4267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to state buffer.
4270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_init_q31(
4275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_q31 * S,
4276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
4278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
4279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t mu,
4280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
4281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t postShift);
4282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 normalized LMS filter.
4286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;     /**< Number of coefficients in the filter. */
4290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t mu;             /**< step size that controls filter coefficient updates. */
4293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
4295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t energy;         /**< saves previous frame energy. */
4296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t x0;             /**< saves previous input sample. */
4297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_lms_norm_instance_q15;
4298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for Q15 normalized LMS filter.
4302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
4303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut       points to the block of output data.
4306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pErr       points to the block of error data.
4307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_q15(
4310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_q15 * S,
4311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pRef,
4313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pOut,
4314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pErr,
4315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Initialization function for Q15 normalized LMS filter.
4320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
4321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pState     points to state buffer.
4324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] blockSize  number of samples to process.
4326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_lms_norm_init_q15(
4329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_lms_norm_instance_q15 * S,
4330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
4332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
4333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t mu,
4334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize,
4335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint8_t postShift);
4336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of floating-point sequences.
4340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_f32(
4347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcA,
4348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrcB,
4350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst);
4352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
4355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q15 sequences
4356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_opt_q15(
4364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
4365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
4367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch);
4370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q15 sequences.
4374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_q15(
4382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
4383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
4385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst);
4387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_fast_q15(
4399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
4400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
4402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst);
4404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_fast_opt_q15(
4416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcA,
4417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrcB,
4419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch);
4422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q31 sequences.
4426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_q31(
4433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
4434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
4436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst);
4438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
4442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_fast_q31(
4449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcA,
4450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrcB,
4452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst);
4454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  /**
4457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q7 sequences.
4458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
4459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
4460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
4461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
4462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 
4463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
4464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
4465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_opt_q7(
4467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
4468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
4470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
4472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch1,
4473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratch2);
4474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Correlation of Q7 sequences.
4478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_correlate_q7(
4485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcA,
4486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcALen,
4487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrcB,
4488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t srcBLen,
4489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst);
4490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the floating-point sparse FIR filter.
4494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pState;            /**< points to the state buffer array. The array is of length max
4500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pCoeffs;           /**< points to the coefficient array. The array is of length numT
4501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_sparse_instance_f32;
4504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q31 sparse FIR filter.
4507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pState;                /**< points to the state buffer array. The array is of length max
4513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_sparse_instance_q31;
4517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q15 sparse FIR filter.
4520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pState;                /**< points to the state buffer array. The array is of length max
4526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_sparse_instance_q15;
4530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Instance structure for the Q7 sparse FIR filter.
4533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef struct
4535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t *pState;                 /**< points to the state buffer array. The array is of length max
4539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t *pCoeffs;                /**< points to the coefficient array. The array is of length numT
4540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_fir_sparse_instance_q7;
4543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the floating-point sparse FIR filter.
4547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
4548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
4550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_f32(
4554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
4556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
4557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pScratchIn,
4558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the floating-point sparse FIR filter.
4563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
4564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
4567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_init_f32(
4572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCoeffs,
4575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pState,
4576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * pTapDelay,
4577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t maxDelay,
4578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q31 sparse FIR filter.
4583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
4584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the block of output data
4586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_q31(
4590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
4592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
4593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pScratchIn,
4594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q31 sparse FIR filter.
4599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
4600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
4603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_init_q31(
4608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCoeffs,
4611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pState,
4612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * pTapDelay,
4613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t maxDelay,
4614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q15 sparse FIR filter.
4619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
4620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst         points to the block of output data
4622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_q15(
4627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pScratchIn,
4631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pScratchOut,
4632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q15 sparse FIR filter.
4637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
4638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
4641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_init_q15(
4646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pCoeffs,
4649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pState,
4650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * pTapDelay,
4651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t maxDelay,
4652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Processing function for the Q7 sparse FIR filter.
4657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
4658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst         points to the block of output data
4660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_q7(
4665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
4667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pDst,
4668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pScratchIn,
4669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pScratchOut,
4670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Initialization function for the Q7 sparse FIR filter.
4675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
4676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pState     points to the state buffer.
4679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_fir_sparse_init_q7(
4684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t numTaps,
4686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pCoeffs,
4687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pState,
4688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * pTapDelay,
4689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t maxDelay,
4690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
4691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point sin_cos function.
4695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  theta   input value in degrees
4696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pCosVal  points to the processed cos output.
4698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sin_cos_f32(
4700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t theta,
4701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSinVal,
4702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pCosVal);
4703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q31 sin_cos function.
4707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  theta    scaled input value in degrees
4708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pCosVal  points to the processed cosine output.
4710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_sin_cos_q31(
4712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t theta,
4713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSinVal,
4714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pCosVal);
4715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point complex conjugate.
4719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
4720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
4721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_conj_f32(
4724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
4725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
4726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q31 complex conjugate.
4730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
4731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
4732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_conj_q31(
4735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
4736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
4737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q15 complex conjugate.
4742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the input vector
4743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the output vector
4744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_conj_q15(
4747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point complex magnitude squared
4754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the real output vector
4756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_mag_squared_f32(
4759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pSrc,
4760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
4761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q31 complex magnitude squared
4766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the real output vector
4768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_mag_squared_q31(
4771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
4772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
4773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q15 complex magnitude squared
4778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst        points to the real output vector
4780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_cmplx_mag_squared_q15(
4783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pSrc,
4784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
4785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t numSamples);
4786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  /**
4789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupController
4790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup PID PID Motor Control
4794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * A Proportional Integral Derivative (PID) controller is a generic feedback control
4796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * loop mechanism widely used in industrial control systems.
4797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * A PID controller is the most commonly used type of feedback controller.
4798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This set of functions implements (PID) controllers
4800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
4801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * of data and each call to the function returns a single processed value.
4802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
4803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * is the input sample value. The functions return the output value.
4804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm:
4806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <pre>
4807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
4808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *    A0 = Kp + Ki + Kd
4809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *    A1 = (-Kp ) - (2 * Kd )
4810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *    A2 = Kd  </pre>
4811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative const
4814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html PID.gif "Proportional Integral Derivative Controller"
4817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The PID controller calculates an "error" value as the difference between
4820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the measured output and the reference input.
4821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The controller attempts to minimize the error by adjusting the process control inputs.
4822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The proportional value determines the reaction to the current error,
4823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the integral value determines the reaction based on the sum of recent errors,
4824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * and the derivative value determines the reaction based on the rate at which the error has been
4825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Instance Structure
4827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instan
4828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * A separate instance structure must be defined for each PID Controller.
4829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There are separate instance structure declarations for each of the 3 supported data types.
4830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Reset Functions
4832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is also an associated reset function for each data type which clears the state array.
4833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Initialization Functions
4835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is also an associated initialization function for each data type.
4836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The initialization function performs the following operations:
4837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
4838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Zeros out the values in the state buffer.
4839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Instance structure cannot be placed into a const data section and it is recommended to use the
4842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Fixed-Point Behavior
4844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Care must be taken when using the fixed-point versions of the PID Controller functions.
4845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used in each function m
4846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup PID
4851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
4852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the floating-point PID Control.
4856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S   is an instance of the floating-point PID Control structure
4857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     in  input sample to process
4858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return out processed output sample.
4859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE float32_t arm_pid_f32(
4861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_f32 * S,
4862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t in)
4863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t out;
4865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
4867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = (S->A0 * in) +
4868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
4869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update state */
4871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[1] = S->state[0];
4872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[0] = in;
4873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[2] = out;
4874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return to application */
4876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (out);
4877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
4879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the Q31 PID Control.
4882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S  points to an instance of the Q31 PID Control structure
4883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     in  input sample to process
4884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return out processed output sample.
4885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using an internal 64-bit accumulator.
4889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplicat
4890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Thus, if the accumulator result overflows it wraps around rather than clip.
4891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In order to avoid overflows completely the input signal must be scaled down by 2 bits as there
4892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 format
4893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t arm_pid_q31(
4895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q31 * S,
4896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t in)
4897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q63_t acc;
4899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t out;
4900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc = A0 * x[n]  */
4902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc = (q63_t) S->A0 * in;
4903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc += A1 * x[n-1] */
4905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc += (q63_t) S->A1 * S->state[0];
4906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc += A2 * x[n-2]  */
4908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc += (q63_t) S->A2 * S->state[1];
4909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* convert output to 1.31 format to add y[n-1] */
4911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = (q31_t) (acc >> 31u);
4912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* out += y[n-1] */
4914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out += S->state[2];
4915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update state */
4917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[1] = S->state[0];
4918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[0] = in;
4919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[2] = out;
4920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return to application */
4922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (out);
4923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
4924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the Q15 PID Control.
4928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S   points to an instance of the Q15 PID Control structure
4929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     in  input sample to process
4930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return out processed output sample.
4931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
4932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
4934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using a 64-bit internal accumulator.
4935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Both Gains and state variables are represented in 1.15 format and multiplications yield a 2.30
4936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
4937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is no risk of internal overflow with this approach and the full precision of intermediat
4938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * After all additions have been performed, the accumulator is truncated to 34.15 format by disca
4939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Lastly, the accumulator is saturated to yield a result in 1.15 format.
4940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t arm_pid_q15(
4942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_pid_instance_q15 * S,
4943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t in)
4944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
4945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q63_t acc;
4946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t out;
4947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined (ARM_MATH_DSP)
4949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     __SIMD32_TYPE *vstate;
4950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Implementation of PID controller */
4952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc = A0 * x[n]  */
4954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc = (q31_t) __SMUAD((uint32_t)S->A0, (uint32_t)in);
4955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     vstate = __SIMD32_CONST(S->state);
4958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc = (q63_t)__SMLALD((uint32_t)S->A1, (uint32_t)*vstate, (uint64_t)acc);
4959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
4960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc = A0 * x[n]  */
4961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc = ((q31_t) S->A0) * in;
4962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc += (q31_t) S->A1 * S->state[0];
4965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc += (q31_t) S->A2 * S->state[1];
4966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
4967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* acc += y[n-1] */
4969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     acc += (q31_t) S->state[2] << 15;
4970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* saturate the output */
4972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = (q15_t) (__SSAT((acc >> 15), 16));
4973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update state */
4975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[1] = S->state[0];
4976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[0] = in;
4977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     S->state[2] = out;
4978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return to application */
4980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (out);
4981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
4982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of PID group
4985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
4989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix inverse.
4990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
4991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
4992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
4993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
4994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
4995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_inverse_f32(
4996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f32 * src,
4997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f32 * dst);
4998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
4999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point matrix inverse.
5002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
5003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
5004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
5005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
5006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_mat_inverse_f64(
5008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const arm_matrix_instance_f64 * src,
5009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_matrix_instance_f64 * dst);
5010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupController
5015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup clarke Vector Clarke Transform
5019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Forward Clarke transform converts the instantaneous stator phases into a two-coordinate time i
5020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Generally the Clarke transform uses three-phase currents <code>Ia, Ib and Ic</code> to calcula
5021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * in the two-phase orthogonal stator axis <code>Ialpha</code> and <code>Ibeta</code>.
5022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * When <code>Ialpha</code> is superposed with <code>Ia</code> as shown in the figure below
5023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html clarke.gif Stator current space vector and its components in (a,b).
5024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * and <code>Ia + Ib + Ic = 0</code>, in this condition <code>Ialpha</code> and <code>Ibeta</code
5025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * can be calculated using only <code>Ia</code> and <code>Ib</code>.
5026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm
5030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html clarkeFormula.gif
5031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where <code>Ia</code> and <code>Ib</code> are the instantaneous stator phases and
5032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>pIalpha</code> and <code>pIbeta</code> are the two coordinates of time invariant vector.
5033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Fixed-Point Behavior
5034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup clarke
5041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point Clarke transform
5047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
5048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
5049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_clarke_f32(
5053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ia,
5054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ib,
5055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIalpha,
5056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIbeta)
5057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Ia */
5059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIalpha = Ia;
5060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = (1/sqrt(3)) * Ia + (2/sqrt(3)) * Ib */
5062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIbeta = ((float32_t) 0.57735026919 * Ia + (float32_t) 1.15470053838 * Ib);
5063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Clarke transform for Q31 version
5068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
5069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
5070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_clarke_q31(
5080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ia,
5081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ib,
5082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIalpha,
5083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIbeta)
5084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculating pIalpha from Ia by equation pIalpha = Ia */
5088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIalpha = Ia;
5089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (1/(sqrt(3)) * Ia) */
5091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product1 = (q31_t) (((q63_t) Ia * 0x24F34E8B) >> 30);
5092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (2/sqrt(3) * Ib) */
5094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product2 = (q31_t) (((q63_t) Ib * 0x49E69D16) >> 30);
5095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* pIbeta is calculated by adding the intermediate products */
5097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIbeta = __QADD(product1, product2);
5098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of clarke group
5102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q31 vector.
5106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
5107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
5108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
5109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_q7_to_q31(
5111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
5112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pDst,
5113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
5114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupController
5119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup inv_clarke Vector Inverse Clarke Transform
5123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Inverse Clarke transform converts the two-coordinate time invariant vector into instantaneous 
5124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm
5128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html clarkeInvFormula.gif
5129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where <code>pIa</code> and <code>pIb</code> are the instantaneous stator phases and
5130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>Ialpha</code> and <code>Ibeta</code> are the two coordinates of time invariant vector.
5131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Fixed-Point Behavior
5132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup inv_clarke
5139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
5143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point Inverse Clarke transform
5144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_inv_clarke_f32(
5150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ialpha,
5151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ibeta,
5152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIa,
5153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIb)
5154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIa = Ialpha;
5157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculating pIb from Ialpha and Ibeta by equation pIb = -(1/2) * Ialpha + (sqrt(3)/2) * Ibet
5159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIb = -0.5f * Ialpha + 0.8660254039f * Ibeta;
5160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Inverse Clarke transform for Q31 version
5165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is saturation on the subtraction, hence there is no risk of overflow.
5175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_inv_clarke_q31(
5177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ialpha,
5178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ibeta,
5179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIa,
5180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIb)
5181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIa = Ialpha;
5186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (1/(2*sqrt(3)) * Ia) */
5188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (0x40000000)) >> 31);
5189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (1/sqrt(3) * pIb) */
5191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (0x6ED9EBA1)) >> 31);
5192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* pIb is calculated by subtracting the products */
5194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIb = __QSUB(product2, product1);
5195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of inv_clarke group
5199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q15 vector.
5203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       input pointer
5204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       output pointer
5205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  number of samples to process
5206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_q7_to_q15(
5208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
5209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pDst,
5210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
5211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupController
5216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup park Vector Park Transform
5220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Forward Park transform converts the input two-coordinate vector to flux and torque components.
5222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The Park transform can be used to realize the transformation of the <code>Ialpha</code> and th
5223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * from the stationary to the moving reference frame and control the spatial relationship between
5224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * the stator vector current and rotor flux vector.
5225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * If we consider the d axis aligned with the rotor flux, the diagram below shows the
5226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * current vector and the relationship from the two reference frames:
5227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html park.gif "Stator current space vector and its component in (a,b) and in the d,q ro
5228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm
5232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html parkFormula.gif
5233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where <code>Ialpha</code> and <code>Ibeta</code> are the stator vector components,
5234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>pId</code> and <code>pIq</code> are rotor vector components and <code>cosVal</code> and 
5235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Fixed-Point Behavior
5237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup park
5244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Floating-point Park transform
5249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pId     points to output   rotor reference frame d
5252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIq     points to output   rotor reference frame q
5253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function implements the forward Park transform.
5257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_park_f32(
5260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ialpha,
5261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Ibeta,
5262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pId,
5263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIq,
5264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t sinVal,
5265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t cosVal)
5266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pId using the equation, pId = Ialpha * cosVal + Ibeta * sinVal */
5268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pId = Ialpha * cosVal + Ibeta * sinVal;
5269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIq using the equation, pIq = - Ialpha * sinVal + Ibeta * cosVal */
5271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIq = -Ialpha * sinVal + Ibeta * cosVal;
5272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Park transform for Q31 version
5277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pId     points to output rotor reference frame d
5280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIq     points to output rotor reference frame q
5281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is saturation on the addition and subtraction, hence there is no risk of overflow.
5289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_park_q31(
5291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ialpha,
5292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Ibeta,
5293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pId,
5294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIq,
5295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t sinVal,
5296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t cosVal)
5297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Ialpha * cosVal) */
5302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (cosVal)) >> 31);
5303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Ibeta * sinVal) */
5305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (sinVal)) >> 31);
5306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Ialpha * sinVal) */
5309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product3 = (q31_t) (((q63_t) (Ialpha) * (sinVal)) >> 31);
5310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Ibeta * cosVal) */
5312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product4 = (q31_t) (((q63_t) (Ibeta) * (cosVal)) >> 31);
5313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pId by adding the two intermediate products 1 and 2 */
5315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pId = __QADD(product1, product2);
5316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIq by subtracting the two intermediate products 3 from 4 */
5318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIq = __QSUB(product4, product3);
5319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of park group
5323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Converts the elements of the Q7 vector to floating-point vector.
5327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       is input pointer
5328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       is output pointer
5329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_q7_to_float(
5332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pSrc,
5333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
5334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
5335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupController
5339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup inv_park Vector Inverse Park transform
5343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Inverse Park transform converts the input flux and torque components to two-coordinate vector.
5344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm
5348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html parkInvFormula.gif
5349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where <code>pIalpha</code> and <code>pIbeta</code> are the stator vector components,
5350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>Id</code> and <code>Iq</code> are rotor vector components and <code>cosVal</code> and <c
5351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Fixed-Point Behavior
5353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup inv_park
5360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
5364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point Inverse Park transform
5365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_inv_park_f32(
5373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Id,
5374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t Iq,
5375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIalpha,
5376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pIbeta,
5377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t sinVal,
5378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t cosVal)
5379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Id * cosVal - Iq * sinVal */
5381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIalpha = Id * cosVal - Iq * sinVal;
5382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = Id * sinVal + Iq * cosVal */
5384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIbeta = Id * sinVal + Iq * cosVal;
5385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Inverse Park transform for   Q31 version
5390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_inv_park_q31(
5404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Id,
5405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t Iq,
5406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIalpha,
5407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pIbeta,
5408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t sinVal,
5409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t cosVal)
5410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Id * cosVal) */
5415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product1 = (q31_t) (((q63_t) (Id) * (cosVal)) >> 31);
5416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Iq * sinVal) */
5418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product2 = (q31_t) (((q63_t) (Iq) * (sinVal)) >> 31);
5419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Id * sinVal) */
5422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product3 = (q31_t) (((q63_t) (Id) * (sinVal)) >> 31);
5423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Intermediate product is calculated by (Iq * cosVal) */
5425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     product4 = (q31_t) (((q63_t) (Iq) * (cosVal)) >> 31);
5426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIalpha by using the two intermediate products 1 and 2 */
5428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIalpha = __QSUB(product1, product2);
5429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculate pIbeta by using the two intermediate products 3 and 4 */
5431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *pIbeta = __QADD(product4, product3);
5432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of Inverse park group
5436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Converts the elements of the Q31 vector to floating-point vector.
5441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  pSrc       is input pointer
5442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pDst       is output pointer
5443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   void arm_q31_to_float(
5446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pSrc,
5447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pDst,
5448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize);
5449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupInterpolation
5452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup LinearInterpolate Linear Interpolation
5456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Linear interpolation is a method of curve fitting using linear polynomials.
5458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Linear interpolation works by effectively drawing a straight line between two neighboring samp
5459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \image html LinearInterp.gif "Linear interpolation"
5462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * A  Linear Interpolate function calculates an output value(y), for the input(x)
5465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * using linear interpolation of the input values x0, x1( nearest input values) and the output va
5466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par Algorithm:
5468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <pre>
5469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *       y = y0 + (x - x0) * ((y1 - y0)/(x1-x0))
5470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *       where x0, x1 are nearest values of input x
5471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *             y0, y1 are nearest values to output y
5472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * </pre>
5473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This set of functions implements Linear interpolation process
5476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * for Q7, Q15, Q31, and floating-point data types.  The functions operate on a single
5477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * sample of data and each call to the function returns a single processed value.
5478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>S</code> points to an instance of the Linear Interpolate function data structure.
5479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>x</code> is the input sample value. The functions returns the output value.
5480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * if x is outside of the table boundary, Linear interpolation returns first value of the table
5483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * if x is below input range and returns last value of table if x is above range.
5484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup LinearInterpolate
5488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the floating-point Linear Interpolation Function.
5493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in,out] S  is an instance of the floating-point Linear Interpolation structure
5494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]     x  input sample to process
5495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return y processed output sample.
5496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE float32_t arm_linear_interp_f32(
5499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_linear_interp_instance_f32 * S,
5500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t x)
5501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t y;
5503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t x0, x1;                            /* Nearest input values */
5504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t y0, y1;                            /* Nearest output values */
5505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t xSpacing = S->xSpacing;            /* spacing between input values */
5506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t i;                                   /* Index variable */
5507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     float32_t *pYData = S->pYData;               /* pointer to output table */
5508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Calculation of index */
5510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     i = (int32_t) ((x - S->x1) / xSpacing);
5511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (i < 0)
5513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Iniatilize output for below specified range as least output value of table */
5515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = pYData[0];
5516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else if ((uint32_t)i >= S->nValues)
5518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Iniatilize output for above specified range as last output value of table */
5520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = pYData[S->nValues - 1];
5521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
5523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of nearest input values */
5525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       x0 = S->x1 +  i      * xSpacing;
5526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       x1 = S->x1 + (i + 1) * xSpacing;
5527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Read of nearest output values */
5529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y0 = pYData[i];
5530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y1 = pYData[i + 1];
5531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of output */
5533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = y0 + (x - x0) * ((y1 - y0) / (x1 - x0));
5534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* returns output value */
5538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (y);
5539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
5543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the Q31 Linear Interpolation Function.
5545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pYData   pointer to Q31 Linear Interpolation table
5546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x        input sample to process
5547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] nValues  number of table values
5548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return y processed output sample.
5549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This function can support maximum of table size 2^12.
5553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t arm_linear_interp_q31(
5556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pYData,
5557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x,
5558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t nValues)
5559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t y;                                     /* output */
5561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t y0, y1;                                /* Nearest output values */
5562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t fract;                                 /* fractional part */
5563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Input is in 12.20 format */
5566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* 12 bits for the table index */
5567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Index value calculation */
5568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = ((x & (q31_t)0xFFF00000) >> 20);
5569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (index >= (int32_t)(nValues - 1))
5571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[nValues - 1]);
5573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else if (index < 0)
5575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[0]);
5577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
5579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* 20 bits for the fractional part */
5581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* shift left by 11 to keep fract in 1.31 format */
5582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       fract = (x & 0x000FFFFF) << 11;
5583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Read two nearest output values from the index in 1.31(q31) format */
5585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y0 = pYData[index];
5586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y1 = pYData[index + 1];
5587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 2.30 format */
5589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
5590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
5592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y += ((q31_t) (((q63_t) y1 * fract) >> 32));
5593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Convert y to 1.31 format */
5595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (y << 1u);
5596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the Q15 Linear Interpolation Function.
5603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pYData   pointer to Q15 Linear Interpolation table
5604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x        input sample to process
5605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] nValues  number of table values
5606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return y processed output sample.
5607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This function can support maximum of table size 2^12.
5611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t arm_linear_interp_q15(
5614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pYData,
5615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x,
5616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t nValues)
5617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q63_t y;                                     /* output */
5619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q15_t y0, y1;                                /* Nearest output values */
5620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t fract;                                 /* fractional part */
5621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Input is in 12.20 format */
5624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* 12 bits for the table index */
5625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Index value calculation */
5626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = ((x & (int32_t)0xFFF00000) >> 20);
5627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (index >= (int32_t)(nValues - 1))
5629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[nValues - 1]);
5631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else if (index < 0)
5633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[0]);
5635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
5637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* 20 bits for the fractional part */
5639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* fract is in 12.20 format */
5640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       fract = (x & 0x000FFFFF);
5641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Read two nearest output values from the index */
5643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y0 = pYData[index];
5644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y1 = pYData[index + 1];
5645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 13.35 format */
5647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = ((q63_t) y0 * (0xFFFFF - fract));
5648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of (y0 * (1-fract) + y1 * fract) and y is in 13.35 format */
5650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y += ((q63_t) y1 * (fract));
5651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* convert y to 1.15 format */
5653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (q15_t) (y >> 20);
5654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Process function for the Q7 Linear Interpolation Function.
5661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] pYData   pointer to Q7 Linear Interpolation table
5662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x        input sample to process
5663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] nValues  number of table values
5664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return y processed output sample.
5665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * \par
5667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This function can support maximum of table size 2^12.
5669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t arm_linear_interp_q7(
5671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q7_t * pYData,
5672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x,
5673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t nValues)
5674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t y;                                     /* output */
5676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q7_t y0, y1;                                 /* Nearest output values */
5677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t fract;                                 /* fractional part */
5678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t index;                              /* Index to read nearest output values */
5679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Input is in 12.20 format */
5681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* 12 bits for the table index */
5682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Index value calculation */
5683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (x < 0)
5684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[0]);
5686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (x >> 20) & 0xfff;
5688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (index >= (nValues - 1))
5690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (pYData[nValues - 1]);
5692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
5694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* 20 bits for the fractional part */
5696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* fract is in 12.20 format */
5697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       fract = (x & 0x000FFFFF);
5698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Read two nearest output values from the index and are in 1.7(q7) format */
5700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y0 = pYData[index];
5701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y1 = pYData[index + 1];
5702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of y0 * (1-fract ) and y is in 13.27(q27) format */
5704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y = ((y0 * (0xFFFFF - fract)));
5705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Calculation of y1 * fract + y0 * (1-fract) and y is in 13.27(q27) format */
5707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       y += (y1 * fract);
5708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* convert y to 1.7(q7) format */
5710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (q7_t) (y >> 20);
5711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****      }
5712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of LinearInterpolate group
5716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for floating-point data.
5720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  input value in radians.
5721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  sin(x).
5722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t arm_sin_f32(
5724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t x);
5725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q31 data.
5729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  Scaled input value in radians.
5730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  sin(x).
5731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t arm_sin_q31(
5733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x);
5734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q15 data.
5738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  Scaled input value in radians.
5739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  sin(x).
5740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t arm_sin_q15(
5742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t x);
5743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for floating-point data.
5747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  input value in radians.
5748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  cos(x).
5749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t arm_cos_f32(
5751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t x);
5752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Fast approximation to the trigonometric cosine function for Q31 data.
5756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  Scaled input value in radians.
5757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  cos(x).
5758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t arm_cos_q31(
5760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x);
5761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for Q15 data.
5765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in] x  Scaled input value in radians.
5766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return  cos(x).
5767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t arm_cos_q15(
5769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t x);
5770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @ingroup groupFastMath
5774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @defgroup SQRT Square Root
5779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
5780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Computes the square root of a number.
5781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * There are separate functions for Q15, Q31, and floating-point data types.
5782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The square root function is computed using the Newton-Raphson algorithm.
5783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This is an iterative algorithm of the form:
5784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <pre>
5785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *      x1 = x0 - f(x0)/f'(x0)
5786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * </pre>
5787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * where <code>x1</code> is the current estimate,
5788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>x0</code> is the previous estimate, and
5789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>f'(x0)</code> is the derivative of <code>f()</code> evaluated at <code>x0</code>.
5790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * For the square root function, the algorithm reduces to:
5791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <pre>
5792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *     x0 = in/2                         [initial guess]
5793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *     x1 = 1/2 * ( x0 + in / x0)        [each iteration]
5794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * </pre>
5795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @addtogroup SQRT
5800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @{
5801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Floating-point square root function.
5805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  in    input value.
5806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut  square root of input value.
5807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARG
5808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>in</code> is negative value and returns zero output for negative values.
5809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE arm_status arm_sqrt_f32(
5811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t in,
5812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   float32_t * pOut)
5813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (in >= 0.0f)
5815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if   (__FPU_USED == 1) && defined ( __CC_ARM   )
5818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *pOut = __sqrtf(in);
5819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif (__FPU_USED == 1) && (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050))
5820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *pOut = __builtin_sqrtf(in);
5821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif (__FPU_USED == 1) && defined(__GNUC__)
5822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *pOut = __builtin_sqrtf(in);
5823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif (__FPU_USED == 1) && defined ( __ICCARM__ ) && (__VER__ >= 6040000)
5824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
5825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
5826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *pOut = sqrtf(in);
5827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
5828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (ARM_MATH_SUCCESS);
5830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
5832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *pOut = 0.0f;
5834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       return (ARM_MATH_ARGUMENT_ERROR);
5835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q31 square root function.
5841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  in    input value.  The range of the input value is [0 +1) or 0x00000000 to 0x7FFF
5842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut  square root of input value.
5843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARG
5844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>in</code> is negative value and returns zero output for negative values.
5845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_sqrt_q31(
5847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t in,
5848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pOut);
5849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief  Q15 square root function.
5853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[in]  in    input value.  The range of the input value is [0 +1) or 0x0000 to 0x7FFF.
5854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @param[out] pOut  square root of input value.
5855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARG
5856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <code>in</code> is negative value and returns zero output for negative values.
5857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   arm_status arm_sqrt_q15(
5859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t in,
5860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * pOut);
5861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @} end of SQRT group
5864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief floating-point Circular write function.
5869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_circularWrite_f32(
5871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * circBuffer,
5872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t L,
5873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t * writeOffset,
5874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t bufferInc,
5875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const int32_t * src,
5876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t srcInc,
5877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize)
5878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t i = 0u;
5880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t wOffset;
5881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Copy the value of Index pointer that points
5883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****      * to the current location where the input samples to be copied */
5884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     wOffset = *writeOffset;
5885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Loop over the blockSize */
5887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     i = blockSize;
5888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     while (i > 0u)
5890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* copy the input sample to the circular buffer */
5892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       circBuffer[wOffset] = *src;
5893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Update the input pointer */
5895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       src += srcInc;
5896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Circularly update wOffset.  Watch out for positive and negative value */
5898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       wOffset += bufferInc;
5899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (wOffset >= L)
5900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         wOffset -= L;
5901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Decrement the loop counter */
5903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       i--;
5904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update the index pointer */
5907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *writeOffset = (uint16_t)wOffset;
5908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief floating-point Circular Read function.
5914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_circularRead_f32(
5916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * circBuffer,
5917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t L,
5918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * readOffset,
5919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t bufferInc,
5920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * dst,
5921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * dst_base,
5922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t dst_length,
5923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t dstInc,
5924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize)
5925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t i = 0u;
5927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t rOffset, dst_end;
5928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Copy the value of Index pointer that points
5930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****      * to the current location from where the input samples to be read */
5931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     rOffset = *readOffset;
5932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     dst_end = (int32_t) (dst_base + dst_length);
5933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Loop over the blockSize */
5935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     i = blockSize;
5936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     while (i > 0u)
5938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* copy the sample from the circular buffer to the destination buffer */
5940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *dst = circBuffer[rOffset];
5941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Update the input pointer */
5943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       dst += dstInc;
5944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (dst == (int32_t *) dst_end)
5946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
5947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         dst = dst_base;
5948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
5949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Circularly update rOffset.  Watch out for positive and negative value  */
5951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       rOffset += bufferInc;
5952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (rOffset >= L)
5954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
5955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         rOffset -= L;
5956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
5957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Decrement the loop counter */
5959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       i--;
5960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
5961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update the index pointer */
5963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *readOffset = rOffset;
5964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
5965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
5968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 Circular write function.
5969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
5970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_circularWrite_q15(
5971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * circBuffer,
5972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t L,
5973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint16_t * writeOffset,
5974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t bufferInc,
5975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   const q15_t * src,
5976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t srcInc,
5977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize)
5978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
5979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t i = 0u;
 125              	 .loc 2 5979 0
 126 00d2 0023     	 movs r3,#0
 127 00d4 C7F8AC30 	 str r3,[r7,#172]
5980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t wOffset;
5981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Copy the value of Index pointer that points
5983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****      * to the current location where the input samples to be copied */
5984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     wOffset = *writeOffset;
 128              	 .loc 2 5984 0
 129 00d8 D7F8C030 	 ldr r3,[r7,#192]
 130 00dc 1B88     	 ldrh r3,[r3]
 131 00de C7F8A830 	 str r3,[r7,#168]
5985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Loop over the blockSize */
5987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     i = blockSize;
 132              	 .loc 2 5987 0
 133 00e2 D7F8B030 	 ldr r3,[r7,#176]
 134 00e6 C7F8AC30 	 str r3,[r7,#172]
 135 00ea 2AE0     	 b .L2
 136              	.L4:
5988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     while (i > 0u)
5990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
5991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* copy the input sample to the circular buffer */
5992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       circBuffer[wOffset] = *src;
 137              	 .loc 2 5992 0
 138 00ec D7F8A830 	 ldr r3,[r7,#168]
 139 00f0 5B00     	 lsls r3,r3,#1
 140 00f2 D7F8C820 	 ldr r2,[r7,#200]
 141 00f6 1344     	 add r3,r3,r2
 142 00f8 D7F8B820 	 ldr r2,[r7,#184]
 143 00fc 1288     	 ldrh r2,[r2]
 144 00fe 1A80     	 strh r2,[r3]
5993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Update the input pointer */
5995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       src += srcInc;
 145              	 .loc 2 5995 0
 146 0100 D7F8B430 	 ldr r3,[r7,#180]
 147 0104 5B00     	 lsls r3,r3,#1
 148 0106 D7F8B820 	 ldr r2,[r7,#184]
 149 010a 1344     	 add r3,r3,r2
 150 010c C7F8B830 	 str r3,[r7,#184]
5996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
5997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Circularly update wOffset.  Watch out for positive and negative value */
5998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       wOffset += bufferInc;
 151              	 .loc 2 5998 0
 152 0110 D7F8A820 	 ldr r2,[r7,#168]
 153 0114 D7F8BC30 	 ldr r3,[r7,#188]
 154 0118 1344     	 add r3,r3,r2
 155 011a C7F8A830 	 str r3,[r7,#168]
5999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (wOffset >= L)
 156              	 .loc 2 5999 0
 157 011e D7F8C420 	 ldr r2,[r7,#196]
 158 0122 D7F8A830 	 ldr r3,[r7,#168]
 159 0126 9A42     	 cmp r2,r3
 160 0128 06DC     	 bgt .L3
6000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         wOffset -= L;
 161              	 .loc 2 6000 0
 162 012a D7F8A820 	 ldr r2,[r7,#168]
 163 012e D7F8C430 	 ldr r3,[r7,#196]
 164 0132 D31A     	 subs r3,r2,r3
 165 0134 C7F8A830 	 str r3,[r7,#168]
 166              	.L3:
6001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Decrement the loop counter */
6003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       i--;
 167              	 .loc 2 6003 0
 168 0138 D7F8AC30 	 ldr r3,[r7,#172]
 169 013c 013B     	 subs r3,r3,#1
 170 013e C7F8AC30 	 str r3,[r7,#172]
 171              	.L2:
5989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 172              	 .loc 2 5989 0
 173 0142 D7F8AC30 	 ldr r3,[r7,#172]
 174 0146 002B     	 cmp r3,#0
 175 0148 D0D1     	 bne .L4
6004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
6005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update the index pointer */
6007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *writeOffset = (uint16_t)wOffset;
 176              	 .loc 2 6007 0
 177 014a D7F8A830 	 ldr r3,[r7,#168]
 178 014e 9AB2     	 uxth r2,r3
 179 0150 D7F8C030 	 ldr r3,[r7,#192]
 180 0154 1A80     	 strh r2,[r3]
 181              	.LBE16:
 182              	.LBE15:
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Loop over the number of taps. */
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   tapCnt = numTaps;
 183              	 .loc 1 94 0
 184 0156 B7F8FE30 	 ldrh r3,[r7,#254]
 185 015a C7F82031 	 str r3,[r7,#288]
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Read Index, from where the state buffer should be read, is calculated. */
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   readIndex = (S->stateIndex - blockSize) - *pTapDelay++;
 186              	 .loc 1 97 0
 187 015e 07F10C03 	 add r3,r7,#12
 188 0162 1B68     	 ldr r3,[r3]
 189 0164 5B88     	 ldrh r3,[r3,#2]
 190 0166 1A46     	 mov r2,r3
 191 0168 D7F83C31 	 ldr r3,[r7,#316]
 192 016c D21A     	 subs r2,r2,r3
 193 016e D7F82431 	 ldr r3,[r7,#292]
 194 0172 191D     	 adds r1,r3,#4
 195 0174 C7F82411 	 str r1,[r7,#292]
 196 0178 1B68     	 ldr r3,[r3]
 197 017a D31A     	 subs r3,r2,r3
 198 017c 1A46     	 mov r2,r3
 199 017e 07F11003 	 add r3,r7,#16
 200 0182 1A60     	 str r2,[r3]
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Wraparound of readIndex */
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   if (readIndex < 0)
 201              	 .loc 1 100 0
 202 0184 07F11003 	 add r3,r7,#16
 203 0188 1B68     	 ldr r3,[r3]
 204 018a 002B     	 cmp r3,#0
 205 018c 08DA     	 bge .L5
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     readIndex += (int32_t) delaySize;
 206              	 .loc 1 102 0
 207 018e 07F11003 	 add r3,r7,#16
 208 0192 1A68     	 ldr r2,[r3]
 209 0194 D7F80031 	 ldr r3,[r7,#256]
 210 0198 1A44     	 add r2,r2,r3
 211 019a 07F11003 	 add r3,r7,#16
 212 019e 1A60     	 str r2,[r3]
 213              	.L5:
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Working pointer for state buffer is updated */
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   py = pState;
 214              	 .loc 1 106 0
 215 01a0 D7F81031 	 ldr r3,[r7,#272]
 216 01a4 C7F80431 	 str r3,[r7,#260]
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* blockSize samples are read from the state buffer */
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   arm_circularRead_q15(py, delaySize, &readIndex, 1,
 217              	 .loc 1 109 0
 218 01a8 D7F80021 	 ldr r2,[r7,#256]
 219 01ac D7F83C31 	 ldr r3,[r7,#316]
 220 01b0 D7F80411 	 ldr r1,[r7,#260]
 221 01b4 C7F8A410 	 str r1,[r7,#164]
 222 01b8 C7F8A020 	 str r2,[r7,#160]
 223 01bc 07F11002 	 add r2,r7,#16
 224 01c0 C7F89C20 	 str r2,[r7,#156]
 225 01c4 0122     	 movs r2,#1
 226 01c6 C7F89820 	 str r2,[r7,#152]
 227 01ca D7F80821 	 ldr r2,[r7,#264]
 228 01ce C7F89420 	 str r2,[r7,#148]
 229 01d2 D7F80821 	 ldr r2,[r7,#264]
 230 01d6 C7F89020 	 str r2,[r7,#144]
 231 01da C7F88C30 	 str r3,[r7,#140]
 232 01de 0123     	 movs r3,#1
 233 01e0 C7F88830 	 str r3,[r7,#136]
 234 01e4 D7F83C31 	 ldr r3,[r7,#316]
 235 01e8 C7F88430 	 str r3,[r7,#132]
 236              	.LBB17:
 237              	.LBB18:
6008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
6009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
6012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Q15 Circular Read function.
6013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
6014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE void arm_circularRead_q15(
6015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * circBuffer,
6016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t L,
6017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t * readOffset,
6018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t bufferInc,
6019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * dst,
6020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q15_t * dst_base,
6021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t dst_length,
6022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   int32_t dstInc,
6023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   uint32_t blockSize)
6024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
6025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t i = 0;
 238              	 .loc 2 6025 0
 239 01ec 0023     	 movs r3,#0
 240 01ee C7F88030 	 str r3,[r7,#128]
6026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t rOffset, dst_end;
6027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Copy the value of Index pointer that points
6029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****      * to the current location from where the input samples to be read */
6030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     rOffset = *readOffset;
 241              	 .loc 2 6030 0
 242 01f2 D7F89C30 	 ldr r3,[r7,#156]
 243 01f6 1B68     	 ldr r3,[r3]
 244 01f8 FB67     	 str r3,[r7,#124]
6031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     dst_end = (int32_t) (dst_base + dst_length);
 245              	 .loc 2 6032 0
 246 01fa D7F88C30 	 ldr r3,[r7,#140]
 247 01fe 5B00     	 lsls r3,r3,#1
 248 0200 D7F89020 	 ldr r2,[r7,#144]
 249 0204 1344     	 add r3,r3,r2
 250 0206 BB67     	 str r3,[r7,#120]
6033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Loop over the blockSize */
6035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     i = blockSize;
 251              	 .loc 2 6035 0
 252 0208 D7F88430 	 ldr r3,[r7,#132]
 253 020c C7F88030 	 str r3,[r7,#128]
 254 0210 2DE0     	 b .L6
 255              	.L9:
6036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     while (i > 0u)
6038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
6039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* copy the sample from the circular buffer to the destination buffer */
6040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       *dst = circBuffer[rOffset];
 256              	 .loc 2 6040 0
 257 0212 FB6F     	 ldr r3,[r7,#124]
 258 0214 5B00     	 lsls r3,r3,#1
 259 0216 D7F8A420 	 ldr r2,[r7,#164]
 260 021a 1344     	 add r3,r3,r2
 261 021c 1A88     	 ldrh r2,[r3]
 262 021e D7F89430 	 ldr r3,[r7,#148]
 263 0222 1A80     	 strh r2,[r3]
6041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Update the input pointer */
6043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       dst += dstInc;
 264              	 .loc 2 6043 0
 265 0224 D7F88830 	 ldr r3,[r7,#136]
 266 0228 5B00     	 lsls r3,r3,#1
 267 022a D7F89420 	 ldr r2,[r7,#148]
 268 022e 1344     	 add r3,r3,r2
 269 0230 C7F89430 	 str r3,[r7,#148]
6044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (dst == (q15_t *) dst_end)
 270              	 .loc 2 6045 0
 271 0234 BB6F     	 ldr r3,[r7,#120]
 272 0236 D7F89420 	 ldr r2,[r7,#148]
 273 023a 9A42     	 cmp r2,r3
 274 023c 03D1     	 bne .L7
6046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
6047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         dst = dst_base;
 275              	 .loc 2 6047 0
 276 023e D7F89030 	 ldr r3,[r7,#144]
 277 0242 C7F89430 	 str r3,[r7,#148]
 278              	.L7:
6048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
6049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Circularly update wOffset.  Watch out for positive and negative value */
6051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       rOffset += bufferInc;
 279              	 .loc 2 6051 0
 280 0246 FA6F     	 ldr r2,[r7,#124]
 281 0248 D7F89830 	 ldr r3,[r7,#152]
 282 024c 1344     	 add r3,r3,r2
 283 024e FB67     	 str r3,[r7,#124]
6052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       if (rOffset >= L)
 284              	 .loc 2 6053 0
 285 0250 D7F8A020 	 ldr r2,[r7,#160]
 286 0254 FB6F     	 ldr r3,[r7,#124]
 287 0256 9A42     	 cmp r2,r3
 288 0258 04DC     	 bgt .L8
6054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
6055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****         rOffset -= L;
 289              	 .loc 2 6055 0
 290 025a FA6F     	 ldr r2,[r7,#124]
 291 025c D7F8A030 	 ldr r3,[r7,#160]
 292 0260 D31A     	 subs r3,r2,r3
 293 0262 FB67     	 str r3,[r7,#124]
 294              	.L8:
6056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
6057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* Decrement the loop counter */
6059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       i--;
 295              	 .loc 2 6059 0
 296 0264 D7F88030 	 ldr r3,[r7,#128]
 297 0268 013B     	 subs r3,r3,#1
 298 026a C7F88030 	 str r3,[r7,#128]
 299              	.L6:
6037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 300              	 .loc 2 6037 0
 301 026e D7F88030 	 ldr r3,[r7,#128]
 302 0272 002B     	 cmp r3,#0
 303 0274 CDD1     	 bne .L9
6060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
6061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
6062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Update the index pointer */
6063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *readOffset = rOffset;
 304              	 .loc 2 6063 0
 305 0276 D7F89C30 	 ldr r3,[r7,#156]
 306 027a FA6F     	 ldr r2,[r7,#124]
 307 027c 1A60     	 str r2,[r3]
 308              	.LBE18:
 309              	.LBE17:
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****                        pb, pb, blockSize, 1, blockSize);
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Working pointer for the scratch buffer of state values */
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   px = pb;
 310              	 .loc 1 113 0
 311 027e D7F80831 	 ldr r3,[r7,#264]
 312 0282 C7F82831 	 str r3,[r7,#296]
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Working pointer for scratch buffer of output values */
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   pScratchOut = pScr2;
 313              	 .loc 1 116 0
 314 0286 D7F81431 	 ldr r3,[r7,#276]
 315 028a C7F83831 	 str r3,[r7,#312]
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Loop over the blockSize. Unroll by a factor of 4.
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****    * Compute 4 multiplications at a time. */
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   blkCnt = blockSize >> 2;
 316              	 .loc 1 120 0
 317 028e D7F83C31 	 ldr r3,[r7,#316]
 318 0292 9B08     	 lsrs r3,r3,#2
 319 0294 C7F81C31 	 str r3,[r7,#284]
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   while (blkCnt > 0u)
 320              	 .loc 1 122 0
 321 0298 48E0     	 b .L10
 322              	.L11:
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Perform multiplication and store in the scratch buffer */
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *pScratchOut++ = ((q31_t) * px++ * coeff);
 323              	 .loc 1 125 0
 324 029a D7F83831 	 ldr r3,[r7,#312]
 325 029e 1A1D     	 adds r2,r3,#4
 326 02a0 C7F83821 	 str r2,[r7,#312]
 327 02a4 D7F82821 	 ldr r2,[r7,#296]
 328 02a8 911C     	 adds r1,r2,#2
 329 02aa C7F82811 	 str r1,[r7,#296]
 330 02ae 1288     	 ldrh r2,[r2]
 331 02b0 12B2     	 sxth r2,r2
 332 02b2 B7F91A11 	 ldrsh r1,[r7,#282]
 333 02b6 01FB02F2 	 mul r2,r1,r2
 334 02ba 1A60     	 str r2,[r3]
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *pScratchOut++ = ((q31_t) * px++ * coeff);
 335              	 .loc 1 126 0
 336 02bc D7F83831 	 ldr r3,[r7,#312]
 337 02c0 1A1D     	 adds r2,r3,#4
 338 02c2 C7F83821 	 str r2,[r7,#312]
 339 02c6 D7F82821 	 ldr r2,[r7,#296]
 340 02ca 911C     	 adds r1,r2,#2
 341 02cc C7F82811 	 str r1,[r7,#296]
 342 02d0 1288     	 ldrh r2,[r2]
 343 02d2 12B2     	 sxth r2,r2
 344 02d4 B7F91A11 	 ldrsh r1,[r7,#282]
 345 02d8 01FB02F2 	 mul r2,r1,r2
 346 02dc 1A60     	 str r2,[r3]
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *pScratchOut++ = ((q31_t) * px++ * coeff);
 347              	 .loc 1 127 0
 348 02de D7F83831 	 ldr r3,[r7,#312]
 349 02e2 1A1D     	 adds r2,r3,#4
 350 02e4 C7F83821 	 str r2,[r7,#312]
 351 02e8 D7F82821 	 ldr r2,[r7,#296]
 352 02ec 911C     	 adds r1,r2,#2
 353 02ee C7F82811 	 str r1,[r7,#296]
 354 02f2 1288     	 ldrh r2,[r2]
 355 02f4 12B2     	 sxth r2,r2
 356 02f6 B7F91A11 	 ldrsh r1,[r7,#282]
 357 02fa 01FB02F2 	 mul r2,r1,r2
 358 02fe 1A60     	 str r2,[r3]
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *pScratchOut++ = ((q31_t) * px++ * coeff);
 359              	 .loc 1 128 0
 360 0300 D7F83831 	 ldr r3,[r7,#312]
 361 0304 1A1D     	 adds r2,r3,#4
 362 0306 C7F83821 	 str r2,[r7,#312]
 363 030a D7F82821 	 ldr r2,[r7,#296]
 364 030e 911C     	 adds r1,r2,#2
 365 0310 C7F82811 	 str r1,[r7,#296]
 366 0314 1288     	 ldrh r2,[r2]
 367 0316 12B2     	 sxth r2,r2
 368 0318 B7F91A11 	 ldrsh r1,[r7,#282]
 369 031c 01FB02F2 	 mul r2,r1,r2
 370 0320 1A60     	 str r2,[r3]
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Decrement the loop counter */
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     blkCnt--;
 371              	 .loc 1 131 0
 372 0322 D7F81C31 	 ldr r3,[r7,#284]
 373 0326 013B     	 subs r3,r3,#1
 374 0328 C7F81C31 	 str r3,[r7,#284]
 375              	.L10:
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 376              	 .loc 1 122 0
 377 032c D7F81C31 	 ldr r3,[r7,#284]
 378 0330 002B     	 cmp r3,#0
 379 0332 B2D1     	 bne .L11
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* If the blockSize is not a multiple of 4,
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****    * compute the remaining samples */
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   blkCnt = blockSize % 0x4u;
 380              	 .loc 1 136 0
 381 0334 D7F83C31 	 ldr r3,[r7,#316]
 382 0338 03F00303 	 and r3,r3,#3
 383 033c C7F81C31 	 str r3,[r7,#284]
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   while (blkCnt > 0u)
 384              	 .loc 1 138 0
 385 0340 15E0     	 b .L12
 386              	.L13:
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Perform multiplication and store in the scratch buffer */
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *pScratchOut++ = ((q31_t) * px++ * coeff);
 387              	 .loc 1 141 0
 388 0342 D7F83831 	 ldr r3,[r7,#312]
 389 0346 1A1D     	 adds r2,r3,#4
 390 0348 C7F83821 	 str r2,[r7,#312]
 391 034c D7F82821 	 ldr r2,[r7,#296]
 392 0350 911C     	 adds r1,r2,#2
 393 0352 C7F82811 	 str r1,[r7,#296]
 394 0356 1288     	 ldrh r2,[r2]
 395 0358 12B2     	 sxth r2,r2
 396 035a B7F91A11 	 ldrsh r1,[r7,#282]
 397 035e 01FB02F2 	 mul r2,r1,r2
 398 0362 1A60     	 str r2,[r3]
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Decrement the loop counter */
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     blkCnt--;
 399              	 .loc 1 144 0
 400 0364 D7F81C31 	 ldr r3,[r7,#284]
 401 0368 013B     	 subs r3,r3,#1
 402 036a C7F81C31 	 str r3,[r7,#284]
 403              	.L12:
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 404              	 .loc 1 138 0
 405 036e D7F81C31 	 ldr r3,[r7,#284]
 406 0372 002B     	 cmp r3,#0
 407 0374 E5D1     	 bne .L13
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Load the coefficient value and
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****    * increment the coefficient buffer for the next set of state values */
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   coeff = *pCoeffs++;
 408              	 .loc 1 149 0
 409 0376 D7F82C31 	 ldr r3,[r7,#300]
 410 037a 9A1C     	 adds r2,r3,#2
 411 037c C7F82C21 	 str r2,[r7,#300]
 412 0380 1B88     	 ldrh r3,[r3]
 413 0382 A7F81A31 	 strh r3,[r7,#282]
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Read Index, from where the state buffer should be read, is calculated. */
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   readIndex = (S->stateIndex - blockSize) - *pTapDelay++;
 414              	 .loc 1 152 0
 415 0386 07F10C03 	 add r3,r7,#12
 416 038a 1B68     	 ldr r3,[r3]
 417 038c 5B88     	 ldrh r3,[r3,#2]
 418 038e 1A46     	 mov r2,r3
 419 0390 D7F83C31 	 ldr r3,[r7,#316]
 420 0394 D21A     	 subs r2,r2,r3
 421 0396 D7F82431 	 ldr r3,[r7,#292]
 422 039a 191D     	 adds r1,r3,#4
 423 039c C7F82411 	 str r1,[r7,#292]
 424 03a0 1B68     	 ldr r3,[r3]
 425 03a2 D31A     	 subs r3,r2,r3
 426 03a4 1A46     	 mov r2,r3
 427 03a6 07F11003 	 add r3,r7,#16
 428 03aa 1A60     	 str r2,[r3]
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Wraparound of readIndex */
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   if (readIndex < 0)
 429              	 .loc 1 155 0
 430 03ac 07F11003 	 add r3,r7,#16
 431 03b0 1B68     	 ldr r3,[r3]
 432 03b2 002B     	 cmp r3,#0
 433 03b4 08DA     	 bge .L14
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     readIndex += (int32_t) delaySize;
 434              	 .loc 1 157 0
 435 03b6 07F11003 	 add r3,r7,#16
 436 03ba 1A68     	 ldr r2,[r3]
 437 03bc D7F80031 	 ldr r3,[r7,#256]
 438 03c0 1A44     	 add r2,r2,r3
 439 03c2 07F11003 	 add r3,r7,#16
 440 03c6 1A60     	 str r2,[r3]
 441              	.L14:
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Loop over the number of taps. */
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   tapCnt = (uint32_t) numTaps - 2u;
 442              	 .loc 1 161 0
 443 03c8 B7F8FE30 	 ldrh r3,[r7,#254]
 444 03cc 023B     	 subs r3,r3,#2
 445 03ce C7F82031 	 str r3,[r7,#288]
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   while (tapCnt > 0u)
 446              	 .loc 1 163 0
 447 03d2 04E1     	 b .L15
 448              	.L25:
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Working pointer for state buffer is updated */
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     py = pState;
 449              	 .loc 1 166 0
 450 03d4 D7F81031 	 ldr r3,[r7,#272]
 451 03d8 C7F80431 	 str r3,[r7,#260]
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* blockSize samples are read from the state buffer */
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     arm_circularRead_q15(py, delaySize, &readIndex, 1,
 452              	 .loc 1 169 0
 453 03dc D7F80021 	 ldr r2,[r7,#256]
 454 03e0 D7F83C31 	 ldr r3,[r7,#316]
 455 03e4 D7F80411 	 ldr r1,[r7,#260]
 456 03e8 7967     	 str r1,[r7,#116]
 457 03ea 3A67     	 str r2,[r7,#112]
 458 03ec 07F11002 	 add r2,r7,#16
 459 03f0 FA66     	 str r2,[r7,#108]
 460 03f2 0122     	 movs r2,#1
 461 03f4 BA66     	 str r2,[r7,#104]
 462 03f6 D7F80821 	 ldr r2,[r7,#264]
 463 03fa 7A66     	 str r2,[r7,#100]
 464 03fc D7F80821 	 ldr r2,[r7,#264]
 465 0400 3A66     	 str r2,[r7,#96]
 466 0402 FB65     	 str r3,[r7,#92]
 467 0404 0123     	 movs r3,#1
 468 0406 BB65     	 str r3,[r7,#88]
 469 0408 D7F83C31 	 ldr r3,[r7,#316]
 470 040c 7B65     	 str r3,[r7,#84]
 471              	.LBB19:
 472              	.LBB20:
6025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t rOffset, dst_end;
 473              	 .loc 2 6025 0
 474 040e 0023     	 movs r3,#0
 475 0410 3B65     	 str r3,[r7,#80]
6030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 476              	 .loc 2 6030 0
 477 0412 FB6E     	 ldr r3,[r7,#108]
 478 0414 1B68     	 ldr r3,[r3]
 479 0416 FB64     	 str r3,[r7,#76]
6032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 480              	 .loc 2 6032 0
 481 0418 FB6D     	 ldr r3,[r7,#92]
 482 041a 5B00     	 lsls r3,r3,#1
 483 041c 3A6E     	 ldr r2,[r7,#96]
 484 041e 1344     	 add r3,r3,r2
 485 0420 BB64     	 str r3,[r7,#72]
6035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 486              	 .loc 2 6035 0
 487 0422 7B6D     	 ldr r3,[r7,#84]
 488 0424 3B65     	 str r3,[r7,#80]
 489 0426 20E0     	 b .L16
 490              	.L19:
6040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 491              	 .loc 2 6040 0
 492 0428 FB6C     	 ldr r3,[r7,#76]
 493 042a 5B00     	 lsls r3,r3,#1
 494 042c 7A6F     	 ldr r2,[r7,#116]
 495 042e 1344     	 add r3,r3,r2
 496 0430 1A88     	 ldrh r2,[r3]
 497 0432 7B6E     	 ldr r3,[r7,#100]
 498 0434 1A80     	 strh r2,[r3]
6043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 499              	 .loc 2 6043 0
 500 0436 BB6D     	 ldr r3,[r7,#88]
 501 0438 5B00     	 lsls r3,r3,#1
 502 043a 7A6E     	 ldr r2,[r7,#100]
 503 043c 1344     	 add r3,r3,r2
 504 043e 7B66     	 str r3,[r7,#100]
6045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 505              	 .loc 2 6045 0
 506 0440 BB6C     	 ldr r3,[r7,#72]
 507 0442 7A6E     	 ldr r2,[r7,#100]
 508 0444 9A42     	 cmp r2,r3
 509 0446 01D1     	 bne .L17
6047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 510              	 .loc 2 6047 0
 511 0448 3B6E     	 ldr r3,[r7,#96]
 512 044a 7B66     	 str r3,[r7,#100]
 513              	.L17:
6051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 514              	 .loc 2 6051 0
 515 044c FA6C     	 ldr r2,[r7,#76]
 516 044e BB6E     	 ldr r3,[r7,#104]
 517 0450 1344     	 add r3,r3,r2
 518 0452 FB64     	 str r3,[r7,#76]
6053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 519              	 .loc 2 6053 0
 520 0454 3A6F     	 ldr r2,[r7,#112]
 521 0456 FB6C     	 ldr r3,[r7,#76]
 522 0458 9A42     	 cmp r2,r3
 523 045a 03DC     	 bgt .L18
6055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 524              	 .loc 2 6055 0
 525 045c FA6C     	 ldr r2,[r7,#76]
 526 045e 3B6F     	 ldr r3,[r7,#112]
 527 0460 D31A     	 subs r3,r2,r3
 528 0462 FB64     	 str r3,[r7,#76]
 529              	.L18:
6059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 530              	 .loc 2 6059 0
 531 0464 3B6D     	 ldr r3,[r7,#80]
 532 0466 013B     	 subs r3,r3,#1
 533 0468 3B65     	 str r3,[r7,#80]
 534              	.L16:
6037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 535              	 .loc 2 6037 0
 536 046a 3B6D     	 ldr r3,[r7,#80]
 537 046c 002B     	 cmp r3,#0
 538 046e DBD1     	 bne .L19
 539              	 .loc 2 6063 0
 540 0470 FB6E     	 ldr r3,[r7,#108]
 541 0472 FA6C     	 ldr r2,[r7,#76]
 542 0474 1A60     	 str r2,[r3]
 543              	.LBE20:
 544              	.LBE19:
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****                          pb, pb, blockSize, 1, blockSize);
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Working pointer for the scratch buffer of state values */
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     px = pb;
 545              	 .loc 1 173 0
 546 0476 D7F80831 	 ldr r3,[r7,#264]
 547 047a C7F82831 	 str r3,[r7,#296]
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Working pointer for scratch buffer of output values */
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     pScratchOut = pScr2;
 548              	 .loc 1 176 0
 549 047e D7F81431 	 ldr r3,[r7,#276]
 550 0482 C7F83831 	 str r3,[r7,#312]
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Loop over the blockSize. Unroll by a factor of 4.
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****      * Compute 4 MACS at a time. */
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     blkCnt = blockSize >> 2;
 551              	 .loc 1 180 0
 552 0486 D7F83C31 	 ldr r3,[r7,#316]
 553 048a 9B08     	 lsrs r3,r3,#2
 554 048c C7F81C31 	 str r3,[r7,#284]
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     while (blkCnt > 0u)
 555              	 .loc 1 182 0
 556 0490 50E0     	 b .L20
 557              	.L21:
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     {
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       /* Perform Multiply-Accumulate */
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       *pScratchOut++ += (q31_t) * px++ * coeff;
 558              	 .loc 1 185 0
 559 0492 D7F82831 	 ldr r3,[r7,#296]
 560 0496 9A1C     	 adds r2,r3,#2
 561 0498 C7F82821 	 str r2,[r7,#296]
 562 049c 1B88     	 ldrh r3,[r3]
 563 049e 1BB2     	 sxth r3,r3
 564 04a0 B7F91A21 	 ldrsh r2,[r7,#282]
 565 04a4 02FB03F2 	 mul r2,r2,r3
 566 04a8 D7F83831 	 ldr r3,[r7,#312]
 567 04ac 191D     	 adds r1,r3,#4
 568 04ae C7F83811 	 str r1,[r7,#312]
 569 04b2 1968     	 ldr r1,[r3]
 570 04b4 0A44     	 add r2,r2,r1
 571 04b6 1A60     	 str r2,[r3]
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       *pScratchOut++ += (q31_t) * px++ * coeff;
 572              	 .loc 1 186 0
 573 04b8 D7F82831 	 ldr r3,[r7,#296]
 574 04bc 9A1C     	 adds r2,r3,#2
 575 04be C7F82821 	 str r2,[r7,#296]
 576 04c2 1B88     	 ldrh r3,[r3]
 577 04c4 1BB2     	 sxth r3,r3
 578 04c6 B7F91A21 	 ldrsh r2,[r7,#282]
 579 04ca 02FB03F2 	 mul r2,r2,r3
 580 04ce D7F83831 	 ldr r3,[r7,#312]
 581 04d2 191D     	 adds r1,r3,#4
 582 04d4 C7F83811 	 str r1,[r7,#312]
 583 04d8 1968     	 ldr r1,[r3]
 584 04da 0A44     	 add r2,r2,r1
 585 04dc 1A60     	 str r2,[r3]
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       *pScratchOut++ += (q31_t) * px++ * coeff;
 586              	 .loc 1 187 0
 587 04de D7F82831 	 ldr r3,[r7,#296]
 588 04e2 9A1C     	 adds r2,r3,#2
 589 04e4 C7F82821 	 str r2,[r7,#296]
 590 04e8 1B88     	 ldrh r3,[r3]
 591 04ea 1BB2     	 sxth r3,r3
 592 04ec B7F91A21 	 ldrsh r2,[r7,#282]
 593 04f0 02FB03F2 	 mul r2,r2,r3
 594 04f4 D7F83831 	 ldr r3,[r7,#312]
 595 04f8 191D     	 adds r1,r3,#4
 596 04fa C7F83811 	 str r1,[r7,#312]
 597 04fe 1968     	 ldr r1,[r3]
 598 0500 0A44     	 add r2,r2,r1
 599 0502 1A60     	 str r2,[r3]
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       *pScratchOut++ += (q31_t) * px++ * coeff;
 600              	 .loc 1 188 0
 601 0504 D7F82831 	 ldr r3,[r7,#296]
 602 0508 9A1C     	 adds r2,r3,#2
 603 050a C7F82821 	 str r2,[r7,#296]
 604 050e 1B88     	 ldrh r3,[r3]
 605 0510 1BB2     	 sxth r3,r3
 606 0512 B7F91A21 	 ldrsh r2,[r7,#282]
 607 0516 02FB03F2 	 mul r2,r2,r3
 608 051a D7F83831 	 ldr r3,[r7,#312]
 609 051e 191D     	 adds r1,r3,#4
 610 0520 C7F83811 	 str r1,[r7,#312]
 611 0524 1968     	 ldr r1,[r3]
 612 0526 0A44     	 add r2,r2,r1
 613 0528 1A60     	 str r2,[r3]
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       /* Decrement the loop counter */
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       blkCnt--;
 614              	 .loc 1 191 0
 615 052a D7F81C31 	 ldr r3,[r7,#284]
 616 052e 013B     	 subs r3,r3,#1
 617 0530 C7F81C31 	 str r3,[r7,#284]
 618              	.L20:
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     {
 619              	 .loc 1 182 0
 620 0534 D7F81C31 	 ldr r3,[r7,#284]
 621 0538 002B     	 cmp r3,#0
 622 053a AAD1     	 bne .L21
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     }
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* If the blockSize is not a multiple of 4,
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****      * compute the remaining samples */
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     blkCnt = blockSize % 0x4u;
 623              	 .loc 1 196 0
 624 053c D7F83C31 	 ldr r3,[r7,#316]
 625 0540 03F00303 	 and r3,r3,#3
 626 0544 C7F81C31 	 str r3,[r7,#284]
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     while (blkCnt > 0u)
 627              	 .loc 1 198 0
 628 0548 17E0     	 b .L22
 629              	.L23:
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     {
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       /* Perform Multiply-Accumulate */
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       *pScratchOut++ += (q31_t) * px++ * coeff;
 630              	 .loc 1 201 0
 631 054a D7F82831 	 ldr r3,[r7,#296]
 632 054e 9A1C     	 adds r2,r3,#2
 633 0550 C7F82821 	 str r2,[r7,#296]
 634 0554 1B88     	 ldrh r3,[r3]
 635 0556 1BB2     	 sxth r3,r3
 636 0558 B7F91A21 	 ldrsh r2,[r7,#282]
 637 055c 02FB03F2 	 mul r2,r2,r3
 638 0560 D7F83831 	 ldr r3,[r7,#312]
 639 0564 191D     	 adds r1,r3,#4
 640 0566 C7F83811 	 str r1,[r7,#312]
 641 056a 1968     	 ldr r1,[r3]
 642 056c 0A44     	 add r2,r2,r1
 643 056e 1A60     	 str r2,[r3]
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       /* Decrement the loop counter */
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       blkCnt--;
 644              	 .loc 1 204 0
 645 0570 D7F81C31 	 ldr r3,[r7,#284]
 646 0574 013B     	 subs r3,r3,#1
 647 0576 C7F81C31 	 str r3,[r7,#284]
 648              	.L22:
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     {
 649              	 .loc 1 198 0
 650 057a D7F81C31 	 ldr r3,[r7,#284]
 651 057e 002B     	 cmp r3,#0
 652 0580 E3D1     	 bne .L23
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     }
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Load the coefficient value and
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****      * increment the coefficient buffer for the next set of state values */
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     coeff = *pCoeffs++;
 653              	 .loc 1 209 0
 654 0582 D7F82C31 	 ldr r3,[r7,#300]
 655 0586 9A1C     	 adds r2,r3,#2
 656 0588 C7F82C21 	 str r2,[r7,#300]
 657 058c 1B88     	 ldrh r3,[r3]
 658 058e A7F81A31 	 strh r3,[r7,#282]
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Read Index, from where the state buffer should be read, is calculated. */
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     readIndex = (S->stateIndex - blockSize) - *pTapDelay++;
 659              	 .loc 1 212 0
 660 0592 07F10C03 	 add r3,r7,#12
 661 0596 1B68     	 ldr r3,[r3]
 662 0598 5B88     	 ldrh r3,[r3,#2]
 663 059a 1A46     	 mov r2,r3
 664 059c D7F83C31 	 ldr r3,[r7,#316]
 665 05a0 D21A     	 subs r2,r2,r3
 666 05a2 D7F82431 	 ldr r3,[r7,#292]
 667 05a6 191D     	 adds r1,r3,#4
 668 05a8 C7F82411 	 str r1,[r7,#292]
 669 05ac 1B68     	 ldr r3,[r3]
 670 05ae D31A     	 subs r3,r2,r3
 671 05b0 1A46     	 mov r2,r3
 672 05b2 07F11003 	 add r3,r7,#16
 673 05b6 1A60     	 str r2,[r3]
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Wraparound of readIndex */
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     if (readIndex < 0)
 674              	 .loc 1 215 0
 675 05b8 07F11003 	 add r3,r7,#16
 676 05bc 1B68     	 ldr r3,[r3]
 677 05be 002B     	 cmp r3,#0
 678 05c0 08DA     	 bge .L24
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     {
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       readIndex += (int32_t) delaySize;
 679              	 .loc 1 217 0
 680 05c2 07F11003 	 add r3,r7,#16
 681 05c6 1A68     	 ldr r2,[r3]
 682 05c8 D7F80031 	 ldr r3,[r7,#256]
 683 05cc 1A44     	 add r2,r2,r3
 684 05ce 07F11003 	 add r3,r7,#16
 685 05d2 1A60     	 str r2,[r3]
 686              	.L24:
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     }
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Decrement the tap loop counter */
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     tapCnt--;
 687              	 .loc 1 221 0
 688 05d4 D7F82031 	 ldr r3,[r7,#288]
 689 05d8 013B     	 subs r3,r3,#1
 690 05da C7F82031 	 str r3,[r7,#288]
 691              	.L15:
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 692              	 .loc 1 163 0
 693 05de D7F82031 	 ldr r3,[r7,#288]
 694 05e2 002B     	 cmp r3,#0
 695 05e4 7FF4F6AE 	 bne .L25
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* Compute last tap without the final read of pTapDelay */
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* Working pointer for state buffer is updated */
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	py = pState;
 696              	 .loc 1 227 0
 697 05e8 D7F81031 	 ldr r3,[r7,#272]
 698 05ec C7F80431 	 str r3,[r7,#260]
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* blockSize samples are read from the state buffer */
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	arm_circularRead_q15(py, delaySize, &readIndex, 1,
 699              	 .loc 1 230 0
 700 05f0 D7F80031 	 ldr r3,[r7,#256]
 701 05f4 D7F83C21 	 ldr r2,[r7,#316]
 702 05f8 D7F80411 	 ldr r1,[r7,#260]
 703 05fc 7964     	 str r1,[r7,#68]
 704 05fe 3B64     	 str r3,[r7,#64]
 705 0600 07F11003 	 add r3,r7,#16
 706 0604 FB63     	 str r3,[r7,#60]
 707 0606 0123     	 movs r3,#1
 708 0608 BB63     	 str r3,[r7,#56]
 709 060a D7F80831 	 ldr r3,[r7,#264]
 710 060e 7B63     	 str r3,[r7,#52]
 711 0610 07F13003 	 add r3,r7,#48
 712 0614 D7F80811 	 ldr r1,[r7,#264]
 713 0618 1960     	 str r1,[r3]
 714 061a 07F12C03 	 add r3,r7,#44
 715 061e 1A60     	 str r2,[r3]
 716 0620 07F12803 	 add r3,r7,#40
 717 0624 0122     	 movs r2,#1
 718 0626 1A60     	 str r2,[r3]
 719 0628 07F12403 	 add r3,r7,#36
 720 062c D7F83C21 	 ldr r2,[r7,#316]
 721 0630 1A60     	 str r2,[r3]
 722              	.LBB21:
 723              	.LBB22:
6025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     int32_t rOffset, dst_end;
 724              	 .loc 2 6025 0
 725 0632 07F12003 	 add r3,r7,#32
 726 0636 0022     	 movs r2,#0
 727 0638 1A60     	 str r2,[r3]
6030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 728              	 .loc 2 6030 0
 729 063a 07F11C03 	 add r3,r7,#28
 730 063e FA6B     	 ldr r2,[r7,#60]
 731 0640 1268     	 ldr r2,[r2]
 732 0642 1A60     	 str r2,[r3]
6032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 733              	 .loc 2 6032 0
 734 0644 07F12C03 	 add r3,r7,#44
 735 0648 1B68     	 ldr r3,[r3]
 736 064a 5B00     	 lsls r3,r3,#1
 737 064c 07F13002 	 add r2,r7,#48
 738 0650 1268     	 ldr r2,[r2]
 739 0652 1A44     	 add r2,r2,r3
 740 0654 07F11803 	 add r3,r7,#24
 741 0658 1A60     	 str r2,[r3]
6035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 742              	 .loc 2 6035 0
 743 065a 07F12003 	 add r3,r7,#32
 744 065e 07F12402 	 add r2,r7,#36
 745 0662 1268     	 ldr r2,[r2]
 746 0664 1A60     	 str r2,[r3]
 747 0666 36E0     	 b .L26
 748              	.L29:
6040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 749              	 .loc 2 6040 0
 750 0668 07F11C03 	 add r3,r7,#28
 751 066c 1B68     	 ldr r3,[r3]
 752 066e 5B00     	 lsls r3,r3,#1
 753 0670 7A6C     	 ldr r2,[r7,#68]
 754 0672 1344     	 add r3,r3,r2
 755 0674 1A88     	 ldrh r2,[r3]
 756 0676 7B6B     	 ldr r3,[r7,#52]
 757 0678 1A80     	 strh r2,[r3]
6043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 758              	 .loc 2 6043 0
 759 067a 07F12803 	 add r3,r7,#40
 760 067e 1B68     	 ldr r3,[r3]
 761 0680 5B00     	 lsls r3,r3,#1
 762 0682 7A6B     	 ldr r2,[r7,#52]
 763 0684 1344     	 add r3,r3,r2
 764 0686 7B63     	 str r3,[r7,#52]
6045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 765              	 .loc 2 6045 0
 766 0688 07F11803 	 add r3,r7,#24
 767 068c 1B68     	 ldr r3,[r3]
 768 068e 7A6B     	 ldr r2,[r7,#52]
 769 0690 9A42     	 cmp r2,r3
 770 0692 03D1     	 bne .L27
6047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 771              	 .loc 2 6047 0
 772 0694 07F13003 	 add r3,r7,#48
 773 0698 1B68     	 ldr r3,[r3]
 774 069a 7B63     	 str r3,[r7,#52]
 775              	.L27:
6051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 776              	 .loc 2 6051 0
 777 069c 07F11C03 	 add r3,r7,#28
 778 06a0 07F11C02 	 add r2,r7,#28
 779 06a4 B96B     	 ldr r1,[r7,#56]
 780 06a6 1268     	 ldr r2,[r2]
 781 06a8 0A44     	 add r2,r2,r1
 782 06aa 1A60     	 str r2,[r3]
6053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       {
 783              	 .loc 2 6053 0
 784 06ac 07F11C03 	 add r3,r7,#28
 785 06b0 3A6C     	 ldr r2,[r7,#64]
 786 06b2 1B68     	 ldr r3,[r3]
 787 06b4 9A42     	 cmp r2,r3
 788 06b6 07DC     	 bgt .L28
6055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       }
 789              	 .loc 2 6055 0
 790 06b8 07F11C03 	 add r3,r7,#28
 791 06bc 07F11C02 	 add r2,r7,#28
 792 06c0 1168     	 ldr r1,[r2]
 793 06c2 3A6C     	 ldr r2,[r7,#64]
 794 06c4 8A1A     	 subs r2,r1,r2
 795 06c6 1A60     	 str r2,[r3]
 796              	.L28:
6059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 797              	 .loc 2 6059 0
 798 06c8 07F12003 	 add r3,r7,#32
 799 06cc 07F12002 	 add r2,r7,#32
 800 06d0 1268     	 ldr r2,[r2]
 801 06d2 013A     	 subs r2,r2,#1
 802 06d4 1A60     	 str r2,[r3]
 803              	.L26:
6037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 804              	 .loc 2 6037 0
 805 06d6 07F12003 	 add r3,r7,#32
 806 06da 1B68     	 ldr r3,[r3]
 807 06dc 002B     	 cmp r3,#0
 808 06de C3D1     	 bne .L29
 809              	 .loc 2 6063 0
 810 06e0 FB6B     	 ldr r3,[r7,#60]
 811 06e2 07F11C02 	 add r2,r7,#28
 812 06e6 1268     	 ldr r2,[r2]
 813 06e8 1A60     	 str r2,[r3]
 814              	.LBE22:
 815              	.LBE21:
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 											 pb, pb, blockSize, 1, blockSize);
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* Working pointer for the scratch buffer of state values */
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	px = pb;
 816              	 .loc 1 234 0
 817 06ea D7F80831 	 ldr r3,[r7,#264]
 818 06ee C7F82831 	 str r3,[r7,#296]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* Working pointer for scratch buffer of output values */
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	pScratchOut = pScr2;
 819              	 .loc 1 237 0
 820 06f2 D7F81431 	 ldr r3,[r7,#276]
 821 06f6 C7F83831 	 str r3,[r7,#312]
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* Loop over the blockSize. Unroll by a factor of 4.
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	 * Compute 4 MACS at a time. */
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	blkCnt = blockSize >> 2;
 822              	 .loc 1 241 0
 823 06fa D7F83C31 	 ldr r3,[r7,#316]
 824 06fe 9B08     	 lsrs r3,r3,#2
 825 0700 C7F81C31 	 str r3,[r7,#284]
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	while (blkCnt > 0u)
 826              	 .loc 1 243 0
 827 0704 50E0     	 b .L30
 828              	.L31:
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	{
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		/* Perform Multiply-Accumulate */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		*pScratchOut++ += (q31_t) * px++ * coeff;
 829              	 .loc 1 246 0
 830 0706 D7F82831 	 ldr r3,[r7,#296]
 831 070a 9A1C     	 adds r2,r3,#2
 832 070c C7F82821 	 str r2,[r7,#296]
 833 0710 1B88     	 ldrh r3,[r3]
 834 0712 1BB2     	 sxth r3,r3
 835 0714 B7F91A21 	 ldrsh r2,[r7,#282]
 836 0718 02FB03F2 	 mul r2,r2,r3
 837 071c D7F83831 	 ldr r3,[r7,#312]
 838 0720 191D     	 adds r1,r3,#4
 839 0722 C7F83811 	 str r1,[r7,#312]
 840 0726 1968     	 ldr r1,[r3]
 841 0728 0A44     	 add r2,r2,r1
 842 072a 1A60     	 str r2,[r3]
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		*pScratchOut++ += (q31_t) * px++ * coeff;
 843              	 .loc 1 247 0
 844 072c D7F82831 	 ldr r3,[r7,#296]
 845 0730 9A1C     	 adds r2,r3,#2
 846 0732 C7F82821 	 str r2,[r7,#296]
 847 0736 1B88     	 ldrh r3,[r3]
 848 0738 1BB2     	 sxth r3,r3
 849 073a B7F91A21 	 ldrsh r2,[r7,#282]
 850 073e 02FB03F2 	 mul r2,r2,r3
 851 0742 D7F83831 	 ldr r3,[r7,#312]
 852 0746 191D     	 adds r1,r3,#4
 853 0748 C7F83811 	 str r1,[r7,#312]
 854 074c 1968     	 ldr r1,[r3]
 855 074e 0A44     	 add r2,r2,r1
 856 0750 1A60     	 str r2,[r3]
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		*pScratchOut++ += (q31_t) * px++ * coeff;
 857              	 .loc 1 248 0
 858 0752 D7F82831 	 ldr r3,[r7,#296]
 859 0756 9A1C     	 adds r2,r3,#2
 860 0758 C7F82821 	 str r2,[r7,#296]
 861 075c 1B88     	 ldrh r3,[r3]
 862 075e 1BB2     	 sxth r3,r3
 863 0760 B7F91A21 	 ldrsh r2,[r7,#282]
 864 0764 02FB03F2 	 mul r2,r2,r3
 865 0768 D7F83831 	 ldr r3,[r7,#312]
 866 076c 191D     	 adds r1,r3,#4
 867 076e C7F83811 	 str r1,[r7,#312]
 868 0772 1968     	 ldr r1,[r3]
 869 0774 0A44     	 add r2,r2,r1
 870 0776 1A60     	 str r2,[r3]
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		*pScratchOut++ += (q31_t) * px++ * coeff;
 871              	 .loc 1 249 0
 872 0778 D7F82831 	 ldr r3,[r7,#296]
 873 077c 9A1C     	 adds r2,r3,#2
 874 077e C7F82821 	 str r2,[r7,#296]
 875 0782 1B88     	 ldrh r3,[r3]
 876 0784 1BB2     	 sxth r3,r3
 877 0786 B7F91A21 	 ldrsh r2,[r7,#282]
 878 078a 02FB03F2 	 mul r2,r2,r3
 879 078e D7F83831 	 ldr r3,[r7,#312]
 880 0792 191D     	 adds r1,r3,#4
 881 0794 C7F83811 	 str r1,[r7,#312]
 882 0798 1968     	 ldr r1,[r3]
 883 079a 0A44     	 add r2,r2,r1
 884 079c 1A60     	 str r2,[r3]
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		/* Decrement the loop counter */
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		blkCnt--;
 885              	 .loc 1 252 0
 886 079e D7F81C31 	 ldr r3,[r7,#284]
 887 07a2 013B     	 subs r3,r3,#1
 888 07a4 C7F81C31 	 str r3,[r7,#284]
 889              	.L30:
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	{
 890              	 .loc 1 243 0
 891 07a8 D7F81C31 	 ldr r3,[r7,#284]
 892 07ac 002B     	 cmp r3,#0
 893 07ae AAD1     	 bne .L31
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	}
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* If the blockSize is not a multiple of 4,
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	 * compute the remaining samples */
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	blkCnt = blockSize % 0x4u;
 894              	 .loc 1 257 0
 895 07b0 D7F83C31 	 ldr r3,[r7,#316]
 896 07b4 03F00303 	 and r3,r3,#3
 897 07b8 C7F81C31 	 str r3,[r7,#284]
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	while (blkCnt > 0u)
 898              	 .loc 1 259 0
 899 07bc 17E0     	 b .L32
 900              	.L33:
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	{
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		/* Perform Multiply-Accumulate */
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		*pScratchOut++ += (q31_t) * px++ * coeff;
 901              	 .loc 1 262 0
 902 07be D7F82831 	 ldr r3,[r7,#296]
 903 07c2 9A1C     	 adds r2,r3,#2
 904 07c4 C7F82821 	 str r2,[r7,#296]
 905 07c8 1B88     	 ldrh r3,[r3]
 906 07ca 1BB2     	 sxth r3,r3
 907 07cc B7F91A21 	 ldrsh r2,[r7,#282]
 908 07d0 02FB03F2 	 mul r2,r2,r3
 909 07d4 D7F83831 	 ldr r3,[r7,#312]
 910 07d8 191D     	 adds r1,r3,#4
 911 07da C7F83811 	 str r1,[r7,#312]
 912 07de 1968     	 ldr r1,[r3]
 913 07e0 0A44     	 add r2,r2,r1
 914 07e2 1A60     	 str r2,[r3]
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		/* Decrement the loop counter */
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		blkCnt--;
 915              	 .loc 1 265 0
 916 07e4 D7F81C31 	 ldr r3,[r7,#284]
 917 07e8 013B     	 subs r3,r3,#1
 918 07ea C7F81C31 	 str r3,[r7,#284]
 919              	.L32:
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	{
 920              	 .loc 1 259 0
 921 07ee D7F81C31 	 ldr r3,[r7,#284]
 922 07f2 002B     	 cmp r3,#0
 923 07f4 E3D1     	 bne .L33
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	}
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* All the output values are in pScratchOut buffer.
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****      Convert them into 1.15 format, saturate and store in the destination buffer. */
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Loop over the blockSize. */
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   blkCnt = blockSize >> 2;
 924              	 .loc 1 271 0
 925 07f6 D7F83C31 	 ldr r3,[r7,#316]
 926 07fa 9B08     	 lsrs r3,r3,#2
 927 07fc C7F81C31 	 str r3,[r7,#284]
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   while (blkCnt > 0u)
 928              	 .loc 1 273 0
 929 0800 72E0     	 b .L34
 930              	.L35:
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     in1 = *pScr2++;
 931              	 .loc 1 275 0
 932 0802 D7F81431 	 ldr r3,[r7,#276]
 933 0806 1A1D     	 adds r2,r3,#4
 934 0808 C7F81421 	 str r2,[r7,#276]
 935 080c 1B68     	 ldr r3,[r3]
 936 080e C7F8F830 	 str r3,[r7,#248]
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     in2 = *pScr2++;
 937              	 .loc 1 276 0
 938 0812 D7F81431 	 ldr r3,[r7,#276]
 939 0816 1A1D     	 adds r2,r3,#4
 940 0818 C7F81421 	 str r2,[r7,#276]
 941 081c 1B68     	 ldr r3,[r3]
 942 081e C7F8F430 	 str r3,[r7,#244]
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** #ifndef  ARM_MATH_BIG_ENDIAN
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *__SIMD32(pOut)++ =
 943              	 .loc 1 280 0
 944 0822 07F11402 	 add r2,r7,#20
 945 0826 1368     	 ldr r3,[r2]
 946 0828 191D     	 adds r1,r3,#4
 947 082a 1160     	 str r1,[r2]
 948              	.LBB23:
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       __PKHBT((q15_t) __SSAT(in1 >> 15, 16), (q15_t) __SSAT(in2 >> 15, 16),
 949              	 .loc 1 281 0
 950 082c D7F8F820 	 ldr r2,[r7,#248]
 951 0830 D213     	 asrs r2,r2,#15
 952 0832 C7F8F020 	 str r2,[r7,#240]
 953 0836 D7F8F020 	 ldr r2,[r7,#240]
 954              	
 955 083a 02F30F02 	 ssat r2,#16,r2
 956              	
 957              	 .thumb
 958 083e C7F8EC20 	 str r2,[r7,#236]
 959 0842 D7F8EC20 	 ldr r2,[r7,#236]
 960              	.LBE23:
 961 0846 92B2     	 uxth r2,r2
 962 0848 12B2     	 sxth r2,r2
 963 084a 91B2     	 uxth r1,r2
 964              	.LBB24:
 965 084c D7F8F420 	 ldr r2,[r7,#244]
 966 0850 D213     	 asrs r2,r2,#15
 967 0852 C7F8E820 	 str r2,[r7,#232]
 968 0856 D7F8E820 	 ldr r2,[r7,#232]
 969              	
 970 085a 02F30F02 	 ssat r2,#16,r2
 971              	
 972              	 .thumb
 973 085e C7F8E420 	 str r2,[r7,#228]
 974 0862 D7F8E420 	 ldr r2,[r7,#228]
 975              	.LBE24:
 976 0866 92B2     	 uxth r2,r2
 977 0868 12B2     	 sxth r2,r2
 978 086a 1204     	 lsls r2,r2,#16
 979 086c 0A43     	 orrs r2,r2,r1
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       __PKHBT((q15_t) __SSAT(in1 >> 15, 16), (q15_t) __SSAT(in2 >> 15, 16),
 980              	 .loc 1 280 0
 981 086e 1A60     	 str r2,[r3]
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****               16);
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** #else
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *__SIMD32(pOut)++ =
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       __PKHBT((q15_t) __SSAT(in2 >> 15, 16), (q15_t) __SSAT(in1 >> 15, 16),
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****               16);
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** #endif /*      #ifndef  ARM_MATH_BIG_ENDIAN    */
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     in1 = *pScr2++;
 982              	 .loc 1 291 0
 983 0870 D7F81431 	 ldr r3,[r7,#276]
 984 0874 1A1D     	 adds r2,r3,#4
 985 0876 C7F81421 	 str r2,[r7,#276]
 986 087a 1B68     	 ldr r3,[r3]
 987 087c C7F8F830 	 str r3,[r7,#248]
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     in2 = *pScr2++;
 988              	 .loc 1 293 0
 989 0880 D7F81431 	 ldr r3,[r7,#276]
 990 0884 1A1D     	 adds r2,r3,#4
 991 0886 C7F81421 	 str r2,[r7,#276]
 992 088a 1B68     	 ldr r3,[r3]
 993 088c C7F8F430 	 str r3,[r7,#244]
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** #ifndef  ARM_MATH_BIG_ENDIAN
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *__SIMD32(pOut)++ =
 994              	 .loc 1 297 0
 995 0890 07F11402 	 add r2,r7,#20
 996 0894 1368     	 ldr r3,[r2]
 997 0896 191D     	 adds r1,r3,#4
 998 0898 1160     	 str r1,[r2]
 999              	.LBB25:
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       __PKHBT((q15_t) __SSAT(in1 >> 15, 16), (q15_t) __SSAT(in2 >> 15, 16),
 1000              	 .loc 1 298 0
 1001 089a D7F8F820 	 ldr r2,[r7,#248]
 1002 089e D213     	 asrs r2,r2,#15
 1003 08a0 C7F8E020 	 str r2,[r7,#224]
 1004 08a4 D7F8E020 	 ldr r2,[r7,#224]
 1005              	
 1006 08a8 02F30F02 	 ssat r2,#16,r2
 1007              	
 1008              	 .thumb
 1009 08ac C7F8DC20 	 str r2,[r7,#220]
 1010 08b0 D7F8DC20 	 ldr r2,[r7,#220]
 1011              	.LBE25:
 1012 08b4 92B2     	 uxth r2,r2
 1013 08b6 12B2     	 sxth r2,r2
 1014 08b8 91B2     	 uxth r1,r2
 1015              	.LBB26:
 1016 08ba D7F8F420 	 ldr r2,[r7,#244]
 1017 08be D213     	 asrs r2,r2,#15
 1018 08c0 C7F8D820 	 str r2,[r7,#216]
 1019 08c4 D7F8D820 	 ldr r2,[r7,#216]
 1020              	
 1021 08c8 02F30F02 	 ssat r2,#16,r2
 1022              	
 1023              	 .thumb
 1024 08cc C7F8D420 	 str r2,[r7,#212]
 1025 08d0 D7F8D420 	 ldr r2,[r7,#212]
 1026              	.LBE26:
 1027 08d4 92B2     	 uxth r2,r2
 1028 08d6 12B2     	 sxth r2,r2
 1029 08d8 1204     	 lsls r2,r2,#16
 1030 08da 0A43     	 orrs r2,r2,r1
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       __PKHBT((q15_t) __SSAT(in1 >> 15, 16), (q15_t) __SSAT(in2 >> 15, 16),
 1031              	 .loc 1 297 0
 1032 08dc 1A60     	 str r2,[r3]
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****               16);
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** #else
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *__SIMD32(pOut)++ =
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       __PKHBT((q15_t) __SSAT(in2 >> 15, 16), (q15_t) __SSAT(in1 >> 15, 16),
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****               16);
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** #endif /*      #ifndef  ARM_MATH_BIG_ENDIAN    */
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     blkCnt--;
 1033              	 .loc 1 310 0
 1034 08de D7F81C31 	 ldr r3,[r7,#284]
 1035 08e2 013B     	 subs r3,r3,#1
 1036 08e4 C7F81C31 	 str r3,[r7,#284]
 1037              	.L34:
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 1038              	 .loc 1 273 0
 1039 08e8 D7F81C31 	 ldr r3,[r7,#284]
 1040 08ec 002B     	 cmp r3,#0
 1041 08ee 88D1     	 bne .L35
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* If the blockSize is not a multiple of 4,
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****      remaining samples are processed in the below loop */
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   blkCnt = blockSize % 0x4u;
 1042              	 .loc 1 316 0
 1043 08f0 D7F83C31 	 ldr r3,[r7,#316]
 1044 08f4 03F00303 	 and r3,r3,#3
 1045 08f8 C7F81C31 	 str r3,[r7,#284]
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   while (blkCnt > 0u)
 1046              	 .loc 1 318 0
 1047 08fc 1EE0     	 b .L36
 1048              	.L37:
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *pOut++ = (q15_t) __SSAT(*pScr2++ >> 15, 16);
 1049              	 .loc 1 320 0
 1050 08fe 07F11403 	 add r3,r7,#20
 1051 0902 1B68     	 ldr r3,[r3]
 1052 0904 991C     	 adds r1,r3,#2
 1053 0906 07F11402 	 add r2,r7,#20
 1054 090a 1160     	 str r1,[r2]
 1055              	.LBB27:
 1056 090c D7F81421 	 ldr r2,[r7,#276]
 1057 0910 111D     	 adds r1,r2,#4
 1058 0912 C7F81411 	 str r1,[r7,#276]
 1059 0916 1268     	 ldr r2,[r2]
 1060 0918 D213     	 asrs r2,r2,#15
 1061 091a C7F8D020 	 str r2,[r7,#208]
 1062 091e D7F8D020 	 ldr r2,[r7,#208]
 1063              	
 1064 0922 02F30F02 	 ssat r2,#16,r2
 1065              	
 1066              	 .thumb
 1067 0926 C7F8CC20 	 str r2,[r7,#204]
 1068 092a D7F8CC20 	 ldr r2,[r7,#204]
 1069              	.LBE27:
 1070 092e 92B2     	 uxth r2,r2
 1071 0930 1A80     	 strh r2,[r3]
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     blkCnt--;
 1072              	 .loc 1 321 0
 1073 0932 D7F81C31 	 ldr r3,[r7,#284]
 1074 0936 013B     	 subs r3,r3,#1
 1075 0938 C7F81C31 	 str r3,[r7,#284]
 1076              	.L36:
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 1077              	 .loc 1 318 0
 1078 093c D7F81C31 	 ldr r3,[r7,#284]
 1079 0940 002B     	 cmp r3,#0
 1080 0942 DCD1     	 bne .L37
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** #else
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Run the below code for Cortex-M0 */
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* BlockSize of Input samples are copied into the state buffer */
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* StateIndex points to the starting position to write in the state buffer */
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   arm_circularWrite_q15(py, delaySize, &S->stateIndex, 1, pIn, 1, blockSize);
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Loop over the number of taps. */
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   tapCnt = numTaps;
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Read Index, from where the state buffer should be read, is calculated. */
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   readIndex = (S->stateIndex - blockSize) - *pTapDelay++;
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Wraparound of readIndex */
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   if (readIndex < 0)
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     readIndex += (int32_t) delaySize;
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Working pointer for state buffer is updated */
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   py = pState;
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* blockSize samples are read from the state buffer */
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   arm_circularRead_q15(py, delaySize, &readIndex, 1,
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****                        pb, pb, blockSize, 1, blockSize);
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Working pointer for the scratch buffer of state values */
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   px = pb;
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Working pointer for scratch buffer of output values */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   pScratchOut = pScr2;
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   blkCnt = blockSize;
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   while (blkCnt > 0u)
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Perform multiplication and store in the scratch buffer */
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *pScratchOut++ = ((q31_t) * px++ * coeff);
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Decrement the loop counter */
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     blkCnt--;
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Load the coefficient value and
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****    * increment the coefficient buffer for the next set of state values */
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   coeff = *pCoeffs++;
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Read Index, from where the state buffer should be read, is calculated. */
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   readIndex = (S->stateIndex - blockSize) - *pTapDelay++;
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Wraparound of readIndex */
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   if (readIndex < 0)
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     readIndex += (int32_t) delaySize;
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Loop over the number of taps. */
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   tapCnt = (uint32_t) numTaps - 2u;
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   while (tapCnt > 0u)
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Working pointer for state buffer is updated */
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     py = pState;
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* blockSize samples are read from the state buffer */
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     arm_circularRead_q15(py, delaySize, &readIndex, 1,
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****                          pb, pb, blockSize, 1, blockSize);
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Working pointer for the scratch buffer of state values */
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     px = pb;
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Working pointer for scratch buffer of output values */
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     pScratchOut = pScr2;
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     blkCnt = blockSize;
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     while (blkCnt > 0u)
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     {
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       /* Perform Multiply-Accumulate */
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       *pScratchOut++ += (q31_t) * px++ * coeff;
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       /* Decrement the loop counter */
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       blkCnt--;
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     }
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Load the coefficient value and
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****      * increment the coefficient buffer for the next set of state values */
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     coeff = *pCoeffs++;
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Read Index, from where the state buffer should be read, is calculated. */
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     readIndex = (S->stateIndex - blockSize) - *pTapDelay++;
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Wraparound of readIndex */
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     if (readIndex < 0)
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     {
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****       readIndex += (int32_t) delaySize;
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     }
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     /* Decrement the tap loop counter */
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     tapCnt--;
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* Compute last tap without the final read of pTapDelay */
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* Working pointer for state buffer is updated */
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	py = pState;
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* blockSize samples are read from the state buffer */
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	arm_circularRead_q15(py, delaySize, &readIndex, 1,
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 											 pb, pb, blockSize, 1, blockSize);
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* Working pointer for the scratch buffer of state values */
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	px = pb;
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	/* Working pointer for scratch buffer of output values */
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	pScratchOut = pScr2;
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	blkCnt = blockSize;
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	while (blkCnt > 0u)
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	{
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		/* Perform Multiply-Accumulate */
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		*pScratchOut++ += (q31_t) * px++ * coeff;
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		/* Decrement the loop counter */
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 		blkCnt--;
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 	}
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* All the output values are in pScratchOut buffer.
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****      Convert them into 1.15 format, saturate and store in the destination buffer. */
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   /* Loop over the blockSize. */
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   blkCnt = blockSize;
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   while (blkCnt > 0u)
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   {
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     *pOut++ = (q15_t) __SSAT(*pScr2++ >> 15, 16);
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****     blkCnt--;
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c ****   }
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** #endif /*   #if defined (ARM_MATH_DSP) */
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** 
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_sparse_q15.c **** }
 1081              	 .loc 1 466 0
 1082 0944 07F59877 	 add r7,r7,#304
 1083              	.LCFI3:
 1084              	 .cfi_def_cfa_offset 8
 1085 0948 BD46     	 mov sp,r7
 1086              	.LCFI4:
 1087              	 .cfi_def_cfa_register 13
 1088              	 
 1089 094a 90BC     	 pop {r4,r7}
 1090              	.LCFI5:
 1091              	 .cfi_restore 7
 1092              	 .cfi_restore 4
 1093              	 .cfi_def_cfa_offset 0
 1094 094c 7047     	 bx lr
 1095              	 .cfi_endproc
 1096              	.LFE135:
 1098 094e 00BF     	 .text
 1099              	.Letext0:
 1100              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1101              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fir_sparse_q15.c
    {standard input}:20     .text.arm_fir_sparse_q15:00000000 $t
    {standard input}:25     .text.arm_fir_sparse_q15:00000000 arm_fir_sparse_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
