   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_lms_norm_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_lms_norm_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_lms_norm_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_lms_norm_q31:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * Title:        arm_lms_norm_q31.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * Description:  Processing function for the Q31 NLMS filter
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * @addtogroup LMS_NORM
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****  */
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** /**
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * @brief Processing function for Q31 normalized LMS filter.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * @param[in] *S points to an instance of the Q31 normalized LMS filter structure.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * @param[in] *pSrc points to the block of input data.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * @param[in] *pRef points to the block of reference data.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * @param[out] *pOut points to the block of output data.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * @param[out] *pErr points to the block of error data.
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * @param[in] blockSize number of samples to process.
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * @return none.
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** *
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * <b>Scaling and Overflow Behavior:</b>
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * \par
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * The function is implemented using an internal 64-bit accumulator.
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * The accumulator has a 2.62 format and maintains full precision of the intermediate
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * multiplication results but provides only a single guard bit.
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * Thus, if the accumulator result overflows it wraps around rather than clip.
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * In order to avoid overflows completely the input signal must be scaled down by
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * log2(numTaps) bits. The reference signal should not be scaled down.
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * After all multiply-accumulates are performed, the 2.62 accumulator is shifted
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * and saturated to 1.31 format to yield the final result.
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * The output signal and error signal are in 1.31 format.
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** *
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * \par
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * 	In this filter, filter coefficients are updated for each sample and the
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** * updation of filter cofficients are saturted.
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** *
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** */
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** void arm_lms_norm_q31(
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   arm_lms_norm_instance_q31 * S,
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t * pSrc,
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t * pRef,
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t * pOut,
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t * pErr,
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   uint32_t blockSize)
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** {
  28              	 .loc 1 75 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 28
  36              	 .cfi_offset 4,-28
  37              	 .cfi_offset 5,-24
  38              	 .cfi_offset 7,-20
  39              	 .cfi_offset 8,-16
  40              	 .cfi_offset 9,-12
  41              	 .cfi_offset 10,-8
  42              	 .cfi_offset 11,-4
  43 0004 EBB0     	 sub sp,sp,#428
  44              	.LCFI1:
  45              	 .cfi_def_cfa_offset 456
  46 0006 00AF     	 add r7,sp,#0
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 7
  49 0008 C7F8DC00 	 str r0,[r7,#220]
  50 000c C7F8D810 	 str r1,[r7,#216]
  51 0010 C7F8D420 	 str r2,[r7,#212]
  52 0014 C7F8D030 	 str r3,[r7,#208]
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t *pState = S->pState;                     /* State pointer */
  53              	 .loc 1 76 0
  54 0018 D7F8DC30 	 ldr r3,[r7,#220]
  55 001c 5B68     	 ldr r3,[r3,#4]
  56 001e C7F8A431 	 str r3,[r7,#420]
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  57              	 .loc 1 77 0
  58 0022 D7F8DC30 	 ldr r3,[r7,#220]
  59 0026 9B68     	 ldr r3,[r3,#8]
  60 0028 C7F87831 	 str r3,[r7,#376]
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t *pStateCurnt;                            /* Points to the current sample of the state */
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t *px, *pb;                                /* Temporary pointers for state and coefficient bu
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t mu = S->mu;                              /* Adaptive factor */
  61              	 .loc 1 80 0
  62 002c D7F8DC30 	 ldr r3,[r7,#220]
  63 0030 DB68     	 ldr r3,[r3,#12]
  64 0032 C7F87431 	 str r3,[r7,#372]
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filter */
  65              	 .loc 1 81 0
  66 0036 D7F8DC30 	 ldr r3,[r7,#220]
  67 003a 1B88     	 ldrh r3,[r3]
  68 003c C7F87031 	 str r3,[r7,#368]
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   uint32_t tapCnt, blkCnt;                       /* Loop counters */
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q63_t energy;                                  /* Energy of the input */
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q63_t acc;                                     /* Accumulator */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t e = 0, d = 0;                            /* error, reference data sample */
  69              	 .loc 1 85 0
  70 0040 0023     	 movs r3,#0
  71 0042 C7F86C31 	 str r3,[r7,#364]
  72 0046 0023     	 movs r3,#0
  73 0048 C7F86831 	 str r3,[r7,#360]
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t w = 0, in;                               /* weight factor and state */
  74              	 .loc 1 86 0
  75 004c 0023     	 movs r3,#0
  76 004e C7F86431 	 str r3,[r7,#356]
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t x0;                                      /* temporary variable to hold input sample */
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** //  uint32_t shift = 32u - ((uint32_t) S->postShift + 1u);        /* Shift to be applied to the out
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t errorXmu, oneByEnergy;                   /* Temporary variables to store error and mu produ
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t postShift;                               /* Post shift to be applied to weight after recipr
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t coef;                                    /* Temporary variable for coef */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   q31_t acc_l, acc_h;                            /*  temporary input */
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   uint32_t uShift = ((uint32_t) S->postShift + 1u);
  77              	 .loc 1 93 0
  78 0052 D7F8DC30 	 ldr r3,[r7,#220]
  79 0056 1B7C     	 ldrb r3,[r3,#16]
  80 0058 0133     	 adds r3,r3,#1
  81 005a C7F86031 	 str r3,[r7,#352]
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   uint32_t lShift = 32u - uShift;                /*  Shift to be applied to the output */
  82              	 .loc 1 94 0
  83 005e D7F86031 	 ldr r3,[r7,#352]
  84 0062 C3F12003 	 rsb r3,r3,#32
  85 0066 C7F85C31 	 str r3,[r7,#348]
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   energy = S->energy;
  86              	 .loc 1 96 0
  87 006a D7F8DC30 	 ldr r3,[r7,#220]
  88 006e 9B69     	 ldr r3,[r3,#24]
  89 0070 1A46     	 mov r2,r3
  90 0072 4FEAE273 	 asr r3,r2,#31
  91 0076 07F5C471 	 add r1,r7,#392
  92 007a C1E90023 	 strd r2,[r1]
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   x0 = S->x0;
  93              	 .loc 1 97 0
  94 007e D7F8DC30 	 ldr r3,[r7,#220]
  95 0082 DB69     	 ldr r3,[r3,#28]
  96 0084 C7F87C31 	 str r3,[r7,#380]
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* S->pState points to buffer which contains previous frame (numTaps - 1) samples */
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* pStateCurnt points to the location where the new input data should be written */
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   pStateCurnt = &(S->pState[(numTaps - 1u)]);
  97              	 .loc 1 101 0
  98 0088 D7F8DC30 	 ldr r3,[r7,#220]
  99 008c 5A68     	 ldr r2,[r3,#4]
 100 008e D7F87031 	 ldr r3,[r7,#368]
 101 0092 03F18043 	 add r3,r3,#1073741824
 102 0096 013B     	 subs r3,r3,#1
 103 0098 9B00     	 lsls r3,r3,#2
 104 009a 1344     	 add r3,r3,r2
 105 009c C7F8A031 	 str r3,[r7,#416]
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Loop over blockSize number of values */
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   blkCnt = blockSize;
 106              	 .loc 1 104 0
 107 00a0 D7F8CC31 	 ldr r3,[r7,#460]
 108 00a4 C7F89031 	 str r3,[r7,#400]
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** #if defined (ARM_MATH_DSP)
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   while (blkCnt > 0u)
 109              	 .loc 1 111 0
 110 00a8 00F0B5BC 	 b .L2
 111              	.L38:
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   {
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Copy the new input sample into the state buffer */
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pSrc;
 112              	 .loc 1 115 0
 113 00ac D7F8A021 	 ldr r2,[r7,#416]
 114 00b0 131D     	 adds r3,r2,#4
 115 00b2 C7F8A031 	 str r3,[r7,#416]
 116 00b6 D7F8D830 	 ldr r3,[r7,#216]
 117 00ba 1B68     	 ldr r3,[r3]
 118 00bc 1360     	 str r3,[r2]
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize pState pointer */
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     px = pState;
 119              	 .loc 1 118 0
 120 00be D7F8A431 	 ldr r3,[r7,#420]
 121 00c2 C7F89C31 	 str r3,[r7,#412]
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize coeff pointer */
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     pb = (pCoeffs);
 122              	 .loc 1 121 0
 123 00c6 D7F87831 	 ldr r3,[r7,#376]
 124 00ca C7F89831 	 str r3,[r7,#408]
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Read the sample from input buffer */
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     in = *pSrc++;
 125              	 .loc 1 124 0
 126 00ce D7F8D820 	 ldr r2,[r7,#216]
 127 00d2 131D     	 adds r3,r2,#4
 128 00d4 C7F8D830 	 str r3,[r7,#216]
 129 00d8 1368     	 ldr r3,[r2]
 130 00da C7F85831 	 str r3,[r7,#344]
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Update the energy calculation */
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     energy = (q31_t) ((((q63_t) energy << 32) -
 131              	 .loc 1 127 0
 132 00de 07F5C473 	 add r3,r7,#392
 133 00e2 D3E90023 	 ldrd r2,[r3]
 134 00e6 1300     	 movs r3,r2
 135 00e8 C7F8BC30 	 str r3,[r7,#188]
 136 00ec 0023     	 movs r3,#0
 137 00ee C7F8B830 	 str r3,[r7,#184]
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****                        (((q63_t) x0 * x0) << 1)) >> 32);
 138              	 .loc 1 128 0
 139 00f2 D7F87C31 	 ldr r3,[r7,#380]
 140 00f6 1846     	 mov r0,r3
 141 00f8 4FEAE071 	 asr r1,r0,#31
 142 00fc D7F87C31 	 ldr r3,[r7,#380]
 143 0100 1A46     	 mov r2,r3
 144 0102 4FEAE273 	 asr r3,r2,#31
 145 0106 02FB01F5 	 mul r5,r2,r1
 146 010a 00FB03F4 	 mul r4,r0,r3
 147 010e 2C44     	 add r4,r4,r5
 148 0110 A0FB0201 	 umull r0,r1,r0,r2
 149 0114 6318     	 adds r3,r4,r1
 150 0116 1946     	 mov r1,r3
 151 0118 0218     	 adds r2,r0,r0
 152 011a 41EB0103 	 adc r3,r1,r1
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****                        (((q63_t) x0 * x0) << 1)) >> 32);
 153              	 .loc 1 127 0
 154 011e D7E92E01 	 ldrd r0,[r7,#184]
 155 0122 801A     	 subs r0,r0,r2
 156 0124 61EB0301 	 sbc r1,r1,r3
 157 0128 0246     	 mov r2,r0
 158 012a 0B46     	 mov r3,r1
 159              	 .loc 1 128 0
 160 012c 1900     	 movs r1,r3
 161 012e C7F8B010 	 str r1,[r7,#176]
 162 0132 DB17     	 asrs r3,r3,#31
 163 0134 C7F8B430 	 str r3,[r7,#180]
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****                        (((q63_t) x0 * x0) << 1)) >> 32);
 164              	 .loc 1 127 0
 165 0138 D7F8B030 	 ldr r3,[r7,#176]
 166 013c 1A46     	 mov r2,r3
 167 013e 4FEAE273 	 asr r3,r2,#31
 168 0142 07F5C471 	 add r1,r7,#392
 169 0146 C1E90023 	 strd r2,[r1]
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     energy = (q31_t) (((((q63_t) in * in) << 1) + (energy << 32)) >> 32);
 170              	 .loc 1 129 0
 171 014a D7F85831 	 ldr r3,[r7,#344]
 172 014e 1846     	 mov r0,r3
 173 0150 4FEAE071 	 asr r1,r0,#31
 174 0154 D7F85831 	 ldr r3,[r7,#344]
 175 0158 1A46     	 mov r2,r3
 176 015a 4FEAE273 	 asr r3,r2,#31
 177 015e 02FB01F5 	 mul r5,r2,r1
 178 0162 00FB03F4 	 mul r4,r0,r3
 179 0166 2C44     	 add r4,r4,r5
 180 0168 A0FB0201 	 umull r0,r1,r0,r2
 181 016c 6318     	 adds r3,r4,r1
 182 016e 1946     	 mov r1,r3
 183 0170 0218     	 adds r2,r0,r0
 184 0172 41EB0103 	 adc r3,r1,r1
 185 0176 1046     	 mov r0,r2
 186 0178 1946     	 mov r1,r3
 187 017a 07F5C473 	 add r3,r7,#392
 188 017e D3E90023 	 ldrd r2,[r3]
 189 0182 1300     	 movs r3,r2
 190 0184 C7F8AC30 	 str r3,[r7,#172]
 191 0188 0023     	 movs r3,#0
 192 018a C7F8A830 	 str r3,[r7,#168]
 193 018e D7E92A23 	 ldrd r2,[r7,#168]
 194 0192 1218     	 adds r2,r2,r0
 195 0194 43EB0103 	 adc r3,r3,r1
 196 0198 1900     	 movs r1,r3
 197 019a C7F8A010 	 str r1,[r7,#160]
 198 019e DB17     	 asrs r3,r3,#31
 199 01a0 C7F8A430 	 str r3,[r7,#164]
 200 01a4 D7F8A030 	 ldr r3,[r7,#160]
 201 01a8 1A46     	 mov r2,r3
 202 01aa 4FEAE273 	 asr r3,r2,#31
 203 01ae 07F5C471 	 add r1,r7,#392
 204 01b2 C1E90023 	 strd r2,[r1]
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Set the accumulator to zero */
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     acc = 0;
 205              	 .loc 1 132 0
 206 01b6 4FF00002 	 mov r2,#0
 207 01ba 4FF00003 	 mov r3,#0
 208 01be 07F5C071 	 add r1,r7,#384
 209 01c2 C1E90023 	 strd r2,[r1]
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Loop unrolling.  Process 4 taps at a time. */
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps >> 2;
 210              	 .loc 1 135 0
 211 01c6 D7F87031 	 ldr r3,[r7,#368]
 212 01ca 9B08     	 lsrs r3,r3,#2
 213 01cc C7F89431 	 str r3,[r7,#404]
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     while (tapCnt > 0u)
 214              	 .loc 1 137 0
 215 01d0 9CE0     	 b .L3
 216              	.L4:
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     {
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Perform the multiply-accumulate */
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 217              	 .loc 1 140 0
 218 01d2 D7F89C21 	 ldr r2,[r7,#412]
 219 01d6 131D     	 adds r3,r2,#4
 220 01d8 C7F89C31 	 str r3,[r7,#412]
 221 01dc 1368     	 ldr r3,[r2]
 222 01de 1C46     	 mov r4,r3
 223 01e0 4FEAE475 	 asr r5,r4,#31
 224 01e4 D7F89821 	 ldr r2,[r7,#408]
 225 01e8 131D     	 adds r3,r2,#4
 226 01ea C7F89831 	 str r3,[r7,#408]
 227 01ee 1368     	 ldr r3,[r2]
 228 01f0 1A46     	 mov r2,r3
 229 01f2 4FEAE273 	 asr r3,r2,#31
 230 01f6 02FB05F0 	 mul r0,r2,r5
 231 01fa 04FB03F1 	 mul r1,r4,r3
 232 01fe 0144     	 add r1,r1,r0
 233 0200 A4FB0245 	 umull r4,r5,r4,r2
 234 0204 4B19     	 adds r3,r1,r5
 235 0206 1D46     	 mov r5,r3
 236 0208 07F5C073 	 add r3,r7,#384
 237 020c D3E90023 	 ldrd r2,[r3]
 238 0210 1219     	 adds r2,r2,r4
 239 0212 43EB0503 	 adc r3,r3,r5
 240 0216 07F5C071 	 add r1,r7,#384
 241 021a C1E90023 	 strd r2,[r1]
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 242              	 .loc 1 141 0
 243 021e D7F89C21 	 ldr r2,[r7,#412]
 244 0222 131D     	 adds r3,r2,#4
 245 0224 C7F89C31 	 str r3,[r7,#412]
 246 0228 1368     	 ldr r3,[r2]
 247 022a 1C46     	 mov r4,r3
 248 022c 4FEAE475 	 asr r5,r4,#31
 249 0230 D7F89821 	 ldr r2,[r7,#408]
 250 0234 131D     	 adds r3,r2,#4
 251 0236 C7F89831 	 str r3,[r7,#408]
 252 023a 1368     	 ldr r3,[r2]
 253 023c 1A46     	 mov r2,r3
 254 023e 4FEAE273 	 asr r3,r2,#31
 255 0242 02FB05F0 	 mul r0,r2,r5
 256 0246 04FB03F1 	 mul r1,r4,r3
 257 024a 0144     	 add r1,r1,r0
 258 024c A4FB0245 	 umull r4,r5,r4,r2
 259 0250 4B19     	 adds r3,r1,r5
 260 0252 1D46     	 mov r5,r3
 261 0254 07F5C073 	 add r3,r7,#384
 262 0258 D3E90023 	 ldrd r2,[r3]
 263 025c 1219     	 adds r2,r2,r4
 264 025e 43EB0503 	 adc r3,r3,r5
 265 0262 07F5C071 	 add r1,r7,#384
 266 0266 C1E90023 	 strd r2,[r1]
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 267              	 .loc 1 142 0
 268 026a D7F89C21 	 ldr r2,[r7,#412]
 269 026e 131D     	 adds r3,r2,#4
 270 0270 C7F89C31 	 str r3,[r7,#412]
 271 0274 1368     	 ldr r3,[r2]
 272 0276 1C46     	 mov r4,r3
 273 0278 4FEAE475 	 asr r5,r4,#31
 274 027c D7F89821 	 ldr r2,[r7,#408]
 275 0280 131D     	 adds r3,r2,#4
 276 0282 C7F89831 	 str r3,[r7,#408]
 277 0286 1368     	 ldr r3,[r2]
 278 0288 1A46     	 mov r2,r3
 279 028a 4FEAE273 	 asr r3,r2,#31
 280 028e 02FB05F0 	 mul r0,r2,r5
 281 0292 04FB03F1 	 mul r1,r4,r3
 282 0296 0144     	 add r1,r1,r0
 283 0298 A4FB0245 	 umull r4,r5,r4,r2
 284 029c 4B19     	 adds r3,r1,r5
 285 029e 1D46     	 mov r5,r3
 286 02a0 07F5C073 	 add r3,r7,#384
 287 02a4 D3E90023 	 ldrd r2,[r3]
 288 02a8 1219     	 adds r2,r2,r4
 289 02aa 43EB0503 	 adc r3,r3,r5
 290 02ae 07F5C071 	 add r1,r7,#384
 291 02b2 C1E90023 	 strd r2,[r1]
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 292              	 .loc 1 143 0
 293 02b6 D7F89C21 	 ldr r2,[r7,#412]
 294 02ba 131D     	 adds r3,r2,#4
 295 02bc C7F89C31 	 str r3,[r7,#412]
 296 02c0 1368     	 ldr r3,[r2]
 297 02c2 1C46     	 mov r4,r3
 298 02c4 4FEAE475 	 asr r5,r4,#31
 299 02c8 D7F89821 	 ldr r2,[r7,#408]
 300 02cc 131D     	 adds r3,r2,#4
 301 02ce C7F89831 	 str r3,[r7,#408]
 302 02d2 1368     	 ldr r3,[r2]
 303 02d4 1A46     	 mov r2,r3
 304 02d6 4FEAE273 	 asr r3,r2,#31
 305 02da 02FB05F0 	 mul r0,r2,r5
 306 02de 04FB03F1 	 mul r1,r4,r3
 307 02e2 0144     	 add r1,r1,r0
 308 02e4 A4FB0245 	 umull r4,r5,r4,r2
 309 02e8 4B19     	 adds r3,r1,r5
 310 02ea 1D46     	 mov r5,r3
 311 02ec 07F5C073 	 add r3,r7,#384
 312 02f0 D3E90023 	 ldrd r2,[r3]
 313 02f4 1219     	 adds r2,r2,r4
 314 02f6 43EB0503 	 adc r3,r3,r5
 315 02fa 07F5C071 	 add r1,r7,#384
 316 02fe C1E90023 	 strd r2,[r1]
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Decrement the loop counter */
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       tapCnt--;
 317              	 .loc 1 146 0
 318 0302 D7F89431 	 ldr r3,[r7,#404]
 319 0306 013B     	 subs r3,r3,#1
 320 0308 C7F89431 	 str r3,[r7,#404]
 321              	.L3:
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     {
 322              	 .loc 1 137 0
 323 030c D7F89431 	 ldr r3,[r7,#404]
 324 0310 002B     	 cmp r3,#0
 325 0312 7FF45EAF 	 bne .L4
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     }
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps % 0x4u;
 326              	 .loc 1 150 0
 327 0316 D7F87031 	 ldr r3,[r7,#368]
 328 031a 03F00303 	 and r3,r3,#3
 329 031e C7F89431 	 str r3,[r7,#404]
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     while (tapCnt > 0u)
 330              	 .loc 1 152 0
 331 0322 2AE0     	 b .L5
 332              	.L6:
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     {
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Perform the multiply-accumulate */
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 333              	 .loc 1 155 0
 334 0324 D7F89C21 	 ldr r2,[r7,#412]
 335 0328 131D     	 adds r3,r2,#4
 336 032a C7F89C31 	 str r3,[r7,#412]
 337 032e 1368     	 ldr r3,[r2]
 338 0330 1C46     	 mov r4,r3
 339 0332 4FEAE475 	 asr r5,r4,#31
 340 0336 D7F89821 	 ldr r2,[r7,#408]
 341 033a 131D     	 adds r3,r2,#4
 342 033c C7F89831 	 str r3,[r7,#408]
 343 0340 1368     	 ldr r3,[r2]
 344 0342 1A46     	 mov r2,r3
 345 0344 4FEAE273 	 asr r3,r2,#31
 346 0348 02FB05F0 	 mul r0,r2,r5
 347 034c 04FB03F1 	 mul r1,r4,r3
 348 0350 0144     	 add r1,r1,r0
 349 0352 A4FB0245 	 umull r4,r5,r4,r2
 350 0356 4B19     	 adds r3,r1,r5
 351 0358 1D46     	 mov r5,r3
 352 035a 07F5C073 	 add r3,r7,#384
 353 035e D3E90023 	 ldrd r2,[r3]
 354 0362 1219     	 adds r2,r2,r4
 355 0364 43EB0503 	 adc r3,r3,r5
 356 0368 07F5C071 	 add r1,r7,#384
 357 036c C1E90023 	 strd r2,[r1]
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Decrement the loop counter */
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       tapCnt--;
 358              	 .loc 1 158 0
 359 0370 D7F89431 	 ldr r3,[r7,#404]
 360 0374 013B     	 subs r3,r3,#1
 361 0376 C7F89431 	 str r3,[r7,#404]
 362              	.L5:
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     {
 363              	 .loc 1 152 0
 364 037a D7F89431 	 ldr r3,[r7,#404]
 365 037e 002B     	 cmp r3,#0
 366 0380 D0D1     	 bne .L6
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     }
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Converting the result to 1.31 format */
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calc lower part of acc */
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     acc_l = acc & 0xffffffff;
 367              	 .loc 1 163 0
 368 0382 D7F88031 	 ldr r3,[r7,#384]
 369 0386 C7F85431 	 str r3,[r7,#340]
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calc upper part of acc */
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     acc_h = (acc >> 32) & 0xffffffff;
 370              	 .loc 1 166 0
 371 038a 07F5C073 	 add r3,r7,#384
 372 038e D3E90023 	 ldrd r2,[r3]
 373 0392 1B00     	 movs r3,r3
 374 0394 C7F89830 	 str r3,[r7,#152]
 375 0398 0023     	 movs r3,#0
 376 039a C7F89C30 	 str r3,[r7,#156]
 377 039e D7F89830 	 ldr r3,[r7,#152]
 378 03a2 C7F85031 	 str r3,[r7,#336]
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     acc = (uint32_t) acc_l >> lShift | acc_h << uShift;
 379              	 .loc 1 168 0
 380 03a6 D7F85421 	 ldr r2,[r7,#340]
 381 03aa D7F85C31 	 ldr r3,[r7,#348]
 382 03ae 22FA03F1 	 lsr r1,r2,r3
 383 03b2 D7F86021 	 ldr r2,[r7,#352]
 384 03b6 D7F85031 	 ldr r3,[r7,#336]
 385 03ba 9340     	 lsls r3,r3,r2
 386 03bc 0B43     	 orrs r3,r3,r1
 387 03be 1A46     	 mov r2,r3
 388 03c0 4FF00003 	 mov r3,#0
 389 03c4 07F5C071 	 add r1,r7,#384
 390 03c8 C1E90023 	 strd r2,[r1]
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Store the result from accumulator into the destination buffer. */
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pOut++ = (q31_t) acc;
 391              	 .loc 1 171 0
 392 03cc D7F8D020 	 ldr r2,[r7,#208]
 393 03d0 131D     	 adds r3,r2,#4
 394 03d2 C7F8D030 	 str r3,[r7,#208]
 395 03d6 D7F88031 	 ldr r3,[r7,#384]
 396 03da 1360     	 str r3,[r2]
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Compute and store error */
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     d = *pRef++;
 397              	 .loc 1 174 0
 398 03dc D7F8D420 	 ldr r2,[r7,#212]
 399 03e0 131D     	 adds r3,r2,#4
 400 03e2 C7F8D430 	 str r3,[r7,#212]
 401 03e6 1368     	 ldr r3,[r2]
 402 03e8 C7F86831 	 str r3,[r7,#360]
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     e = d - (q31_t) acc;
 403              	 .loc 1 175 0
 404 03ec D7F88021 	 ldr r2,[r7,#384]
 405 03f0 D7F86831 	 ldr r3,[r7,#360]
 406 03f4 9B1A     	 subs r3,r3,r2
 407 03f6 C7F86C31 	 str r3,[r7,#364]
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pErr++ = e;
 408              	 .loc 1 176 0
 409 03fa D7F8C821 	 ldr r2,[r7,#456]
 410 03fe 131D     	 adds r3,r2,#4
 411 0400 C7F8C831 	 str r3,[r7,#456]
 412 0404 D7F86C31 	 ldr r3,[r7,#364]
 413 0408 1360     	 str r3,[r2]
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calculates the reciprocal of energy */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     postShift = arm_recip_q31(energy + DELTA_Q31,
 414              	 .loc 1 179 0
 415 040a D7F88831 	 ldr r3,[r7,#392]
 416 040e 03F58073 	 add r3,r3,#256
 417 0412 1946     	 mov r1,r3
 418 0414 D7F8DC30 	 ldr r3,[r7,#220]
 419 0418 5A69     	 ldr r2,[r3,#20]
 420 041a C7F84011 	 str r1,[r7,#320]
 421 041e 07F1E403 	 add r3,r7,#228
 422 0422 C7F83C31 	 str r3,[r7,#316]
 423 0426 C7F83821 	 str r2,[r7,#312]
 424              	.LBB20:
 425              	.LBB21:
 426              	 .file 2 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
   1:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* ----------------------------------------------------------------------
   2:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Project:      CMSIS DSP Library
   3:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Title:        CMSIS_DSP/cmsis_dsp.h
   4:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
   6:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * $Date:        27. January 2017
   7:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * $Revision:    V.1.5.1
   8:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
   9:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Target Processor: Cortex-M cores
  10:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * -------------------------------------------------------------------- */
  11:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*
  12:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  14:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  16:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * not use this file except in compliance with the License.
  18:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * You may obtain a copy of the License at
  19:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  20:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
  22:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * See the License for the specific language governing permissions and
  26:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * limitations under the License.
  27:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
  28:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
  29:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
  30:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  32:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Introduction
  33:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  34:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  35:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  38:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Basic math functions
  40:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Fast math functions
  41:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Complex math functions
  42:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Filters
  43:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Matrix functions
  44:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Transforms
  45:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Motor control functions
  46:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Statistical functions
  47:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Support functions
  48:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - Interpolation functions
  49:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  50:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  53:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Using the Library
  54:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  55:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  56:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  77:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library functions are declared in the public file <code>CMSIS_DSP/cmsis_dsp.h</code> which
  78:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * public header file <code> CMSIS_DSP/cmsis_dsp.h</code> for Cortex-M cores with little endian a
  80:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * 
  85:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  86:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Examples
  87:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * --------
  88:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  89:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  90:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  91:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Toolchain Support
  92:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  93:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  94:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
  97:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Building the Library
  98:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
  99:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Pre-processor Macros
 107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Each library project have differant pre-processor macros.
 110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_CMx:
 128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * on ARMv8M Mainline target.
 137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - __FPU_PRESENT:
 139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * - __DSP_PRESENT:
 143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * -----------------------------
 149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |File/Folder                   |Content                                                       
 152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Revision History of CMSIS-DSP
 160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Copyright Notice
 164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * ------------
 165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    *
 166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * operate on individual values and not arrays.
 179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions operates on complex data vectors.
 186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * (real, imag, real, imag, ...).
 188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * real values.
 191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * the type
 203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * definition for the floating-point matrix structure is shown
 204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * below:
 205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     typedef struct
 207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     {
 208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     } arm_matrix_instance_f32;
 212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * matrix element (i, j) is stored at:
 219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     pData[i*numCols + j]
 221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par Init Functions
 224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * data structure.
 226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par
 231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * To place the instance structure in a const data
 234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * data array.
 243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *
 244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * \par Size Checking
 245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * columns.  If the size check fails the functions return:
 249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Otherwise the functions return
 253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SUCCESS
 255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupController Controller Functions
 274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupSupport Support Functions
 281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /**
 291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupExamples Examples
 292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef _ARM_MATH_H
 294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define _ARM_MATH_H
 295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* ignore some GCC warnings */
 297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined ( __GNUC__ )
 298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic push
 299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined(ARM_MATH_CM7)
 307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm7.h"
 308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_DSP
 309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm4.h"
 311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_DSP
 312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm3.h"
 314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0.h"
 316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0plus.h"
 319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_armv8mbl.h"
 322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #include "core_armv8mml.h"
 325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ARM_MATH_DSP
 327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #include "string.h"
 334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #include "math.h"
 335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifdef   __cplusplus
 336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** extern "C"
 337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** {
 338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q31          (0x100)
 346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q15          0x5
 347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define INDEX_MASK         0x0000003F
 348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef PI
 349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define PI               3.14159265358979f
 350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Macro for Unaligned Support
 372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if defined  (__GNUC__)
 377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #else
 379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __align(4)
 380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef enum
 388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   } arm_status;
 397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int8_t q7_t;
 402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int16_t q15_t;
 407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int32_t q31_t;
 412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef int64_t q63_t;
 417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef float float32_t;
 422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   typedef double float64_t;
 427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if   defined ( __CC_ARM )
 432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __GNUC__ )
 442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __ICCARM__ )
 447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __TI_ARM__ )
 452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __CSMC__ )
 457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #elif defined ( __TASKING__ )
 462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_INLINE
 465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #error Unknown compiler
 468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    /**
 489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #else
 498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q31 to Q7 values.
 529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x)
 532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t x)
 542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q63_t x,
 553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t y)
 554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
 557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /*
 560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #define __CLZ __clz
 562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   #endif
 563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****  */
 564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t data);
 568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t data)
 571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t count = 0;
 573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t mask = 0x80000000;
 574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     while ((data & mask) == 0)
 576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       count += 1u;
 578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       mask = mask >> 1u;
 579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (count);
 582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** #endif
 584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   /**
 586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****    */
 588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t in,
 591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * dst,
 592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   q31_t * pRecipTable)
 593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   {
 594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     q31_t out;
 595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t tempVal;
 596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t index, i;
 597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     uint32_t signBits;
 598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     if (in > 0)
 427              	 .loc 2 599 0
 428 042a D7F84031 	 ldr r3,[r7,#320]
 429 042e 002B     	 cmp r3,#0
 430 0430 07DD     	 ble .L7
 600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 431              	 .loc 2 601 0
 432 0432 D7F84031 	 ldr r3,[r7,#320]
 433 0436 B3FA83F3 	 clz r3,r3
 434 043a 013B     	 subs r3,r3,#1
 435 043c C7F83431 	 str r3,[r7,#308]
 436 0440 07E0     	 b .L8
 437              	.L7:
 602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     else
 604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 438              	 .loc 2 605 0
 439 0442 D7F84031 	 ldr r3,[r7,#320]
 440 0446 5B42     	 negs r3,r3
 441 0448 B3FA83F3 	 clz r3,r3
 442 044c 013B     	 subs r3,r3,#1
 443 044e C7F83431 	 str r3,[r7,#308]
 444              	.L8:
 606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* Convert input sample to 1.31 format */
 609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     in = (in << signBits);
 445              	 .loc 2 609 0
 446 0452 D7F83421 	 ldr r2,[r7,#308]
 447 0456 D7F84031 	 ldr r3,[r7,#320]
 448 045a 9340     	 lsls r3,r3,r2
 449 045c C7F84031 	 str r3,[r7,#320]
 610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* calculation of index for initial approximated Val */
 612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (uint32_t)(in >> 24);
 450              	 .loc 2 612 0
 451 0460 D7F84031 	 ldr r3,[r7,#320]
 452 0464 1B16     	 asrs r3,r3,#24
 453 0466 C7F83031 	 str r3,[r7,#304]
 613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     index = (index & INDEX_MASK);
 454              	 .loc 2 613 0
 455 046a D7F83031 	 ldr r3,[r7,#304]
 456 046e 03F03F03 	 and r3,r3,#63
 457 0472 C7F83031 	 str r3,[r7,#304]
 614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* 1.31 with exp 1 */
 616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     out = pRecipTable[index];
 458              	 .loc 2 616 0
 459 0476 D7F83031 	 ldr r3,[r7,#304]
 460 047a 9A00     	 lsls r2,r3,#2
 461 047c D7F83831 	 ldr r3,[r7,#312]
 462 0480 1344     	 add r3,r3,r2
 463 0482 1B68     	 ldr r3,[r3]
 464 0484 C7F82C31 	 str r3,[r7,#300]
 617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* calculation of reciprocal value */
 619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* running approximation for two iterations */
 620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     for (i = 0u; i < 2u; i++)
 465              	 .loc 2 620 0
 466 0488 0023     	 movs r3,#0
 467 048a C7F82831 	 str r3,[r7,#296]
 468 048e 6AE0     	 b .L9
 469              	.L13:
 621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 470              	 .loc 2 622 0
 471 0490 D7F84031 	 ldr r3,[r7,#320]
 472 0494 1846     	 mov r0,r3
 473 0496 4FEAE071 	 asr r1,r0,#31
 474 049a D7F82C31 	 ldr r3,[r7,#300]
 475 049e 1A46     	 mov r2,r3
 476 04a0 4FEAE273 	 asr r3,r2,#31
 477 04a4 02FB01F5 	 mul r5,r2,r1
 478 04a8 00FB03F4 	 mul r4,r0,r3
 479 04ac 2C44     	 add r4,r4,r5
 480 04ae A0FB0223 	 umull r2,r3,r0,r2
 481 04b2 E118     	 adds r1,r4,r3
 482 04b4 0B46     	 mov r3,r1
 483 04b6 D10F     	 lsrs r1,r2,#31
 484 04b8 C7F8C010 	 str r1,[r7,#192]
 485 04bc D7F8C010 	 ldr r1,[r7,#192]
 486 04c0 41EA4301 	 orr r1,r1,r3,lsl#1
 487 04c4 C7F8C010 	 str r1,[r7,#192]
 488 04c8 DB17     	 asrs r3,r3,#31
 489 04ca C7F8C430 	 str r3,[r7,#196]
 490 04ce D7F8C030 	 ldr r3,[r7,#192]
 491 04d2 C7F82431 	 str r3,[r7,#292]
 623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 492              	 .loc 2 623 0
 493 04d6 D7F82421 	 ldr r2,[r7,#292]
 494 04da 6FF00043 	 mvn r3,#-2147483648
 495 04de 9B1A     	 subs r3,r3,r2
 496 04e0 C7F82431 	 str r3,[r7,#292]
 624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /*      1.31 with exp 1 */
 625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 497              	 .loc 2 626 0
 498 04e4 D7F82C31 	 ldr r3,[r7,#300]
 499 04e8 1846     	 mov r0,r3
 500 04ea 4FEAE071 	 asr r1,r0,#31
 501 04ee D7F82431 	 ldr r3,[r7,#292]
 502 04f2 1A46     	 mov r2,r3
 503 04f4 4FF00003 	 mov r3,#0
 504 04f8 02FB01F5 	 mul r5,r2,r1
 505 04fc 00FB03F4 	 mul r4,r0,r3
 506 0500 2C44     	 add r4,r4,r5
 507 0502 A0FB0223 	 umull r2,r3,r0,r2
 508 0506 E118     	 adds r1,r4,r3
 509 0508 0B46     	 mov r3,r1
 510 050a 4FEA927A 	 lsr r10,r2,#30
 511 050e 4AEA830A 	 orr r10,r10,r3,lsl#2
 512 0512 4FEAA37B 	 asr fp,r3,#30
 513 0516 07F58C73 	 add r3,r7,#280
 514 051a C3E900AB 	 strd r10,[r3]
 515              	.LBB22:
 516              	.LBB23:
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 517              	 .loc 2 513 0
 518 051e 07F58C73 	 add r3,r7,#280
 519 0522 D3E90023 	 ldrd r2,[r3]
 520 0526 1900     	 movs r1,r3
 521 0528 B966     	 str r1,[r7,#104]
 522 052a DB17     	 asrs r3,r3,#31
 523 052c FB66     	 str r3,[r7,#108]
 524 052e BA6E     	 ldr r2,[r7,#104]
 525 0530 D7F81831 	 ldr r3,[r7,#280]
 526 0534 DB17     	 asrs r3,r3,#31
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 527              	 .loc 2 514 0
 528 0536 9A42     	 cmp r2,r3
 529 0538 0CD0     	 beq .L10
 530 053a 07F58C73 	 add r3,r7,#280
 531 053e D3E90023 	 ldrd r2,[r3]
 532 0542 D917     	 asrs r1,r3,#31
 533 0544 3966     	 str r1,[r7,#96]
 534 0546 DB17     	 asrs r3,r3,#31
 535 0548 7B66     	 str r3,[r7,#100]
 536 054a 3B6E     	 ldr r3,[r7,#96]
 537 054c 83F00043 	 eor r3,r3,#-2147483648
 538 0550 DB43     	 mvns r3,r3
 539 0552 01E0     	 b .L43
 540              	.L10:
 541 0554 D7F81831 	 ldr r3,[r7,#280]
 542              	.L43:
 543              	.LBE23:
 544              	.LBE22:
 545              	 .loc 2 626 0
 546 0558 C7F82C31 	 str r3,[r7,#300]
 620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     {
 547              	 .loc 2 620 0
 548 055c D7F82831 	 ldr r3,[r7,#296]
 549 0560 0133     	 adds r3,r3,#1
 550 0562 C7F82831 	 str r3,[r7,#296]
 551              	.L9:
 552 0566 D7F82831 	 ldr r3,[r7,#296]
 553 056a 012B     	 cmp r3,#1
 554 056c 90D9     	 bls .L13
 627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     }
 628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* write output */
 630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     *dst = out;
 555              	 .loc 2 630 0
 556 056e D7F83C21 	 ldr r2,[r7,#316]
 557 0572 D7F82C31 	 ldr r3,[r7,#300]
 558 0576 1360     	 str r3,[r2]
 631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h **** 
 632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     /* return num of signbits of out = 1/in value */
 633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****     return (signBits + 1u);
 559              	 .loc 2 633 0
 560 0578 D7F83431 	 ldr r3,[r7,#308]
 561 057c 0133     	 adds r3,r3,#1
 562              	.LBE21:
 563              	.LBE20:
 564              	 .loc 1 179 0
 565 057e C7F84C31 	 str r3,[r7,#332]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****                               &oneByEnergy, &S->recipTable[0]);
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calculation of product of (e * mu) */
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     errorXmu = (q31_t) (((q63_t) e * mu) >> 31);
 566              	 .loc 1 183 0
 567 0582 D7F86C31 	 ldr r3,[r7,#364]
 568 0586 1846     	 mov r0,r3
 569 0588 4FEAE071 	 asr r1,r0,#31
 570 058c D7F87431 	 ldr r3,[r7,#372]
 571 0590 1A46     	 mov r2,r3
 572 0592 4FEAE273 	 asr r3,r2,#31
 573 0596 02FB01F5 	 mul r5,r2,r1
 574 059a 00FB03F4 	 mul r4,r0,r3
 575 059e 2C44     	 add r4,r4,r5
 576 05a0 A0FB0223 	 umull r2,r3,r0,r2
 577 05a4 E118     	 adds r1,r4,r3
 578 05a6 0B46     	 mov r3,r1
 579 05a8 D10F     	 lsrs r1,r2,#31
 580 05aa C7F8C810 	 str r1,[r7,#200]
 581 05ae D7F8C810 	 ldr r1,[r7,#200]
 582 05b2 41EA4301 	 orr r1,r1,r3,lsl#1
 583 05b6 C7F8C810 	 str r1,[r7,#200]
 584 05ba DB17     	 asrs r3,r3,#31
 585 05bc C7F8CC30 	 str r3,[r7,#204]
 586 05c0 D7F8C830 	 ldr r3,[r7,#200]
 587 05c4 C7F84831 	 str r3,[r7,#328]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Weighting factor for the normalized version */
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     w = clip_q63_to_q31(((q63_t) errorXmu * oneByEnergy) >> (31 - postShift));
 588              	 .loc 1 186 0
 589 05c8 D7F84831 	 ldr r3,[r7,#328]
 590 05cc 1846     	 mov r0,r3
 591 05ce 4FEAE071 	 asr r1,r0,#31
 592 05d2 D7F8E430 	 ldr r3,[r7,#228]
 593 05d6 1A46     	 mov r2,r3
 594 05d8 4FEAE273 	 asr r3,r2,#31
 595 05dc 02FB01F5 	 mul r5,r2,r1
 596 05e0 00FB03F4 	 mul r4,r0,r3
 597 05e4 2C44     	 add r4,r4,r5
 598 05e6 A0FB0201 	 umull r0,r1,r0,r2
 599 05ea 6318     	 adds r3,r4,r1
 600 05ec 1946     	 mov r1,r3
 601 05ee D7F84C31 	 ldr r3,[r7,#332]
 602 05f2 C3F11F04 	 rsb r4,r3,#31
 603 05f6 C4F12003 	 rsb r3,r4,#32
 604 05fa B4F12002 	 subs r2,r4,#32
 605 05fe 20FA04F8 	 lsr r8,r0,r4
 606 0602 01FA03F3 	 lsl r3,r1,r3
 607 0606 48EA0308 	 orr r8,r8,r3
 608 060a 03D4     	 bmi .L15
 609 060c 41FA02F2 	 asr r2,r1,r2
 610 0610 48EA0208 	 orr r8,r8,r2
 611              	.L15:
 612 0614 41FA04F9 	 asr r9,r1,r4
 613 0618 07F58873 	 add r3,r7,#272
 614 061c C3E90089 	 strd r8,[r3]
 615              	.LBB24:
 616              	.LBB25:
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 617              	 .loc 2 513 0
 618 0620 07F58873 	 add r3,r7,#272
 619 0624 D3E90023 	 ldrd r2,[r3]
 620 0628 1900     	 movs r1,r3
 621 062a B965     	 str r1,[r7,#88]
 622 062c DB17     	 asrs r3,r3,#31
 623 062e FB65     	 str r3,[r7,#92]
 624 0630 BA6D     	 ldr r2,[r7,#88]
 625 0632 D7F81031 	 ldr r3,[r7,#272]
 626 0636 DB17     	 asrs r3,r3,#31
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 627              	 .loc 2 514 0
 628 0638 9A42     	 cmp r2,r3
 629 063a 0CD0     	 beq .L16
 630 063c 07F58873 	 add r3,r7,#272
 631 0640 D3E90023 	 ldrd r2,[r3]
 632 0644 D917     	 asrs r1,r3,#31
 633 0646 3965     	 str r1,[r7,#80]
 634 0648 DB17     	 asrs r3,r3,#31
 635 064a 7B65     	 str r3,[r7,#84]
 636 064c 3B6D     	 ldr r3,[r7,#80]
 637 064e 83F00043 	 eor r3,r3,#-2147483648
 638 0652 DB43     	 mvns r3,r3
 639 0654 01E0     	 b .L18
 640              	.L16:
 641 0656 D7F81031 	 ldr r3,[r7,#272]
 642              	.L18:
 643              	.LBE25:
 644              	.LBE24:
 645              	 .loc 1 186 0
 646 065a C7F86431 	 str r3,[r7,#356]
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize pState pointer */
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     px = pState;
 647              	 .loc 1 189 0
 648 065e D7F8A431 	 ldr r3,[r7,#420]
 649 0662 C7F89C31 	 str r3,[r7,#412]
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize coeff pointer */
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     pb = (pCoeffs);
 650              	 .loc 1 192 0
 651 0666 D7F87831 	 ldr r3,[r7,#376]
 652 066a C7F89831 	 str r3,[r7,#408]
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Loop unrolling.  Process 4 taps at a time. */
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps >> 2;
 653              	 .loc 1 195 0
 654 066e D7F87031 	 ldr r3,[r7,#368]
 655 0672 9B08     	 lsrs r3,r3,#2
 656 0674 C7F89431 	 str r3,[r7,#404]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Update filter coefficients */
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     while (tapCnt > 0u)
 657              	 .loc 1 198 0
 658 0678 59E1     	 b .L19
 659              	.L32:
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     {
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Perform the multiply-accumulate */
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* coef is in 2.30 format */
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 660              	 .loc 1 203 0
 661 067a D7F86431 	 ldr r3,[r7,#356]
 662 067e 1C46     	 mov r4,r3
 663 0680 4FEAE475 	 asr r5,r4,#31
 664 0684 D7F89C21 	 ldr r2,[r7,#412]
 665 0688 131D     	 adds r3,r2,#4
 666 068a C7F89C31 	 str r3,[r7,#412]
 667 068e 1368     	 ldr r3,[r2]
 668 0690 1A46     	 mov r2,r3
 669 0692 4FEAE273 	 asr r3,r2,#31
 670 0696 02FB05F0 	 mul r0,r2,r5
 671 069a 04FB03F1 	 mul r1,r4,r3
 672 069e 0144     	 add r1,r1,r0
 673 06a0 A4FB0223 	 umull r2,r3,r4,r2
 674 06a4 1944     	 add r1,r1,r3
 675 06a6 0B46     	 mov r3,r1
 676 06a8 1900     	 movs r1,r3
 677 06aa C7F89010 	 str r1,[r7,#144]
 678 06ae DB17     	 asrs r3,r3,#31
 679 06b0 C7F89430 	 str r3,[r7,#148]
 680 06b4 D7F89030 	 ldr r3,[r7,#144]
 681 06b8 C7F84431 	 str r3,[r7,#324]
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* get coef in 1.31 format by left shifting */
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 682              	 .loc 1 205 0
 683 06bc D7F89831 	 ldr r3,[r7,#408]
 684 06c0 1B68     	 ldr r3,[r3]
 685 06c2 1846     	 mov r0,r3
 686 06c4 4FEAE071 	 asr r1,r0,#31
 687 06c8 D7F84431 	 ldr r3,[r7,#324]
 688 06cc 5B00     	 lsls r3,r3,#1
 689 06ce 1A46     	 mov r2,r3
 690 06d0 4FEAE273 	 asr r3,r2,#31
 691 06d4 1218     	 adds r2,r2,r0
 692 06d6 43EB0103 	 adc r3,r3,r1
 693 06da 07F58471 	 add r1,r7,#264
 694 06de C1E90023 	 strd r2,[r1]
 695              	.LBB26:
 696              	.LBB27:
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 697              	 .loc 2 513 0
 698 06e2 07F58473 	 add r3,r7,#264
 699 06e6 D3E90023 	 ldrd r2,[r3]
 700 06ea 1900     	 movs r1,r3
 701 06ec B964     	 str r1,[r7,#72]
 702 06ee DB17     	 asrs r3,r3,#31
 703 06f0 FB64     	 str r3,[r7,#76]
 704 06f2 BA6C     	 ldr r2,[r7,#72]
 705 06f4 D7F80831 	 ldr r3,[r7,#264]
 706 06f8 DB17     	 asrs r3,r3,#31
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 707              	 .loc 2 514 0
 708 06fa 9A42     	 cmp r2,r3
 709 06fc 0CD0     	 beq .L20
 710 06fe 07F58473 	 add r3,r7,#264
 711 0702 D3E90023 	 ldrd r2,[r3]
 712 0706 D917     	 asrs r1,r3,#31
 713 0708 3964     	 str r1,[r7,#64]
 714 070a DB17     	 asrs r3,r3,#31
 715 070c 7B64     	 str r3,[r7,#68]
 716 070e 3B6C     	 ldr r3,[r7,#64]
 717 0710 83F00042 	 eor r2,r3,#-2147483648
 718 0714 D243     	 mvns r2,r2
 719 0716 01E0     	 b .L22
 720              	.L20:
 721 0718 D7F80821 	 ldr r2,[r7,#264]
 722              	.L22:
 723              	.LBE27:
 724              	.LBE26:
 725              	 .loc 1 205 0
 726 071c D7F89831 	 ldr r3,[r7,#408]
 727 0720 1A60     	 str r2,[r3]
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* update coefficient buffer to next coefficient */
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 728              	 .loc 1 207 0
 729 0722 D7F89831 	 ldr r3,[r7,#408]
 730 0726 0433     	 adds r3,r3,#4
 731 0728 C7F89831 	 str r3,[r7,#408]
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 732              	 .loc 1 209 0
 733 072c D7F86431 	 ldr r3,[r7,#356]
 734 0730 1C46     	 mov r4,r3
 735 0732 4FEAE475 	 asr r5,r4,#31
 736 0736 D7F89C21 	 ldr r2,[r7,#412]
 737 073a 131D     	 adds r3,r2,#4
 738 073c C7F89C31 	 str r3,[r7,#412]
 739 0740 1368     	 ldr r3,[r2]
 740 0742 1A46     	 mov r2,r3
 741 0744 4FEAE273 	 asr r3,r2,#31
 742 0748 02FB05F0 	 mul r0,r2,r5
 743 074c 04FB03F1 	 mul r1,r4,r3
 744 0750 0144     	 add r1,r1,r0
 745 0752 A4FB0223 	 umull r2,r3,r4,r2
 746 0756 1944     	 add r1,r1,r3
 747 0758 0B46     	 mov r3,r1
 748 075a 1900     	 movs r1,r3
 749 075c C7F88810 	 str r1,[r7,#136]
 750 0760 DB17     	 asrs r3,r3,#31
 751 0762 C7F88C30 	 str r3,[r7,#140]
 752 0766 D7F88830 	 ldr r3,[r7,#136]
 753 076a C7F84431 	 str r3,[r7,#324]
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 754              	 .loc 1 210 0
 755 076e D7F89831 	 ldr r3,[r7,#408]
 756 0772 1B68     	 ldr r3,[r3]
 757 0774 1846     	 mov r0,r3
 758 0776 4FEAE071 	 asr r1,r0,#31
 759 077a D7F84431 	 ldr r3,[r7,#324]
 760 077e 5B00     	 lsls r3,r3,#1
 761 0780 1A46     	 mov r2,r3
 762 0782 4FEAE273 	 asr r3,r2,#31
 763 0786 1218     	 adds r2,r2,r0
 764 0788 43EB0103 	 adc r3,r3,r1
 765 078c 07F58071 	 add r1,r7,#256
 766 0790 C1E90023 	 strd r2,[r1]
 767              	.LBB28:
 768              	.LBB29:
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 769              	 .loc 2 513 0
 770 0794 07F58073 	 add r3,r7,#256
 771 0798 D3E90023 	 ldrd r2,[r3]
 772 079c 1900     	 movs r1,r3
 773 079e B963     	 str r1,[r7,#56]
 774 07a0 DB17     	 asrs r3,r3,#31
 775 07a2 FB63     	 str r3,[r7,#60]
 776 07a4 BA6B     	 ldr r2,[r7,#56]
 777 07a6 D7F80031 	 ldr r3,[r7,#256]
 778 07aa DB17     	 asrs r3,r3,#31
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 779              	 .loc 2 514 0
 780 07ac 9A42     	 cmp r2,r3
 781 07ae 0CD0     	 beq .L23
 782 07b0 07F58073 	 add r3,r7,#256
 783 07b4 D3E90023 	 ldrd r2,[r3]
 784 07b8 D917     	 asrs r1,r3,#31
 785 07ba 3963     	 str r1,[r7,#48]
 786 07bc DB17     	 asrs r3,r3,#31
 787 07be 7B63     	 str r3,[r7,#52]
 788 07c0 3B6B     	 ldr r3,[r7,#48]
 789 07c2 83F00042 	 eor r2,r3,#-2147483648
 790 07c6 D243     	 mvns r2,r2
 791 07c8 01E0     	 b .L25
 792              	.L23:
 793 07ca D7F80021 	 ldr r2,[r7,#256]
 794              	.L25:
 795              	.LBE29:
 796              	.LBE28:
 797              	 .loc 1 210 0
 798 07ce D7F89831 	 ldr r3,[r7,#408]
 799 07d2 1A60     	 str r2,[r3]
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 800              	 .loc 1 211 0
 801 07d4 D7F89831 	 ldr r3,[r7,#408]
 802 07d8 0433     	 adds r3,r3,#4
 803 07da C7F89831 	 str r3,[r7,#408]
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 804              	 .loc 1 213 0
 805 07de D7F86431 	 ldr r3,[r7,#356]
 806 07e2 1C46     	 mov r4,r3
 807 07e4 4FEAE475 	 asr r5,r4,#31
 808 07e8 D7F89C21 	 ldr r2,[r7,#412]
 809 07ec 131D     	 adds r3,r2,#4
 810 07ee C7F89C31 	 str r3,[r7,#412]
 811 07f2 1368     	 ldr r3,[r2]
 812 07f4 1A46     	 mov r2,r3
 813 07f6 4FEAE273 	 asr r3,r2,#31
 814 07fa 02FB05F0 	 mul r0,r2,r5
 815 07fe 04FB03F1 	 mul r1,r4,r3
 816 0802 0144     	 add r1,r1,r0
 817 0804 A4FB0223 	 umull r2,r3,r4,r2
 818 0808 1944     	 add r1,r1,r3
 819 080a 0B46     	 mov r3,r1
 820 080c 1900     	 movs r1,r3
 821 080e C7F88010 	 str r1,[r7,#128]
 822 0812 DB17     	 asrs r3,r3,#31
 823 0814 C7F88430 	 str r3,[r7,#132]
 824 0818 D7F88030 	 ldr r3,[r7,#128]
 825 081c C7F84431 	 str r3,[r7,#324]
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 826              	 .loc 1 214 0
 827 0820 D7F89831 	 ldr r3,[r7,#408]
 828 0824 1B68     	 ldr r3,[r3]
 829 0826 1846     	 mov r0,r3
 830 0828 4FEAE071 	 asr r1,r0,#31
 831 082c D7F84431 	 ldr r3,[r7,#324]
 832 0830 5B00     	 lsls r3,r3,#1
 833 0832 1A46     	 mov r2,r3
 834 0834 4FEAE273 	 asr r3,r2,#31
 835 0838 1218     	 adds r2,r2,r0
 836 083a 43EB0103 	 adc r3,r3,r1
 837 083e C7E93E23 	 strd r2,[r7,#248]
 838              	.LBB30:
 839              	.LBB31:
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 840              	 .loc 2 513 0
 841 0842 D7E93E23 	 ldrd r2,[r7,#248]
 842 0846 1900     	 movs r1,r3
 843 0848 B962     	 str r1,[r7,#40]
 844 084a DB17     	 asrs r3,r3,#31
 845 084c FB62     	 str r3,[r7,#44]
 846 084e BA6A     	 ldr r2,[r7,#40]
 847 0850 D7F8F830 	 ldr r3,[r7,#248]
 848 0854 DB17     	 asrs r3,r3,#31
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 849              	 .loc 2 514 0
 850 0856 9A42     	 cmp r2,r3
 851 0858 0AD0     	 beq .L26
 852 085a D7E93E23 	 ldrd r2,[r7,#248]
 853 085e D917     	 asrs r1,r3,#31
 854 0860 3962     	 str r1,[r7,#32]
 855 0862 DB17     	 asrs r3,r3,#31
 856 0864 7B62     	 str r3,[r7,#36]
 857 0866 3B6A     	 ldr r3,[r7,#32]
 858 0868 83F00042 	 eor r2,r3,#-2147483648
 859 086c D243     	 mvns r2,r2
 860 086e 01E0     	 b .L28
 861              	.L26:
 862 0870 D7F8F820 	 ldr r2,[r7,#248]
 863              	.L28:
 864              	.LBE31:
 865              	.LBE30:
 866              	 .loc 1 214 0
 867 0874 D7F89831 	 ldr r3,[r7,#408]
 868 0878 1A60     	 str r2,[r3]
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 869              	 .loc 1 215 0
 870 087a D7F89831 	 ldr r3,[r7,#408]
 871 087e 0433     	 adds r3,r3,#4
 872 0880 C7F89831 	 str r3,[r7,#408]
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 873              	 .loc 1 217 0
 874 0884 D7F86431 	 ldr r3,[r7,#356]
 875 0888 1C46     	 mov r4,r3
 876 088a 4FEAE475 	 asr r5,r4,#31
 877 088e D7F89C21 	 ldr r2,[r7,#412]
 878 0892 131D     	 adds r3,r2,#4
 879 0894 C7F89C31 	 str r3,[r7,#412]
 880 0898 1368     	 ldr r3,[r2]
 881 089a 1A46     	 mov r2,r3
 882 089c 4FEAE273 	 asr r3,r2,#31
 883 08a0 02FB05F0 	 mul r0,r2,r5
 884 08a4 04FB03F1 	 mul r1,r4,r3
 885 08a8 0144     	 add r1,r1,r0
 886 08aa A4FB0223 	 umull r2,r3,r4,r2
 887 08ae 1944     	 add r1,r1,r3
 888 08b0 0B46     	 mov r3,r1
 889 08b2 1900     	 movs r1,r3
 890 08b4 B967     	 str r1,[r7,#120]
 891 08b6 DB17     	 asrs r3,r3,#31
 892 08b8 FB67     	 str r3,[r7,#124]
 893 08ba BB6F     	 ldr r3,[r7,#120]
 894 08bc C7F84431 	 str r3,[r7,#324]
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 895              	 .loc 1 218 0
 896 08c0 D7F89831 	 ldr r3,[r7,#408]
 897 08c4 1B68     	 ldr r3,[r3]
 898 08c6 1846     	 mov r0,r3
 899 08c8 4FEAE071 	 asr r1,r0,#31
 900 08cc D7F84431 	 ldr r3,[r7,#324]
 901 08d0 5B00     	 lsls r3,r3,#1
 902 08d2 1A46     	 mov r2,r3
 903 08d4 4FEAE273 	 asr r3,r2,#31
 904 08d8 1218     	 adds r2,r2,r0
 905 08da 43EB0103 	 adc r3,r3,r1
 906 08de C7E93C23 	 strd r2,[r7,#240]
 907              	.LBB32:
 908              	.LBB33:
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 909              	 .loc 2 513 0
 910 08e2 D7E93C23 	 ldrd r2,[r7,#240]
 911 08e6 1900     	 movs r1,r3
 912 08e8 B961     	 str r1,[r7,#24]
 913 08ea DB17     	 asrs r3,r3,#31
 914 08ec FB61     	 str r3,[r7,#28]
 915 08ee BA69     	 ldr r2,[r7,#24]
 916 08f0 D7F8F030 	 ldr r3,[r7,#240]
 917 08f4 DB17     	 asrs r3,r3,#31
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 918              	 .loc 2 514 0
 919 08f6 9A42     	 cmp r2,r3
 920 08f8 0AD0     	 beq .L29
 921 08fa D7E93C23 	 ldrd r2,[r7,#240]
 922 08fe D917     	 asrs r1,r3,#31
 923 0900 3961     	 str r1,[r7,#16]
 924 0902 DB17     	 asrs r3,r3,#31
 925 0904 7B61     	 str r3,[r7,#20]
 926 0906 3B69     	 ldr r3,[r7,#16]
 927 0908 83F00042 	 eor r2,r3,#-2147483648
 928 090c D243     	 mvns r2,r2
 929 090e 01E0     	 b .L44
 930              	.L29:
 931 0910 D7F8F020 	 ldr r2,[r7,#240]
 932              	.L44:
 933              	.LBE33:
 934              	.LBE32:
 935              	 .loc 1 218 0
 936 0914 D7F89831 	 ldr r3,[r7,#408]
 937 0918 1A60     	 str r2,[r3]
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 938              	 .loc 1 219 0
 939 091a D7F89831 	 ldr r3,[r7,#408]
 940 091e 0433     	 adds r3,r3,#4
 941 0920 C7F89831 	 str r3,[r7,#408]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Decrement the loop counter */
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       tapCnt--;
 942              	 .loc 1 222 0
 943 0924 D7F89431 	 ldr r3,[r7,#404]
 944 0928 013B     	 subs r3,r3,#1
 945 092a C7F89431 	 str r3,[r7,#404]
 946              	.L19:
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     {
 947              	 .loc 1 198 0
 948 092e D7F89431 	 ldr r3,[r7,#404]
 949 0932 002B     	 cmp r3,#0
 950 0934 7FF4A1AE 	 bne .L32
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     }
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps % 0x4u;
 951              	 .loc 1 226 0
 952 0938 D7F87031 	 ldr r3,[r7,#368]
 953 093c 03F00303 	 and r3,r3,#3
 954 0940 C7F89431 	 str r3,[r7,#404]
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     while (tapCnt > 0u)
 955              	 .loc 1 228 0
 956 0944 54E0     	 b .L33
 957              	.L37:
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     {
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Perform the multiply-accumulate */
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 958              	 .loc 1 231 0
 959 0946 D7F86431 	 ldr r3,[r7,#356]
 960 094a 1C46     	 mov r4,r3
 961 094c 4FEAE475 	 asr r5,r4,#31
 962 0950 D7F89C21 	 ldr r2,[r7,#412]
 963 0954 131D     	 adds r3,r2,#4
 964 0956 C7F89C31 	 str r3,[r7,#412]
 965 095a 1368     	 ldr r3,[r2]
 966 095c 1A46     	 mov r2,r3
 967 095e 4FEAE273 	 asr r3,r2,#31
 968 0962 02FB05F0 	 mul r0,r2,r5
 969 0966 04FB03F1 	 mul r1,r4,r3
 970 096a 0144     	 add r1,r1,r0
 971 096c A4FB0223 	 umull r2,r3,r4,r2
 972 0970 1944     	 add r1,r1,r3
 973 0972 0B46     	 mov r3,r1
 974 0974 1900     	 movs r1,r3
 975 0976 3967     	 str r1,[r7,#112]
 976 0978 DB17     	 asrs r3,r3,#31
 977 097a 7B67     	 str r3,[r7,#116]
 978 097c 3B6F     	 ldr r3,[r7,#112]
 979 097e C7F84431 	 str r3,[r7,#324]
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 980              	 .loc 1 232 0
 981 0982 D7F89831 	 ldr r3,[r7,#408]
 982 0986 1B68     	 ldr r3,[r3]
 983 0988 1846     	 mov r0,r3
 984 098a 4FEAE071 	 asr r1,r0,#31
 985 098e D7F84431 	 ldr r3,[r7,#324]
 986 0992 5B00     	 lsls r3,r3,#1
 987 0994 1A46     	 mov r2,r3
 988 0996 4FEAE273 	 asr r3,r2,#31
 989 099a 1218     	 adds r2,r2,r0
 990 099c 43EB0103 	 adc r3,r3,r1
 991 09a0 C7E93A23 	 strd r2,[r7,#232]
 992              	.LBB34:
 993              	.LBB35:
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 994              	 .loc 2 513 0
 995 09a4 D7E93A23 	 ldrd r2,[r7,#232]
 996 09a8 1900     	 movs r1,r3
 997 09aa B960     	 str r1,[r7,#8]
 998 09ac DB17     	 asrs r3,r3,#31
 999 09ae FB60     	 str r3,[r7,#12]
 1000 09b0 BA68     	 ldr r2,[r7,#8]
 1001 09b2 D7F8E830 	 ldr r3,[r7,#232]
 1002 09b6 DB17     	 asrs r3,r3,#31
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP\arm_math.h ****   }
 1003              	 .loc 2 514 0
 1004 09b8 9A42     	 cmp r2,r3
 1005 09ba 0AD0     	 beq .L34
 1006 09bc D7E93A23 	 ldrd r2,[r7,#232]
 1007 09c0 D917     	 asrs r1,r3,#31
 1008 09c2 3960     	 str r1,[r7]
 1009 09c4 DB17     	 asrs r3,r3,#31
 1010 09c6 7B60     	 str r3,[r7,#4]
 1011 09c8 3B68     	 ldr r3,[r7]
 1012 09ca 83F00042 	 eor r2,r3,#-2147483648
 1013 09ce D243     	 mvns r2,r2
 1014 09d0 01E0     	 b .L45
 1015              	.L34:
 1016 09d2 D7F8E820 	 ldr r2,[r7,#232]
 1017              	.L45:
 1018              	.LBE35:
 1019              	.LBE34:
 1020              	 .loc 1 232 0
 1021 09d6 D7F89831 	 ldr r3,[r7,#408]
 1022 09da 1A60     	 str r2,[r3]
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 1023              	 .loc 1 233 0
 1024 09dc D7F89831 	 ldr r3,[r7,#408]
 1025 09e0 0433     	 adds r3,r3,#4
 1026 09e2 C7F89831 	 str r3,[r7,#408]
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Decrement the loop counter */
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       tapCnt--;
 1027              	 .loc 1 236 0
 1028 09e6 D7F89431 	 ldr r3,[r7,#404]
 1029 09ea 013B     	 subs r3,r3,#1
 1030 09ec C7F89431 	 str r3,[r7,#404]
 1031              	.L33:
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     {
 1032              	 .loc 1 228 0
 1033 09f0 D7F89431 	 ldr r3,[r7,#404]
 1034 09f4 002B     	 cmp r3,#0
 1035 09f6 A6D1     	 bne .L37
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     }
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Read the sample from state buffer */
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     x0 = *pState;
 1036              	 .loc 1 240 0
 1037 09f8 D7F8A431 	 ldr r3,[r7,#420]
 1038 09fc 1B68     	 ldr r3,[r3]
 1039 09fe C7F87C31 	 str r3,[r7,#380]
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Advance state pointer by 1 for the next sample */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     pState = pState + 1;
 1040              	 .loc 1 243 0
 1041 0a02 D7F8A431 	 ldr r3,[r7,#420]
 1042 0a06 0433     	 adds r3,r3,#4
 1043 0a08 C7F8A431 	 str r3,[r7,#420]
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Decrement the loop counter */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     blkCnt--;
 1044              	 .loc 1 246 0
 1045 0a0c D7F89031 	 ldr r3,[r7,#400]
 1046 0a10 013B     	 subs r3,r3,#1
 1047 0a12 C7F89031 	 str r3,[r7,#400]
 1048              	.L2:
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   {
 1049              	 .loc 1 111 0
 1050 0a16 D7F89031 	 ldr r3,[r7,#400]
 1051 0a1a 002B     	 cmp r3,#0
 1052 0a1c 7FF446AB 	 bne .L38
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   }
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Save energy and x0 values for the next frame */
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   S->energy = (q31_t) energy;
 1053              	 .loc 1 250 0
 1054 0a20 D7F88821 	 ldr r2,[r7,#392]
 1055 0a24 D7F8DC30 	 ldr r3,[r7,#220]
 1056 0a28 9A61     	 str r2,[r3,#24]
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   S->x0 = x0;
 1057              	 .loc 1 251 0
 1058 0a2a D7F8DC30 	 ldr r3,[r7,#220]
 1059 0a2e D7F87C21 	 ldr r2,[r7,#380]
 1060 0a32 DA61     	 str r2,[r3,#28]
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Processing is complete. Now copy the last numTaps - 1 samples to the
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****      satrt of the state buffer. This prepares the state buffer for the
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****      next function call. */
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Points to the start of the pState buffer */
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   pStateCurnt = S->pState;
 1061              	 .loc 1 258 0
 1062 0a34 D7F8DC30 	 ldr r3,[r7,#220]
 1063 0a38 5B68     	 ldr r3,[r3,#4]
 1064 0a3a C7F8A031 	 str r3,[r7,#416]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Loop unrolling for (numTaps - 1u) samples copy */
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   tapCnt = (numTaps - 1u) >> 2u;
 1065              	 .loc 1 261 0
 1066 0a3e D7F87031 	 ldr r3,[r7,#368]
 1067 0a42 013B     	 subs r3,r3,#1
 1068 0a44 9B08     	 lsrs r3,r3,#2
 1069 0a46 C7F89431 	 str r3,[r7,#404]
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* copy data */
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   while (tapCnt > 0u)
 1070              	 .loc 1 264 0
 1071 0a4a 34E0     	 b .L39
 1072              	.L40:
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   {
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 1073              	 .loc 1 266 0
 1074 0a4c D7F8A031 	 ldr r3,[r7,#416]
 1075 0a50 1A1D     	 adds r2,r3,#4
 1076 0a52 C7F8A021 	 str r2,[r7,#416]
 1077 0a56 D7F8A421 	 ldr r2,[r7,#420]
 1078 0a5a 111D     	 adds r1,r2,#4
 1079 0a5c C7F8A411 	 str r1,[r7,#420]
 1080 0a60 1268     	 ldr r2,[r2]
 1081 0a62 1A60     	 str r2,[r3]
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 1082              	 .loc 1 267 0
 1083 0a64 D7F8A031 	 ldr r3,[r7,#416]
 1084 0a68 1A1D     	 adds r2,r3,#4
 1085 0a6a C7F8A021 	 str r2,[r7,#416]
 1086 0a6e D7F8A421 	 ldr r2,[r7,#420]
 1087 0a72 111D     	 adds r1,r2,#4
 1088 0a74 C7F8A411 	 str r1,[r7,#420]
 1089 0a78 1268     	 ldr r2,[r2]
 1090 0a7a 1A60     	 str r2,[r3]
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 1091              	 .loc 1 268 0
 1092 0a7c D7F8A031 	 ldr r3,[r7,#416]
 1093 0a80 1A1D     	 adds r2,r3,#4
 1094 0a82 C7F8A021 	 str r2,[r7,#416]
 1095 0a86 D7F8A421 	 ldr r2,[r7,#420]
 1096 0a8a 111D     	 adds r1,r2,#4
 1097 0a8c C7F8A411 	 str r1,[r7,#420]
 1098 0a90 1268     	 ldr r2,[r2]
 1099 0a92 1A60     	 str r2,[r3]
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 1100              	 .loc 1 269 0
 1101 0a94 D7F8A031 	 ldr r3,[r7,#416]
 1102 0a98 1A1D     	 adds r2,r3,#4
 1103 0a9a C7F8A021 	 str r2,[r7,#416]
 1104 0a9e D7F8A421 	 ldr r2,[r7,#420]
 1105 0aa2 111D     	 adds r1,r2,#4
 1106 0aa4 C7F8A411 	 str r1,[r7,#420]
 1107 0aa8 1268     	 ldr r2,[r2]
 1108 0aaa 1A60     	 str r2,[r3]
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Decrement the loop counter */
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt--;
 1109              	 .loc 1 272 0
 1110 0aac D7F89431 	 ldr r3,[r7,#404]
 1111 0ab0 013B     	 subs r3,r3,#1
 1112 0ab2 C7F89431 	 str r3,[r7,#404]
 1113              	.L39:
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   {
 1114              	 .loc 1 264 0
 1115 0ab6 D7F89431 	 ldr r3,[r7,#404]
 1116 0aba 002B     	 cmp r3,#0
 1117 0abc C6D1     	 bne .L40
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   }
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Calculate remaining number of copies */
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   tapCnt = (numTaps - 1u) % 0x4u;
 1118              	 .loc 1 276 0
 1119 0abe D7F87031 	 ldr r3,[r7,#368]
 1120 0ac2 013B     	 subs r3,r3,#1
 1121 0ac4 03F00303 	 and r3,r3,#3
 1122 0ac8 C7F89431 	 str r3,[r7,#404]
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Copy the remaining q31_t data */
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   while (tapCnt > 0u)
 1123              	 .loc 1 279 0
 1124 0acc 10E0     	 b .L41
 1125              	.L42:
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   {
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 1126              	 .loc 1 281 0
 1127 0ace D7F8A031 	 ldr r3,[r7,#416]
 1128 0ad2 1A1D     	 adds r2,r3,#4
 1129 0ad4 C7F8A021 	 str r2,[r7,#416]
 1130 0ad8 D7F8A421 	 ldr r2,[r7,#420]
 1131 0adc 111D     	 adds r1,r2,#4
 1132 0ade C7F8A411 	 str r1,[r7,#420]
 1133 0ae2 1268     	 ldr r2,[r2]
 1134 0ae4 1A60     	 str r2,[r3]
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Decrement the loop counter */
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt--;
 1135              	 .loc 1 284 0
 1136 0ae6 D7F89431 	 ldr r3,[r7,#404]
 1137 0aea 013B     	 subs r3,r3,#1
 1138 0aec C7F89431 	 str r3,[r7,#404]
 1139              	.L41:
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   {
 1140              	 .loc 1 279 0
 1141 0af0 D7F89431 	 ldr r3,[r7,#404]
 1142 0af4 002B     	 cmp r3,#0
 1143 0af6 EAD1     	 bne .L42
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   }
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** #else
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Run the below code for Cortex-M0 */
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   while (blkCnt > 0u)
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   {
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Copy the new input sample into the state buffer */
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pSrc;
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize pState pointer */
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     px = pState;
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize pCoeffs pointer */
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     pb = pCoeffs;
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Read the sample from input buffer */
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     in = *pSrc++;
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Update the energy calculation */
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     energy =
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       (q31_t) ((((q63_t) energy << 32) - (((q63_t) x0 * x0) << 1)) >> 32);
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     energy = (q31_t) (((((q63_t) in * in) << 1) + (energy << 32)) >> 32);
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Set the accumulator to zero */
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     acc = 0;
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Loop over numTaps number of values */
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps;
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     while (tapCnt > 0u)
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     {
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Perform the multiply-accumulate */
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Decrement the loop counter */
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       tapCnt--;
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     }
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Converting the result to 1.31 format */
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Converting the result to 1.31 format */
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calc lower part of acc */
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     acc_l = acc & 0xffffffff;
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calc upper part of acc */
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     acc_h = (acc >> 32) & 0xffffffff;
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     acc = (uint32_t) acc_l >> lShift | acc_h << uShift;
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     //acc = (q31_t) (acc >> shift);
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Store the result from accumulator into the destination buffer. */
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pOut++ = (q31_t) acc;
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Compute and store error */
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     d = *pRef++;
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     e = d - (q31_t) acc;
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pErr++ = e;
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calculates the reciprocal of energy */
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     postShift =
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       arm_recip_q31(energy + DELTA_Q31, &oneByEnergy, &S->recipTable[0]);
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calculation of product of (e * mu) */
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     errorXmu = (q31_t) (((q63_t) e * mu) >> 31);
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Weighting factor for the normalized version */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     w = clip_q63_to_q31(((q63_t) errorXmu * oneByEnergy) >> (31 - postShift));
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize pState pointer */
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     px = pState;
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize coeff pointer */
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     pb = (pCoeffs);
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Loop over numTaps number of values */
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps;
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     while (tapCnt > 0u)
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     {
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Perform the multiply-accumulate */
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* coef is in 2.30 format */
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* get coef in 1.31 format by left shifting */
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* update coefficient buffer to next coefficient */
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       /* Decrement the loop counter */
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****       tapCnt--;
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     }
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Read the sample from state buffer */
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     x0 = *pState;
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Advance state pointer by 1 for the next sample */
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     pState = pState + 1;
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Decrement the loop counter */
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     blkCnt--;
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   }
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Save energy and x0 values for the next frame */
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   S->energy = (q31_t) energy;
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   S->x0 = x0;
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Processing is complete. Now copy the last numTaps - 1 samples to the
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****      start of the state buffer. This prepares the state buffer for the
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****      next function call. */
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Points to the start of the pState buffer */
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   pStateCurnt = S->pState;
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Loop for (numTaps - 1u) samples copy */
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   tapCnt = (numTaps - 1u);
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   /* Copy the remaining q31_t data */
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   while (tapCnt > 0u)
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   {
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     /* Decrement the loop counter */
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt--;
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c ****   }
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** #endif /*   #if defined (ARM_MATH_DSP) */
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** 
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_q31.c **** }
 1144              	 .loc 1 415 0
 1145 0af8 07F5D677 	 add r7,r7,#428
 1146              	.LCFI3:
 1147              	 .cfi_def_cfa_offset 28
 1148 0afc BD46     	 mov sp,r7
 1149              	.LCFI4:
 1150              	 .cfi_def_cfa_register 13
 1151              	 
 1152 0afe BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 1153              	.LCFI5:
 1154              	 .cfi_restore 11
 1155              	 .cfi_restore 10
 1156              	 .cfi_restore 9
 1157              	 .cfi_restore 8
 1158              	 .cfi_restore 7
 1159              	 .cfi_restore 5
 1160              	 .cfi_restore 4
 1161              	 .cfi_def_cfa_offset 0
 1162 0b02 7047     	 bx lr
 1163              	 .cfi_endproc
 1164              	.LFE135:
 1166              	 .text
 1167              	.Letext0:
 1168              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1169              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_lms_norm_q31.c
    {standard input}:20     .text.arm_lms_norm_q31:00000000 $t
    {standard input}:25     .text.arm_lms_norm_q31:00000000 arm_lms_norm_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
