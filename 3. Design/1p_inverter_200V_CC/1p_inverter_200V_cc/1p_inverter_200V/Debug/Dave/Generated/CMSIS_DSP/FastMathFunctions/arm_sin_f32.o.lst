   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_sin_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_sin_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_sin_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_sin_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c"
   1:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Title:        arm_sin_f32.c
   4:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Description:  Fast sine calculation for floating-point values
   5:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** #include "CMSIS_DSP/arm_common_tables.h"
  31:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** #include <math.h>
  32:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  33:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /**
  34:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @ingroup groupFastMath
  35:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  */
  36:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  37:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /**
  38:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @defgroup sin Sine
  39:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *
  40:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Computes the trigonometric sine function using a combination of table lookup
  41:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * and linear interpolation.  There are separate functions for
  42:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Q15, Q31, and floating-point data types.
  43:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * The input to the floating-point version is in radians while the
  44:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * fixed-point Q15 and Q31 have a scaled input with the range
  45:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * [0 +0.9999] mapping to [0 2*pi).  The fixed-point range is chosen so that a
  46:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * value of 2*pi wraps around to 0.
  47:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *
  48:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * The implementation is based on table lookup using 256 values together with linear interpolation.
  49:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * The steps used are:
  50:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *  -# Calculation of the nearest integer table index
  51:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *  -# Compute the fractional portion (fract) of the table index.
  52:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *  -# The final result equals <code>(1.0f-fract)*a + fract*b;</code>
  53:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *
  54:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * where
  55:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * <pre>
  56:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    b=Table[index+0];
  57:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    c=Table[index+1];
  58:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * </pre>
  59:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  */
  60:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  61:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /**
  62:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @addtogroup sin
  63:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @{
  64:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  */
  65:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  66:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /**
  67:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @brief  Fast approximation to the trigonometric sine function for floating-point data.
  68:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @param[in] x input value in radians.
  69:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @return  sin(x).
  70:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  */
  71:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  72:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** float32_t arm_sin_f32(
  73:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   float32_t x)
  74:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** {
  28              	 .loc 1 74 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 8BB0     	 sub sp,sp,#44
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 48
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  75:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   float32_t sinVal, fract, in;                           /* Temporary variables for input, output *
  76:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   uint16_t index;                                        /* Index variable */
  77:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   float32_t a, b;                                        /* Two nearest output values */
  78:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   int32_t n;
  79:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   float32_t findex;
  80:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  81:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Special case for small negative inputs */
  82:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   if ((x < 0.0f) && (x >= -1.9e-7f)) {
  44              	 .loc 1 82 0
  45 0008 D7ED017A 	 flds s15,[r7,#4]
  46 000c F5EEC07A 	 fcmpezs s15
  47 0010 F1EE10FA 	 fmstat
  48 0014 0AD5     	 bpl .L2
  49              	 .loc 1 82 0 is_stmt 0 discriminator 1
  50 0016 D7ED017A 	 flds s15,[r7,#4]
  51 001a 9FED397A 	 flds s14,.L11
  52 001e F4EEC77A 	 fcmpes s15,s14
  53 0022 F1EE10FA 	 fmstat
  54 0026 01DB     	 blt .L2
  83:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****      return x;
  55              	 .loc 1 83 0 is_stmt 1
  56 0028 7B68     	 ldr r3,[r7,#4]
  57 002a 63E0     	 b .L5
  58              	.L2:
  84:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   }
  85:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  86:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* input x is in radians */
  87:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Scale the input to [0 1] range from [0 2*PI] , divide input by 2*pi */
  88:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   in = x * 0.159154943092f;
  59              	 .loc 1 88 0
  60 002c D7ED017A 	 flds s15,[r7,#4]
  61 0030 9FED347A 	 flds s14,.L11+4
  62 0034 67EE877A 	 fmuls s15,s15,s14
  63 0038 C7ED087A 	 fsts s15,[r7,#32]
  89:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  90:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Calculation of floor value of input */
  91:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   n = (int32_t) in;
  64              	 .loc 1 91 0
  65 003c D7ED087A 	 flds s15,[r7,#32]
  66 0040 FDEEE77A 	 ftosizs s15,s15
  67 0044 17EE903A 	 fmrs r3,s15
  68 0048 7B62     	 str r3,[r7,#36]
  92:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  93:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Make negative values towards -infinity */
  94:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   if (x < 0.0f)
  69              	 .loc 1 94 0
  70 004a D7ED017A 	 flds s15,[r7,#4]
  71 004e F5EEC07A 	 fcmpezs s15
  72 0052 F1EE10FA 	 fmstat
  73 0056 02D5     	 bpl .L6
  95:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   {
  96:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****     n--;
  74              	 .loc 1 96 0
  75 0058 7B6A     	 ldr r3,[r7,#36]
  76 005a 013B     	 subs r3,r3,#1
  77 005c 7B62     	 str r3,[r7,#36]
  78              	.L6:
  97:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   }
  98:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  99:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Map input value to [0 1] */
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   in = in - (float32_t) n;
  79              	 .loc 1 100 0
  80 005e 7B6A     	 ldr r3,[r7,#36]
  81 0060 07EE903A 	 fmsr s15,r3
  82 0064 F8EEE77A 	 fsitos s15,s15
  83 0068 97ED087A 	 flds s14,[r7,#32]
  84 006c 77EE677A 	 fsubs s15,s14,s15
  85 0070 C7ED087A 	 fsts s15,[r7,#32]
 101:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 102:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Calculation of index of the table */
 103:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   findex = (float32_t) FAST_MATH_TABLE_SIZE * in;
  86              	 .loc 1 103 0
  87 0074 D7ED087A 	 flds s15,[r7,#32]
  88 0078 9FED237A 	 flds s14,.L11+8
  89 007c 67EE877A 	 fmuls s15,s15,s14
  90 0080 C7ED077A 	 fsts s15,[r7,#28]
 104:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 105:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   index = ((uint16_t)findex) & 0x1ff;
  91              	 .loc 1 105 0
  92 0084 D7ED077A 	 flds s15,[r7,#28]
  93 0088 FCEEE77A 	 ftouizs s15,s15
  94 008c C7ED007A 	 fsts s15,[r7]
  95 0090 3B88     	 ldrh r3,[r7]
  96 0092 9BB2     	 uxth r3,r3
  97 0094 C3F30803 	 ubfx r3,r3,#0,#9
  98 0098 7B83     	 strh r3,[r7,#26]
 106:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 107:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* fractional value calculation */
 108:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   fract = findex - (float32_t) index;
  99              	 .loc 1 108 0
 100 009a 7B8B     	 ldrh r3,[r7,#26]
 101 009c 07EE903A 	 fmsr s15,r3
 102 00a0 F8EE677A 	 fuitos s15,s15
 103 00a4 97ED077A 	 flds s14,[r7,#28]
 104 00a8 77EE677A 	 fsubs s15,s14,s15
 105 00ac C7ED057A 	 fsts s15,[r7,#20]
 109:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 110:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Read two nearest values of input value from the sin table */
 111:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   a = sinTable_f32[index];
 106              	 .loc 1 111 0
 107 00b0 7B8B     	 ldrh r3,[r7,#26]
 108 00b2 164A     	 ldr r2,.L11+12
 109 00b4 9B00     	 lsls r3,r3,#2
 110 00b6 1344     	 add r3,r3,r2
 111 00b8 1B68     	 ldr r3,[r3]
 112 00ba 3B61     	 str r3,[r7,#16]
 112:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   b = sinTable_f32[index+1];
 113              	 .loc 1 112 0
 114 00bc 7B8B     	 ldrh r3,[r7,#26]
 115 00be 0133     	 adds r3,r3,#1
 116 00c0 124A     	 ldr r2,.L11+12
 117 00c2 9B00     	 lsls r3,r3,#2
 118 00c4 1344     	 add r3,r3,r2
 119 00c6 1B68     	 ldr r3,[r3]
 120 00c8 FB60     	 str r3,[r7,#12]
 113:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 114:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Linear interpolation process */
 115:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   sinVal = (1.0f-fract)*a + fract*b;
 121              	 .loc 1 115 0
 122 00ca B7EE007A 	 fconsts s14,#112
 123 00ce D7ED057A 	 flds s15,[r7,#20]
 124 00d2 37EE677A 	 fsubs s14,s14,s15
 125 00d6 D7ED047A 	 flds s15,[r7,#16]
 126 00da 27EE277A 	 fmuls s14,s14,s15
 127 00de D7ED056A 	 flds s13,[r7,#20]
 128 00e2 D7ED037A 	 flds s15,[r7,#12]
 129 00e6 66EEA77A 	 fmuls s15,s13,s15
 130 00ea 77EE277A 	 fadds s15,s14,s15
 131 00ee C7ED027A 	 fsts s15,[r7,#8]
 116:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 117:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Return the output value */
 118:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   return (sinVal);
 132              	 .loc 1 118 0
 133 00f2 BB68     	 ldr r3,[r7,#8]
 134              	.L5:
 119:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** }
 135              	 .loc 1 119 0
 136 00f4 1846     	 mov r0,r3
 137 00f6 2C37     	 adds r7,r7,#44
 138              	.LCFI3:
 139              	 .cfi_def_cfa_offset 4
 140 00f8 BD46     	 mov sp,r7
 141              	.LCFI4:
 142              	 .cfi_def_cfa_register 13
 143              	 
 144 00fa 5DF8047B 	 ldr r7,[sp],#4
 145              	.LCFI5:
 146              	 .cfi_restore 7
 147              	 .cfi_def_cfa_offset 0
 148 00fe 7047     	 bx lr
 149              	.L12:
 150              	 .align 2
 151              	.L11:
 152 0100 CD024CB4 	 .word -1270086963
 153 0104 83F9223E 	 .word 1042479491
 154 0108 00000044 	 .word 1140850688
 155 010c 00000000 	 .word sinTable_f32
 156              	 .cfi_endproc
 157              	.LFE135:
 159              	 .text
 160              	.Letext0:
 161              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 162              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 163              	 .file 4 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
 164              	 .file 5 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_common_tables.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_sin_f32.c
    {standard input}:20     .text.arm_sin_f32:00000000 $t
    {standard input}:25     .text.arm_sin_f32:00000000 arm_sin_f32
    {standard input}:152    .text.arm_sin_f32:00000100 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sinTable_f32
