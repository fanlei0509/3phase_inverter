   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_q31_to_float.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_q31_to_float,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_q31_to_float
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_q31_to_float:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c"
   1:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * Title:        arm_q31_to_float.c
   4:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * Description:  Converts the elements of the Q31 vector to floating-point vector
   5:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  *
   6:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  *
   9:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** /*
  12:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  *
  14:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  *
  16:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  *
  20:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  *
  22:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  */
  28:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  29:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  31:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** /**
  32:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * @ingroup groupSupport
  33:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  */
  34:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  35:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** /**
  36:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * @defgroup q31_to_x  Convert 32-bit Integer value
  37:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  */
  38:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  39:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** /**
  40:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * @addtogroup q31_to_x
  41:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * @{
  42:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  */
  43:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  44:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** /**
  45:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * @brief Converts the elements of the Q31 vector to floating-point vector.
  46:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * @param[in]       *pSrc points to the Q31 input vector
  47:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * @param[out]      *pDst points to the floating-point output vector
  48:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * @param[in]       blockSize length of the input vector
  49:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * @return none.
  50:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  *
  51:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * \par Description:
  52:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  *
  53:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * The equation used for the conversion process is:
  54:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  *
  55:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * <pre>
  56:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * 	pDst[n] = (float32_t) pSrc[n] / 2147483648;   0 <= n < blockSize.
  57:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  * </pre>
  58:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  *
  59:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****  */
  60:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  61:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  62:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** void arm_q31_to_float(
  63:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   q31_t * pSrc,
  64:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   float32_t * pDst,
  65:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   uint32_t blockSize)
  66:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** {
  28              	 .loc 1 66 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 87B0     	 sub sp,sp,#28
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 32
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  67:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   q31_t *pIn = pSrc;                             /* Src pointer */
  46              	 .loc 1 67 0
  47 000c FB68     	 ldr r3,[r7,#12]
  48 000e 7B61     	 str r3,[r7,#20]
  68:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   uint32_t blkCnt;                               /* loop counter */
  69:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  70:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  71:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** #if defined (ARM_MATH_DSP)
  72:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  73:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  74:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  75:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   /*loop Unrolling */
  76:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   blkCnt = blockSize >> 2u;
  49              	 .loc 1 76 0
  50 0010 7B68     	 ldr r3,[r7,#4]
  51 0012 9B08     	 lsrs r3,r3,#2
  52 0014 3B61     	 str r3,[r7,#16]
  77:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  78:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  79:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  80:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   while (blkCnt > 0u)
  53              	 .loc 1 80 0
  54 0016 46E0     	 b .L2
  55              	.L3:
  81:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   {
  82:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     /* C = (float32_t) A / 2147483648 */
  83:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     /* convert from q31 to float and then store the results in the destination buffer */
  84:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     *pDst++ = ((float32_t) * pIn++ / 2147483648.0f);
  56              	 .loc 1 84 0
  57 0018 BB68     	 ldr r3,[r7,#8]
  58 001a 1A1D     	 adds r2,r3,#4
  59 001c BA60     	 str r2,[r7,#8]
  60 001e 7A69     	 ldr r2,[r7,#20]
  61 0020 111D     	 adds r1,r2,#4
  62 0022 7961     	 str r1,[r7,#20]
  63 0024 1268     	 ldr r2,[r2]
  64 0026 07EE902A 	 fmsr s15,r2
  65 002a F8EEE77A 	 fsitos s15,s15
  66 002e 9FED307A 	 flds s14,.L6
  67 0032 C7EE877A 	 fdivs s15,s15,s14
  68 0036 C3ED007A 	 fsts s15,[r3]
  85:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     *pDst++ = ((float32_t) * pIn++ / 2147483648.0f);
  69              	 .loc 1 85 0
  70 003a BB68     	 ldr r3,[r7,#8]
  71 003c 1A1D     	 adds r2,r3,#4
  72 003e BA60     	 str r2,[r7,#8]
  73 0040 7A69     	 ldr r2,[r7,#20]
  74 0042 111D     	 adds r1,r2,#4
  75 0044 7961     	 str r1,[r7,#20]
  76 0046 1268     	 ldr r2,[r2]
  77 0048 07EE902A 	 fmsr s15,r2
  78 004c F8EEE77A 	 fsitos s15,s15
  79 0050 9FED277A 	 flds s14,.L6
  80 0054 C7EE877A 	 fdivs s15,s15,s14
  81 0058 C3ED007A 	 fsts s15,[r3]
  86:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     *pDst++ = ((float32_t) * pIn++ / 2147483648.0f);
  82              	 .loc 1 86 0
  83 005c BB68     	 ldr r3,[r7,#8]
  84 005e 1A1D     	 adds r2,r3,#4
  85 0060 BA60     	 str r2,[r7,#8]
  86 0062 7A69     	 ldr r2,[r7,#20]
  87 0064 111D     	 adds r1,r2,#4
  88 0066 7961     	 str r1,[r7,#20]
  89 0068 1268     	 ldr r2,[r2]
  90 006a 07EE902A 	 fmsr s15,r2
  91 006e F8EEE77A 	 fsitos s15,s15
  92 0072 9FED1F7A 	 flds s14,.L6
  93 0076 C7EE877A 	 fdivs s15,s15,s14
  94 007a C3ED007A 	 fsts s15,[r3]
  87:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     *pDst++ = ((float32_t) * pIn++ / 2147483648.0f);
  95              	 .loc 1 87 0
  96 007e BB68     	 ldr r3,[r7,#8]
  97 0080 1A1D     	 adds r2,r3,#4
  98 0082 BA60     	 str r2,[r7,#8]
  99 0084 7A69     	 ldr r2,[r7,#20]
 100 0086 111D     	 adds r1,r2,#4
 101 0088 7961     	 str r1,[r7,#20]
 102 008a 1268     	 ldr r2,[r2]
 103 008c 07EE902A 	 fmsr s15,r2
 104 0090 F8EEE77A 	 fsitos s15,s15
 105 0094 9FED167A 	 flds s14,.L6
 106 0098 C7EE877A 	 fdivs s15,s15,s14
 107 009c C3ED007A 	 fsts s15,[r3]
  88:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  89:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     /* Decrement the loop counter */
  90:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     blkCnt--;
 108              	 .loc 1 90 0
 109 00a0 3B69     	 ldr r3,[r7,#16]
 110 00a2 013B     	 subs r3,r3,#1
 111 00a4 3B61     	 str r3,[r7,#16]
 112              	.L2:
  80:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   {
 113              	 .loc 1 80 0
 114 00a6 3B69     	 ldr r3,[r7,#16]
 115 00a8 002B     	 cmp r3,#0
 116 00aa B5D1     	 bne .L3
  91:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   }
  92:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  93:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
  94:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****    ** No loop unrolling is used. */
  95:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   blkCnt = blockSize % 0x4u;
 117              	 .loc 1 95 0
 118 00ac 7B68     	 ldr r3,[r7,#4]
 119 00ae 03F00303 	 and r3,r3,#3
 120 00b2 3B61     	 str r3,[r7,#16]
  96:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  97:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** #else
  98:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
  99:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   /* Run the below code for Cortex-M0 */
 100:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
 101:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   /* Loop over blockSize number of values */
 102:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   blkCnt = blockSize;
 103:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
 104:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** #endif /* #if defined (ARM_MATH_DSP) */
 105:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
 106:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   while (blkCnt > 0u)
 121              	 .loc 1 106 0
 122 00b4 13E0     	 b .L4
 123              	.L5:
 107:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   {
 108:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     /* C = (float32_t) A / 2147483648 */
 109:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     /* convert from q31 to float and then store the results in the destination buffer */
 110:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     *pDst++ = ((float32_t) * pIn++ / 2147483648.0f);
 124              	 .loc 1 110 0
 125 00b6 BB68     	 ldr r3,[r7,#8]
 126 00b8 1A1D     	 adds r2,r3,#4
 127 00ba BA60     	 str r2,[r7,#8]
 128 00bc 7A69     	 ldr r2,[r7,#20]
 129 00be 111D     	 adds r1,r2,#4
 130 00c0 7961     	 str r1,[r7,#20]
 131 00c2 1268     	 ldr r2,[r2]
 132 00c4 07EE902A 	 fmsr s15,r2
 133 00c8 F8EEE77A 	 fsitos s15,s15
 134 00cc 9FED087A 	 flds s14,.L6
 135 00d0 C7EE877A 	 fdivs s15,s15,s14
 136 00d4 C3ED007A 	 fsts s15,[r3]
 111:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** 
 112:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     /* Decrement the loop counter */
 113:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****     blkCnt--;
 137              	 .loc 1 113 0
 138 00d8 3B69     	 ldr r3,[r7,#16]
 139 00da 013B     	 subs r3,r3,#1
 140 00dc 3B61     	 str r3,[r7,#16]
 141              	.L4:
 106:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   {
 142              	 .loc 1 106 0
 143 00de 3B69     	 ldr r3,[r7,#16]
 144 00e0 002B     	 cmp r3,#0
 145 00e2 E8D1     	 bne .L5
 114:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c ****   }
 115:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q31_to_float.c **** }
 146              	 .loc 1 115 0
 147 00e4 1C37     	 adds r7,r7,#28
 148              	.LCFI3:
 149              	 .cfi_def_cfa_offset 4
 150 00e6 BD46     	 mov sp,r7
 151              	.LCFI4:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 00e8 5DF8047B 	 ldr r7,[sp],#4
 155              	.LCFI5:
 156              	 .cfi_restore 7
 157              	 .cfi_def_cfa_offset 0
 158 00ec 7047     	 bx lr
 159              	.L7:
 160 00ee 00BF     	 .align 2
 161              	.L6:
 162 00f0 0000004F 	 .word 1325400064
 163              	 .cfi_endproc
 164              	.LFE135:
 166              	 .text
 167              	.Letext0:
 168              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 169              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 170              	 .file 4 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_q31_to_float.c
    {standard input}:20     .text.arm_q31_to_float:00000000 $t
    {standard input}:25     .text.arm_q31_to_float:00000000 arm_q31_to_float
    {standard input}:162    .text.arm_q31_to_float:000000f0 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
