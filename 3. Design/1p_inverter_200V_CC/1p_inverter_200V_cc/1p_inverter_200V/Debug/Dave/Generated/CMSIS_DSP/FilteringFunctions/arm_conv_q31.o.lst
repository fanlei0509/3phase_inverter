   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_q31:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * Title:        arm_conv_q31.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * Description:  Convolution of Q31 sequences
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @addtogroup Conv
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  */
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** /**
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @brief Convolution of Q31 sequences.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @param[in] srcALen length of the first input sequence.
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @param[in] srcBLen length of the second input sequence.
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @param[out] *pDst points to the location where the output result is written.  Length srcALen+src
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @return none.
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  *
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * @details
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  *
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * \par
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * The function is implemented using an internal 64-bit accumulator.
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplicatio
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * There is no saturation on intermediate additions.
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * Thus, if the accumulator overflows it wraps around and distorts the result.
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * The input signals should be scaled down to avoid intermediate overflows.
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * Scale down the inputs by log2(min(srcALen, srcBLen)) (log2 is read as log to the base 2) times t
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * as maximum of min(srcALen, srcBLen) number of additions are carried internally.
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * The 2.62 accumulator is right shifted by 31 bits and saturated to 1.31 format to yield the final
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  *
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * \par
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  * See <code>arm_conv_fast_q31()</code> for a faster but less precise implementation of this functi
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****  */
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** void arm_conv_q31(
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t * pSrcA,
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   uint32_t srcALen,
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t * pSrcB,
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   uint32_t srcBLen,
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t * pDst)
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** {
  28              	 .loc 1 72 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 28
  36              	 .cfi_offset 4,-28
  37              	 .cfi_offset 5,-24
  38              	 .cfi_offset 7,-20
  39              	 .cfi_offset 8,-16
  40              	 .cfi_offset 9,-12
  41              	 .cfi_offset 10,-8
  42              	 .cfi_offset 11,-4
  43 0004 A9B0     	 sub sp,sp,#164
  44              	.LCFI1:
  45              	 .cfi_def_cfa_offset 192
  46 0006 00AF     	 add r7,sp,#0
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 7
  49 0008 7863     	 str r0,[r7,#52]
  50 000a 3963     	 str r1,[r7,#48]
  51 000c FA62     	 str r2,[r7,#44]
  52 000e BB62     	 str r3,[r7,#40]
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** #if defined (ARM_MATH_DSP)
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t *pIn1;                                   /* inputA pointer */
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t *pIn2;                                   /* inputB pointer */
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t *pOut = pDst;                            /* output pointer */
  53              	 .loc 1 81 0
  54 0010 D7F8C030 	 ldr r3,[r7,#192]
  55 0014 C7F89430 	 str r3,[r7,#148]
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t *px;                                     /* Intermediate inputA pointer  */
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t *py;                                     /* Intermediate inputB pointer  */
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t *pSrc1, *pSrc2;                          /* Intermediate pointers */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q63_t sum;                                     /* Accumulator */
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q63_t acc0, acc1, acc2;                        /* Accumulator */
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t x0, x1, x2, c0;                          /* Temporary variables to hold state and coefficie
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   uint32_t j, k, count, blkCnt, blockSize1, blockSize2, blockSize3;     /* loop counter */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* srcB is always made to slide across srcA. */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   if (srcALen >= srcBLen)
  56              	 .loc 1 93 0
  57 0018 3A6B     	 ldr r2,[r7,#48]
  58 001a BB6A     	 ldr r3,[r7,#40]
  59 001c 9A42     	 cmp r2,r3
  60 001e 06D3     	 bcc .L2
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   {
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Initialization of inputA pointer */
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     pIn1 = pSrcA;
  61              	 .loc 1 96 0
  62 0020 7B6B     	 ldr r3,[r7,#52]
  63 0022 C7F89C30 	 str r3,[r7,#156]
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Initialization of inputB pointer */
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     pIn2 = pSrcB;
  64              	 .loc 1 99 0
  65 0026 FB6A     	 ldr r3,[r7,#44]
  66 0028 C7F89830 	 str r3,[r7,#152]
  67 002c 0BE0     	 b .L3
  68              	.L2:
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   }
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   else
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   {
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Initialization of inputA pointer */
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     pIn1 = (q31_t *) pSrcB;
  69              	 .loc 1 104 0
  70 002e FB6A     	 ldr r3,[r7,#44]
  71 0030 C7F89C30 	 str r3,[r7,#156]
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Initialization of inputB pointer */
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     pIn2 = (q31_t *) pSrcA;
  72              	 .loc 1 107 0
  73 0034 7B6B     	 ldr r3,[r7,#52]
  74 0036 C7F89830 	 str r3,[r7,#152]
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     j = srcBLen;
  75              	 .loc 1 110 0
  76 003a BB6A     	 ldr r3,[r7,#40]
  77 003c BB64     	 str r3,[r7,#72]
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     srcBLen = srcALen;
  78              	 .loc 1 111 0
  79 003e 3B6B     	 ldr r3,[r7,#48]
  80 0040 BB62     	 str r3,[r7,#40]
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     srcALen = j;
  81              	 .loc 1 112 0
  82 0042 BB6C     	 ldr r3,[r7,#72]
  83 0044 3B63     	 str r3,[r7,#48]
  84              	.L3:
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   }
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* The function is internally
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * divided into three stages according to the number of multiplications that has to be
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * taken place between inputA samples and inputB samples. In the first stage of the
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * algorithm, the multiplications increase by one for every iteration.
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * In the second stage of the algorithm, srcBLen number of multiplications are done.
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * In the third stage of the algorithm, the multiplications decrease by one
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * for every iteration. */
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* The algorithm is implemented in three stages.
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****      The loop counters of each stage is initiated here. */
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   blockSize1 = srcBLen - 1u;
  85              	 .loc 1 126 0
  86 0046 BB6A     	 ldr r3,[r7,#40]
  87 0048 013B     	 subs r3,r3,#1
  88 004a 3B65     	 str r3,[r7,#80]
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   blockSize2 = srcALen - (srcBLen - 1u);
  89              	 .loc 1 127 0
  90 004c 3A6B     	 ldr r2,[r7,#48]
  91 004e BB6A     	 ldr r3,[r7,#40]
  92 0050 D31A     	 subs r3,r2,r3
  93 0052 0133     	 adds r3,r3,#1
  94 0054 7B64     	 str r3,[r7,#68]
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   blockSize3 = blockSize1;
  95              	 .loc 1 128 0
  96 0056 3B6D     	 ldr r3,[r7,#80]
  97 0058 FB64     	 str r3,[r7,#76]
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* --------------------------
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * Initializations of stage1
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * -------------------------*/
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* sum = x[0] * y[0]
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * sum = x[0] * y[1] + x[1] * y[0]
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * ....
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    */
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****      The count variable holds the number of MAC operations performed */
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   count = 1u;
  98              	 .loc 1 142 0
  99 005a 0123     	 movs r3,#1
 100 005c BB65     	 str r3,[r7,#88]
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* Working pointer of inputA */
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   px = pIn1;
 101              	 .loc 1 145 0
 102 005e D7F89C30 	 ldr r3,[r7,#156]
 103 0062 C7F89030 	 str r3,[r7,#144]
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* Working pointer of inputB */
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   py = pIn2;
 104              	 .loc 1 148 0
 105 0066 D7F89830 	 ldr r3,[r7,#152]
 106 006a C7F88C30 	 str r3,[r7,#140]
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* ------------------------
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * Stage1 process
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * ----------------------*/
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* The first stage starts here */
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   while (blockSize1 > 0u)
 107              	 .loc 1 156 0
 108 006e E5E0     	 b .L4
 109              	.L9:
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   {
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Accumulator is made zero for every iteration */
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     sum = 0;
 110              	 .loc 1 159 0
 111 0070 4FF00002 	 mov r2,#0
 112 0074 4FF00003 	 mov r3,#0
 113 0078 C7E92023 	 strd r2,[r7,#128]
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     k = count >> 2u;
 114              	 .loc 1 162 0
 115 007c BB6D     	 ldr r3,[r7,#88]
 116 007e 9B08     	 lsrs r3,r3,#2
 117 0080 FB65     	 str r3,[r7,#92]
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     while (k > 0u)
 118              	 .loc 1 166 0
 119 0082 8AE0     	 b .L5
 120              	.L6:
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* x[0] * y[srcBLen - 1] */
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum += (q63_t) * px++ * (*py--);
 121              	 .loc 1 169 0
 122 0084 D7F89020 	 ldr r2,[r7,#144]
 123 0088 131D     	 adds r3,r2,#4
 124 008a C7F89030 	 str r3,[r7,#144]
 125 008e 1368     	 ldr r3,[r2]
 126 0090 1C46     	 mov r4,r3
 127 0092 4FEAE475 	 asr r5,r4,#31
 128 0096 D7F88C20 	 ldr r2,[r7,#140]
 129 009a 131F     	 subs r3,r2,#4
 130 009c C7F88C30 	 str r3,[r7,#140]
 131 00a0 1368     	 ldr r3,[r2]
 132 00a2 1A46     	 mov r2,r3
 133 00a4 4FEAE273 	 asr r3,r2,#31
 134 00a8 02FB05F0 	 mul r0,r2,r5
 135 00ac 04FB03F1 	 mul r1,r4,r3
 136 00b0 0144     	 add r1,r1,r0
 137 00b2 A4FB0245 	 umull r4,r5,r4,r2
 138 00b6 4B19     	 adds r3,r1,r5
 139 00b8 1D46     	 mov r5,r3
 140 00ba D7E92023 	 ldrd r2,[r7,#128]
 141 00be 1219     	 adds r2,r2,r4
 142 00c0 43EB0503 	 adc r3,r3,r5
 143 00c4 C7E92023 	 strd r2,[r7,#128]
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* x[1] * y[srcBLen - 2] */
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum += (q63_t) * px++ * (*py--);
 144              	 .loc 1 171 0
 145 00c8 D7F89020 	 ldr r2,[r7,#144]
 146 00cc 131D     	 adds r3,r2,#4
 147 00ce C7F89030 	 str r3,[r7,#144]
 148 00d2 1368     	 ldr r3,[r2]
 149 00d4 1C46     	 mov r4,r3
 150 00d6 4FEAE475 	 asr r5,r4,#31
 151 00da D7F88C20 	 ldr r2,[r7,#140]
 152 00de 131F     	 subs r3,r2,#4
 153 00e0 C7F88C30 	 str r3,[r7,#140]
 154 00e4 1368     	 ldr r3,[r2]
 155 00e6 1A46     	 mov r2,r3
 156 00e8 4FEAE273 	 asr r3,r2,#31
 157 00ec 02FB05F0 	 mul r0,r2,r5
 158 00f0 04FB03F1 	 mul r1,r4,r3
 159 00f4 0144     	 add r1,r1,r0
 160 00f6 A4FB0245 	 umull r4,r5,r4,r2
 161 00fa 4B19     	 adds r3,r1,r5
 162 00fc 1D46     	 mov r5,r3
 163 00fe D7E92023 	 ldrd r2,[r7,#128]
 164 0102 1219     	 adds r2,r2,r4
 165 0104 43EB0503 	 adc r3,r3,r5
 166 0108 C7E92023 	 strd r2,[r7,#128]
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* x[2] * y[srcBLen - 3] */
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum += (q63_t) * px++ * (*py--);
 167              	 .loc 1 173 0
 168 010c D7F89020 	 ldr r2,[r7,#144]
 169 0110 131D     	 adds r3,r2,#4
 170 0112 C7F89030 	 str r3,[r7,#144]
 171 0116 1368     	 ldr r3,[r2]
 172 0118 1C46     	 mov r4,r3
 173 011a 4FEAE475 	 asr r5,r4,#31
 174 011e D7F88C20 	 ldr r2,[r7,#140]
 175 0122 131F     	 subs r3,r2,#4
 176 0124 C7F88C30 	 str r3,[r7,#140]
 177 0128 1368     	 ldr r3,[r2]
 178 012a 1A46     	 mov r2,r3
 179 012c 4FEAE273 	 asr r3,r2,#31
 180 0130 02FB05F0 	 mul r0,r2,r5
 181 0134 04FB03F1 	 mul r1,r4,r3
 182 0138 0144     	 add r1,r1,r0
 183 013a A4FB0245 	 umull r4,r5,r4,r2
 184 013e 4B19     	 adds r3,r1,r5
 185 0140 1D46     	 mov r5,r3
 186 0142 D7E92023 	 ldrd r2,[r7,#128]
 187 0146 1219     	 adds r2,r2,r4
 188 0148 43EB0503 	 adc r3,r3,r5
 189 014c C7E92023 	 strd r2,[r7,#128]
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* x[3] * y[srcBLen - 4] */
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum += (q63_t) * px++ * (*py--);
 190              	 .loc 1 175 0
 191 0150 D7F89020 	 ldr r2,[r7,#144]
 192 0154 131D     	 adds r3,r2,#4
 193 0156 C7F89030 	 str r3,[r7,#144]
 194 015a 1368     	 ldr r3,[r2]
 195 015c 1C46     	 mov r4,r3
 196 015e 4FEAE475 	 asr r5,r4,#31
 197 0162 D7F88C20 	 ldr r2,[r7,#140]
 198 0166 131F     	 subs r3,r2,#4
 199 0168 C7F88C30 	 str r3,[r7,#140]
 200 016c 1368     	 ldr r3,[r2]
 201 016e 1A46     	 mov r2,r3
 202 0170 4FEAE273 	 asr r3,r2,#31
 203 0174 02FB05F0 	 mul r0,r2,r5
 204 0178 04FB03F1 	 mul r1,r4,r3
 205 017c 0144     	 add r1,r1,r0
 206 017e A4FB0245 	 umull r4,r5,r4,r2
 207 0182 4B19     	 adds r3,r1,r5
 208 0184 1D46     	 mov r5,r3
 209 0186 D7E92023 	 ldrd r2,[r7,#128]
 210 018a 1219     	 adds r2,r2,r4
 211 018c 43EB0503 	 adc r3,r3,r5
 212 0190 C7E92023 	 strd r2,[r7,#128]
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Decrement the loop counter */
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       k--;
 213              	 .loc 1 178 0
 214 0194 FB6D     	 ldr r3,[r7,#92]
 215 0196 013B     	 subs r3,r3,#1
 216 0198 FB65     	 str r3,[r7,#92]
 217              	.L5:
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 218              	 .loc 1 166 0
 219 019a FB6D     	 ldr r3,[r7,#92]
 220 019c 002B     	 cmp r3,#0
 221 019e 7FF471AF 	 bne .L6
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     }
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****      ** No loop unrolling is used. */
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     k = count % 0x4u;
 222              	 .loc 1 183 0
 223 01a2 BB6D     	 ldr r3,[r7,#88]
 224 01a4 03F00303 	 and r3,r3,#3
 225 01a8 FB65     	 str r3,[r7,#92]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     while (k > 0u)
 226              	 .loc 1 185 0
 227 01aa 24E0     	 b .L7
 228              	.L8:
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Perform the multiply-accumulate */
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum += (q63_t) * px++ * (*py--);
 229              	 .loc 1 188 0
 230 01ac D7F89020 	 ldr r2,[r7,#144]
 231 01b0 131D     	 adds r3,r2,#4
 232 01b2 C7F89030 	 str r3,[r7,#144]
 233 01b6 1368     	 ldr r3,[r2]
 234 01b8 1C46     	 mov r4,r3
 235 01ba 4FEAE475 	 asr r5,r4,#31
 236 01be D7F88C20 	 ldr r2,[r7,#140]
 237 01c2 131F     	 subs r3,r2,#4
 238 01c4 C7F88C30 	 str r3,[r7,#140]
 239 01c8 1368     	 ldr r3,[r2]
 240 01ca 1A46     	 mov r2,r3
 241 01cc 4FEAE273 	 asr r3,r2,#31
 242 01d0 02FB05F0 	 mul r0,r2,r5
 243 01d4 04FB03F1 	 mul r1,r4,r3
 244 01d8 0144     	 add r1,r1,r0
 245 01da A4FB0245 	 umull r4,r5,r4,r2
 246 01de 4B19     	 adds r3,r1,r5
 247 01e0 1D46     	 mov r5,r3
 248 01e2 D7E92023 	 ldrd r2,[r7,#128]
 249 01e6 1219     	 adds r2,r2,r4
 250 01e8 43EB0503 	 adc r3,r3,r5
 251 01ec C7E92023 	 strd r2,[r7,#128]
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Decrement the loop counter */
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       k--;
 252              	 .loc 1 191 0
 253 01f0 FB6D     	 ldr r3,[r7,#92]
 254 01f2 013B     	 subs r3,r3,#1
 255 01f4 FB65     	 str r3,[r7,#92]
 256              	.L7:
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 257              	 .loc 1 185 0
 258 01f6 FB6D     	 ldr r3,[r7,#92]
 259 01f8 002B     	 cmp r3,#0
 260 01fa D7D1     	 bne .L8
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     }
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Store the result in the accumulator in the destination buffer. */
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     *pOut++ = (q31_t) (sum >> 31);
 261              	 .loc 1 195 0
 262 01fc D7F89410 	 ldr r1,[r7,#148]
 263 0200 0B1D     	 adds r3,r1,#4
 264 0202 C7F89430 	 str r3,[r7,#148]
 265 0206 D7E92023 	 ldrd r2,[r7,#128]
 266 020a 4FEAD27A 	 lsr r10,r2,#31
 267 020e 4AEA430A 	 orr r10,r10,r3,lsl#1
 268 0212 4FEAE37B 	 asr fp,r3,#31
 269 0216 5346     	 mov r3,r10
 270 0218 0B60     	 str r3,[r1]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     py = pIn2 + count;
 271              	 .loc 1 198 0
 272 021a BB6D     	 ldr r3,[r7,#88]
 273 021c 9A00     	 lsls r2,r3,#2
 274 021e D7F89830 	 ldr r3,[r7,#152]
 275 0222 1344     	 add r3,r3,r2
 276 0224 C7F88C30 	 str r3,[r7,#140]
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     px = pIn1;
 277              	 .loc 1 199 0
 278 0228 D7F89C30 	 ldr r3,[r7,#156]
 279 022c C7F89030 	 str r3,[r7,#144]
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Increment the MAC count */
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     count++;
 280              	 .loc 1 202 0
 281 0230 BB6D     	 ldr r3,[r7,#88]
 282 0232 0133     	 adds r3,r3,#1
 283 0234 BB65     	 str r3,[r7,#88]
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Decrement the loop counter */
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     blockSize1--;
 284              	 .loc 1 205 0
 285 0236 3B6D     	 ldr r3,[r7,#80]
 286 0238 013B     	 subs r3,r3,#1
 287 023a 3B65     	 str r3,[r7,#80]
 288              	.L4:
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   {
 289              	 .loc 1 156 0
 290 023c 3B6D     	 ldr r3,[r7,#80]
 291 023e 002B     	 cmp r3,#0
 292 0240 7FF416AF 	 bne .L9
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   }
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* --------------------------
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * Initializations of stage2
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * ------------------------*/
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * ....
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y[0
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    */
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* Working pointer of inputA */
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   px = pIn1;
 293              	 .loc 1 219 0
 294 0244 D7F89C30 	 ldr r3,[r7,#156]
 295 0248 C7F89030 	 str r3,[r7,#144]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* Working pointer of inputB */
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 296              	 .loc 1 222 0
 297 024c BB6A     	 ldr r3,[r7,#40]
 298 024e 03F18043 	 add r3,r3,#1073741824
 299 0252 013B     	 subs r3,r3,#1
 300 0254 9B00     	 lsls r3,r3,#2
 301 0256 D7F89820 	 ldr r2,[r7,#152]
 302 025a 1344     	 add r3,r3,r2
 303 025c 3B64     	 str r3,[r7,#64]
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   py = pSrc2;
 304              	 .loc 1 223 0
 305 025e 3B6C     	 ldr r3,[r7,#64]
 306 0260 C7F88C30 	 str r3,[r7,#140]
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* count is index by which the pointer pIn1 to be incremented */
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   count = 0u;
 307              	 .loc 1 226 0
 308 0264 0023     	 movs r3,#0
 309 0266 BB65     	 str r3,[r7,#88]
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* -------------------
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * Stage2 process
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * ------------------*/
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * So, to loop unroll over blockSize2,
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * srcBLen should be greater than or equal to 4 */
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   if (srcBLen >= 4u)
 310              	 .loc 1 235 0
 311 0268 BB6A     	 ldr r3,[r7,#40]
 312 026a 032B     	 cmp r3,#3
 313 026c 40F2DC82 	 bls .L10
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   {
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Loop unroll by 3 */
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     blkCnt = blockSize2 / 3;
 314              	 .loc 1 238 0
 315 0270 7B6C     	 ldr r3,[r7,#68]
 316 0272 9D4A     	 ldr r2,.L33
 317 0274 A2FB0323 	 umull r2,r3,r2,r3
 318 0278 5B08     	 lsrs r3,r3,#1
 319 027a 7B65     	 str r3,[r7,#84]
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     while (blkCnt > 0u)
 320              	 .loc 1 240 0
 321 027c D9E1     	 b .L11
 322              	.L15:
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Set all accumulators to zero */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       acc0 = 0;
 323              	 .loc 1 243 0
 324 027e 4FF00002 	 mov r2,#0
 325 0282 4FF00003 	 mov r3,#0
 326 0286 C7E91E23 	 strd r2,[r7,#120]
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       acc1 = 0;
 327              	 .loc 1 244 0
 328 028a 4FF00002 	 mov r2,#0
 329 028e 4FF00003 	 mov r3,#0
 330 0292 C7E91C23 	 strd r2,[r7,#112]
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       acc2 = 0;
 331              	 .loc 1 245 0
 332 0296 4FF00002 	 mov r2,#0
 333 029a 4FF00003 	 mov r3,#0
 334 029e C7E91A23 	 strd r2,[r7,#104]
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* read x[0], x[1], x[2] samples */
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       x0 = *(px++);
 335              	 .loc 1 248 0
 336 02a2 D7F89030 	 ldr r3,[r7,#144]
 337 02a6 1A1D     	 adds r2,r3,#4
 338 02a8 C7F89020 	 str r2,[r7,#144]
 339 02ac 1B68     	 ldr r3,[r3]
 340 02ae 7B66     	 str r3,[r7,#100]
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       x1 = *(px++);
 341              	 .loc 1 249 0
 342 02b0 D7F89030 	 ldr r3,[r7,#144]
 343 02b4 1A1D     	 adds r2,r3,#4
 344 02b6 C7F89020 	 str r2,[r7,#144]
 345 02ba 1B68     	 ldr r3,[r3]
 346 02bc 3B66     	 str r3,[r7,#96]
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Apply loop unrolling and compute 3 MACs simultaneously. */
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       k = srcBLen / 3;
 347              	 .loc 1 252 0
 348 02be BB6A     	 ldr r3,[r7,#40]
 349 02c0 894A     	 ldr r2,.L33
 350 02c2 A2FB0323 	 umull r2,r3,r2,r3
 351 02c6 5B08     	 lsrs r3,r3,#1
 352 02c8 FB65     	 str r3,[r7,#92]
 353              	.L12:
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* First part of the processing with loop unrolling.  Compute 3 MACs at a time.
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****        ** a second loop below computes MACs for the remaining 1 to 2 samples. */
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       do
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       {
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Read y[srcBLen - 1] sample */
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         c0 = *(py);
 354              	 .loc 1 259 0 discriminator 1
 355 02ca D7F88C30 	 ldr r3,[r7,#140]
 356 02ce 1B68     	 ldr r3,[r3]
 357 02d0 FB63     	 str r3,[r7,#60]
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Read x[3] sample */
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         x2 = *(px);
 358              	 .loc 1 262 0 discriminator 1
 359 02d2 D7F89030 	 ldr r3,[r7,#144]
 360 02d6 1B68     	 ldr r3,[r3]
 361 02d8 BB63     	 str r3,[r7,#56]
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Perform the multiply-accumulates */
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc0 +=  x[0] * y[srcBLen - 1] */
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc0 += ((q63_t) x0 * c0);
 362              	 .loc 1 266 0 discriminator 1
 363 02da 7B6E     	 ldr r3,[r7,#100]
 364 02dc 1A46     	 mov r2,r3
 365 02de 4FEAE273 	 asr r3,r2,#31
 366 02e2 F96B     	 ldr r1,[r7,#60]
 367 02e4 0846     	 mov r0,r1
 368 02e6 4FEAE071 	 asr r1,r0,#31
 369 02ea 00FB03F5 	 mul r5,r0,r3
 370 02ee 02FB01F4 	 mul r4,r2,r1
 371 02f2 2C44     	 add r4,r4,r5
 372 02f4 A2FB0023 	 umull r2,r3,r2,r0
 373 02f8 E118     	 adds r1,r4,r3
 374 02fa 0B46     	 mov r3,r1
 375 02fc D7E91E01 	 ldrd r0,[r7,#120]
 376 0300 1218     	 adds r2,r2,r0
 377 0302 43EB0103 	 adc r3,r3,r1
 378 0306 C7E91E23 	 strd r2,[r7,#120]
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc1 +=  x[1] * y[srcBLen - 1] */
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc1 += ((q63_t) x1 * c0);
 379              	 .loc 1 268 0 discriminator 1
 380 030a 3B6E     	 ldr r3,[r7,#96]
 381 030c 1A46     	 mov r2,r3
 382 030e 4FEAE273 	 asr r3,r2,#31
 383 0312 F96B     	 ldr r1,[r7,#60]
 384 0314 0846     	 mov r0,r1
 385 0316 4FEAE071 	 asr r1,r0,#31
 386 031a 00FB03F5 	 mul r5,r0,r3
 387 031e 02FB01F4 	 mul r4,r2,r1
 388 0322 2C44     	 add r4,r4,r5
 389 0324 A2FB0023 	 umull r2,r3,r2,r0
 390 0328 E118     	 adds r1,r4,r3
 391 032a 0B46     	 mov r3,r1
 392 032c D7E91C01 	 ldrd r0,[r7,#112]
 393 0330 1218     	 adds r2,r2,r0
 394 0332 43EB0103 	 adc r3,r3,r1
 395 0336 C7E91C23 	 strd r2,[r7,#112]
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc2 +=  x[2] * y[srcBLen - 1] */
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc2 += ((q63_t) x2 * c0);
 396              	 .loc 1 270 0 discriminator 1
 397 033a BB6B     	 ldr r3,[r7,#56]
 398 033c 1A46     	 mov r2,r3
 399 033e 4FEAE273 	 asr r3,r2,#31
 400 0342 F96B     	 ldr r1,[r7,#60]
 401 0344 0846     	 mov r0,r1
 402 0346 4FEAE071 	 asr r1,r0,#31
 403 034a 00FB03F5 	 mul r5,r0,r3
 404 034e 02FB01F4 	 mul r4,r2,r1
 405 0352 2C44     	 add r4,r4,r5
 406 0354 A2FB0023 	 umull r2,r3,r2,r0
 407 0358 E118     	 adds r1,r4,r3
 408 035a 0B46     	 mov r3,r1
 409 035c D7E91A01 	 ldrd r0,[r7,#104]
 410 0360 1218     	 adds r2,r2,r0
 411 0362 43EB0103 	 adc r3,r3,r1
 412 0366 C7E91A23 	 strd r2,[r7,#104]
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Read y[srcBLen - 2] sample */
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         c0 = *(py - 1u);
 413              	 .loc 1 273 0 discriminator 1
 414 036a D7F88C30 	 ldr r3,[r7,#140]
 415 036e 53F8043C 	 ldr r3,[r3,#-4]
 416 0372 FB63     	 str r3,[r7,#60]
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Read x[4] sample */
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         x0 = *(px + 1u);
 417              	 .loc 1 276 0 discriminator 1
 418 0374 D7F89030 	 ldr r3,[r7,#144]
 419 0378 5B68     	 ldr r3,[r3,#4]
 420 037a 7B66     	 str r3,[r7,#100]
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Perform the multiply-accumulate */
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc0 +=  x[1] * y[srcBLen - 2] */
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc0 += ((q63_t) x1 * c0);
 421              	 .loc 1 280 0 discriminator 1
 422 037c 3B6E     	 ldr r3,[r7,#96]
 423 037e 1A46     	 mov r2,r3
 424 0380 4FEAE273 	 asr r3,r2,#31
 425 0384 F96B     	 ldr r1,[r7,#60]
 426 0386 0846     	 mov r0,r1
 427 0388 4FEAE071 	 asr r1,r0,#31
 428 038c 00FB03F5 	 mul r5,r0,r3
 429 0390 02FB01F4 	 mul r4,r2,r1
 430 0394 2C44     	 add r4,r4,r5
 431 0396 A2FB0023 	 umull r2,r3,r2,r0
 432 039a E118     	 adds r1,r4,r3
 433 039c 0B46     	 mov r3,r1
 434 039e D7E91E01 	 ldrd r0,[r7,#120]
 435 03a2 1218     	 adds r2,r2,r0
 436 03a4 43EB0103 	 adc r3,r3,r1
 437 03a8 C7E91E23 	 strd r2,[r7,#120]
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc1 +=  x[2] * y[srcBLen - 2] */
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc1 += ((q63_t) x2 * c0);
 438              	 .loc 1 282 0 discriminator 1
 439 03ac BB6B     	 ldr r3,[r7,#56]
 440 03ae 1A46     	 mov r2,r3
 441 03b0 4FEAE273 	 asr r3,r2,#31
 442 03b4 F96B     	 ldr r1,[r7,#60]
 443 03b6 0846     	 mov r0,r1
 444 03b8 4FEAE071 	 asr r1,r0,#31
 445 03bc 00FB03F5 	 mul r5,r0,r3
 446 03c0 02FB01F4 	 mul r4,r2,r1
 447 03c4 2C44     	 add r4,r4,r5
 448 03c6 A2FB0023 	 umull r2,r3,r2,r0
 449 03ca E118     	 adds r1,r4,r3
 450 03cc 0B46     	 mov r3,r1
 451 03ce D7E91C01 	 ldrd r0,[r7,#112]
 452 03d2 1218     	 adds r2,r2,r0
 453 03d4 43EB0103 	 adc r3,r3,r1
 454 03d8 C7E91C23 	 strd r2,[r7,#112]
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc2 +=  x[3] * y[srcBLen - 2] */
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc2 += ((q63_t) x0 * c0);
 455              	 .loc 1 284 0 discriminator 1
 456 03dc 7B6E     	 ldr r3,[r7,#100]
 457 03de 1A46     	 mov r2,r3
 458 03e0 4FEAE273 	 asr r3,r2,#31
 459 03e4 F96B     	 ldr r1,[r7,#60]
 460 03e6 0846     	 mov r0,r1
 461 03e8 4FEAE071 	 asr r1,r0,#31
 462 03ec 00FB03F5 	 mul r5,r0,r3
 463 03f0 02FB01F4 	 mul r4,r2,r1
 464 03f4 2C44     	 add r4,r4,r5
 465 03f6 A2FB0023 	 umull r2,r3,r2,r0
 466 03fa E118     	 adds r1,r4,r3
 467 03fc 0B46     	 mov r3,r1
 468 03fe D7E91A01 	 ldrd r0,[r7,#104]
 469 0402 1218     	 adds r2,r2,r0
 470 0404 43EB0103 	 adc r3,r3,r1
 471 0408 C7E91A23 	 strd r2,[r7,#104]
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Read y[srcBLen - 3] sample */
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         c0 = *(py - 2u);
 472              	 .loc 1 287 0 discriminator 1
 473 040c D7F88C30 	 ldr r3,[r7,#140]
 474 0410 53F8083C 	 ldr r3,[r3,#-8]
 475 0414 FB63     	 str r3,[r7,#60]
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Read x[5] sample */
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         x1 = *(px + 2u);
 476              	 .loc 1 290 0 discriminator 1
 477 0416 D7F89030 	 ldr r3,[r7,#144]
 478 041a 9B68     	 ldr r3,[r3,#8]
 479 041c 3B66     	 str r3,[r7,#96]
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Perform the multiply-accumulates */
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc0 +=  x[2] * y[srcBLen - 3] */
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc0 += ((q63_t) x2 * c0);
 480              	 .loc 1 294 0 discriminator 1
 481 041e BB6B     	 ldr r3,[r7,#56]
 482 0420 1A46     	 mov r2,r3
 483 0422 4FEAE273 	 asr r3,r2,#31
 484 0426 F96B     	 ldr r1,[r7,#60]
 485 0428 0846     	 mov r0,r1
 486 042a 4FEAE071 	 asr r1,r0,#31
 487 042e 00FB03F5 	 mul r5,r0,r3
 488 0432 02FB01F4 	 mul r4,r2,r1
 489 0436 2C44     	 add r4,r4,r5
 490 0438 A2FB0023 	 umull r2,r3,r2,r0
 491 043c E118     	 adds r1,r4,r3
 492 043e 0B46     	 mov r3,r1
 493 0440 D7E91E01 	 ldrd r0,[r7,#120]
 494 0444 1218     	 adds r2,r2,r0
 495 0446 43EB0103 	 adc r3,r3,r1
 496 044a C7E91E23 	 strd r2,[r7,#120]
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc1 +=  x[3] * y[srcBLen - 2] */
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc1 += ((q63_t) x0 * c0);
 497              	 .loc 1 296 0 discriminator 1
 498 044e 7B6E     	 ldr r3,[r7,#100]
 499 0450 1A46     	 mov r2,r3
 500 0452 4FEAE273 	 asr r3,r2,#31
 501 0456 F96B     	 ldr r1,[r7,#60]
 502 0458 0846     	 mov r0,r1
 503 045a 4FEAE071 	 asr r1,r0,#31
 504 045e 00FB03F5 	 mul r5,r0,r3
 505 0462 02FB01F4 	 mul r4,r2,r1
 506 0466 2C44     	 add r4,r4,r5
 507 0468 A2FB0023 	 umull r2,r3,r2,r0
 508 046c E118     	 adds r1,r4,r3
 509 046e 0B46     	 mov r3,r1
 510 0470 D7E91C01 	 ldrd r0,[r7,#112]
 511 0474 1218     	 adds r2,r2,r0
 512 0476 43EB0103 	 adc r3,r3,r1
 513 047a C7E91C23 	 strd r2,[r7,#112]
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc2 +=  x[4] * y[srcBLen - 2] */
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc2 += ((q63_t) x1 * c0);
 514              	 .loc 1 298 0 discriminator 1
 515 047e 3B6E     	 ldr r3,[r7,#96]
 516 0480 1A46     	 mov r2,r3
 517 0482 4FEAE273 	 asr r3,r2,#31
 518 0486 F96B     	 ldr r1,[r7,#60]
 519 0488 0846     	 mov r0,r1
 520 048a 4FEAE071 	 asr r1,r0,#31
 521 048e 00FB03F5 	 mul r5,r0,r3
 522 0492 02FB01F4 	 mul r4,r2,r1
 523 0496 2C44     	 add r4,r4,r5
 524 0498 A2FB0023 	 umull r2,r3,r2,r0
 525 049c E118     	 adds r1,r4,r3
 526 049e 0B46     	 mov r3,r1
 527 04a0 D7E91A01 	 ldrd r0,[r7,#104]
 528 04a4 1218     	 adds r2,r2,r0
 529 04a6 43EB0103 	 adc r3,r3,r1
 530 04aa C7E91A23 	 strd r2,[r7,#104]
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* update scratch pointers */
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         px += 3u;
 531              	 .loc 1 301 0 discriminator 1
 532 04ae D7F89030 	 ldr r3,[r7,#144]
 533 04b2 0C33     	 adds r3,r3,#12
 534 04b4 C7F89030 	 str r3,[r7,#144]
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         py -= 3u;
 535              	 .loc 1 302 0 discriminator 1
 536 04b8 D7F88C30 	 ldr r3,[r7,#140]
 537 04bc 0C3B     	 subs r3,r3,#12
 538 04be C7F88C30 	 str r3,[r7,#140]
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       } while (--k);
 539              	 .loc 1 304 0 discriminator 1
 540 04c2 FB6D     	 ldr r3,[r7,#92]
 541 04c4 013B     	 subs r3,r3,#1
 542 04c6 FB65     	 str r3,[r7,#92]
 543 04c8 FB6D     	 ldr r3,[r7,#92]
 544 04ca 002B     	 cmp r3,#0
 545 04cc 7FF4FDAE 	 bne .L12
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* If the srcBLen is not a multiple of 3, compute any remaining MACs here.
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****        ** No loop unrolling is used. */
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       k = srcBLen - (3 * (srcBLen / 3));
 546              	 .loc 1 308 0
 547 04d0 BA6A     	 ldr r2,[r7,#40]
 548 04d2 054B     	 ldr r3,.L33
 549 04d4 A3FB0213 	 umull r1,r3,r3,r2
 550 04d8 5908     	 lsrs r1,r3,#1
 551 04da 0B46     	 mov r3,r1
 552 04dc 5B00     	 lsls r3,r3,#1
 553 04de 0B44     	 add r3,r3,r1
 554 04e0 D31A     	 subs r3,r2,r3
 555 04e2 FB65     	 str r3,[r7,#92]
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       while (k > 0u)
 556              	 .loc 1 310 0
 557 04e4 5FE0     	 b .L13
 558              	.L34:
 559 04e6 00BF     	 .align 2
 560              	.L33:
 561 04e8 ABAAAAAA 	 .word -1431655765
 562              	.L14:
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       {
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Read y[srcBLen - 5] sample */
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         c0 = *(py--);
 563              	 .loc 1 313 0
 564 04ec D7F88C30 	 ldr r3,[r7,#140]
 565 04f0 1A1F     	 subs r2,r3,#4
 566 04f2 C7F88C20 	 str r2,[r7,#140]
 567 04f6 1B68     	 ldr r3,[r3]
 568 04f8 FB63     	 str r3,[r7,#60]
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Read x[7] sample */
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         x2 = *(px++);
 569              	 .loc 1 316 0
 570 04fa D7F89030 	 ldr r3,[r7,#144]
 571 04fe 1A1D     	 adds r2,r3,#4
 572 0500 C7F89020 	 str r2,[r7,#144]
 573 0504 1B68     	 ldr r3,[r3]
 574 0506 BB63     	 str r3,[r7,#56]
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Perform the multiply-accumulates */
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc0 +=  x[4] * y[srcBLen - 5] */
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc0 += ((q63_t) x0 * c0);
 575              	 .loc 1 320 0
 576 0508 7B6E     	 ldr r3,[r7,#100]
 577 050a 1A46     	 mov r2,r3
 578 050c 4FEAE273 	 asr r3,r2,#31
 579 0510 F96B     	 ldr r1,[r7,#60]
 580 0512 0846     	 mov r0,r1
 581 0514 4FEAE071 	 asr r1,r0,#31
 582 0518 00FB03F5 	 mul r5,r0,r3
 583 051c 02FB01F4 	 mul r4,r2,r1
 584 0520 2C44     	 add r4,r4,r5
 585 0522 A2FB0023 	 umull r2,r3,r2,r0
 586 0526 E118     	 adds r1,r4,r3
 587 0528 0B46     	 mov r3,r1
 588 052a D7E91E01 	 ldrd r0,[r7,#120]
 589 052e 1218     	 adds r2,r2,r0
 590 0530 43EB0103 	 adc r3,r3,r1
 591 0534 C7E91E23 	 strd r2,[r7,#120]
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc1 +=  x[5] * y[srcBLen - 5] */
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc1 += ((q63_t) x1 * c0);
 592              	 .loc 1 322 0
 593 0538 3B6E     	 ldr r3,[r7,#96]
 594 053a 1A46     	 mov r2,r3
 595 053c 4FEAE273 	 asr r3,r2,#31
 596 0540 F96B     	 ldr r1,[r7,#60]
 597 0542 0846     	 mov r0,r1
 598 0544 4FEAE071 	 asr r1,r0,#31
 599 0548 00FB03F5 	 mul r5,r0,r3
 600 054c 02FB01F4 	 mul r4,r2,r1
 601 0550 2C44     	 add r4,r4,r5
 602 0552 A2FB0023 	 umull r2,r3,r2,r0
 603 0556 E118     	 adds r1,r4,r3
 604 0558 0B46     	 mov r3,r1
 605 055a D7E91C01 	 ldrd r0,[r7,#112]
 606 055e 1218     	 adds r2,r2,r0
 607 0560 43EB0103 	 adc r3,r3,r1
 608 0564 C7E91C23 	 strd r2,[r7,#112]
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* acc2 +=  x[6] * y[srcBLen - 5] */
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         acc2 += ((q63_t) x2 * c0);
 609              	 .loc 1 324 0
 610 0568 BB6B     	 ldr r3,[r7,#56]
 611 056a 1A46     	 mov r2,r3
 612 056c 4FEAE273 	 asr r3,r2,#31
 613 0570 F96B     	 ldr r1,[r7,#60]
 614 0572 0846     	 mov r0,r1
 615 0574 4FEAE071 	 asr r1,r0,#31
 616 0578 00FB03F5 	 mul r5,r0,r3
 617 057c 02FB01F4 	 mul r4,r2,r1
 618 0580 2C44     	 add r4,r4,r5
 619 0582 A2FB0023 	 umull r2,r3,r2,r0
 620 0586 E118     	 adds r1,r4,r3
 621 0588 0B46     	 mov r3,r1
 622 058a D7E91A01 	 ldrd r0,[r7,#104]
 623 058e 1218     	 adds r2,r2,r0
 624 0590 43EB0103 	 adc r3,r3,r1
 625 0594 C7E91A23 	 strd r2,[r7,#104]
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Reuse the present samples for the next MAC */
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         x0 = x1;
 626              	 .loc 1 327 0
 627 0598 3B6E     	 ldr r3,[r7,#96]
 628 059a 7B66     	 str r3,[r7,#100]
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         x1 = x2;
 629              	 .loc 1 328 0
 630 059c BB6B     	 ldr r3,[r7,#56]
 631 059e 3B66     	 str r3,[r7,#96]
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Decrement the loop counter */
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         k--;
 632              	 .loc 1 331 0
 633 05a0 FB6D     	 ldr r3,[r7,#92]
 634 05a2 013B     	 subs r3,r3,#1
 635 05a4 FB65     	 str r3,[r7,#92]
 636              	.L13:
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       {
 637              	 .loc 1 310 0
 638 05a6 FB6D     	 ldr r3,[r7,#92]
 639 05a8 002B     	 cmp r3,#0
 640 05aa 9FD1     	 bne .L14
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       }
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Store the results in the accumulators in the destination buffer. */
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       *pOut++ = (q31_t) (acc0 >> 31);
 641              	 .loc 1 335 0
 642 05ac D7F89410 	 ldr r1,[r7,#148]
 643 05b0 0B1D     	 adds r3,r1,#4
 644 05b2 C7F89430 	 str r3,[r7,#148]
 645 05b6 D7E91E23 	 ldrd r2,[r7,#120]
 646 05ba D00F     	 lsrs r0,r2,#31
 647 05bc 3862     	 str r0,[r7,#32]
 648 05be 386A     	 ldr r0,[r7,#32]
 649 05c0 40EA4300 	 orr r0,r0,r3,lsl#1
 650 05c4 3862     	 str r0,[r7,#32]
 651 05c6 DB17     	 asrs r3,r3,#31
 652 05c8 7B62     	 str r3,[r7,#36]
 653 05ca 3B6A     	 ldr r3,[r7,#32]
 654 05cc 0B60     	 str r3,[r1]
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       *pOut++ = (q31_t) (acc1 >> 31);
 655              	 .loc 1 336 0
 656 05ce D7F89410 	 ldr r1,[r7,#148]
 657 05d2 0B1D     	 adds r3,r1,#4
 658 05d4 C7F89430 	 str r3,[r7,#148]
 659 05d8 D7E91C23 	 ldrd r2,[r7,#112]
 660 05dc D00F     	 lsrs r0,r2,#31
 661 05de B861     	 str r0,[r7,#24]
 662 05e0 B869     	 ldr r0,[r7,#24]
 663 05e2 40EA4300 	 orr r0,r0,r3,lsl#1
 664 05e6 B861     	 str r0,[r7,#24]
 665 05e8 DB17     	 asrs r3,r3,#31
 666 05ea FB61     	 str r3,[r7,#28]
 667 05ec BB69     	 ldr r3,[r7,#24]
 668 05ee 0B60     	 str r3,[r1]
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       *pOut++ = (q31_t) (acc2 >> 31);
 669              	 .loc 1 337 0
 670 05f0 D7F89410 	 ldr r1,[r7,#148]
 671 05f4 0B1D     	 adds r3,r1,#4
 672 05f6 C7F89430 	 str r3,[r7,#148]
 673 05fa D7E91A23 	 ldrd r2,[r7,#104]
 674 05fe D00F     	 lsrs r0,r2,#31
 675 0600 3861     	 str r0,[r7,#16]
 676 0602 3869     	 ldr r0,[r7,#16]
 677 0604 40EA4300 	 orr r0,r0,r3,lsl#1
 678 0608 3861     	 str r0,[r7,#16]
 679 060a DB17     	 asrs r3,r3,#31
 680 060c 7B61     	 str r3,[r7,#20]
 681 060e 3B69     	 ldr r3,[r7,#16]
 682 0610 0B60     	 str r3,[r1]
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Increment the pointer pIn1 index, count by 3 */
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       count += 3u;
 683              	 .loc 1 340 0
 684 0612 BB6D     	 ldr r3,[r7,#88]
 685 0614 0333     	 adds r3,r3,#3
 686 0616 BB65     	 str r3,[r7,#88]
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       px = pIn1 + count;
 687              	 .loc 1 343 0
 688 0618 BB6D     	 ldr r3,[r7,#88]
 689 061a 9B00     	 lsls r3,r3,#2
 690 061c D7F89C20 	 ldr r2,[r7,#156]
 691 0620 1344     	 add r3,r3,r2
 692 0622 C7F89030 	 str r3,[r7,#144]
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       py = pSrc2;
 693              	 .loc 1 344 0
 694 0626 3B6C     	 ldr r3,[r7,#64]
 695 0628 C7F88C30 	 str r3,[r7,#140]
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Decrement the loop counter */
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       blkCnt--;
 696              	 .loc 1 347 0
 697 062c 7B6D     	 ldr r3,[r7,#84]
 698 062e 013B     	 subs r3,r3,#1
 699 0630 7B65     	 str r3,[r7,#84]
 700              	.L11:
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 701              	 .loc 1 240 0
 702 0632 7B6D     	 ldr r3,[r7,#84]
 703 0634 002B     	 cmp r3,#0
 704 0636 7FF422AE 	 bne .L15
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     }
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* If the blockSize2 is not a multiple of 3, compute any remaining output samples here.
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****      ** No loop unrolling is used. */
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     blkCnt = blockSize2 - 3 * (blockSize2 / 3);
 705              	 .loc 1 352 0
 706 063a 7A6C     	 ldr r2,[r7,#68]
 707 063c B84B     	 ldr r3,.L35
 708 063e A3FB0213 	 umull r1,r3,r3,r2
 709 0642 5908     	 lsrs r1,r3,#1
 710 0644 0B46     	 mov r3,r1
 711 0646 5B00     	 lsls r3,r3,#1
 712 0648 0B44     	 add r3,r3,r1
 713 064a D31A     	 subs r3,r2,r3
 714 064c 7B65     	 str r3,[r7,#84]
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     while (blkCnt > 0u)
 715              	 .loc 1 354 0
 716 064e E6E0     	 b .L16
 717              	.L21:
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Accumulator is made zero for every iteration */
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum = 0;
 718              	 .loc 1 357 0
 719 0650 4FF00002 	 mov r2,#0
 720 0654 4FF00003 	 mov r3,#0
 721 0658 C7E92023 	 strd r2,[r7,#128]
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       k = srcBLen >> 2u;
 722              	 .loc 1 360 0
 723 065c BB6A     	 ldr r3,[r7,#40]
 724 065e 9B08     	 lsrs r3,r3,#2
 725 0660 FB65     	 str r3,[r7,#92]
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       while (k > 0u)
 726              	 .loc 1 364 0
 727 0662 8AE0     	 b .L17
 728              	.L18:
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       {
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Perform the multiply-accumulates */
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         sum += (q63_t) * px++ * (*py--);
 729              	 .loc 1 367 0
 730 0664 D7F89030 	 ldr r3,[r7,#144]
 731 0668 1A1D     	 adds r2,r3,#4
 732 066a C7F89020 	 str r2,[r7,#144]
 733 066e 1B68     	 ldr r3,[r3]
 734 0670 1846     	 mov r0,r3
 735 0672 4FEAE071 	 asr r1,r0,#31
 736 0676 D7F88C30 	 ldr r3,[r7,#140]
 737 067a 1A1F     	 subs r2,r3,#4
 738 067c C7F88C20 	 str r2,[r7,#140]
 739 0680 1B68     	 ldr r3,[r3]
 740 0682 1A46     	 mov r2,r3
 741 0684 4FEAE273 	 asr r3,r2,#31
 742 0688 02FB01F5 	 mul r5,r2,r1
 743 068c 00FB03F4 	 mul r4,r0,r3
 744 0690 2C44     	 add r4,r4,r5
 745 0692 A0FB0223 	 umull r2,r3,r0,r2
 746 0696 E118     	 adds r1,r4,r3
 747 0698 0B46     	 mov r3,r1
 748 069a D7E92001 	 ldrd r0,[r7,#128]
 749 069e 1218     	 adds r2,r2,r0
 750 06a0 43EB0103 	 adc r3,r3,r1
 751 06a4 C7E92023 	 strd r2,[r7,#128]
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         sum += (q63_t) * px++ * (*py--);
 752              	 .loc 1 368 0
 753 06a8 D7F89030 	 ldr r3,[r7,#144]
 754 06ac 1A1D     	 adds r2,r3,#4
 755 06ae C7F89020 	 str r2,[r7,#144]
 756 06b2 1B68     	 ldr r3,[r3]
 757 06b4 1846     	 mov r0,r3
 758 06b6 4FEAE071 	 asr r1,r0,#31
 759 06ba D7F88C30 	 ldr r3,[r7,#140]
 760 06be 1A1F     	 subs r2,r3,#4
 761 06c0 C7F88C20 	 str r2,[r7,#140]
 762 06c4 1B68     	 ldr r3,[r3]
 763 06c6 1A46     	 mov r2,r3
 764 06c8 4FEAE273 	 asr r3,r2,#31
 765 06cc 02FB01F5 	 mul r5,r2,r1
 766 06d0 00FB03F4 	 mul r4,r0,r3
 767 06d4 2C44     	 add r4,r4,r5
 768 06d6 A0FB0223 	 umull r2,r3,r0,r2
 769 06da E118     	 adds r1,r4,r3
 770 06dc 0B46     	 mov r3,r1
 771 06de D7E92001 	 ldrd r0,[r7,#128]
 772 06e2 1218     	 adds r2,r2,r0
 773 06e4 43EB0103 	 adc r3,r3,r1
 774 06e8 C7E92023 	 strd r2,[r7,#128]
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         sum += (q63_t) * px++ * (*py--);
 775              	 .loc 1 369 0
 776 06ec D7F89030 	 ldr r3,[r7,#144]
 777 06f0 1A1D     	 adds r2,r3,#4
 778 06f2 C7F89020 	 str r2,[r7,#144]
 779 06f6 1B68     	 ldr r3,[r3]
 780 06f8 1846     	 mov r0,r3
 781 06fa 4FEAE071 	 asr r1,r0,#31
 782 06fe D7F88C30 	 ldr r3,[r7,#140]
 783 0702 1A1F     	 subs r2,r3,#4
 784 0704 C7F88C20 	 str r2,[r7,#140]
 785 0708 1B68     	 ldr r3,[r3]
 786 070a 1A46     	 mov r2,r3
 787 070c 4FEAE273 	 asr r3,r2,#31
 788 0710 02FB01F5 	 mul r5,r2,r1
 789 0714 00FB03F4 	 mul r4,r0,r3
 790 0718 2C44     	 add r4,r4,r5
 791 071a A0FB0223 	 umull r2,r3,r0,r2
 792 071e E118     	 adds r1,r4,r3
 793 0720 0B46     	 mov r3,r1
 794 0722 D7E92001 	 ldrd r0,[r7,#128]
 795 0726 1218     	 adds r2,r2,r0
 796 0728 43EB0103 	 adc r3,r3,r1
 797 072c C7E92023 	 strd r2,[r7,#128]
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         sum += (q63_t) * px++ * (*py--);
 798              	 .loc 1 370 0
 799 0730 D7F89030 	 ldr r3,[r7,#144]
 800 0734 1A1D     	 adds r2,r3,#4
 801 0736 C7F89020 	 str r2,[r7,#144]
 802 073a 1B68     	 ldr r3,[r3]
 803 073c 1846     	 mov r0,r3
 804 073e 4FEAE071 	 asr r1,r0,#31
 805 0742 D7F88C30 	 ldr r3,[r7,#140]
 806 0746 1A1F     	 subs r2,r3,#4
 807 0748 C7F88C20 	 str r2,[r7,#140]
 808 074c 1B68     	 ldr r3,[r3]
 809 074e 1A46     	 mov r2,r3
 810 0750 4FEAE273 	 asr r3,r2,#31
 811 0754 02FB01F5 	 mul r5,r2,r1
 812 0758 00FB03F4 	 mul r4,r0,r3
 813 075c 2C44     	 add r4,r4,r5
 814 075e A0FB0223 	 umull r2,r3,r0,r2
 815 0762 E118     	 adds r1,r4,r3
 816 0764 0B46     	 mov r3,r1
 817 0766 D7E92001 	 ldrd r0,[r7,#128]
 818 076a 1218     	 adds r2,r2,r0
 819 076c 43EB0103 	 adc r3,r3,r1
 820 0770 C7E92023 	 strd r2,[r7,#128]
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Decrement the loop counter */
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         k--;
 821              	 .loc 1 373 0
 822 0774 FB6D     	 ldr r3,[r7,#92]
 823 0776 013B     	 subs r3,r3,#1
 824 0778 FB65     	 str r3,[r7,#92]
 825              	.L17:
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       {
 826              	 .loc 1 364 0
 827 077a FB6D     	 ldr r3,[r7,#92]
 828 077c 002B     	 cmp r3,#0
 829 077e 7FF471AF 	 bne .L18
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       }
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****        ** No loop unrolling is used. */
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       k = srcBLen % 0x4u;
 830              	 .loc 1 378 0
 831 0782 BB6A     	 ldr r3,[r7,#40]
 832 0784 03F00303 	 and r3,r3,#3
 833 0788 FB65     	 str r3,[r7,#92]
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       while (k > 0u)
 834              	 .loc 1 380 0
 835 078a 24E0     	 b .L19
 836              	.L20:
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       {
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Perform the multiply-accumulate */
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         sum += (q63_t) * px++ * (*py--);
 837              	 .loc 1 383 0
 838 078c D7F89030 	 ldr r3,[r7,#144]
 839 0790 1A1D     	 adds r2,r3,#4
 840 0792 C7F89020 	 str r2,[r7,#144]
 841 0796 1B68     	 ldr r3,[r3]
 842 0798 1846     	 mov r0,r3
 843 079a 4FEAE071 	 asr r1,r0,#31
 844 079e D7F88C30 	 ldr r3,[r7,#140]
 845 07a2 1A1F     	 subs r2,r3,#4
 846 07a4 C7F88C20 	 str r2,[r7,#140]
 847 07a8 1B68     	 ldr r3,[r3]
 848 07aa 1A46     	 mov r2,r3
 849 07ac 4FEAE273 	 asr r3,r2,#31
 850 07b0 02FB01F5 	 mul r5,r2,r1
 851 07b4 00FB03F4 	 mul r4,r0,r3
 852 07b8 2C44     	 add r4,r4,r5
 853 07ba A0FB0223 	 umull r2,r3,r0,r2
 854 07be E118     	 adds r1,r4,r3
 855 07c0 0B46     	 mov r3,r1
 856 07c2 D7E92001 	 ldrd r0,[r7,#128]
 857 07c6 1218     	 adds r2,r2,r0
 858 07c8 43EB0103 	 adc r3,r3,r1
 859 07cc C7E92023 	 strd r2,[r7,#128]
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Decrement the loop counter */
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         k--;
 860              	 .loc 1 386 0
 861 07d0 FB6D     	 ldr r3,[r7,#92]
 862 07d2 013B     	 subs r3,r3,#1
 863 07d4 FB65     	 str r3,[r7,#92]
 864              	.L19:
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       {
 865              	 .loc 1 380 0
 866 07d6 FB6D     	 ldr r3,[r7,#92]
 867 07d8 002B     	 cmp r3,#0
 868 07da D7D1     	 bne .L20
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       }
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Store the result in the accumulator in the destination buffer. */
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       *pOut++ = (q31_t) (sum >> 31);
 869              	 .loc 1 390 0
 870 07dc D7F89410 	 ldr r1,[r7,#148]
 871 07e0 0B1D     	 adds r3,r1,#4
 872 07e2 C7F89430 	 str r3,[r7,#148]
 873 07e6 D7E92023 	 ldrd r2,[r7,#128]
 874 07ea D00F     	 lsrs r0,r2,#31
 875 07ec B860     	 str r0,[r7,#8]
 876 07ee B868     	 ldr r0,[r7,#8]
 877 07f0 40EA4300 	 orr r0,r0,r3,lsl#1
 878 07f4 B860     	 str r0,[r7,#8]
 879 07f6 DB17     	 asrs r3,r3,#31
 880 07f8 FB60     	 str r3,[r7,#12]
 881 07fa BB68     	 ldr r3,[r7,#8]
 882 07fc 0B60     	 str r3,[r1]
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Increment the MAC count */
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       count++;
 883              	 .loc 1 393 0
 884 07fe BB6D     	 ldr r3,[r7,#88]
 885 0800 0133     	 adds r3,r3,#1
 886 0802 BB65     	 str r3,[r7,#88]
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       px = pIn1 + count;
 887              	 .loc 1 396 0
 888 0804 BB6D     	 ldr r3,[r7,#88]
 889 0806 9B00     	 lsls r3,r3,#2
 890 0808 D7F89C20 	 ldr r2,[r7,#156]
 891 080c 1344     	 add r3,r3,r2
 892 080e C7F89030 	 str r3,[r7,#144]
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       py = pSrc2;
 893              	 .loc 1 397 0
 894 0812 3B6C     	 ldr r3,[r7,#64]
 895 0814 C7F88C30 	 str r3,[r7,#140]
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Decrement the loop counter */
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       blkCnt--;
 896              	 .loc 1 400 0
 897 0818 7B6D     	 ldr r3,[r7,#84]
 898 081a 013B     	 subs r3,r3,#1
 899 081c 7B65     	 str r3,[r7,#84]
 900              	.L16:
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 901              	 .loc 1 354 0
 902 081e 7B6D     	 ldr r3,[r7,#84]
 903 0820 002B     	 cmp r3,#0
 904 0822 7FF415AF 	 bne .L21
 905 0826 55E0     	 b .L22
 906              	.L10:
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     }
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   }
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   else
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   {
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* If the srcBLen is not a multiple of 4,
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****      * the blockSize2 loop cannot be unrolled by 4 */
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     blkCnt = blockSize2;
 907              	 .loc 1 407 0
 908 0828 7B6C     	 ldr r3,[r7,#68]
 909 082a 7B65     	 str r3,[r7,#84]
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     while (blkCnt > 0u)
 910              	 .loc 1 409 0
 911 082c 4FE0     	 b .L23
 912              	.L26:
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Accumulator is made zero for every iteration */
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum = 0;
 913              	 .loc 1 412 0
 914 082e 4FF00002 	 mov r2,#0
 915 0832 4FF00003 	 mov r3,#0
 916 0836 C7E92023 	 strd r2,[r7,#128]
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* srcBLen number of MACS should be performed */
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       k = srcBLen;
 917              	 .loc 1 415 0
 918 083a BB6A     	 ldr r3,[r7,#40]
 919 083c FB65     	 str r3,[r7,#92]
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       while (k > 0u)
 920              	 .loc 1 417 0
 921 083e 24E0     	 b .L24
 922              	.L25:
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       {
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Perform the multiply-accumulate */
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         sum += (q63_t) * px++ * (*py--);
 923              	 .loc 1 420 0
 924 0840 D7F89030 	 ldr r3,[r7,#144]
 925 0844 1A1D     	 adds r2,r3,#4
 926 0846 C7F89020 	 str r2,[r7,#144]
 927 084a 1B68     	 ldr r3,[r3]
 928 084c 1846     	 mov r0,r3
 929 084e 4FEAE071 	 asr r1,r0,#31
 930 0852 D7F88C30 	 ldr r3,[r7,#140]
 931 0856 1A1F     	 subs r2,r3,#4
 932 0858 C7F88C20 	 str r2,[r7,#140]
 933 085c 1B68     	 ldr r3,[r3]
 934 085e 1A46     	 mov r2,r3
 935 0860 4FEAE273 	 asr r3,r2,#31
 936 0864 02FB01F5 	 mul r5,r2,r1
 937 0868 00FB03F4 	 mul r4,r0,r3
 938 086c 2C44     	 add r4,r4,r5
 939 086e A0FB0223 	 umull r2,r3,r0,r2
 940 0872 E118     	 adds r1,r4,r3
 941 0874 0B46     	 mov r3,r1
 942 0876 D7E92001 	 ldrd r0,[r7,#128]
 943 087a 1218     	 adds r2,r2,r0
 944 087c 43EB0103 	 adc r3,r3,r1
 945 0880 C7E92023 	 strd r2,[r7,#128]
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* Decrement the loop counter */
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         k--;
 946              	 .loc 1 423 0
 947 0884 FB6D     	 ldr r3,[r7,#92]
 948 0886 013B     	 subs r3,r3,#1
 949 0888 FB65     	 str r3,[r7,#92]
 950              	.L24:
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       {
 951              	 .loc 1 417 0
 952 088a FB6D     	 ldr r3,[r7,#92]
 953 088c 002B     	 cmp r3,#0
 954 088e D7D1     	 bne .L25
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       }
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Store the result in the accumulator in the destination buffer. */
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       *pOut++ = (q31_t) (sum >> 31);
 955              	 .loc 1 427 0
 956 0890 D7F89410 	 ldr r1,[r7,#148]
 957 0894 0B1D     	 adds r3,r1,#4
 958 0896 C7F89430 	 str r3,[r7,#148]
 959 089a D7E92023 	 ldrd r2,[r7,#128]
 960 089e 4FEAD278 	 lsr r8,r2,#31
 961 08a2 48EA4308 	 orr r8,r8,r3,lsl#1
 962 08a6 4FEAE379 	 asr r9,r3,#31
 963 08aa 4346     	 mov r3,r8
 964 08ac 0B60     	 str r3,[r1]
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Increment the MAC count */
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       count++;
 965              	 .loc 1 430 0
 966 08ae BB6D     	 ldr r3,[r7,#88]
 967 08b0 0133     	 adds r3,r3,#1
 968 08b2 BB65     	 str r3,[r7,#88]
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       px = pIn1 + count;
 969              	 .loc 1 433 0
 970 08b4 BB6D     	 ldr r3,[r7,#88]
 971 08b6 9B00     	 lsls r3,r3,#2
 972 08b8 D7F89C20 	 ldr r2,[r7,#156]
 973 08bc 1344     	 add r3,r3,r2
 974 08be C7F89030 	 str r3,[r7,#144]
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       py = pSrc2;
 975              	 .loc 1 434 0
 976 08c2 3B6C     	 ldr r3,[r7,#64]
 977 08c4 C7F88C30 	 str r3,[r7,#140]
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Decrement the loop counter */
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       blkCnt--;
 978              	 .loc 1 437 0
 979 08c8 7B6D     	 ldr r3,[r7,#84]
 980 08ca 013B     	 subs r3,r3,#1
 981 08cc 7B65     	 str r3,[r7,#84]
 982              	.L23:
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 983              	 .loc 1 409 0
 984 08ce 7B6D     	 ldr r3,[r7,#84]
 985 08d0 002B     	 cmp r3,#0
 986 08d2 ACD1     	 bne .L26
 987              	.L22:
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     }
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   }
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* --------------------------
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * Initializations of stage3
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * -------------------------*/
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[srcAL
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[srcAL
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * ....
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * sum +=  x[srcALen-1] * y[srcBLen-1]
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    */
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****      The blockSize3 variable holds the number of MAC operations performed */
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* Working pointer of inputA */
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
 988              	 .loc 1 457 0
 989 08d4 3A6B     	 ldr r2,[r7,#48]
 990 08d6 BB6A     	 ldr r3,[r7,#40]
 991 08d8 D31A     	 subs r3,r2,r3
 992 08da 0133     	 adds r3,r3,#1
 993 08dc 9B00     	 lsls r3,r3,#2
 994 08de D7F89C20 	 ldr r2,[r7,#156]
 995 08e2 1344     	 add r3,r3,r2
 996 08e4 C7F88830 	 str r3,[r7,#136]
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   px = pSrc1;
 997              	 .loc 1 458 0
 998 08e8 D7F88830 	 ldr r3,[r7,#136]
 999 08ec C7F89030 	 str r3,[r7,#144]
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* Working pointer of inputB */
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 1000              	 .loc 1 461 0
 1001 08f0 BB6A     	 ldr r3,[r7,#40]
 1002 08f2 03F18043 	 add r3,r3,#1073741824
 1003 08f6 013B     	 subs r3,r3,#1
 1004 08f8 9B00     	 lsls r3,r3,#2
 1005 08fa D7F89820 	 ldr r2,[r7,#152]
 1006 08fe 1344     	 add r3,r3,r2
 1007 0900 3B64     	 str r3,[r7,#64]
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   py = pSrc2;
 1008              	 .loc 1 462 0
 1009 0902 3B6C     	 ldr r3,[r7,#64]
 1010 0904 C7F88C30 	 str r3,[r7,#140]
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* -------------------
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * Stage3 process
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****    * ------------------*/
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   while (blockSize3 > 0u)
 1011              	 .loc 1 468 0
 1012 0908 E8E0     	 b .L27
 1013              	.L32:
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   {
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Accumulator is made zero for every iteration */
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     sum = 0;
 1014              	 .loc 1 471 0
 1015 090a 4FF00002 	 mov r2,#0
 1016 090e 4FF00003 	 mov r3,#0
 1017 0912 C7E92023 	 strd r2,[r7,#128]
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     k = blockSize3 >> 2u;
 1018              	 .loc 1 474 0
 1019 0916 FB6C     	 ldr r3,[r7,#76]
 1020 0918 9B08     	 lsrs r3,r3,#2
 1021 091a FB65     	 str r3,[r7,#92]
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     while (k > 0u)
 1022              	 .loc 1 478 0
 1023 091c 8DE0     	 b .L28
 1024              	.L36:
 1025 091e 00BF     	 .align 2
 1026              	.L35:
 1027 0920 ABAAAAAA 	 .word -1431655765
 1028              	.L29:
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* sum += x[srcALen - srcBLen + 1] * y[srcBLen - 1] */
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum += (q63_t) * px++ * (*py--);
 1029              	 .loc 1 481 0
 1030 0924 D7F89030 	 ldr r3,[r7,#144]
 1031 0928 1A1D     	 adds r2,r3,#4
 1032 092a C7F89020 	 str r2,[r7,#144]
 1033 092e 1B68     	 ldr r3,[r3]
 1034 0930 1846     	 mov r0,r3
 1035 0932 4FEAE071 	 asr r1,r0,#31
 1036 0936 D7F88C30 	 ldr r3,[r7,#140]
 1037 093a 1A1F     	 subs r2,r3,#4
 1038 093c C7F88C20 	 str r2,[r7,#140]
 1039 0940 1B68     	 ldr r3,[r3]
 1040 0942 1A46     	 mov r2,r3
 1041 0944 4FEAE273 	 asr r3,r2,#31
 1042 0948 02FB01F5 	 mul r5,r2,r1
 1043 094c 00FB03F4 	 mul r4,r0,r3
 1044 0950 2C44     	 add r4,r4,r5
 1045 0952 A0FB0223 	 umull r2,r3,r0,r2
 1046 0956 E118     	 adds r1,r4,r3
 1047 0958 0B46     	 mov r3,r1
 1048 095a D7E92001 	 ldrd r0,[r7,#128]
 1049 095e 1218     	 adds r2,r2,r0
 1050 0960 43EB0103 	 adc r3,r3,r1
 1051 0964 C7E92023 	 strd r2,[r7,#128]
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* sum += x[srcALen - srcBLen + 2] * y[srcBLen - 2] */
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum += (q63_t) * px++ * (*py--);
 1052              	 .loc 1 483 0
 1053 0968 D7F89030 	 ldr r3,[r7,#144]
 1054 096c 1A1D     	 adds r2,r3,#4
 1055 096e C7F89020 	 str r2,[r7,#144]
 1056 0972 1B68     	 ldr r3,[r3]
 1057 0974 1846     	 mov r0,r3
 1058 0976 4FEAE071 	 asr r1,r0,#31
 1059 097a D7F88C30 	 ldr r3,[r7,#140]
 1060 097e 1A1F     	 subs r2,r3,#4
 1061 0980 C7F88C20 	 str r2,[r7,#140]
 1062 0984 1B68     	 ldr r3,[r3]
 1063 0986 1A46     	 mov r2,r3
 1064 0988 4FEAE273 	 asr r3,r2,#31
 1065 098c 02FB01F5 	 mul r5,r2,r1
 1066 0990 00FB03F4 	 mul r4,r0,r3
 1067 0994 2C44     	 add r4,r4,r5
 1068 0996 A0FB0223 	 umull r2,r3,r0,r2
 1069 099a E118     	 adds r1,r4,r3
 1070 099c 0B46     	 mov r3,r1
 1071 099e D7E92001 	 ldrd r0,[r7,#128]
 1072 09a2 1218     	 adds r2,r2,r0
 1073 09a4 43EB0103 	 adc r3,r3,r1
 1074 09a8 C7E92023 	 strd r2,[r7,#128]
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* sum += x[srcALen - srcBLen + 3] * y[srcBLen - 3] */
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum += (q63_t) * px++ * (*py--);
 1075              	 .loc 1 485 0
 1076 09ac D7F89030 	 ldr r3,[r7,#144]
 1077 09b0 1A1D     	 adds r2,r3,#4
 1078 09b2 C7F89020 	 str r2,[r7,#144]
 1079 09b6 1B68     	 ldr r3,[r3]
 1080 09b8 1846     	 mov r0,r3
 1081 09ba 4FEAE071 	 asr r1,r0,#31
 1082 09be D7F88C30 	 ldr r3,[r7,#140]
 1083 09c2 1A1F     	 subs r2,r3,#4
 1084 09c4 C7F88C20 	 str r2,[r7,#140]
 1085 09c8 1B68     	 ldr r3,[r3]
 1086 09ca 1A46     	 mov r2,r3
 1087 09cc 4FEAE273 	 asr r3,r2,#31
 1088 09d0 02FB01F5 	 mul r5,r2,r1
 1089 09d4 00FB03F4 	 mul r4,r0,r3
 1090 09d8 2C44     	 add r4,r4,r5
 1091 09da A0FB0223 	 umull r2,r3,r0,r2
 1092 09de E118     	 adds r1,r4,r3
 1093 09e0 0B46     	 mov r3,r1
 1094 09e2 D7E92001 	 ldrd r0,[r7,#128]
 1095 09e6 1218     	 adds r2,r2,r0
 1096 09e8 43EB0103 	 adc r3,r3,r1
 1097 09ec C7E92023 	 strd r2,[r7,#128]
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* sum += x[srcALen - srcBLen + 4] * y[srcBLen - 4] */
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum += (q63_t) * px++ * (*py--);
 1098              	 .loc 1 487 0
 1099 09f0 D7F89030 	 ldr r3,[r7,#144]
 1100 09f4 1A1D     	 adds r2,r3,#4
 1101 09f6 C7F89020 	 str r2,[r7,#144]
 1102 09fa 1B68     	 ldr r3,[r3]
 1103 09fc 1846     	 mov r0,r3
 1104 09fe 4FEAE071 	 asr r1,r0,#31
 1105 0a02 D7F88C30 	 ldr r3,[r7,#140]
 1106 0a06 1A1F     	 subs r2,r3,#4
 1107 0a08 C7F88C20 	 str r2,[r7,#140]
 1108 0a0c 1B68     	 ldr r3,[r3]
 1109 0a0e 1A46     	 mov r2,r3
 1110 0a10 4FEAE273 	 asr r3,r2,#31
 1111 0a14 02FB01F5 	 mul r5,r2,r1
 1112 0a18 00FB03F4 	 mul r4,r0,r3
 1113 0a1c 2C44     	 add r4,r4,r5
 1114 0a1e A0FB0223 	 umull r2,r3,r0,r2
 1115 0a22 E118     	 adds r1,r4,r3
 1116 0a24 0B46     	 mov r3,r1
 1117 0a26 D7E92001 	 ldrd r0,[r7,#128]
 1118 0a2a 1218     	 adds r2,r2,r0
 1119 0a2c 43EB0103 	 adc r3,r3,r1
 1120 0a30 C7E92023 	 strd r2,[r7,#128]
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Decrement the loop counter */
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       k--;
 1121              	 .loc 1 490 0
 1122 0a34 FB6D     	 ldr r3,[r7,#92]
 1123 0a36 013B     	 subs r3,r3,#1
 1124 0a38 FB65     	 str r3,[r7,#92]
 1125              	.L28:
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 1126              	 .loc 1 478 0
 1127 0a3a FB6D     	 ldr r3,[r7,#92]
 1128 0a3c 002B     	 cmp r3,#0
 1129 0a3e 7FF471AF 	 bne .L29
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     }
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* If the blockSize3 is not a multiple of 4, compute any remaining MACs here.
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****      ** No loop unrolling is used. */
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     k = blockSize3 % 0x4u;
 1130              	 .loc 1 495 0
 1131 0a42 FB6C     	 ldr r3,[r7,#76]
 1132 0a44 03F00303 	 and r3,r3,#3
 1133 0a48 FB65     	 str r3,[r7,#92]
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     while (k > 0u)
 1134              	 .loc 1 497 0
 1135 0a4a 24E0     	 b .L30
 1136              	.L31:
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Perform the multiply-accumulate */
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       sum += (q63_t) * px++ * (*py--);
 1137              	 .loc 1 500 0
 1138 0a4c D7F89030 	 ldr r3,[r7,#144]
 1139 0a50 1A1D     	 adds r2,r3,#4
 1140 0a52 C7F89020 	 str r2,[r7,#144]
 1141 0a56 1B68     	 ldr r3,[r3]
 1142 0a58 1846     	 mov r0,r3
 1143 0a5a 4FEAE071 	 asr r1,r0,#31
 1144 0a5e D7F88C30 	 ldr r3,[r7,#140]
 1145 0a62 1A1F     	 subs r2,r3,#4
 1146 0a64 C7F88C20 	 str r2,[r7,#140]
 1147 0a68 1B68     	 ldr r3,[r3]
 1148 0a6a 1A46     	 mov r2,r3
 1149 0a6c 4FEAE273 	 asr r3,r2,#31
 1150 0a70 02FB01F5 	 mul r5,r2,r1
 1151 0a74 00FB03F4 	 mul r4,r0,r3
 1152 0a78 2C44     	 add r4,r4,r5
 1153 0a7a A0FB0223 	 umull r2,r3,r0,r2
 1154 0a7e E118     	 adds r1,r4,r3
 1155 0a80 0B46     	 mov r3,r1
 1156 0a82 D7E92001 	 ldrd r0,[r7,#128]
 1157 0a86 1218     	 adds r2,r2,r0
 1158 0a88 43EB0103 	 adc r3,r3,r1
 1159 0a8c C7E92023 	 strd r2,[r7,#128]
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Decrement the loop counter */
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       k--;
 1160              	 .loc 1 503 0
 1161 0a90 FB6D     	 ldr r3,[r7,#92]
 1162 0a92 013B     	 subs r3,r3,#1
 1163 0a94 FB65     	 str r3,[r7,#92]
 1164              	.L30:
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 1165              	 .loc 1 497 0
 1166 0a96 FB6D     	 ldr r3,[r7,#92]
 1167 0a98 002B     	 cmp r3,#0
 1168 0a9a D7D1     	 bne .L31
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     }
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Store the result in the accumulator in the destination buffer. */
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     *pOut++ = (q31_t) (sum >> 31);
 1169              	 .loc 1 507 0
 1170 0a9c D7F89410 	 ldr r1,[r7,#148]
 1171 0aa0 0B1D     	 adds r3,r1,#4
 1172 0aa2 C7F89430 	 str r3,[r7,#148]
 1173 0aa6 D7E92023 	 ldrd r2,[r7,#128]
 1174 0aaa D00F     	 lsrs r0,r2,#31
 1175 0aac 3860     	 str r0,[r7]
 1176 0aae 3868     	 ldr r0,[r7]
 1177 0ab0 40EA4300 	 orr r0,r0,r3,lsl#1
 1178 0ab4 3860     	 str r0,[r7]
 1179 0ab6 DB17     	 asrs r3,r3,#31
 1180 0ab8 7B60     	 str r3,[r7,#4]
 1181 0aba 3B68     	 ldr r3,[r7]
 1182 0abc 0B60     	 str r3,[r1]
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     px = ++pSrc1;
 1183              	 .loc 1 510 0
 1184 0abe D7F88830 	 ldr r3,[r7,#136]
 1185 0ac2 0433     	 adds r3,r3,#4
 1186 0ac4 C7F88830 	 str r3,[r7,#136]
 1187 0ac8 D7F88830 	 ldr r3,[r7,#136]
 1188 0acc C7F89030 	 str r3,[r7,#144]
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     py = pSrc2;
 1189              	 .loc 1 511 0
 1190 0ad0 3B6C     	 ldr r3,[r7,#64]
 1191 0ad2 C7F88C30 	 str r3,[r7,#140]
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Decrement the loop counter */
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     blockSize3--;
 1192              	 .loc 1 514 0
 1193 0ad6 FB6C     	 ldr r3,[r7,#76]
 1194 0ad8 013B     	 subs r3,r3,#1
 1195 0ada FB64     	 str r3,[r7,#76]
 1196              	.L27:
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   {
 1197              	 .loc 1 468 0
 1198 0adc FB6C     	 ldr r3,[r7,#76]
 1199 0ade 002B     	 cmp r3,#0
 1200 0ae0 7FF413AF 	 bne .L32
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   }
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** #else
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* Run the below code for Cortex-M0 */
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t *pIn1 = pSrcA;                           /* input pointer */
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q31_t *pIn2 = pSrcB;                           /* coefficient pointer */
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   q63_t sum;                                     /* Accumulator */
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   uint32_t i, j;                                 /* loop counter */
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   /* Loop to calculate output of convolution for output length number of times */
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   for (i = 0; i < (srcALen + srcBLen - 1); i++)
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   {
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Initialize sum with zero to carry on MAC operations */
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     sum = 0;
 531:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 532:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Loop to perform MAC operations according to convolution equation */
 533:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     for (j = 0; j <= i; j++)
 534:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     {
 535:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       /* Check the array limitations */
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       if (((i - j) < srcBLen) && (j < srcALen))
 537:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       {
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         /* z[i] += x[i-j] * y[j] */
 539:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****         sum += ((q63_t) pIn1[j] * (pIn2[i - j]));
 540:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****       }
 541:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     }
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 543:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     /* Store the output in the destination buffer */
 544:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****     pDst[i] = (q31_t) (sum >> 31u);
 545:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c ****   }
 546:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** #endif /*     #if defined (ARM_MATH_DSP) */
 548:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** 
 549:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_q31.c **** }
 1201              	 .loc 1 549 0
 1202 0ae4 A437     	 adds r7,r7,#164
 1203              	.LCFI3:
 1204              	 .cfi_def_cfa_offset 28
 1205 0ae6 BD46     	 mov sp,r7
 1206              	.LCFI4:
 1207              	 .cfi_def_cfa_register 13
 1208              	 
 1209 0ae8 BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 1210              	.LCFI5:
 1211              	 .cfi_restore 11
 1212              	 .cfi_restore 10
 1213              	 .cfi_restore 9
 1214              	 .cfi_restore 8
 1215              	 .cfi_restore 7
 1216              	 .cfi_restore 5
 1217              	 .cfi_restore 4
 1218              	 .cfi_def_cfa_offset 0
 1219 0aec 7047     	 bx lr
 1220              	 .cfi_endproc
 1221              	.LFE135:
 1223              	 .text
 1224              	.Letext0:
 1225              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1226              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1227              	 .file 4 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_q31.c
    {standard input}:20     .text.arm_conv_q31:00000000 $t
    {standard input}:25     .text.arm_conv_q31:00000000 arm_conv_q31
    {standard input}:561    .text.arm_conv_q31:000004e8 $d
    {standard input}:564    .text.arm_conv_q31:000004ec $t
    {standard input}:1027   .text.arm_conv_q31:00000920 $d
    {standard input}:1030   .text.arm_conv_q31:00000924 $t
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
