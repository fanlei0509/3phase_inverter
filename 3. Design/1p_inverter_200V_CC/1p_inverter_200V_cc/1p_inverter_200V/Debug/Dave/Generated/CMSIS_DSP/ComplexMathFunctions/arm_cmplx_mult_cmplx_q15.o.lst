   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_cmplx_mult_cmplx_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_cmplx_mult_cmplx_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_cmplx_mult_cmplx_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_cmplx_mult_cmplx_q15:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Title:        arm_cmplx_mult_cmplx_q15.c
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Description:  Q15 complex-by-complex multiplication
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @ingroup groupCmplxMath
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @addtogroup CmplxByCmplxMult
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @brief  Q15 complex-by-complex multiplication
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[in]  *pSrcA points to the first input vector
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[in]  *pSrcB points to the second input vector
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[out]  *pDst  points to the output vector
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[in]  numSamples number of complex samples in each vector
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @return none.
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * \par
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * The function implements 1.15 by 1.15 multiplications and finally output is converted into 3.13 f
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** void arm_cmplx_mult_cmplx_q15(
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t * pSrcA,
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t * pSrcB,
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t * pDst,
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   uint32_t numSamples)
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** {
  28              	 .loc 1 58 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 89B0     	 sub sp,sp,#36
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 40
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t a, b, c, d;                              /* Temporary variables to store real and imaginary
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #if defined (ARM_MATH_DSP)
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   uint32_t blkCnt;                               /* loop counters */
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* loop Unrolling */
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = numSamples >> 2u;
  47              	 .loc 1 67 0
  48 000e 3B68     	 ldr r3,[r7]
  49 0010 9B08     	 lsrs r3,r3,#2
  50 0012 FB61     	 str r3,[r7,#28]
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while (blkCnt > 0u)
  51              	 .loc 1 71 0
  52 0014 0AE1     	 b .L2
  53              	.L3:
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
  54              	 .loc 1 75 0
  55 0016 FB68     	 ldr r3,[r7,#12]
  56 0018 9A1C     	 adds r2,r3,#2
  57 001a FA60     	 str r2,[r7,#12]
  58 001c 1B88     	 ldrh r3,[r3]
  59 001e 7B83     	 strh r3,[r7,#26]
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
  60              	 .loc 1 76 0
  61 0020 FB68     	 ldr r3,[r7,#12]
  62 0022 9A1C     	 adds r2,r3,#2
  63 0024 FA60     	 str r2,[r7,#12]
  64 0026 1B88     	 ldrh r3,[r3]
  65 0028 3B83     	 strh r3,[r7,#24]
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
  66              	 .loc 1 77 0
  67 002a BB68     	 ldr r3,[r7,#8]
  68 002c 9A1C     	 adds r2,r3,#2
  69 002e BA60     	 str r2,[r7,#8]
  70 0030 1B88     	 ldrh r3,[r3]
  71 0032 FB82     	 strh r3,[r7,#22]
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
  72              	 .loc 1 78 0
  73 0034 BB68     	 ldr r3,[r7,#8]
  74 0036 9A1C     	 adds r2,r3,#2
  75 0038 BA60     	 str r2,[r7,#8]
  76 003a 1B88     	 ldrh r3,[r3]
  77 003c BB82     	 strh r3,[r7,#20]
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
  78              	 .loc 1 81 0
  79 003e 7B68     	 ldr r3,[r7,#4]
  80 0040 9A1C     	 adds r2,r3,#2
  81 0042 7A60     	 str r2,[r7,#4]
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
  82              	 .loc 1 82 0
  83 0044 B7F91A20 	 ldrsh r2,[r7,#26]
  84 0048 B7F91610 	 ldrsh r1,[r7,#22]
  85 004c 01FB02F2 	 mul r2,r1,r2
  86 0050 5214     	 asrs r2,r2,#17
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
  87              	 .loc 1 81 0
  88 0052 91B2     	 uxth r1,r2
  89              	 .loc 1 82 0
  90 0054 B7F91820 	 ldrsh r2,[r7,#24]
  91 0058 B7F91400 	 ldrsh r0,[r7,#20]
  92 005c 00FB02F2 	 mul r2,r0,r2
  93 0060 5214     	 asrs r2,r2,#17
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
  94              	 .loc 1 81 0
  95 0062 92B2     	 uxth r2,r2
  96 0064 8A1A     	 subs r2,r1,r2
  97 0066 92B2     	 uxth r2,r2
  98 0068 92B2     	 uxth r2,r2
  99 006a 1A80     	 strh r2,[r3]
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 100              	 .loc 1 84 0
 101 006c 7B68     	 ldr r3,[r7,#4]
 102 006e 9A1C     	 adds r2,r3,#2
 103 0070 7A60     	 str r2,[r7,#4]
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 104              	 .loc 1 85 0
 105 0072 B7F91A20 	 ldrsh r2,[r7,#26]
 106 0076 B7F91410 	 ldrsh r1,[r7,#20]
 107 007a 01FB02F2 	 mul r2,r1,r2
 108 007e 5214     	 asrs r2,r2,#17
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 109              	 .loc 1 84 0
 110 0080 91B2     	 uxth r1,r2
 111              	 .loc 1 85 0
 112 0082 B7F91820 	 ldrsh r2,[r7,#24]
 113 0086 B7F91600 	 ldrsh r0,[r7,#22]
 114 008a 00FB02F2 	 mul r2,r0,r2
 115 008e 5214     	 asrs r2,r2,#17
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 116              	 .loc 1 84 0
 117 0090 92B2     	 uxth r2,r2
 118 0092 0A44     	 add r2,r2,r1
 119 0094 92B2     	 uxth r2,r2
 120 0096 92B2     	 uxth r2,r2
 121 0098 1A80     	 strh r2,[r3]
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 122              	 .loc 1 87 0
 123 009a FB68     	 ldr r3,[r7,#12]
 124 009c 9A1C     	 adds r2,r3,#2
 125 009e FA60     	 str r2,[r7,#12]
 126 00a0 1B88     	 ldrh r3,[r3]
 127 00a2 7B83     	 strh r3,[r7,#26]
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 128              	 .loc 1 88 0
 129 00a4 FB68     	 ldr r3,[r7,#12]
 130 00a6 9A1C     	 adds r2,r3,#2
 131 00a8 FA60     	 str r2,[r7,#12]
 132 00aa 1B88     	 ldrh r3,[r3]
 133 00ac 3B83     	 strh r3,[r7,#24]
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 134              	 .loc 1 89 0
 135 00ae BB68     	 ldr r3,[r7,#8]
 136 00b0 9A1C     	 adds r2,r3,#2
 137 00b2 BA60     	 str r2,[r7,#8]
 138 00b4 1B88     	 ldrh r3,[r3]
 139 00b6 FB82     	 strh r3,[r7,#22]
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 140              	 .loc 1 90 0
 141 00b8 BB68     	 ldr r3,[r7,#8]
 142 00ba 9A1C     	 adds r2,r3,#2
 143 00bc BA60     	 str r2,[r7,#8]
 144 00be 1B88     	 ldrh r3,[r3]
 145 00c0 BB82     	 strh r3,[r7,#20]
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 146              	 .loc 1 93 0
 147 00c2 7B68     	 ldr r3,[r7,#4]
 148 00c4 9A1C     	 adds r2,r3,#2
 149 00c6 7A60     	 str r2,[r7,#4]
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 150              	 .loc 1 94 0
 151 00c8 B7F91A20 	 ldrsh r2,[r7,#26]
 152 00cc B7F91610 	 ldrsh r1,[r7,#22]
 153 00d0 01FB02F2 	 mul r2,r1,r2
 154 00d4 5214     	 asrs r2,r2,#17
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 155              	 .loc 1 93 0
 156 00d6 91B2     	 uxth r1,r2
 157              	 .loc 1 94 0
 158 00d8 B7F91820 	 ldrsh r2,[r7,#24]
 159 00dc B7F91400 	 ldrsh r0,[r7,#20]
 160 00e0 00FB02F2 	 mul r2,r0,r2
 161 00e4 5214     	 asrs r2,r2,#17
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 162              	 .loc 1 93 0
 163 00e6 92B2     	 uxth r2,r2
 164 00e8 8A1A     	 subs r2,r1,r2
 165 00ea 92B2     	 uxth r2,r2
 166 00ec 92B2     	 uxth r2,r2
 167 00ee 1A80     	 strh r2,[r3]
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 168              	 .loc 1 96 0
 169 00f0 7B68     	 ldr r3,[r7,#4]
 170 00f2 9A1C     	 adds r2,r3,#2
 171 00f4 7A60     	 str r2,[r7,#4]
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 172              	 .loc 1 97 0
 173 00f6 B7F91A20 	 ldrsh r2,[r7,#26]
 174 00fa B7F91410 	 ldrsh r1,[r7,#20]
 175 00fe 01FB02F2 	 mul r2,r1,r2
 176 0102 5214     	 asrs r2,r2,#17
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 177              	 .loc 1 96 0
 178 0104 91B2     	 uxth r1,r2
 179              	 .loc 1 97 0
 180 0106 B7F91820 	 ldrsh r2,[r7,#24]
 181 010a B7F91600 	 ldrsh r0,[r7,#22]
 182 010e 00FB02F2 	 mul r2,r0,r2
 183 0112 5214     	 asrs r2,r2,#17
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 184              	 .loc 1 96 0
 185 0114 92B2     	 uxth r2,r2
 186 0116 0A44     	 add r2,r2,r1
 187 0118 92B2     	 uxth r2,r2
 188 011a 92B2     	 uxth r2,r2
 189 011c 1A80     	 strh r2,[r3]
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 190              	 .loc 1 99 0
 191 011e FB68     	 ldr r3,[r7,#12]
 192 0120 9A1C     	 adds r2,r3,#2
 193 0122 FA60     	 str r2,[r7,#12]
 194 0124 1B88     	 ldrh r3,[r3]
 195 0126 7B83     	 strh r3,[r7,#26]
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 196              	 .loc 1 100 0
 197 0128 FB68     	 ldr r3,[r7,#12]
 198 012a 9A1C     	 adds r2,r3,#2
 199 012c FA60     	 str r2,[r7,#12]
 200 012e 1B88     	 ldrh r3,[r3]
 201 0130 3B83     	 strh r3,[r7,#24]
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 202              	 .loc 1 101 0
 203 0132 BB68     	 ldr r3,[r7,#8]
 204 0134 9A1C     	 adds r2,r3,#2
 205 0136 BA60     	 str r2,[r7,#8]
 206 0138 1B88     	 ldrh r3,[r3]
 207 013a FB82     	 strh r3,[r7,#22]
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 208              	 .loc 1 102 0
 209 013c BB68     	 ldr r3,[r7,#8]
 210 013e 9A1C     	 adds r2,r3,#2
 211 0140 BA60     	 str r2,[r7,#8]
 212 0142 1B88     	 ldrh r3,[r3]
 213 0144 BB82     	 strh r3,[r7,#20]
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 214              	 .loc 1 105 0
 215 0146 7B68     	 ldr r3,[r7,#4]
 216 0148 9A1C     	 adds r2,r3,#2
 217 014a 7A60     	 str r2,[r7,#4]
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 218              	 .loc 1 106 0
 219 014c B7F91A20 	 ldrsh r2,[r7,#26]
 220 0150 B7F91610 	 ldrsh r1,[r7,#22]
 221 0154 01FB02F2 	 mul r2,r1,r2
 222 0158 5214     	 asrs r2,r2,#17
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 223              	 .loc 1 105 0
 224 015a 91B2     	 uxth r1,r2
 225              	 .loc 1 106 0
 226 015c B7F91820 	 ldrsh r2,[r7,#24]
 227 0160 B7F91400 	 ldrsh r0,[r7,#20]
 228 0164 00FB02F2 	 mul r2,r0,r2
 229 0168 5214     	 asrs r2,r2,#17
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 230              	 .loc 1 105 0
 231 016a 92B2     	 uxth r2,r2
 232 016c 8A1A     	 subs r2,r1,r2
 233 016e 92B2     	 uxth r2,r2
 234 0170 92B2     	 uxth r2,r2
 235 0172 1A80     	 strh r2,[r3]
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 236              	 .loc 1 108 0
 237 0174 7B68     	 ldr r3,[r7,#4]
 238 0176 9A1C     	 adds r2,r3,#2
 239 0178 7A60     	 str r2,[r7,#4]
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 240              	 .loc 1 109 0
 241 017a B7F91A20 	 ldrsh r2,[r7,#26]
 242 017e B7F91410 	 ldrsh r1,[r7,#20]
 243 0182 01FB02F2 	 mul r2,r1,r2
 244 0186 5214     	 asrs r2,r2,#17
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 245              	 .loc 1 108 0
 246 0188 91B2     	 uxth r1,r2
 247              	 .loc 1 109 0
 248 018a B7F91820 	 ldrsh r2,[r7,#24]
 249 018e B7F91600 	 ldrsh r0,[r7,#22]
 250 0192 00FB02F2 	 mul r2,r0,r2
 251 0196 5214     	 asrs r2,r2,#17
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 252              	 .loc 1 108 0
 253 0198 92B2     	 uxth r2,r2
 254 019a 0A44     	 add r2,r2,r1
 255 019c 92B2     	 uxth r2,r2
 256 019e 92B2     	 uxth r2,r2
 257 01a0 1A80     	 strh r2,[r3]
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 258              	 .loc 1 111 0
 259 01a2 FB68     	 ldr r3,[r7,#12]
 260 01a4 9A1C     	 adds r2,r3,#2
 261 01a6 FA60     	 str r2,[r7,#12]
 262 01a8 1B88     	 ldrh r3,[r3]
 263 01aa 7B83     	 strh r3,[r7,#26]
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 264              	 .loc 1 112 0
 265 01ac FB68     	 ldr r3,[r7,#12]
 266 01ae 9A1C     	 adds r2,r3,#2
 267 01b0 FA60     	 str r2,[r7,#12]
 268 01b2 1B88     	 ldrh r3,[r3]
 269 01b4 3B83     	 strh r3,[r7,#24]
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 270              	 .loc 1 113 0
 271 01b6 BB68     	 ldr r3,[r7,#8]
 272 01b8 9A1C     	 adds r2,r3,#2
 273 01ba BA60     	 str r2,[r7,#8]
 274 01bc 1B88     	 ldrh r3,[r3]
 275 01be FB82     	 strh r3,[r7,#22]
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 276              	 .loc 1 114 0
 277 01c0 BB68     	 ldr r3,[r7,#8]
 278 01c2 9A1C     	 adds r2,r3,#2
 279 01c4 BA60     	 str r2,[r7,#8]
 280 01c6 1B88     	 ldrh r3,[r3]
 281 01c8 BB82     	 strh r3,[r7,#20]
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 282              	 .loc 1 117 0
 283 01ca 7B68     	 ldr r3,[r7,#4]
 284 01cc 9A1C     	 adds r2,r3,#2
 285 01ce 7A60     	 str r2,[r7,#4]
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 286              	 .loc 1 118 0
 287 01d0 B7F91A20 	 ldrsh r2,[r7,#26]
 288 01d4 B7F91610 	 ldrsh r1,[r7,#22]
 289 01d8 01FB02F2 	 mul r2,r1,r2
 290 01dc 5214     	 asrs r2,r2,#17
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 291              	 .loc 1 117 0
 292 01de 91B2     	 uxth r1,r2
 293              	 .loc 1 118 0
 294 01e0 B7F91820 	 ldrsh r2,[r7,#24]
 295 01e4 B7F91400 	 ldrsh r0,[r7,#20]
 296 01e8 00FB02F2 	 mul r2,r0,r2
 297 01ec 5214     	 asrs r2,r2,#17
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 298              	 .loc 1 117 0
 299 01ee 92B2     	 uxth r2,r2
 300 01f0 8A1A     	 subs r2,r1,r2
 301 01f2 92B2     	 uxth r2,r2
 302 01f4 92B2     	 uxth r2,r2
 303 01f6 1A80     	 strh r2,[r3]
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 304              	 .loc 1 120 0
 305 01f8 7B68     	 ldr r3,[r7,#4]
 306 01fa 9A1C     	 adds r2,r3,#2
 307 01fc 7A60     	 str r2,[r7,#4]
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 308              	 .loc 1 121 0
 309 01fe B7F91A20 	 ldrsh r2,[r7,#26]
 310 0202 B7F91410 	 ldrsh r1,[r7,#20]
 311 0206 01FB02F2 	 mul r2,r1,r2
 312 020a 5214     	 asrs r2,r2,#17
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 313              	 .loc 1 120 0
 314 020c 91B2     	 uxth r1,r2
 315              	 .loc 1 121 0
 316 020e B7F91820 	 ldrsh r2,[r7,#24]
 317 0212 B7F91600 	 ldrsh r0,[r7,#22]
 318 0216 00FB02F2 	 mul r2,r0,r2
 319 021a 5214     	 asrs r2,r2,#17
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 320              	 .loc 1 120 0
 321 021c 92B2     	 uxth r2,r2
 322 021e 0A44     	 add r2,r2,r1
 323 0220 92B2     	 uxth r2,r2
 324 0222 92B2     	 uxth r2,r2
 325 0224 1A80     	 strh r2,[r3]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement the blockSize loop counter */
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     blkCnt--;
 326              	 .loc 1 124 0
 327 0226 FB69     	 ldr r3,[r7,#28]
 328 0228 013B     	 subs r3,r3,#1
 329 022a FB61     	 str r3,[r7,#28]
 330              	.L2:
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 331              	 .loc 1 71 0
 332 022c FB69     	 ldr r3,[r7,#28]
 333 022e 002B     	 cmp r3,#0
 334 0230 7FF4F1AE 	 bne .L3
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****    ** No loop unrolling is used. */
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = numSamples % 0x4u;
 335              	 .loc 1 129 0
 336 0234 3B68     	 ldr r3,[r7]
 337 0236 03F00303 	 and r3,r3,#3
 338 023a FB61     	 str r3,[r7,#28]
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while (blkCnt > 0u)
 339              	 .loc 1 131 0
 340 023c 44E0     	 b .L4
 341              	.L5:
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 342              	 .loc 1 135 0
 343 023e FB68     	 ldr r3,[r7,#12]
 344 0240 9A1C     	 adds r2,r3,#2
 345 0242 FA60     	 str r2,[r7,#12]
 346 0244 1B88     	 ldrh r3,[r3]
 347 0246 7B83     	 strh r3,[r7,#26]
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 348              	 .loc 1 136 0
 349 0248 FB68     	 ldr r3,[r7,#12]
 350 024a 9A1C     	 adds r2,r3,#2
 351 024c FA60     	 str r2,[r7,#12]
 352 024e 1B88     	 ldrh r3,[r3]
 353 0250 3B83     	 strh r3,[r7,#24]
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 354              	 .loc 1 137 0
 355 0252 BB68     	 ldr r3,[r7,#8]
 356 0254 9A1C     	 adds r2,r3,#2
 357 0256 BA60     	 str r2,[r7,#8]
 358 0258 1B88     	 ldrh r3,[r3]
 359 025a FB82     	 strh r3,[r7,#22]
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 360              	 .loc 1 138 0
 361 025c BB68     	 ldr r3,[r7,#8]
 362 025e 9A1C     	 adds r2,r3,#2
 363 0260 BA60     	 str r2,[r7,#8]
 364 0262 1B88     	 ldrh r3,[r3]
 365 0264 BB82     	 strh r3,[r7,#20]
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 366              	 .loc 1 141 0
 367 0266 7B68     	 ldr r3,[r7,#4]
 368 0268 9A1C     	 adds r2,r3,#2
 369 026a 7A60     	 str r2,[r7,#4]
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 370              	 .loc 1 142 0
 371 026c B7F91A20 	 ldrsh r2,[r7,#26]
 372 0270 B7F91610 	 ldrsh r1,[r7,#22]
 373 0274 01FB02F2 	 mul r2,r1,r2
 374 0278 5214     	 asrs r2,r2,#17
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 375              	 .loc 1 141 0
 376 027a 91B2     	 uxth r1,r2
 377              	 .loc 1 142 0
 378 027c B7F91820 	 ldrsh r2,[r7,#24]
 379 0280 B7F91400 	 ldrsh r0,[r7,#20]
 380 0284 00FB02F2 	 mul r2,r0,r2
 381 0288 5214     	 asrs r2,r2,#17
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 382              	 .loc 1 141 0
 383 028a 92B2     	 uxth r2,r2
 384 028c 8A1A     	 subs r2,r1,r2
 385 028e 92B2     	 uxth r2,r2
 386 0290 92B2     	 uxth r2,r2
 387 0292 1A80     	 strh r2,[r3]
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 388              	 .loc 1 144 0
 389 0294 7B68     	 ldr r3,[r7,#4]
 390 0296 9A1C     	 adds r2,r3,#2
 391 0298 7A60     	 str r2,[r7,#4]
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 392              	 .loc 1 145 0
 393 029a B7F91A20 	 ldrsh r2,[r7,#26]
 394 029e B7F91410 	 ldrsh r1,[r7,#20]
 395 02a2 01FB02F2 	 mul r2,r1,r2
 396 02a6 5214     	 asrs r2,r2,#17
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 397              	 .loc 1 144 0
 398 02a8 91B2     	 uxth r1,r2
 399              	 .loc 1 145 0
 400 02aa B7F91820 	 ldrsh r2,[r7,#24]
 401 02ae B7F91600 	 ldrsh r0,[r7,#22]
 402 02b2 00FB02F2 	 mul r2,r0,r2
 403 02b6 5214     	 asrs r2,r2,#17
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 404              	 .loc 1 144 0
 405 02b8 92B2     	 uxth r2,r2
 406 02ba 0A44     	 add r2,r2,r1
 407 02bc 92B2     	 uxth r2,r2
 408 02be 92B2     	 uxth r2,r2
 409 02c0 1A80     	 strh r2,[r3]
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement the blockSize loop counter */
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     blkCnt--;
 410              	 .loc 1 148 0
 411 02c2 FB69     	 ldr r3,[r7,#28]
 412 02c4 013B     	 subs r3,r3,#1
 413 02c6 FB61     	 str r3,[r7,#28]
 414              	.L4:
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 415              	 .loc 1 131 0
 416 02c8 FB69     	 ldr r3,[r7,#28]
 417 02ca 002B     	 cmp r3,#0
 418 02cc B7D1     	 bne .L5
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #else
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* Run the below code for Cortex-M0 */
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while (numSamples > 0u)
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement the blockSize loop counter */
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     numSamples--;
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** }
 419              	 .loc 1 177 0
 420 02ce 2437     	 adds r7,r7,#36
 421              	.LCFI3:
 422              	 .cfi_def_cfa_offset 4
 423 02d0 BD46     	 mov sp,r7
 424              	.LCFI4:
 425              	 .cfi_def_cfa_register 13
 426              	 
 427 02d2 5DF8047B 	 ldr r7,[sp],#4
 428              	.LCFI5:
 429              	 .cfi_restore 7
 430              	 .cfi_def_cfa_offset 0
 431 02d6 7047     	 bx lr
 432              	 .cfi_endproc
 433              	.LFE135:
 435              	 .text
 436              	.Letext0:
 437              	 .file 2 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 438              	 .file 3 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 439              	 .file 4 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mult_cmplx_q15.c
    {standard input}:20     .text.arm_cmplx_mult_cmplx_q15:00000000 $t
    {standard input}:25     .text.arm_cmplx_mult_cmplx_q15:00000000 arm_cmplx_mult_cmplx_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
