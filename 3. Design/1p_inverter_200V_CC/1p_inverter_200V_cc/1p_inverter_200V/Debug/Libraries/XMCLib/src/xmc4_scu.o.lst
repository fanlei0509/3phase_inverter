   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_scu.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SCU_CLOCK_GetUsbClockSource,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SCU_CLOCK_GetUsbClockSource:
  25              	.LFB129:
  26              	 .file 1 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc/xmc4_scu.h"
   1:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
   2:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @date 2016-06-15
   4:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   5:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
   7:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.1.12 - XMC Peripheral Driver Library 
   8:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   9:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.                        
  11:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                             
  12:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * following conditions are met:   
  14:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  15:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * disclaimer.                        
  17:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  18:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  21:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  24:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  32:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  35:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  36:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Change History
  37:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * --------------
  38:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  39:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  40:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  41:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  42:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  43:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  44:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  45:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *      
  46:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  47:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  48:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  49:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  50:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  51:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  52:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  53:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  54:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  55:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  56:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  57:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks       
  58:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  59:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  60:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  61:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  62:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  63:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  64:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  65:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  66:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  67:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  68:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  69:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  70:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  71:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  72:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  73:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  74:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  75:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  76:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  77:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  78:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @endcond 
  79:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  80:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  81:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
  82:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  83:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  84:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
  85:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
  86:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
  87:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  88:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
  89:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
  90:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
  91:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
  92:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
  93:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
  94:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  95:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
  96:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  97:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  
  98:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
  99:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * MACROS
 105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. 
 200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP 
 203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */ 
 207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */  
 208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */ 
 209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */ 
 210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */ 
 220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */ 
 234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_DSRAM2_MEM)
 235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */ 
 236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_USIC1_MEM)
 239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_USIC2_MEM)
 242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */ 
 247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register. 
 281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  
 286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */ 
 298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */ 
 299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */  
 300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */ 
 301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */ 
 302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */ 
 303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   
 305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */ 
 316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)  
 377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)  
 380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating. 
 411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register. 
 493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. 
 506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock. 
 520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
 531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock. 
 544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock 
 549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock 
 551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock 
 596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration: 
 610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE 
 621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled. 
 656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  state.
 661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  
 662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. 
 697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled. 
 700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control  
 746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   */
 777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin. 
 780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin. 
 783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))      
 862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired 
 906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** extern "C" {
 954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
 958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
 977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
 986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
 987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
 989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
 992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
 997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
 998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result. 
1045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n 
1065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if (UC_SERIES != XMC45)
1130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in 
1139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  
1236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the 
1309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the 
1341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit 
1357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced. 
1373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time. 
1374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);  
1397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API. 
1408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state. 
1473:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1474:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1475:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n 
1476:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1477:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1478:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  
1479:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1480:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1481:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1482:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1483:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1484:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1485:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1486:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1487:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1488:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1489:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to 
1490:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1491:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the 
1492:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors 
1493:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1494:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1495:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1496:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1497:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1498:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1499:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1500:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1501:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1502:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1503:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1504:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1505:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1506:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1507:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1508:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1509:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1510:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1511:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1512:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1513:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1514:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1515:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1516:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1517:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1518:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1519:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1520:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1521:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1522:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1523:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1524:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1525:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1526:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1527:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1528:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1529:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1530:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1531:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1532:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1533:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1534:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1535:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1536:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1537:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1538:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1539:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1540:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1541:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1542:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1543:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1544:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1545:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1546:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1547:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1548:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1549:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1550:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1551:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1552:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1553:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1554:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1555:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1556:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1557:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1558:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1559:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1560:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1561:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1562:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1563:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1564:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1565:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1566:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1567:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1568:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1569:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1570:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1571:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1572:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1573:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1574:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1575:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1576:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1577:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1578:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the 
1579:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1580:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1581:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1582:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1583:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1584:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);  
1585:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1586:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1587:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1588:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1589:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1590:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1591:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1592:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1593:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1594:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1595:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1596:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1597:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1598:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1599:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1600:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1601:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1602:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1603:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1604:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1605:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1606:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1607:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1608:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1609:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1610:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1611:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1612:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1613:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1614:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1615:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1616:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1617:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1618:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1619:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1620:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1621:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1622:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1623:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1624:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1625:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1626:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1627:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1628:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1629:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1630:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1631:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1632:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1633:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1634:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register. 
1635:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1636:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1637:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1638:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1639:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1640:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1641:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1642:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1643:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1644:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1645:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1646:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1647:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1648:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1649:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1650:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1651:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1652:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1653:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1654:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency. 
1655:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1656:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1657:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1658:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1659:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1660:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1661:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1662:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1663:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1664:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1665:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1666:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1667:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1668:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1669:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1670:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1671:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1672:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1673:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
1674:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1675:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
1676:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1677:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1678:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1679:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1680:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1681:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1682:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1683:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1684:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1685:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1686:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1687:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1688:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1689:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1690:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1691:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1692:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1693:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1694:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1695:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1696:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1697:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1698:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1699:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1700:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1701:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1702:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1703:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1704:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1705:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1706:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1707:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1708:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
  27              	 .loc 1 1708 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1709:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
  39              	 .loc 1 1709 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 9B69     	 ldr r3,[r3,#24]
  42 0008 03F48033 	 and r3,r3,#65536
1710:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
  43              	 .loc 1 1710 0
  44 000c 1846     	 mov r0,r3
  45 000e BD46     	 mov sp,r7
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 13
  48              	 
  49 0010 5DF8047B 	 ldr r7,[sp],#4
  50              	.LCFI3:
  51              	 .cfi_restore 7
  52              	 .cfi_def_cfa_offset 0
  53 0014 7047     	 bx lr
  54              	.L4:
  55 0016 00BF     	 .align 2
  56              	.L3:
  57 0018 00460050 	 .word 1342195200
  58              	 .cfi_endproc
  59              	.LFE129:
  61              	 .section .text.XMC_SCU_CLOCK_GetWdtClockSource,"ax",%progbits
  62              	 .align 2
  63              	 .thumb
  64              	 .thumb_func
  66              	XMC_SCU_CLOCK_GetWdtClockSource:
  67              	.LFB130:
1711:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1712:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1713:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1714:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1715:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1716:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1717:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1718:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1719:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1720:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1721:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1722:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1723:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1724:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1725:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1726:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1727:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1728:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1729:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1730:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1731:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1732:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1733:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1734:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1735:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1736:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1737:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1738:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1739:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1740:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1741:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1742:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1743:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on 
1744:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1745:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1746:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1747:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1748:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1749:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
  68              	 .loc 1 1749 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72              	 
  73 0000 80B4     	 push {r7}
  74              	.LCFI4:
  75              	 .cfi_def_cfa_offset 4
  76              	 .cfi_offset 7,-4
  77 0002 00AF     	 add r7,sp,#0
  78              	.LCFI5:
  79              	 .cfi_def_cfa_register 7
1750:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
  80              	 .loc 1 1750 0
  81 0004 044B     	 ldr r3,.L7
  82 0006 5B6A     	 ldr r3,[r3,#36]
  83 0008 03F44033 	 and r3,r3,#196608
1751:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
  84              	 .loc 1 1751 0
  85 000c 1846     	 mov r0,r3
  86 000e BD46     	 mov sp,r7
  87              	.LCFI6:
  88              	 .cfi_def_cfa_register 13
  89              	 
  90 0010 5DF8047B 	 ldr r7,[sp],#4
  91              	.LCFI7:
  92              	 .cfi_restore 7
  93              	 .cfi_def_cfa_offset 0
  94 0014 7047     	 bx lr
  95              	.L8:
  96 0016 00BF     	 .align 2
  97              	.L7:
  98 0018 00460050 	 .word 1342195200
  99              	 .cfi_endproc
 100              	.LFE130:
 102              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockSource,"ax",%progbits
 103              	 .align 2
 104              	 .thumb
 105              	 .thumb_func
 107              	XMC_SCU_CLOCK_GetExternalOutputClockSource:
 108              	.LFB133:
1752:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1753:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1754:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1755:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1756:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1757:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1758:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1759:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1760:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1761:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1762:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1763:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1764:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1765:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1766:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1767:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1768:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1769:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1770:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1771:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1772:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1773:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1774:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1775:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1776:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1777:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1778:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1779:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1780:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1781:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1782:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1783:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1784:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
1785:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1786:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
1787:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1788:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1789:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1790:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1791:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1792:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1793:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1794:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1795:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1796:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1797:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1798:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1799:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1800:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1801:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1802:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1803:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1804:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1805:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1806:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1807:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1808:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1809:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1810:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1811:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1812:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1813:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1814:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1815:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1816:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1817:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1818:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1819:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1820:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1821:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
1822:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1823:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
1824:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1825:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1826:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1827:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1828:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1829:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1830:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1831:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1832:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1833:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1834:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1835:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1836:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1837:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1838:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1839:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1840:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1841:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1842:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1843:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1844:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1845:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1846:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1847:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1848:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1849:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1850:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1851:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1852:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1853:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1854:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1855:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1856:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1857:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1858:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1859:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1860:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1861:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1862:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1863:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1864:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1865:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1866:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1867:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1868:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1869:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1870:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 109              	 .loc 1 1870 0
 110              	 .cfi_startproc
 111              	 
 112              	 
 113              	 
 114 0000 80B4     	 push {r7}
 115              	.LCFI8:
 116              	 .cfi_def_cfa_offset 4
 117              	 .cfi_offset 7,-4
 118 0002 00AF     	 add r7,sp,#0
 119              	.LCFI9:
 120              	 .cfi_def_cfa_register 7
1871:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
 121              	 .loc 1 1871 0
 122 0004 054B     	 ldr r3,.L11
 123 0006 9B6A     	 ldr r3,[r3,#40]
 124 0008 DBB2     	 uxtb r3,r3
 125 000a 03F00303 	 and r3,r3,#3
 126 000e DBB2     	 uxtb r3,r3
1872:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
 127              	 .loc 1 1872 0
 128 0010 1846     	 mov r0,r3
 129 0012 BD46     	 mov sp,r7
 130              	.LCFI10:
 131              	 .cfi_def_cfa_register 13
 132              	 
 133 0014 5DF8047B 	 ldr r7,[sp],#4
 134              	.LCFI11:
 135              	 .cfi_restore 7
 136              	 .cfi_def_cfa_offset 0
 137 0018 7047     	 bx lr
 138              	.L12:
 139 001a 00BF     	 .align 2
 140              	.L11:
 141 001c 00460050 	 .word 1342195200
 142              	 .cfi_endproc
 143              	.LFE133:
 145              	 .section .text.XMC_SCU_CLOCK_GetSystemClockFrequency,"ax",%progbits
 146              	 .align 2
 147              	 .thumb
 148              	 .thumb_func
 150              	XMC_SCU_CLOCK_GetSystemClockFrequency:
 151              	.LFB143:
1873:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1874:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1875:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1876:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1877:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1878:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1879:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1880:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1881:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1882:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1883:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1884:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1885:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1886:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1887:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1888:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1889:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1890:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1891:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1892:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1893:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1894:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1895:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1896:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1897:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1898:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1899:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1900:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
1901:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
1902:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1903:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
1904:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1905:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
1906:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
1907:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
1908:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
1909:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1910:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
1911:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1912:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1913:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
1914:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
1915:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
1916:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
1917:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1918:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1919:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1920:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1921:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
1922:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
1923:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1924:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
1925:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1926:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
1927:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
1928:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
1929:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****                       ((uint32_t)source);
1930:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
1931:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1932:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1933:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
1934:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
1935:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
1936:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
1937:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1938:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1939:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
1940:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
1941:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1942:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1943:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1944:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
1945:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
1946:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
1947:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
1948:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1949:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1950:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1951:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1952:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
1953:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
1954:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1955:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1956:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1957:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1958:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
1959:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is 
1960:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
1961:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1962:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
1963:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1964:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
1965:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1966:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1967:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
1968:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
1969:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1970:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1971:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
1972:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
1973:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1974:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
1975:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1976:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
1977:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
1978:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
1979:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
1980:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
1981:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1982:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1983:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
1984:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
1985:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
1986:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
1987:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1988:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1989:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1990:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1991:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
1992:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
1993:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
1994:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1995:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1996:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
1997:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1998:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
1999:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2000:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2001:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2002:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2003:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2004:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2005:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2006:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2007:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2008:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2009:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2010:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2011:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2012:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2013:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2014:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
2015:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2016:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
2017:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2018:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2019:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2020:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2021:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2022:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2023:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2024:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2025:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2026:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2027:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2028:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2029:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2030:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2031:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2032:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2033:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2034:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2035:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2036:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2037:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2038:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2039:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2040:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2041:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2042:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2043:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2044:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2045:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2046:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2047:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2048:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
2049:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2050:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
2051:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2052:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2053:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2054:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2055:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2056:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2057:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2058:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2059:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2060:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2061:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2062:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2063:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2064:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2065:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2066:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2067:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2068:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2069:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2070:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2071:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2072:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2073:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2074:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2075:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2076:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2077:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2078:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2079:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2080:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2081:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2082:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2083:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
2084:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2085:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
2086:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2087:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2088:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2089:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2090:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2091:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2092:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2093:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2094:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2095:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2096:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2097:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2098:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2099:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
2116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
2118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
2150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
2152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
2186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
2188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
2220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
2222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
2253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
2254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
2255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the 
2264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status 
2266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the 
2278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * external oscillator. 
2279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays 
2339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status 
2341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() 
2344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin 
2399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2429:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2430:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2431:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2432:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2433:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2434:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2435:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2436:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2437:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2438:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2439:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2440:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2441:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2442:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2443:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2444:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2445:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2446:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2447:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2448:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2449:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2450:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2451:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2452:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2453:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2454:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2455:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2456:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** 
2457:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2458:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2459:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2460:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2461:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2462:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2463:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2464:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2465:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2466:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2467:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2468:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2469:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2470:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** {
 152              	 .loc 1 2470 0
 153              	 .cfi_startproc
 154              	 
 155              	 
 156              	 
 157 0000 80B4     	 push {r7}
 158              	.LCFI12:
 159              	 .cfi_def_cfa_offset 4
 160              	 .cfi_offset 7,-4
 161 0002 00AF     	 add r7,sp,#0
 162              	.LCFI13:
 163              	 .cfi_def_cfa_register 7
2471:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 164              	 .loc 1 2471 0
 165 0004 064B     	 ldr r3,.L15
 166 0006 1A68     	 ldr r2,[r3]
 167 0008 064B     	 ldr r3,.L15+4
 168 000a 1B69     	 ldr r3,[r3,#16]
 169 000c 03F00103 	 and r3,r3,#1
 170 0010 02FA03F3 	 lsl r3,r2,r3
2472:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc4_scu.h **** }
 171              	 .loc 1 2472 0
 172 0014 1846     	 mov r0,r3
 173 0016 BD46     	 mov sp,r7
 174              	.LCFI14:
 175              	 .cfi_def_cfa_register 13
 176              	 
 177 0018 5DF8047B 	 ldr r7,[sp],#4
 178              	.LCFI15:
 179              	 .cfi_restore 7
 180              	 .cfi_def_cfa_offset 0
 181 001c 7047     	 bx lr
 182              	.L16:
 183 001e 00BF     	 .align 2
 184              	.L15:
 185 0020 00000000 	 .word SystemCoreClock
 186 0024 00460050 	 .word 1342195200
 187              	 .cfi_endproc
 188              	.LFE143:
 190              	 .section .text.XMC_SCU_CLOCK_GetCpuClockFrequency,"ax",%progbits
 191              	 .align 2
 192              	 .thumb
 193              	 .thumb_func
 195              	XMC_SCU_CLOCK_GetCpuClockFrequency:
 196              	.LFB160:
 197              	 .file 2 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.12 - XMC Peripheral Driver Library 
   8:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                                             
  12:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  18:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  21:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  37:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  38:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
  39:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
  42:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
  46:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
  53:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  56:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  59:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
  62:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  
  65:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
  70:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
  71:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  73:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
  74:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  
  75:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
  76:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
  79:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  86:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
  90:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
  96:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 107:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 111:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 112:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 117:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 122:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 127:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 134:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 137:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 141:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 144:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 157:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 158:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 159:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  
 160:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 164:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 168:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 170:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** {
 172:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 179:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 180:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 184:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 185:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 187:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 189:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 193:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #else
 198:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 200:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 205:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 210:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 211:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 212:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 217:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 218:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 219:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 230:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** {
 232:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 233:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** }
 234:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 235:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 236:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 237:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 242:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 243:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 244:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 255:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** {
 257:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 258:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** }
 259:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 260:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 261:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 262:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 263:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 264:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 265:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 266:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 267:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 268:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 269:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 270:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 271:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 272:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 273:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 274:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 275:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 276:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 277:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 278:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 279:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 280:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 281:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 282:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 283:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 284:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 285:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 286:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 287:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 288:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 289:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 290:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 291:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 292:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 293:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 294:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 295:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 296:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 297:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 298:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 299:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 300:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 301:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 302:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 303:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 304:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 306:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 307:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 308:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 309:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 310:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 311:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 312:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 313:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 314:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 315:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 316:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 317:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 318:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 319:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 320:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 321:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 322:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 323:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 324:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 325:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 326:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 327:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 328:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 329:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 330:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 331:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 332:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 333:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 334:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 335:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 336:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 337:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 338:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 339:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 340:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 341:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 342:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 343:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 344:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 345:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 346:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 347:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 348:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 349:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 350:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 351:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 352:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 353:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 354:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 355:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 356:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 357:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 358:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 359:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 360:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 361:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 362:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 363:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 364:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 365:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 366:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 367:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 368:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 369:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 370:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 371:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 372:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 373:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** 
 374:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 375:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 376:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 377:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 378:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 379:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 380:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 381:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 382:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * the cause of reset. 
 383:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 384:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 385:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 386:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 387:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 388:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 389:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 390:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 391:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 392:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** {
 393:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 394:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** }
 395:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 396:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None 
 397:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 398:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 399:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 400:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 401:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 402:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 403:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 405:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 406:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 407:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** {
 408:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 409:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 410:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** }
 411:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  
 412:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** /**
 413:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 414:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 415:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 416:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 417:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 418:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 419:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 420:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 421:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  *
 422:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 423:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 424:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****  */
 425:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 426:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** {
 198              	 .loc 2 426 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202              	 
 203 0000 80B4     	 push {r7}
 204              	.LCFI16:
 205              	 .cfi_def_cfa_offset 4
 206              	 .cfi_offset 7,-4
 207 0002 00AF     	 add r7,sp,#0
 208              	.LCFI17:
 209              	 .cfi_def_cfa_register 7
 427:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 210              	 .loc 2 427 0
 211 0004 034B     	 ldr r3,.L19
 212 0006 1B68     	 ldr r3,[r3]
 428:C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/XMCLib/inc\xmc_scu.h **** }
 213              	 .loc 2 428 0
 214 0008 1846     	 mov r0,r3
 215 000a BD46     	 mov sp,r7
 216              	.LCFI18:
 217              	 .cfi_def_cfa_register 13
 218              	 
 219 000c 5DF8047B 	 ldr r7,[sp],#4
 220              	.LCFI19:
 221              	 .cfi_restore 7
 222              	 .cfi_def_cfa_offset 0
 223 0010 7047     	 bx lr
 224              	.L20:
 225 0012 00BF     	 .align 2
 226              	.L19:
 227 0014 00000000 	 .word SystemCoreClock
 228              	 .cfi_endproc
 229              	.LFE160:
 231              	 .comm event_handler_list,128,4
 232              	 .section .text.XMC_SCU_lDelay,"ax",%progbits
 233              	 .align 2
 234              	 .thumb
 235              	 .thumb_func
 237              	XMC_SCU_lDelay:
 238              	.LFB162:
 239              	 .file 3 "../Libraries/XMCLib/src/xmc4_scu.c"
   1:../Libraries/XMCLib/src/xmc4_scu.c **** /**
   2:../Libraries/XMCLib/src/xmc4_scu.c ****  * @file xmc4_scu.c
   3:../Libraries/XMCLib/src/xmc4_scu.c ****  * @date 2016-06-15
   4:../Libraries/XMCLib/src/xmc4_scu.c ****  *
   5:../Libraries/XMCLib/src/xmc4_scu.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc4_scu.c ****  * XMClib v2.1.12 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc4_scu.c ****  *
   9:../Libraries/XMCLib/src/xmc4_scu.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_scu.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc4_scu.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc4_scu.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc4_scu.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc4_scu.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc4_scu.c ****  * 
  18:../Libraries/XMCLib/src/xmc4_scu.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc4_scu.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc4_scu.c ****  * 
  21:../Libraries/XMCLib/src/xmc4_scu.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc4_scu.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc4_scu.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc4_scu.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc4_scu.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc4_scu.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc4_scu.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc4_scu.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc4_scu.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc4_scu.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc4_scu.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc4_scu.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  36:../Libraries/XMCLib/src/xmc4_scu.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc4_scu.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  39:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc4_scu.c ****  *      
  42:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_ASSERT() hanging issues have fixed.  <br>
  44:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Line indentation aligned with 120 characters. <br>
  45:../Libraries/XMCLib/src/xmc4_scu.c ****  *     
  46:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_EnableEvent,XMC_SCU_INTERRUPT_DisableEvent,
  48:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_TriggerEvent,XMC_SCU_INTERUPT_GetEventStatus,
  49:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_ClearEventStatus are added
  50:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added Weak implementation for OSCHP_GetFrequency()
  51:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  52:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-11-30:
  53:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Documentation improved <br>
  54:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Following API functionalities are improved
  55:../Libraries/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_CLOCK_GatePeripheralClock, XMC_SCU_CLOCK_UngatePeripheralClock, XMC_SCU_CLOCK_IsPe
  56:../Libraries/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_RESET_AssertPeripheralReset, XMC_SCU_RESET_DeassertPeripheralReset, XMC_SCU_RESET_
  57:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  58:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-12-08:
  59:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_GetTemperature renamed to XMC_SCU_GetTemperatureMeasurement
  60:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  61:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-03-09:
  62:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Optimize write only registers
  63:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetPinMode
  64:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  65:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  66:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  67:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  68:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  69:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  70:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-04-06:
  71:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_ReadFromRetentionMemory functionality
  72:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  73:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-05-19:
  74:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Changed XMC_SCU_CLOCK_StartSystemPll to avoid using floating point calculation which might
  75:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  76:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  77:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  78:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  79:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  80:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  81:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  82:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  83:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-06-15:
  84:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  85:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  86:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  87:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  88:../Libraries/XMCLib/src/xmc4_scu.c ****  * @endcond 
  89:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  90:../Libraries/XMCLib/src/xmc4_scu.c ****  */
  91:../Libraries/XMCLib/src/xmc4_scu.c **** 
  92:../Libraries/XMCLib/src/xmc4_scu.c **** /**
  93:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  94:../Libraries/XMCLib/src/xmc4_scu.c ****  * @brief SCU low level driver API prototype definition for XMC4 family of microcontrollers. 
  95:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  96:../Libraries/XMCLib/src/xmc4_scu.c ****  * <b>Detailed description of file:</b> <br>
  97:../Libraries/XMCLib/src/xmc4_scu.c ****  * APIs provided in this file cover the following functional blocks of SCU: <br>
  98:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- GCU (APIs prefixed with XMC_SCU_GEN_) <br>
  99:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Temperature Monitoring, Bootmode selection, CCU Start, Comparator configuration etc  <br>
 100:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- CCU (APIs prefixed with XMC_SCU_CLOCK_) <br>
 101:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Clock sources init, Clock tree init, Clock gating, Sleep Management etc <br>
 102:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- RCU (APIs prefixed with XMC_SCU_RESET_) <br>
 103:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Reset Init, Cause, Manual Reset Assert/Deassert <br>
 104:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- INTERRUPT (APIs prefixed with XMC_SCU_INTERRUPT_) <br>
 105:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Manual Assert/Deassert, Acknowledge etc <br>
 106:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- PARITY (APIs prefixed with XMC_SCU_PARITY_) <br>
 107:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Acknowledge etc <br>
 108:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- HIBERNATION (APIs prefixed with XMC_SCU_HIB_) <br>
 109:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Hibernation entry/exit config, entry/wakeup sequences, LPAC configuration etc <br>
 110:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- TRAP (APIs prefixed with XMC_SCU_TRAP_) <br>
 111:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Enable/Disable, Acknowledge etc <br>
 112:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 113:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 114:../Libraries/XMCLib/src/xmc4_scu.c **** 
 115:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 116:../Libraries/XMCLib/src/xmc4_scu.c ****  * HEADER FILES
 117:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 118:../Libraries/XMCLib/src/xmc4_scu.c **** #include <xmc_scu.h>
 119:../Libraries/XMCLib/src/xmc4_scu.c **** 
 120:../Libraries/XMCLib/src/xmc4_scu.c **** #if UC_FAMILY == XMC4
 121:../Libraries/XMCLib/src/xmc4_scu.c **** 
 122:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 123:../Libraries/XMCLib/src/xmc4_scu.c ****  * MACROS
 124:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 125:../Libraries/XMCLib/src/xmc4_scu.c **** #define FOSCREF   (2500000UL)    /**< Oscillator reference frequency (fOSCREF) monitored by Oscilla
 126:../Libraries/XMCLib/src/xmc4_scu.c **** #define FREQ_1MHZ (1000000UL)    /**< Used during calculation. */
 127:../Libraries/XMCLib/src/xmc4_scu.c **** 
 128:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OFI_FREQUENCY
 129:../Libraries/XMCLib/src/xmc4_scu.c **** #define OFI_FREQUENCY (24000000UL)    /**< Fast internal backup clock source. */
 130:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 131:../Libraries/XMCLib/src/xmc4_scu.c **** 
 132:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OSI_FREQUENCY
 133:../Libraries/XMCLib/src/xmc4_scu.c **** #define OSI_FREQUENCY (32768UL)    /**< Internal slow clock source. */
 134:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 135:../Libraries/XMCLib/src/xmc4_scu.c **** 
 136:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OSCHP_FREQUENCY
 137:../Libraries/XMCLib/src/xmc4_scu.c **** #define OSCHP_FREQUENCY (12000000U)    /**< External crystal High Precision Oscillator. */
 138:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 139:../Libraries/XMCLib/src/xmc4_scu.c **** 
 140:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
 141:../Libraries/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLLV_Msk | \
 142:../Libraries/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLSP_Msk)  /**< Used to verify the OSC fr
 143:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                           usable or not.*/
 144:../Libraries/XMCLib/src/xmc4_scu.c **** 
 145:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_START_GROUP    (0UL)    /**< The ADC group whose channel input is compared 
 146:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 147:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 148:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 149:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_END_GROUP      (1UL)    /**< The ADC group whose channel input is compared 
 150:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 151:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC end 
 152:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 153:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_START_ADC_CHANNEL  (6UL)    /**< The ADC channel whose channel input is compare
 154:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 155:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 156:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 157:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_END_ADC_CHANNEL    (7UL)    /**< The ADC channel whose channel input is compare
 158:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 159:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC ends
 160:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 161:../Libraries/XMCLib/src/xmc4_scu.c **** 
 162:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_GRPNUM(GROUP_NUM)   (((GROUP_NUM) == XMC_SCU_ORC_ADC_START_GROUP) || \
 163:../Libraries/XMCLib/src/xmc4_scu.c ****                                         ((GROUP_NUM) == XMC_SCU_ORC_ADC_END_GROUP) ) /**< Used to v
 164:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 165:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 166:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       end group num
 167:../Libraries/XMCLib/src/xmc4_scu.c ****                                         
 168:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_CHNUM(CH_NUM)       (((CH_NUM) == XMC_SCU_ORC_START_ADC_CHANNEL) || \
 169:../Libraries/XMCLib/src/xmc4_scu.c ****                                         ((CH_NUM) == XMC_SCU_ORC_END_ADC_CHANNEL) )  /**< Used to v
 170:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 171:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 172:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       end channel n
 173:../Libraries/XMCLib/src/xmc4_scu.c **** 
 174:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_INTERRUPT_EVENT_MAX            (32U)      /**< Maximum supported SCU events. */
 175:../Libraries/XMCLib/src/xmc4_scu.c **** 
 176:../Libraries/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_HDCR_HIBIOSEL_Size (4U)
 177:../Libraries/XMCLib/src/xmc4_scu.c **** 
 178:../Libraries/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN (0x2U)
 179:../Libraries/XMCLib/src/xmc4_scu.c **** 
 180:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB13V (0.0058F)
 181:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB33V (0.0225F)
 182:../Libraries/XMCLib/src/xmc4_scu.c **** 
 183:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 184:../Libraries/XMCLib/src/xmc4_scu.c ****  * LOCAL DATA
 185:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 186:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler_list[XMC_SCU_INTERRUPT_EVENT_MAX]; /**< For registe
 187:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                         functions o
 188:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                         occurrence.
 189:../Libraries/XMCLib/src/xmc4_scu.c **** 
 190:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 191:../Libraries/XMCLib/src/xmc4_scu.c ****  * LOCAL ROUTINES
 192:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 193:../Libraries/XMCLib/src/xmc4_scu.c ****  #if defined(UC_ID)
 194:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a non-weak function, which retrieves high precision external oscillator frequency. */
 195:../Libraries/XMCLib/src/xmc4_scu.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 196:../Libraries/XMCLib/src/xmc4_scu.c **** {
 197:../Libraries/XMCLib/src/xmc4_scu.c ****   return (OSCHP_FREQUENCY);
 198:../Libraries/XMCLib/src/xmc4_scu.c **** }
 199:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 200:../Libraries/XMCLib/src/xmc4_scu.c **** 
 201:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 202:../Libraries/XMCLib/src/xmc4_scu.c **** static void XMC_SCU_lDelay(uint32_t cycles);
 203:../Libraries/XMCLib/src/xmc4_scu.c **** 
 204:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 205:../Libraries/XMCLib/src/xmc4_scu.c ****  * API IMPLEMENTATION
 206:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 207:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 208:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_lDelay(uint32_t delay)
 209:../Libraries/XMCLib/src/xmc4_scu.c **** {
 240              	 .loc 3 209 0
 241              	 .cfi_startproc
 242              	 
 243              	 
 244 0000 80B5     	 push {r7,lr}
 245              	.LCFI20:
 246              	 .cfi_def_cfa_offset 8
 247              	 .cfi_offset 7,-8
 248              	 .cfi_offset 14,-4
 249 0002 84B0     	 sub sp,sp,#16
 250              	.LCFI21:
 251              	 .cfi_def_cfa_offset 24
 252 0004 00AF     	 add r7,sp,#0
 253              	.LCFI22:
 254              	 .cfi_def_cfa_register 7
 255 0006 7860     	 str r0,[r7,#4]
 210:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t i;
 211:../Libraries/XMCLib/src/xmc4_scu.c **** 
 212:../Libraries/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 256              	 .loc 3 212 0
 257 0008 FFF7FEFF 	 bl SystemCoreClockUpdate
 213:../Libraries/XMCLib/src/xmc4_scu.c ****   delay =  delay * (uint32_t)(SystemCoreClock / FREQ_1MHZ);
 258              	 .loc 3 213 0
 259 000c 0B4B     	 ldr r3,.L24
 260 000e 1B68     	 ldr r3,[r3]
 261 0010 0B4A     	 ldr r2,.L24+4
 262 0012 A2FB0323 	 umull r2,r3,r2,r3
 263 0016 9A0C     	 lsrs r2,r3,#18
 264 0018 7B68     	 ldr r3,[r7,#4]
 265 001a 02FB03F3 	 mul r3,r2,r3
 266 001e 7B60     	 str r3,[r7,#4]
 214:../Libraries/XMCLib/src/xmc4_scu.c **** 
 215:../Libraries/XMCLib/src/xmc4_scu.c ****   for (i = 0U; i < delay; ++i)
 267              	 .loc 3 215 0
 268 0020 0023     	 movs r3,#0
 269 0022 FB60     	 str r3,[r7,#12]
 270 0024 03E0     	 b .L22
 271              	.L23:
 216:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 217:../Libraries/XMCLib/src/xmc4_scu.c ****     __NOP();
 272              	 .loc 3 217 0 discriminator 3
 273              	
 274 0026 00BF     	 nop
 275              	
 215:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 276              	 .loc 3 215 0 discriminator 3
 277              	 .thumb
 278 0028 FB68     	 ldr r3,[r7,#12]
 279 002a 0133     	 adds r3,r3,#1
 280 002c FB60     	 str r3,[r7,#12]
 281              	.L22:
 215:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 282              	 .loc 3 215 0 is_stmt 0 discriminator 1
 283 002e FA68     	 ldr r2,[r7,#12]
 284 0030 7B68     	 ldr r3,[r7,#4]
 285 0032 9A42     	 cmp r2,r3
 286 0034 F7D3     	 bcc .L23
 218:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 219:../Libraries/XMCLib/src/xmc4_scu.c **** }
 287              	 .loc 3 219 0 is_stmt 1
 288 0036 1037     	 adds r7,r7,#16
 289              	.LCFI23:
 290              	 .cfi_def_cfa_offset 8
 291 0038 BD46     	 mov sp,r7
 292              	.LCFI24:
 293              	 .cfi_def_cfa_register 13
 294              	 
 295 003a 80BD     	 pop {r7,pc}
 296              	.L25:
 297              	 .align 2
 298              	.L24:
 299 003c 00000000 	 .word SystemCoreClock
 300 0040 83DE1B43 	 .word 1125899907
 301              	 .cfi_endproc
 302              	.LFE162:
 304              	 .section .text.XMC_SCU_INTERRUPT_EnableEvent,"ax",%progbits
 305              	 .align 2
 306              	 .global XMC_SCU_INTERRUPT_EnableEvent
 307              	 .thumb
 308              	 .thumb_func
 310              	XMC_SCU_INTERRUPT_EnableEvent:
 311              	.LFB163:
 220:../Libraries/XMCLib/src/xmc4_scu.c **** 
 221:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable the SCU event */
 222:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 223:../Libraries/XMCLib/src/xmc4_scu.c **** {
 312              	 .loc 3 223 0
 313              	 .cfi_startproc
 314              	 
 315              	 
 316              	 
 317 0000 80B4     	 push {r7}
 318              	.LCFI25:
 319              	 .cfi_def_cfa_offset 4
 320              	 .cfi_offset 7,-4
 321 0002 83B0     	 sub sp,sp,#12
 322              	.LCFI26:
 323              	 .cfi_def_cfa_offset 16
 324 0004 00AF     	 add r7,sp,#0
 325              	.LCFI27:
 326              	 .cfi_def_cfa_register 7
 327 0006 7860     	 str r0,[r7,#4]
 224:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK |= (uint32_t)event;
 328              	 .loc 3 224 0
 329 0008 0549     	 ldr r1,.L27
 330 000a 054B     	 ldr r3,.L27
 331 000c 9A68     	 ldr r2,[r3,#8]
 332 000e 7B68     	 ldr r3,[r7,#4]
 333 0010 1343     	 orrs r3,r3,r2
 334 0012 8B60     	 str r3,[r1,#8]
 225:../Libraries/XMCLib/src/xmc4_scu.c **** }
 335              	 .loc 3 225 0
 336 0014 0C37     	 adds r7,r7,#12
 337              	.LCFI28:
 338              	 .cfi_def_cfa_offset 4
 339 0016 BD46     	 mov sp,r7
 340              	.LCFI29:
 341              	 .cfi_def_cfa_register 13
 342              	 
 343 0018 5DF8047B 	 ldr r7,[sp],#4
 344              	.LCFI30:
 345              	 .cfi_restore 7
 346              	 .cfi_def_cfa_offset 0
 347 001c 7047     	 bx lr
 348              	.L28:
 349 001e 00BF     	 .align 2
 350              	.L27:
 351 0020 74400050 	 .word 1342193780
 352              	 .cfi_endproc
 353              	.LFE163:
 355              	 .section .text.XMC_SCU_INTERRUPT_DisableEvent,"ax",%progbits
 356              	 .align 2
 357              	 .global XMC_SCU_INTERRUPT_DisableEvent
 358              	 .thumb
 359              	 .thumb_func
 361              	XMC_SCU_INTERRUPT_DisableEvent:
 362              	.LFB164:
 226:../Libraries/XMCLib/src/xmc4_scu.c **** 
 227:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable the SCU event */
 228:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 229:../Libraries/XMCLib/src/xmc4_scu.c **** {
 363              	 .loc 3 229 0
 364              	 .cfi_startproc
 365              	 
 366              	 
 367              	 
 368 0000 80B4     	 push {r7}
 369              	.LCFI31:
 370              	 .cfi_def_cfa_offset 4
 371              	 .cfi_offset 7,-4
 372 0002 83B0     	 sub sp,sp,#12
 373              	.LCFI32:
 374              	 .cfi_def_cfa_offset 16
 375 0004 00AF     	 add r7,sp,#0
 376              	.LCFI33:
 377              	 .cfi_def_cfa_register 7
 378 0006 7860     	 str r0,[r7,#4]
 230:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK &= (uint32_t)~event;
 379              	 .loc 3 230 0
 380 0008 0549     	 ldr r1,.L30
 381 000a 054B     	 ldr r3,.L30
 382 000c 9A68     	 ldr r2,[r3,#8]
 383 000e 7B68     	 ldr r3,[r7,#4]
 384 0010 DB43     	 mvns r3,r3
 385 0012 1340     	 ands r3,r3,r2
 386 0014 8B60     	 str r3,[r1,#8]
 231:../Libraries/XMCLib/src/xmc4_scu.c **** }
 387              	 .loc 3 231 0
 388 0016 0C37     	 adds r7,r7,#12
 389              	.LCFI34:
 390              	 .cfi_def_cfa_offset 4
 391 0018 BD46     	 mov sp,r7
 392              	.LCFI35:
 393              	 .cfi_def_cfa_register 13
 394              	 
 395 001a 5DF8047B 	 ldr r7,[sp],#4
 396              	.LCFI36:
 397              	 .cfi_restore 7
 398              	 .cfi_def_cfa_offset 0
 399 001e 7047     	 bx lr
 400              	.L31:
 401              	 .align 2
 402              	.L30:
 403 0020 74400050 	 .word 1342193780
 404              	 .cfi_endproc
 405              	.LFE164:
 407              	 .section .text.XMC_SCU_INTERRUPT_TriggerEvent,"ax",%progbits
 408              	 .align 2
 409              	 .global XMC_SCU_INTERRUPT_TriggerEvent
 410              	 .thumb
 411              	 .thumb_func
 413              	XMC_SCU_INTERRUPT_TriggerEvent:
 414              	.LFB165:
 232:../Libraries/XMCLib/src/xmc4_scu.c **** 
 233:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to trigger the SCU event */
 234:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 235:../Libraries/XMCLib/src/xmc4_scu.c **** {
 415              	 .loc 3 235 0
 416              	 .cfi_startproc
 417              	 
 418              	 
 419              	 
 420 0000 80B4     	 push {r7}
 421              	.LCFI37:
 422              	 .cfi_def_cfa_offset 4
 423              	 .cfi_offset 7,-4
 424 0002 83B0     	 sub sp,sp,#12
 425              	.LCFI38:
 426              	 .cfi_def_cfa_offset 16
 427 0004 00AF     	 add r7,sp,#0
 428              	.LCFI39:
 429              	 .cfi_def_cfa_register 7
 430 0006 7860     	 str r0,[r7,#4]
 236:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRSET |= (uint32_t)event;
 431              	 .loc 3 236 0
 432 0008 0549     	 ldr r1,.L33
 433 000a 054B     	 ldr r3,.L33
 434 000c 1A69     	 ldr r2,[r3,#16]
 435 000e 7B68     	 ldr r3,[r7,#4]
 436 0010 1343     	 orrs r3,r3,r2
 437 0012 0B61     	 str r3,[r1,#16]
 237:../Libraries/XMCLib/src/xmc4_scu.c **** }
 438              	 .loc 3 237 0
 439 0014 0C37     	 adds r7,r7,#12
 440              	.LCFI40:
 441              	 .cfi_def_cfa_offset 4
 442 0016 BD46     	 mov sp,r7
 443              	.LCFI41:
 444              	 .cfi_def_cfa_register 13
 445              	 
 446 0018 5DF8047B 	 ldr r7,[sp],#4
 447              	.LCFI42:
 448              	 .cfi_restore 7
 449              	 .cfi_def_cfa_offset 0
 450 001c 7047     	 bx lr
 451              	.L34:
 452 001e 00BF     	 .align 2
 453              	.L33:
 454 0020 74400050 	 .word 1342193780
 455              	 .cfi_endproc
 456              	.LFE165:
 458              	 .section .text.XMC_SCU_INTERUPT_GetEventStatus,"ax",%progbits
 459              	 .align 2
 460              	 .global XMC_SCU_INTERUPT_GetEventStatus
 461              	 .thumb
 462              	 .thumb_func
 464              	XMC_SCU_INTERUPT_GetEventStatus:
 465              	.LFB166:
 238:../Libraries/XMCLib/src/xmc4_scu.c **** 
 239:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the SCU event status */
 240:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void)
 241:../Libraries/XMCLib/src/xmc4_scu.c **** {
 466              	 .loc 3 241 0
 467              	 .cfi_startproc
 468              	 
 469              	 
 470              	 
 471 0000 80B4     	 push {r7}
 472              	.LCFI43:
 473              	 .cfi_def_cfa_offset 4
 474              	 .cfi_offset 7,-4
 475 0002 00AF     	 add r7,sp,#0
 476              	.LCFI44:
 477              	 .cfi_def_cfa_register 7
 242:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_INTERRUPT->SRRAW);
 478              	 .loc 3 242 0
 479 0004 034B     	 ldr r3,.L37
 480 0006 5B68     	 ldr r3,[r3,#4]
 243:../Libraries/XMCLib/src/xmc4_scu.c **** }
 481              	 .loc 3 243 0
 482 0008 1846     	 mov r0,r3
 483 000a BD46     	 mov sp,r7
 484              	.LCFI45:
 485              	 .cfi_def_cfa_register 13
 486              	 
 487 000c 5DF8047B 	 ldr r7,[sp],#4
 488              	.LCFI46:
 489              	 .cfi_restore 7
 490              	 .cfi_def_cfa_offset 0
 491 0010 7047     	 bx lr
 492              	.L38:
 493 0012 00BF     	 .align 2
 494              	.L37:
 495 0014 74400050 	 .word 1342193780
 496              	 .cfi_endproc
 497              	.LFE166:
 499              	 .section .text.XMC_SCU_INTERRUPT_ClearEventStatus,"ax",%progbits
 500              	 .align 2
 501              	 .global XMC_SCU_INTERRUPT_ClearEventStatus
 502              	 .thumb
 503              	 .thumb_func
 505              	XMC_SCU_INTERRUPT_ClearEventStatus:
 506              	.LFB167:
 244:../Libraries/XMCLib/src/xmc4_scu.c **** 
 245:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear the SCU event status */
 246:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event)
 247:../Libraries/XMCLib/src/xmc4_scu.c **** {
 507              	 .loc 3 247 0
 508              	 .cfi_startproc
 509              	 
 510              	 
 511              	 
 512 0000 80B4     	 push {r7}
 513              	.LCFI47:
 514              	 .cfi_def_cfa_offset 4
 515              	 .cfi_offset 7,-4
 516 0002 83B0     	 sub sp,sp,#12
 517              	.LCFI48:
 518              	 .cfi_def_cfa_offset 16
 519 0004 00AF     	 add r7,sp,#0
 520              	.LCFI49:
 521              	 .cfi_def_cfa_register 7
 522 0006 7860     	 str r0,[r7,#4]
 248:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRCLR = (uint32_t)event;
 523              	 .loc 3 248 0
 524 0008 034A     	 ldr r2,.L40
 525 000a 7B68     	 ldr r3,[r7,#4]
 526 000c D360     	 str r3,[r2,#12]
 249:../Libraries/XMCLib/src/xmc4_scu.c **** }
 527              	 .loc 3 249 0
 528 000e 0C37     	 adds r7,r7,#12
 529              	.LCFI50:
 530              	 .cfi_def_cfa_offset 4
 531 0010 BD46     	 mov sp,r7
 532              	.LCFI51:
 533              	 .cfi_def_cfa_register 13
 534              	 
 535 0012 5DF8047B 	 ldr r7,[sp],#4
 536              	.LCFI52:
 537              	 .cfi_restore 7
 538              	 .cfi_def_cfa_offset 0
 539 0016 7047     	 bx lr
 540              	.L41:
 541              	 .align 2
 542              	.L40:
 543 0018 74400050 	 .word 1342193780
 544              	 .cfi_endproc
 545              	.LFE167:
 547              	 .section .text.XMC_SCU_GetBootMode,"ax",%progbits
 548              	 .align 2
 549              	 .global XMC_SCU_GetBootMode
 550              	 .thumb
 551              	 .thumb_func
 553              	XMC_SCU_GetBootMode:
 554              	.LFB168:
 250:../Libraries/XMCLib/src/xmc4_scu.c **** 
 251:../Libraries/XMCLib/src/xmc4_scu.c **** 
 252:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the currently deployed device bootmode */
 253:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetBootMode(void)
 254:../Libraries/XMCLib/src/xmc4_scu.c **** {
 555              	 .loc 3 254 0
 556              	 .cfi_startproc
 557              	 
 558              	 
 559              	 
 560 0000 80B4     	 push {r7}
 561              	.LCFI53:
 562              	 .cfi_def_cfa_offset 4
 563              	 .cfi_offset 7,-4
 564 0002 00AF     	 add r7,sp,#0
 565              	.LCFI54:
 566              	 .cfi_def_cfa_register 7
 255:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(SCU_GENERAL->STCON & SCU_GENERAL_STCON_SWCON_Msk);
 567              	 .loc 3 255 0
 568 0004 044B     	 ldr r3,.L44
 569 0006 1B69     	 ldr r3,[r3,#16]
 570 0008 03F47063 	 and r3,r3,#3840
 256:../Libraries/XMCLib/src/xmc4_scu.c **** }
 571              	 .loc 3 256 0
 572 000c 1846     	 mov r0,r3
 573 000e BD46     	 mov sp,r7
 574              	.LCFI55:
 575              	 .cfi_def_cfa_register 13
 576              	 
 577 0010 5DF8047B 	 ldr r7,[sp],#4
 578              	.LCFI56:
 579              	 .cfi_restore 7
 580              	 .cfi_def_cfa_offset 0
 581 0014 7047     	 bx lr
 582              	.L45:
 583 0016 00BF     	 .align 2
 584              	.L44:
 585 0018 00400050 	 .word 1342193664
 586              	 .cfi_endproc
 587              	.LFE168:
 589              	 .section .text.XMC_SCU_SetBootMode,"ax",%progbits
 590              	 .align 2
 591              	 .global XMC_SCU_SetBootMode
 592              	 .thumb
 593              	 .thumb_func
 595              	XMC_SCU_SetBootMode:
 596              	.LFB169:
 257:../Libraries/XMCLib/src/xmc4_scu.c **** 
 258:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program a new device bootmode */
 259:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t bootmode)
 260:../Libraries/XMCLib/src/xmc4_scu.c **** {
 597              	 .loc 3 260 0
 598              	 .cfi_startproc
 599              	 
 600              	 
 601              	 
 602 0000 80B4     	 push {r7}
 603              	.LCFI57:
 604              	 .cfi_def_cfa_offset 4
 605              	 .cfi_offset 7,-4
 606 0002 83B0     	 sub sp,sp,#12
 607              	.LCFI58:
 608              	 .cfi_def_cfa_offset 16
 609 0004 00AF     	 add r7,sp,#0
 610              	.LCFI59:
 611              	 .cfi_def_cfa_register 7
 612 0006 0346     	 mov r3,r0
 613 0008 FB80     	 strh r3,[r7,#6]
 261:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->STCON = (uint32_t)bootmode;
 614              	 .loc 3 261 0
 615 000a 044A     	 ldr r2,.L47
 616 000c FB88     	 ldrh r3,[r7,#6]
 617 000e 1361     	 str r3,[r2,#16]
 262:../Libraries/XMCLib/src/xmc4_scu.c **** }
 618              	 .loc 3 262 0
 619 0010 0C37     	 adds r7,r7,#12
 620              	.LCFI60:
 621              	 .cfi_def_cfa_offset 4
 622 0012 BD46     	 mov sp,r7
 623              	.LCFI61:
 624              	 .cfi_def_cfa_register 13
 625              	 
 626 0014 5DF8047B 	 ldr r7,[sp],#4
 627              	.LCFI62:
 628              	 .cfi_restore 7
 629              	 .cfi_def_cfa_offset 0
 630 0018 7047     	 bx lr
 631              	.L48:
 632 001a 00BF     	 .align 2
 633              	.L47:
 634 001c 00400050 	 .word 1342193664
 635              	 .cfi_endproc
 636              	.LFE169:
 638              	 .section .text.XMC_SCU_ReadGPR,"ax",%progbits
 639              	 .align 2
 640              	 .global XMC_SCU_ReadGPR
 641              	 .thumb
 642              	 .thumb_func
 644              	XMC_SCU_ReadGPR:
 645              	.LFB170:
 263:../Libraries/XMCLib/src/xmc4_scu.c **** 
 264:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to read from General purpose register */
 265:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadGPR(const uint32_t index)
 266:../Libraries/XMCLib/src/xmc4_scu.c **** {
 646              	 .loc 3 266 0
 647              	 .cfi_startproc
 648              	 
 649              	 
 650              	 
 651 0000 80B4     	 push {r7}
 652              	.LCFI63:
 653              	 .cfi_def_cfa_offset 4
 654              	 .cfi_offset 7,-4
 655 0002 83B0     	 sub sp,sp,#12
 656              	.LCFI64:
 657              	 .cfi_def_cfa_offset 16
 658 0004 00AF     	 add r7,sp,#0
 659              	.LCFI65:
 660              	 .cfi_def_cfa_register 7
 661 0006 7860     	 str r0,[r7,#4]
 267:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->GPR[index]);
 662              	 .loc 3 267 0
 663 0008 054A     	 ldr r2,.L51
 664 000a 7B68     	 ldr r3,[r7,#4]
 665 000c 0A33     	 adds r3,r3,#10
 666 000e 9B00     	 lsls r3,r3,#2
 667 0010 1344     	 add r3,r3,r2
 668 0012 5B68     	 ldr r3,[r3,#4]
 268:../Libraries/XMCLib/src/xmc4_scu.c **** }
 669              	 .loc 3 268 0
 670 0014 1846     	 mov r0,r3
 671 0016 0C37     	 adds r7,r7,#12
 672              	.LCFI66:
 673              	 .cfi_def_cfa_offset 4
 674 0018 BD46     	 mov sp,r7
 675              	.LCFI67:
 676              	 .cfi_def_cfa_register 13
 677              	 
 678 001a 5DF8047B 	 ldr r7,[sp],#4
 679              	.LCFI68:
 680              	 .cfi_restore 7
 681              	 .cfi_def_cfa_offset 0
 682 001e 7047     	 bx lr
 683              	.L52:
 684              	 .align 2
 685              	.L51:
 686 0020 00400050 	 .word 1342193664
 687              	 .cfi_endproc
 688              	.LFE170:
 690              	 .section .text.XMC_SCU_WriteGPR,"ax",%progbits
 691              	 .align 2
 692              	 .global XMC_SCU_WriteGPR
 693              	 .thumb
 694              	 .thumb_func
 696              	XMC_SCU_WriteGPR:
 697              	.LFB171:
 269:../Libraries/XMCLib/src/xmc4_scu.c **** 
 270:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to write to GPR */
 271:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data)
 272:../Libraries/XMCLib/src/xmc4_scu.c **** {
 698              	 .loc 3 272 0
 699              	 .cfi_startproc
 700              	 
 701              	 
 702              	 
 703 0000 80B4     	 push {r7}
 704              	.LCFI69:
 705              	 .cfi_def_cfa_offset 4
 706              	 .cfi_offset 7,-4
 707 0002 83B0     	 sub sp,sp,#12
 708              	.LCFI70:
 709              	 .cfi_def_cfa_offset 16
 710 0004 00AF     	 add r7,sp,#0
 711              	.LCFI71:
 712              	 .cfi_def_cfa_register 7
 713 0006 7860     	 str r0,[r7,#4]
 714 0008 3960     	 str r1,[r7]
 273:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GPR[index] = data;
 715              	 .loc 3 273 0
 716 000a 064A     	 ldr r2,.L54
 717 000c 7B68     	 ldr r3,[r7,#4]
 718 000e 0A33     	 adds r3,r3,#10
 719 0010 9B00     	 lsls r3,r3,#2
 720 0012 1344     	 add r3,r3,r2
 721 0014 3A68     	 ldr r2,[r7]
 722 0016 5A60     	 str r2,[r3,#4]
 274:../Libraries/XMCLib/src/xmc4_scu.c **** }
 723              	 .loc 3 274 0
 724 0018 0C37     	 adds r7,r7,#12
 725              	.LCFI72:
 726              	 .cfi_def_cfa_offset 4
 727 001a BD46     	 mov sp,r7
 728              	.LCFI73:
 729              	 .cfi_def_cfa_register 13
 730              	 
 731 001c 5DF8047B 	 ldr r7,[sp],#4
 732              	.LCFI74:
 733              	 .cfi_restore 7
 734              	 .cfi_def_cfa_offset 0
 735 0020 7047     	 bx lr
 736              	.L55:
 737 0022 00BF     	 .align 2
 738              	.L54:
 739 0024 00400050 	 .word 1342193664
 740              	 .cfi_endproc
 741              	.LFE171:
 743              	 .section .text.XMC_SCU_EnableOutOfRangeComparator,"ax",%progbits
 744              	 .align 2
 745              	 .global XMC_SCU_EnableOutOfRangeComparator
 746              	 .thumb
 747              	 .thumb_func
 749              	XMC_SCU_EnableOutOfRangeComparator:
 750              	.LFB172:
 275:../Libraries/XMCLib/src/xmc4_scu.c **** 
 276:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 277:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 278:../Libraries/XMCLib/src/xmc4_scu.c **** {
 751              	 .loc 3 278 0
 752              	 .cfi_startproc
 753              	 
 754              	 
 755              	 
 756 0000 80B4     	 push {r7}
 757              	.LCFI75:
 758              	 .cfi_def_cfa_offset 4
 759              	 .cfi_offset 7,-4
 760 0002 83B0     	 sub sp,sp,#12
 761              	.LCFI76:
 762              	 .cfi_def_cfa_offset 16
 763 0004 00AF     	 add r7,sp,#0
 764              	.LCFI77:
 765              	 .cfi_def_cfa_register 7
 766 0006 7860     	 str r0,[r7,#4]
 767 0008 3960     	 str r1,[r7]
 279:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Group Number",XMC_SCU_CHECK_GRPNUM(group));
 280:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Channel Number",XMC_SCU_CHECK_CHNUM(channel))
 281:../Libraries/XMCLib/src/xmc4_scu.c ****    
 282:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] |= (uint32_t)(1UL << channel);
 768              	 .loc 3 282 0
 769 000a 0A49     	 ldr r1,.L57
 770 000c 094A     	 ldr r2,.L57
 771 000e 7B68     	 ldr r3,[r7,#4]
 772 0010 2833     	 adds r3,r3,#40
 773 0012 52F82320 	 ldr r2,[r2,r3,lsl#2]
 774 0016 3B68     	 ldr r3,[r7]
 775 0018 0120     	 movs r0,#1
 776 001a 00FA03F3 	 lsl r3,r0,r3
 777 001e 1A43     	 orrs r2,r2,r3
 778 0020 7B68     	 ldr r3,[r7,#4]
 779 0022 2833     	 adds r3,r3,#40
 780 0024 41F82320 	 str r2,[r1,r3,lsl#2]
 283:../Libraries/XMCLib/src/xmc4_scu.c **** }
 781              	 .loc 3 283 0
 782 0028 0C37     	 adds r7,r7,#12
 783              	.LCFI78:
 784              	 .cfi_def_cfa_offset 4
 785 002a BD46     	 mov sp,r7
 786              	.LCFI79:
 787              	 .cfi_def_cfa_register 13
 788              	 
 789 002c 5DF8047B 	 ldr r7,[sp],#4
 790              	.LCFI80:
 791              	 .cfi_restore 7
 792              	 .cfi_def_cfa_offset 0
 793 0030 7047     	 bx lr
 794              	.L58:
 795 0032 00BF     	 .align 2
 796              	.L57:
 797 0034 00400050 	 .word 1342193664
 798              	 .cfi_endproc
 799              	.LFE172:
 801              	 .section .text.XMC_SCU_DisableOutOfRangeComparator,"ax",%progbits
 802              	 .align 2
 803              	 .global XMC_SCU_DisableOutOfRangeComparator
 804              	 .thumb
 805              	 .thumb_func
 807              	XMC_SCU_DisableOutOfRangeComparator:
 808              	.LFB173:
 284:../Libraries/XMCLib/src/xmc4_scu.c **** 
 285:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 286:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 287:../Libraries/XMCLib/src/xmc4_scu.c **** {
 809              	 .loc 3 287 0
 810              	 .cfi_startproc
 811              	 
 812              	 
 813              	 
 814 0000 80B4     	 push {r7}
 815              	.LCFI81:
 816              	 .cfi_def_cfa_offset 4
 817              	 .cfi_offset 7,-4
 818 0002 83B0     	 sub sp,sp,#12
 819              	.LCFI82:
 820              	 .cfi_def_cfa_offset 16
 821 0004 00AF     	 add r7,sp,#0
 822              	.LCFI83:
 823              	 .cfi_def_cfa_register 7
 824 0006 7860     	 str r0,[r7,#4]
 825 0008 3960     	 str r1,[r7]
 288:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Group Number",XMC_SCU_CHECK_GRPNUM(group));
 289:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Channel Number",XMC_SCU_CHECK_CHNUM(channel
 290:../Libraries/XMCLib/src/xmc4_scu.c ****    
 291:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] &= (uint32_t)~(1UL << channel);
 826              	 .loc 3 291 0
 827 000a 0A49     	 ldr r1,.L60
 828 000c 094A     	 ldr r2,.L60
 829 000e 7B68     	 ldr r3,[r7,#4]
 830 0010 2833     	 adds r3,r3,#40
 831 0012 52F82320 	 ldr r2,[r2,r3,lsl#2]
 832 0016 3B68     	 ldr r3,[r7]
 833 0018 0120     	 movs r0,#1
 834 001a 00FA03F3 	 lsl r3,r0,r3
 835 001e DB43     	 mvns r3,r3
 836 0020 1A40     	 ands r2,r2,r3
 837 0022 7B68     	 ldr r3,[r7,#4]
 838 0024 2833     	 adds r3,r3,#40
 839 0026 41F82320 	 str r2,[r1,r3,lsl#2]
 292:../Libraries/XMCLib/src/xmc4_scu.c **** }
 840              	 .loc 3 292 0
 841 002a 0C37     	 adds r7,r7,#12
 842              	.LCFI84:
 843              	 .cfi_def_cfa_offset 4
 844 002c BD46     	 mov sp,r7
 845              	.LCFI85:
 846              	 .cfi_def_cfa_register 13
 847              	 
 848 002e 5DF8047B 	 ldr r7,[sp],#4
 849              	.LCFI86:
 850              	 .cfi_restore 7
 851              	 .cfi_def_cfa_offset 0
 852 0032 7047     	 bx lr
 853              	.L61:
 854              	 .align 2
 855              	.L60:
 856 0034 00400050 	 .word 1342193664
 857              	 .cfi_endproc
 858              	.LFE173:
 860              	 .section .text.XMC_SCU_CalibrateTemperatureSensor,"ax",%progbits
 861              	 .align 2
 862              	 .global XMC_SCU_CalibrateTemperatureSensor
 863              	 .thumb
 864              	 .thumb_func
 866              	XMC_SCU_CalibrateTemperatureSensor:
 867              	.LFB174:
 293:../Libraries/XMCLib/src/xmc4_scu.c **** 
 294:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to calibrate temperature sensor */
 295:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain)
 296:../Libraries/XMCLib/src/xmc4_scu.c **** {
 868              	 .loc 3 296 0
 869              	 .cfi_startproc
 870              	 
 871              	 
 872              	 
 873 0000 80B4     	 push {r7}
 874              	.LCFI87:
 875              	 .cfi_def_cfa_offset 4
 876              	 .cfi_offset 7,-4
 877 0002 83B0     	 sub sp,sp,#12
 878              	.LCFI88:
 879              	 .cfi_def_cfa_offset 16
 880 0004 00AF     	 add r7,sp,#0
 881              	.LCFI89:
 882              	 .cfi_def_cfa_register 7
 883 0006 7860     	 str r0,[r7,#4]
 884 0008 3960     	 str r1,[r7]
 297:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 885              	 .loc 3 297 0
 886 000a 0749     	 ldr r1,.L63
 887 000c 7B68     	 ldr r3,[r7,#4]
 888 000e 1A01     	 lsls r2,r3,#4
 298:../Libraries/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(gain << SCU_GENERAL_DTSCON_GAIN_Pos) |
 889              	 .loc 3 298 0
 890 0010 3B68     	 ldr r3,[r7]
 891 0012 DB02     	 lsls r3,r3,#11
 297:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 892              	 .loc 3 297 0
 893 0014 1343     	 orrs r3,r3,r2
 299:../Libraries/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(0x4UL << SCU_GENERAL_DTSCON_REFTRIM_Pos) |
 894              	 .loc 3 299 0
 895 0016 43F40803 	 orr r3,r3,#8912896
 297:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 896              	 .loc 3 297 0
 897 001a C1F88C30 	 str r3,[r1,#140]
 300:../Libraries/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(0x8UL << SCU_GENERAL_DTSCON_BGTRIM_Pos));
 301:../Libraries/XMCLib/src/xmc4_scu.c **** }
 898              	 .loc 3 301 0
 899 001e 0C37     	 adds r7,r7,#12
 900              	.LCFI90:
 901              	 .cfi_def_cfa_offset 4
 902 0020 BD46     	 mov sp,r7
 903              	.LCFI91:
 904              	 .cfi_def_cfa_register 13
 905              	 
 906 0022 5DF8047B 	 ldr r7,[sp],#4
 907              	.LCFI92:
 908              	 .cfi_restore 7
 909              	 .cfi_def_cfa_offset 0
 910 0026 7047     	 bx lr
 911              	.L64:
 912              	 .align 2
 913              	.L63:
 914 0028 00400050 	 .word 1342193664
 915              	 .cfi_endproc
 916              	.LFE174:
 918              	 .section .text.XMC_SCU_EnableTemperatureSensor,"ax",%progbits
 919              	 .align 2
 920              	 .global XMC_SCU_EnableTemperatureSensor
 921              	 .thumb
 922              	 .thumb_func
 924              	XMC_SCU_EnableTemperatureSensor:
 925              	.LFB175:
 302:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable die temperature measurement by powering the DTS module. */
 303:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableTemperatureSensor(void)
 304:../Libraries/XMCLib/src/xmc4_scu.c **** {
 926              	 .loc 3 304 0
 927              	 .cfi_startproc
 928              	 
 929              	 
 930              	 
 931 0000 80B4     	 push {r7}
 932              	.LCFI93:
 933              	 .cfi_def_cfa_offset 4
 934              	 .cfi_offset 7,-4
 935 0002 00AF     	 add r7,sp,#0
 936              	.LCFI94:
 937              	 .cfi_def_cfa_register 7
 305:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~(SCU_GENERAL_DTSCON_PWD_Msk);
 938              	 .loc 3 305 0
 939 0004 054A     	 ldr r2,.L66
 940 0006 054B     	 ldr r3,.L66
 941 0008 D3F88C30 	 ldr r3,[r3,#140]
 942 000c 23F00103 	 bic r3,r3,#1
 943 0010 C2F88C30 	 str r3,[r2,#140]
 306:../Libraries/XMCLib/src/xmc4_scu.c **** }
 944              	 .loc 3 306 0
 945 0014 BD46     	 mov sp,r7
 946              	.LCFI95:
 947              	 .cfi_def_cfa_register 13
 948              	 
 949 0016 5DF8047B 	 ldr r7,[sp],#4
 950              	.LCFI96:
 951              	 .cfi_restore 7
 952              	 .cfi_def_cfa_offset 0
 953 001a 7047     	 bx lr
 954              	.L67:
 955              	 .align 2
 956              	.L66:
 957 001c 00400050 	 .word 1342193664
 958              	 .cfi_endproc
 959              	.LFE175:
 961              	 .section .text.XMC_SCU_DisableTemperatureSensor,"ax",%progbits
 962              	 .align 2
 963              	 .global XMC_SCU_DisableTemperatureSensor
 964              	 .thumb
 965              	 .thumb_func
 967              	XMC_SCU_DisableTemperatureSensor:
 968              	.LFB176:
 307:../Libraries/XMCLib/src/xmc4_scu.c **** 
 308:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable die temperature measurement by powering the DTS module off. */
 309:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableTemperatureSensor(void)
 310:../Libraries/XMCLib/src/xmc4_scu.c **** {
 969              	 .loc 3 310 0
 970              	 .cfi_startproc
 971              	 
 972              	 
 973              	 
 974 0000 80B4     	 push {r7}
 975              	.LCFI97:
 976              	 .cfi_def_cfa_offset 4
 977              	 .cfi_offset 7,-4
 978 0002 00AF     	 add r7,sp,#0
 979              	.LCFI98:
 980              	 .cfi_def_cfa_register 7
 311:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_PWD_Msk;
 981              	 .loc 3 311 0
 982 0004 054A     	 ldr r2,.L69
 983 0006 054B     	 ldr r3,.L69
 984 0008 D3F88C30 	 ldr r3,[r3,#140]
 985 000c 43F00103 	 orr r3,r3,#1
 986 0010 C2F88C30 	 str r3,[r2,#140]
 312:../Libraries/XMCLib/src/xmc4_scu.c **** }
 987              	 .loc 3 312 0
 988 0014 BD46     	 mov sp,r7
 989              	.LCFI99:
 990              	 .cfi_def_cfa_register 13
 991              	 
 992 0016 5DF8047B 	 ldr r7,[sp],#4
 993              	.LCFI100:
 994              	 .cfi_restore 7
 995              	 .cfi_def_cfa_offset 0
 996 001a 7047     	 bx lr
 997              	.L70:
 998              	 .align 2
 999              	.L69:
 1000 001c 00400050 	 .word 1342193664
 1001              	 .cfi_endproc
 1002              	.LFE176:
 1004              	 .section .text.XMC_SCU_IsTemperatureSensorEnabled,"ax",%progbits
 1005              	 .align 2
 1006              	 .global XMC_SCU_IsTemperatureSensorEnabled
 1007              	 .thumb
 1008              	 .thumb_func
 1010              	XMC_SCU_IsTemperatureSensorEnabled:
 1011              	.LFB177:
 313:../Libraries/XMCLib/src/xmc4_scu.c **** 
 314:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to provide the die temperature sensor power status. */
 315:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorEnabled(void)
 316:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1012              	 .loc 3 316 0
 1013              	 .cfi_startproc
 1014              	 
 1015              	 
 1016              	 
 1017 0000 80B4     	 push {r7}
 1018              	.LCFI101:
 1019              	 .cfi_def_cfa_offset 4
 1020              	 .cfi_offset 7,-4
 1021 0002 00AF     	 add r7,sp,#0
 1022              	.LCFI102:
 1023              	 .cfi_def_cfa_register 7
 317:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSCON & SCU_GENERAL_DTSCON_PWD_Msk) == 0U);
 1024              	 .loc 3 317 0
 1025 0004 074B     	 ldr r3,.L73
 1026 0006 D3F88C30 	 ldr r3,[r3,#140]
 1027 000a 03F00103 	 and r3,r3,#1
 1028 000e 002B     	 cmp r3,#0
 1029 0010 0CBF     	 ite eq
 1030 0012 0123     	 moveq r3,#1
 1031 0014 0023     	 movne r3,#0
 1032 0016 DBB2     	 uxtb r3,r3
 318:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1033              	 .loc 3 318 0
 1034 0018 1846     	 mov r0,r3
 1035 001a BD46     	 mov sp,r7
 1036              	.LCFI103:
 1037              	 .cfi_def_cfa_register 13
 1038              	 
 1039 001c 5DF8047B 	 ldr r7,[sp],#4
 1040              	.LCFI104:
 1041              	 .cfi_restore 7
 1042              	 .cfi_def_cfa_offset 0
 1043 0020 7047     	 bx lr
 1044              	.L74:
 1045 0022 00BF     	 .align 2
 1046              	.L73:
 1047 0024 00400050 	 .word 1342193664
 1048              	 .cfi_endproc
 1049              	.LFE177:
 1051              	 .section .text.XMC_SCU_IsTemperatureSensorReady,"ax",%progbits
 1052              	 .align 2
 1053              	 .global XMC_SCU_IsTemperatureSensorReady
 1054              	 .thumb
 1055              	 .thumb_func
 1057              	XMC_SCU_IsTemperatureSensorReady:
 1058              	.LFB178:
 319:../Libraries/XMCLib/src/xmc4_scu.c **** 
 320:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check if the die temperature sensor is ready to start a measurement. */
 321:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorReady(void)
 322:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1059              	 .loc 3 322 0
 1060              	 .cfi_startproc
 1061              	 
 1062              	 
 1063              	 
 1064 0000 80B4     	 push {r7}
 1065              	.LCFI105:
 1066              	 .cfi_def_cfa_offset 4
 1067              	 .cfi_offset 7,-4
 1068 0002 00AF     	 add r7,sp,#0
 1069              	.LCFI106:
 1070              	 .cfi_def_cfa_register 7
 323:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RDY_Msk) != 0U);
 1071              	 .loc 3 323 0
 1072 0004 074B     	 ldr r3,.L77
 1073 0006 D3F89030 	 ldr r3,[r3,#144]
 1074 000a 03F48043 	 and r3,r3,#16384
 1075 000e 002B     	 cmp r3,#0
 1076 0010 14BF     	 ite ne
 1077 0012 0123     	 movne r3,#1
 1078 0014 0023     	 moveq r3,#0
 1079 0016 DBB2     	 uxtb r3,r3
 324:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1080              	 .loc 3 324 0
 1081 0018 1846     	 mov r0,r3
 1082 001a BD46     	 mov sp,r7
 1083              	.LCFI107:
 1084              	 .cfi_def_cfa_register 13
 1085              	 
 1086 001c 5DF8047B 	 ldr r7,[sp],#4
 1087              	.LCFI108:
 1088              	 .cfi_restore 7
 1089              	 .cfi_def_cfa_offset 0
 1090 0020 7047     	 bx lr
 1091              	.L78:
 1092 0022 00BF     	 .align 2
 1093              	.L77:
 1094 0024 00400050 	 .word 1342193664
 1095              	 .cfi_endproc
 1096              	.LFE178:
 1098              	 .section .text.XMC_SCU_StartTemperatureMeasurement,"ax",%progbits
 1099              	 .align 2
 1100              	 .global XMC_SCU_StartTemperatureMeasurement
 1101              	 .thumb
 1102              	 .thumb_func
 1104              	XMC_SCU_StartTemperatureMeasurement:
 1105              	.LFB179:
 325:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to start device temperature measurements */
 326:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void)
 327:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1106              	 .loc 3 327 0
 1107              	 .cfi_startproc
 1108              	 
 1109              	 
 1110 0000 80B5     	 push {r7,lr}
 1111              	.LCFI109:
 1112              	 .cfi_def_cfa_offset 8
 1113              	 .cfi_offset 7,-8
 1114              	 .cfi_offset 14,-4
 1115 0002 82B0     	 sub sp,sp,#8
 1116              	.LCFI110:
 1117              	 .cfi_def_cfa_offset 16
 1118 0004 00AF     	 add r7,sp,#0
 1119              	.LCFI111:
 1120              	 .cfi_def_cfa_register 7
 328:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status = XMC_SCU_STATUS_OK;
 1121              	 .loc 3 328 0
 1122 0006 0023     	 movs r3,#0
 1123 0008 FB71     	 strb r3,[r7,#7]
 329:../Libraries/XMCLib/src/xmc4_scu.c **** 
 330:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1124              	 .loc 3 330 0
 1125 000a FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1126 000e 0346     	 mov r3,r0
 1127 0010 83F00103 	 eor r3,r3,#1
 1128 0014 DBB2     	 uxtb r3,r3
 1129 0016 002B     	 cmp r3,#0
 1130 0018 01D0     	 beq .L80
 331:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 332:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 1131              	 .loc 3 332 0
 1132 001a 0123     	 movs r3,#1
 1133 001c FB71     	 strb r3,[r7,#7]
 1134              	.L80:
 333:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 334:../Libraries/XMCLib/src/xmc4_scu.c ****    
 335:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorBusy() == true)
 1135              	 .loc 3 335 0
 1136 001e FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorBusy
 1137 0022 0346     	 mov r3,r0
 1138 0024 002B     	 cmp r3,#0
 1139 0026 01D0     	 beq .L81
 336:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 337:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_BUSY;
 1140              	 .loc 3 337 0
 1141 0028 0223     	 movs r3,#2
 1142 002a FB71     	 strb r3,[r7,#7]
 1143              	.L81:
 338:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 339:../Libraries/XMCLib/src/xmc4_scu.c **** 
 340:../Libraries/XMCLib/src/xmc4_scu.c ****   /* And start the measurement */
 341:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_START_Msk;
 1144              	 .loc 3 341 0
 1145 002c 064A     	 ldr r2,.L83
 1146 002e 064B     	 ldr r3,.L83
 1147 0030 D3F88C30 	 ldr r3,[r3,#140]
 1148 0034 43F00203 	 orr r3,r3,#2
 1149 0038 C2F88C30 	 str r3,[r2,#140]
 342:../Libraries/XMCLib/src/xmc4_scu.c ****   
 343:../Libraries/XMCLib/src/xmc4_scu.c ****   return (status);
 1150              	 .loc 3 343 0
 1151 003c FB79     	 ldrb r3,[r7,#7]
 344:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1152              	 .loc 3 344 0
 1153 003e 1846     	 mov r0,r3
 1154 0040 0837     	 adds r7,r7,#8
 1155              	.LCFI112:
 1156              	 .cfi_def_cfa_offset 8
 1157 0042 BD46     	 mov sp,r7
 1158              	.LCFI113:
 1159              	 .cfi_def_cfa_register 13
 1160              	 
 1161 0044 80BD     	 pop {r7,pc}
 1162              	.L84:
 1163 0046 00BF     	 .align 2
 1164              	.L83:
 1165 0048 00400050 	 .word 1342193664
 1166              	 .cfi_endproc
 1167              	.LFE179:
 1169              	 .section .text.XMC_SCU_GetTemperatureMeasurement,"ax",%progbits
 1170              	 .align 2
 1171              	 .global XMC_SCU_GetTemperatureMeasurement
 1172              	 .thumb
 1173              	 .thumb_func
 1175              	XMC_SCU_GetTemperatureMeasurement:
 1176              	.LFB180:
 345:../Libraries/XMCLib/src/xmc4_scu.c **** 
 346:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the temperature measured */
 347:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetTemperatureMeasurement(void)
 348:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1177              	 .loc 3 348 0
 1178              	 .cfi_startproc
 1179              	 
 1180              	 
 1181 0000 80B5     	 push {r7,lr}
 1182              	.LCFI114:
 1183              	 .cfi_def_cfa_offset 8
 1184              	 .cfi_offset 7,-8
 1185              	 .cfi_offset 14,-4
 1186 0002 82B0     	 sub sp,sp,#8
 1187              	.LCFI115:
 1188              	 .cfi_def_cfa_offset 16
 1189 0004 00AF     	 add r7,sp,#0
 1190              	.LCFI116:
 1191              	 .cfi_def_cfa_register 7
 349:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t temperature;
 350:../Libraries/XMCLib/src/xmc4_scu.c **** 
 351:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1192              	 .loc 3 351 0
 1193 0006 FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1194 000a 0346     	 mov r3,r0
 1195 000c 83F00103 	 eor r3,r3,#1
 1196 0010 DBB2     	 uxtb r3,r3
 1197 0012 002B     	 cmp r3,#0
 1198 0014 03D0     	 beq .L86
 352:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 353:../Libraries/XMCLib/src/xmc4_scu.c ****     temperature = 0x7FFFFFFFUL;
 1199              	 .loc 3 353 0
 1200 0016 6FF00043 	 mvn r3,#-2147483648
 1201 001a 7B60     	 str r3,[r7,#4]
 1202 001c 05E0     	 b .L87
 1203              	.L86:
 354:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 355:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 356:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 357:../Libraries/XMCLib/src/xmc4_scu.c ****     temperature = (uint32_t)((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RESULT_Msk) >> SCU_GENERAL
 1204              	 .loc 3 357 0
 1205 001e 054B     	 ldr r3,.L89
 1206 0020 D3F89030 	 ldr r3,[r3,#144]
 1207 0024 C3F30903 	 ubfx r3,r3,#0,#10
 1208 0028 7B60     	 str r3,[r7,#4]
 1209              	.L87:
 358:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 359:../Libraries/XMCLib/src/xmc4_scu.c ****   
 360:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((uint32_t)temperature);
 1210              	 .loc 3 360 0
 1211 002a 7B68     	 ldr r3,[r7,#4]
 361:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1212              	 .loc 3 361 0
 1213 002c 1846     	 mov r0,r3
 1214 002e 0837     	 adds r7,r7,#8
 1215              	.LCFI117:
 1216              	 .cfi_def_cfa_offset 8
 1217 0030 BD46     	 mov sp,r7
 1218              	.LCFI118:
 1219              	 .cfi_def_cfa_register 13
 1220              	 
 1221 0032 80BD     	 pop {r7,pc}
 1222              	.L90:
 1223              	 .align 2
 1224              	.L89:
 1225 0034 00400050 	 .word 1342193664
 1226              	 .cfi_endproc
 1227              	.LFE180:
 1229              	 .section .text.XMC_SCU_IsTemperatureSensorBusy,"ax",%progbits
 1230              	 .align 2
 1231              	 .global XMC_SCU_IsTemperatureSensorBusy
 1232              	 .thumb
 1233              	 .thumb_func
 1235              	XMC_SCU_IsTemperatureSensorBusy:
 1236              	.LFB181:
 362:../Libraries/XMCLib/src/xmc4_scu.c **** 
 363:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to know whether Die temperature sensor is busy */
 364:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorBusy(void)
 365:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1237              	 .loc 3 365 0
 1238              	 .cfi_startproc
 1239              	 
 1240              	 
 1241              	 
 1242 0000 80B4     	 push {r7}
 1243              	.LCFI119:
 1244              	 .cfi_def_cfa_offset 4
 1245              	 .cfi_offset 7,-4
 1246 0002 00AF     	 add r7,sp,#0
 1247              	.LCFI120:
 1248              	 .cfi_def_cfa_register 7
 366:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_BUSY_Msk) != 0U);
 1249              	 .loc 3 366 0
 1250 0004 074B     	 ldr r3,.L93
 1251 0006 D3F89030 	 ldr r3,[r3,#144]
 1252 000a 03F40043 	 and r3,r3,#32768
 1253 000e 002B     	 cmp r3,#0
 1254 0010 14BF     	 ite ne
 1255 0012 0123     	 movne r3,#1
 1256 0014 0023     	 moveq r3,#0
 1257 0016 DBB2     	 uxtb r3,r3
 367:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1258              	 .loc 3 367 0
 1259 0018 1846     	 mov r0,r3
 1260 001a BD46     	 mov sp,r7
 1261              	.LCFI121:
 1262              	 .cfi_def_cfa_register 13
 1263              	 
 1264 001c 5DF8047B 	 ldr r7,[sp],#4
 1265              	.LCFI122:
 1266              	 .cfi_restore 7
 1267              	 .cfi_def_cfa_offset 0
 1268 0020 7047     	 bx lr
 1269              	.L94:
 1270 0022 00BF     	 .align 2
 1271              	.L93:
 1272 0024 00400050 	 .word 1342193664
 1273              	 .cfi_endproc
 1274              	.LFE181:
 1276              	 .section .text.XMC_SCU_WriteToRetentionMemory,"ax",%progbits
 1277              	 .align 2
 1278              	 .global XMC_SCU_WriteToRetentionMemory
 1279              	 .thumb
 1280              	 .thumb_func
 1282              	XMC_SCU_WriteToRetentionMemory:
 1283              	.LFB182:
 368:../Libraries/XMCLib/src/xmc4_scu.c **** 
 369:../Libraries/XMCLib/src/xmc4_scu.c **** 
 370:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(SCU_GENERAL_DTEMPLIM_LOWER_Msk) && defined(SCU_GENERAL_DTEMPLIM_UPPER_Msk)
 371:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone past the ceiling */
 372:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HighTemperature(void)
 373:../Libraries/XMCLib/src/xmc4_scu.c **** {
 374:../Libraries/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 375:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 376:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 377:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 378:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 379:../Libraries/XMCLib/src/xmc4_scu.c **** 
 380:../Libraries/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 381:../Libraries/XMCLib/src/xmc4_scu.c **** 
 382:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */  
 383:../Libraries/XMCLib/src/xmc4_scu.c ****   if(dtscon)
 384:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 385:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 386:../Libraries/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 387:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 388:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 389:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 390:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 391:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 392:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_OVERFL_Msk;
 393:../Libraries/XMCLib/src/xmc4_scu.c ****     
 394:../Libraries/XMCLib/src/xmc4_scu.c ****     if(dtempalarm)
 395:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 396:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 397:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 398:../Libraries/XMCLib/src/xmc4_scu.c ****     else
 399:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 400:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 401:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 402:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 403:../Libraries/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 404:../Libraries/XMCLib/src/xmc4_scu.c **** }
 405:../Libraries/XMCLib/src/xmc4_scu.c **** 
 406:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program raw values of temperature limits into the DTS */
 407:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp)
 408:../Libraries/XMCLib/src/xmc4_scu.c **** {
 409:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Power up the DTS module */
 410:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~SCU_GENERAL_DTSCON_PWD_Msk;
 411:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = 0;
 412:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = (lower_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk);
 413:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM |= (uint32_t)((upper_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk) << SCU_GENERAL_
 414:../Libraries/XMCLib/src/xmc4_scu.c **** }
 415:../Libraries/XMCLib/src/xmc4_scu.c **** 
 416:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone below the stipulated limit */
 417:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_LowTemperature(void)
 418:../Libraries/XMCLib/src/xmc4_scu.c **** {
 419:../Libraries/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 420:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 421:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 422:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 423:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 424:../Libraries/XMCLib/src/xmc4_scu.c **** 
 425:../Libraries/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 426:../Libraries/XMCLib/src/xmc4_scu.c **** 
 427:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */  
 428:../Libraries/XMCLib/src/xmc4_scu.c ****   if(dtscon)
 429:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 430:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 431:../Libraries/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 432:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 433:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 434:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 435:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 436:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 437:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_UNDERFL_Msk;
 438:../Libraries/XMCLib/src/xmc4_scu.c ****     
 439:../Libraries/XMCLib/src/xmc4_scu.c ****     if(dtempalarm)
 440:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 441:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 442:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 443:../Libraries/XMCLib/src/xmc4_scu.c ****     else
 444:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 445:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 446:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 447:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 448:../Libraries/XMCLib/src/xmc4_scu.c ****   
 449:../Libraries/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 450:../Libraries/XMCLib/src/xmc4_scu.c **** }
 451:../Libraries/XMCLib/src/xmc4_scu.c **** #endif  
 452:../Libraries/XMCLib/src/xmc4_scu.c **** 
 453:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to write into Retention memory in hibernate domain */
 454:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data)
 455:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1284              	 .loc 3 455 0
 1285              	 .cfi_startproc
 1286              	 
 1287              	 
 1288              	 
 1289 0000 80B4     	 push {r7}
 1290              	.LCFI123:
 1291              	 .cfi_def_cfa_offset 4
 1292              	 .cfi_offset 7,-4
 1293 0002 85B0     	 sub sp,sp,#20
 1294              	.LCFI124:
 1295              	 .cfi_def_cfa_offset 24
 1296 0004 00AF     	 add r7,sp,#0
 1297              	.LCFI125:
 1298              	 .cfi_def_cfa_register 7
 1299 0006 7860     	 str r0,[r7,#4]
 1300 0008 3960     	 str r1,[r7]
 456:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 457:../Libraries/XMCLib/src/xmc4_scu.c ****   
 458:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Get the address right */  
 459:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr = (uint32_t)((address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1301              	 .loc 3 459 0
 1302 000a 7B68     	 ldr r3,[r7,#4]
 1303 000c 1B04     	 lsls r3,r3,#16
 1304 000e 03F47023 	 and r3,r3,#983040
 1305 0012 FB60     	 str r3,[r7,#12]
 460:../Libraries/XMCLib/src/xmc4_scu.c ****   
 461:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 462:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr |= (uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk);
 1306              	 .loc 3 462 0
 1307 0014 FB68     	 ldr r3,[r7,#12]
 1308 0016 43F00103 	 orr r3,r3,#1
 1309 001a FB60     	 str r3,[r7,#12]
 463:../Libraries/XMCLib/src/xmc4_scu.c ****   
 464:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Write desired data into RMDATA register */  
 465:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMDATA = data;
 1310              	 .loc 3 465 0
 1311 001c 0A4A     	 ldr r2,.L97
 1312 001e 3B68     	 ldr r3,[r7]
 1313 0020 C2F8CC30 	 str r3,[r2,#204]
 466:../Libraries/XMCLib/src/xmc4_scu.c ****   
 467:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Write address & direction of transfer into RMACR register */  
 468:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1314              	 .loc 3 468 0
 1315 0024 084A     	 ldr r2,.L97
 1316 0026 FB68     	 ldr r3,[r7,#12]
 1317 0028 C2F8C830 	 str r3,[r2,#200]
 469:../Libraries/XMCLib/src/xmc4_scu.c ****   
 470:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 471:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1318              	 .loc 3 471 0
 1319 002c 00BF     	 nop
 1320              	.L96:
 1321              	 .loc 3 471 0 is_stmt 0 discriminator 1
 1322 002e 064B     	 ldr r3,.L97
 1323 0030 D3F8C430 	 ldr r3,[r3,#196]
 1324 0034 03F40053 	 and r3,r3,#8192
 1325 0038 002B     	 cmp r3,#0
 1326 003a F8D1     	 bne .L96
 472:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 473:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 474:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1327              	 .loc 3 474 0 is_stmt 1
 1328 003c 1437     	 adds r7,r7,#20
 1329              	.LCFI126:
 1330              	 .cfi_def_cfa_offset 4
 1331 003e BD46     	 mov sp,r7
 1332              	.LCFI127:
 1333              	 .cfi_def_cfa_register 13
 1334              	 
 1335 0040 5DF8047B 	 ldr r7,[sp],#4
 1336              	.LCFI128:
 1337              	 .cfi_restore 7
 1338              	 .cfi_def_cfa_offset 0
 1339 0044 7047     	 bx lr
 1340              	.L98:
 1341 0046 00BF     	 .align 2
 1342              	.L97:
 1343 0048 00400050 	 .word 1342193664
 1344              	 .cfi_endproc
 1345              	.LFE182:
 1347              	 .section .text.XMC_SCU_ReadFromRetentionMemory,"ax",%progbits
 1348              	 .align 2
 1349              	 .global XMC_SCU_ReadFromRetentionMemory
 1350              	 .thumb
 1351              	 .thumb_func
 1353              	XMC_SCU_ReadFromRetentionMemory:
 1354              	.LFB183:
 475:../Libraries/XMCLib/src/xmc4_scu.c **** 
 476:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to read from Retention memory in hibernate domain */
 477:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address)
 478:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1355              	 .loc 3 478 0
 1356              	 .cfi_startproc
 1357              	 
 1358              	 
 1359              	 
 1360 0000 80B4     	 push {r7}
 1361              	.LCFI129:
 1362              	 .cfi_def_cfa_offset 4
 1363              	 .cfi_offset 7,-4
 1364 0002 85B0     	 sub sp,sp,#20
 1365              	.LCFI130:
 1366              	 .cfi_def_cfa_offset 24
 1367 0004 00AF     	 add r7,sp,#0
 1368              	.LCFI131:
 1369              	 .cfi_def_cfa_register 7
 1370 0006 7860     	 str r0,[r7,#4]
 479:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 480:../Libraries/XMCLib/src/xmc4_scu.c **** 
 481:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Get the address right */  
 482:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr = ((uint32_t)(address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1371              	 .loc 3 482 0
 1372 0008 7B68     	 ldr r3,[r7,#4]
 1373 000a 1B04     	 lsls r3,r3,#16
 1374 000c 03F47023 	 and r3,r3,#983040
 1375 0010 FB60     	 str r3,[r7,#12]
 483:../Libraries/XMCLib/src/xmc4_scu.c ****   
 484:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 485:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr &= ~((uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk));
 1376              	 .loc 3 485 0
 1377 0012 FB68     	 ldr r3,[r7,#12]
 1378 0014 23F00103 	 bic r3,r3,#1
 1379 0018 FB60     	 str r3,[r7,#12]
 486:../Libraries/XMCLib/src/xmc4_scu.c ****   
 487:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Writing an adress & direction of transfer into RMACR register */  
 488:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1380              	 .loc 3 488 0
 1381 001a 0A4A     	 ldr r2,.L102
 1382 001c FB68     	 ldr r3,[r7,#12]
 1383 001e C2F8C830 	 str r3,[r2,#200]
 489:../Libraries/XMCLib/src/xmc4_scu.c ****   
 490:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 491:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1384              	 .loc 3 491 0
 1385 0022 00BF     	 nop
 1386              	.L100:
 1387              	 .loc 3 491 0 is_stmt 0 discriminator 1
 1388 0024 074B     	 ldr r3,.L102
 1389 0026 D3F8C430 	 ldr r3,[r3,#196]
 1390 002a 03F40053 	 and r3,r3,#8192
 1391 002e 002B     	 cmp r3,#0
 1392 0030 F8D1     	 bne .L100
 492:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 493:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 494:../Libraries/XMCLib/src/xmc4_scu.c **** 
 495:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->RMDATA);
 1393              	 .loc 3 495 0 is_stmt 1
 1394 0032 044B     	 ldr r3,.L102
 1395 0034 D3F8CC30 	 ldr r3,[r3,#204]
 496:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1396              	 .loc 3 496 0
 1397 0038 1846     	 mov r0,r3
 1398 003a 1437     	 adds r7,r7,#20
 1399              	.LCFI132:
 1400              	 .cfi_def_cfa_offset 4
 1401 003c BD46     	 mov sp,r7
 1402              	.LCFI133:
 1403              	 .cfi_def_cfa_register 13
 1404              	 
 1405 003e 5DF8047B 	 ldr r7,[sp],#4
 1406              	.LCFI134:
 1407              	 .cfi_restore 7
 1408              	 .cfi_def_cfa_offset 0
 1409 0042 7047     	 bx lr
 1410              	.L103:
 1411              	 .align 2
 1412              	.L102:
 1413 0044 00400050 	 .word 1342193664
 1414              	 .cfi_endproc
 1415              	.LFE183:
 1417              	 .section .text.XMC_SCU_CLOCK_Init,"ax",%progbits
 1418              	 .align 2
 1419              	 .global XMC_SCU_CLOCK_Init
 1420              	 .thumb
 1421              	 .thumb_func
 1423              	XMC_SCU_CLOCK_Init:
 1424              	.LFB184:
 497:../Libraries/XMCLib/src/xmc4_scu.c **** 
 498:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to initialize the clock tree */
 499:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config)
 500:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1425              	 .loc 3 500 0
 1426              	 .cfi_startproc
 1427              	 
 1428              	 
 1429 0000 B0B5     	 push {r4,r5,r7,lr}
 1430              	.LCFI135:
 1431              	 .cfi_def_cfa_offset 16
 1432              	 .cfi_offset 4,-16
 1433              	 .cfi_offset 5,-12
 1434              	 .cfi_offset 7,-8
 1435              	 .cfi_offset 14,-4
 1436 0002 84B0     	 sub sp,sp,#16
 1437              	.LCFI136:
 1438              	 .cfi_def_cfa_offset 32
 1439 0004 02AF     	 add r7,sp,#8
 1440              	.LCFI137:
 1441              	 .cfi_def_cfa 7,24
 1442 0006 7860     	 str r0,[r7,#4]
 501:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fsys_clkdiv != 0);
 502:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fcpu_clkdiv != 0);
 503:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fccu_clkdiv != 0);
 504:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fperipheral_clkdiv != 0);
 505:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.p_div != 0) &&
 506:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 507:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 508:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.n_div != 0) &&
 509:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 510:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 511:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", (config->syspll_config.k_div != 0) &&
 512:../Libraries/XMCLib/src/xmc4_scu.c ****                  ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 513:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 514:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL) ||
 515:../Libraries/XMCLib/src/xmc4_scu.c ****                  (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_OFI)) &&
 516:../Libraries/XMCLib/src/xmc4_scu.c ****                  ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 517:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 518:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fstdby_clksrc == XMC_SCU_HIB_STDBYCLKSRC_OSCULP) && (config->enable_oscu
 519:../Libraries/XMCLib/src/xmc4_scu.c ****                  (config->fstdby_clksrc != XMC_SCU_HIB_STDBYCLKSRC_OSCULP));
 520:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.clksrc == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) &&
 521:../Libraries/XMCLib/src/xmc4_scu.c ****                  (config->enable_oschp == true)) || (config->syspll_config.clksrc != XMC_SCU_CLOCK_
 522:../Libraries/XMCLib/src/xmc4_scu.c **** 
 523:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_OFI);
 1443              	 .loc 3 523 0
 1444 0008 0020     	 movs r0,#0
 1445 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 524:../Libraries/XMCLib/src/xmc4_scu.c **** 
 525:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_EnableHibernateDomain();
 1446              	 .loc 3 525 0
 1447 000e FFF7FEFF 	 bl XMC_SCU_HIB_EnableHibernateDomain
 526:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->enable_osculp == true)
 1448              	 .loc 3 526 0
 1449 0012 7B68     	 ldr r3,[r7,#4]
 1450 0014 DB79     	 ldrb r3,[r3,#7]
 1451 0016 002B     	 cmp r3,#0
 1452 0018 0AD0     	 beq .L105
 527:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 528:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableLowPowerOscillator();
 1453              	 .loc 3 528 0
 1454 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableLowPowerOscillator
 529:../Libraries/XMCLib/src/xmc4_scu.c ****     while(XMC_SCU_CLOCK_IsLowPowerOscillatorStable() == false);
 1455              	 .loc 3 529 0
 1456 001e 00BF     	 nop
 1457              	.L106:
 1458              	 .loc 3 529 0 is_stmt 0 discriminator 1
 1459 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 1460 0024 0346     	 mov r3,r0
 1461 0026 83F00103 	 eor r3,r3,#1
 1462 002a DBB2     	 uxtb r3,r3
 1463 002c 002B     	 cmp r3,#0
 1464 002e F7D1     	 bne .L106
 1465              	.L105:
 530:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 531:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_SetStandbyClockSource(config->fstdby_clksrc);
 1466              	 .loc 3 531 0 is_stmt 1
 1467 0030 7B68     	 ldr r3,[r7,#4]
 1468 0032 5B7A     	 ldrb r3,[r3,#9]
 1469 0034 1846     	 mov r0,r3
 1470 0036 FFF7FEFF 	 bl XMC_SCU_HIB_SetStandbyClockSource
 532:../Libraries/XMCLib/src/xmc4_scu.c **** 
 533:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetBackupClockCalibrationMode(config->calibration_mode);
 1471              	 .loc 3 533 0
 1472 003a 7B68     	 ldr r3,[r7,#4]
 1473 003c 1B7A     	 ldrb r3,[r3,#8]
 1474 003e 1846     	 mov r0,r3
 1475 0040 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 534:../Libraries/XMCLib/src/xmc4_scu.c **** 
 535:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockDivider((uint32_t)config->fsys_clkdiv);
 1476              	 .loc 3 535 0
 1477 0044 7B68     	 ldr r3,[r7,#4]
 1478 0046 1B7C     	 ldrb r3,[r3,#16]
 1479 0048 1846     	 mov r0,r3
 1480 004a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockDivider
 536:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCpuClockDivider((uint32_t)config->fcpu_clkdiv);
 1481              	 .loc 3 536 0
 1482 004e 7B68     	 ldr r3,[r7,#4]
 1483 0050 5B7C     	 ldrb r3,[r3,#17]
 1484 0052 1846     	 mov r0,r3
 1485 0054 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCpuClockDivider
 537:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCcuClockDivider((uint32_t)config->fccu_clkdiv);
 1486              	 .loc 3 537 0
 1487 0058 7B68     	 ldr r3,[r7,#4]
 1488 005a 9B7C     	 ldrb r3,[r3,#18]
 1489 005c 1846     	 mov r0,r3
 1490 005e FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCcuClockDivider
 538:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetPeripheralClockDivider((uint32_t)config->fperipheral_clkdiv);
 1491              	 .loc 3 538 0
 1492 0062 7B68     	 ldr r3,[r7,#4]
 1493 0064 DB7C     	 ldrb r3,[r3,#19]
 1494 0066 1846     	 mov r0,r3
 1495 0068 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetPeripheralClockDivider
 539:../Libraries/XMCLib/src/xmc4_scu.c **** 
 540:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->enable_oschp == true)
 1496              	 .loc 3 540 0
 1497 006c 7B68     	 ldr r3,[r7,#4]
 1498 006e 9B79     	 ldrb r3,[r3,#6]
 1499 0070 002B     	 cmp r3,#0
 1500 0072 0AD0     	 beq .L107
 541:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 542:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableHighPerformanceOscillator();
 1501              	 .loc 3 542 0
 1502 0074 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 543:../Libraries/XMCLib/src/xmc4_scu.c ****     while(XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable() == false);
 1503              	 .loc 3 543 0
 1504 0078 00BF     	 nop
 1505              	.L108:
 1506              	 .loc 3 543 0 is_stmt 0 discriminator 1
 1507 007a FFF7FEFF 	 bl XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 1508 007e 0346     	 mov r3,r0
 1509 0080 83F00103 	 eor r3,r3,#1
 1510 0084 DBB2     	 uxtb r3,r3
 1511 0086 002B     	 cmp r3,#0
 1512 0088 F7D1     	 bne .L108
 1513              	.L107:
 544:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 545:../Libraries/XMCLib/src/xmc4_scu.c **** 
 546:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED)
 1514              	 .loc 3 546 0 is_stmt 1
 1515 008a 7B68     	 ldr r3,[r7,#4]
 1516 008c DB78     	 ldrb r3,[r3,#3]
 1517 008e 002B     	 cmp r3,#0
 1518 0090 02D1     	 bne .L109
 547:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 548:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_DisableSystemPll();
 1519              	 .loc 3 548 0
 1520 0092 FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableSystemPll
 1521 0096 14E0     	 b .L110
 1522              	.L109:
 549:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 550:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 551:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 552:../Libraries/XMCLib/src/xmc4_scu.c **** 
 553:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableSystemPll();
 1523              	 .loc 3 553 0
 1524 0098 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableSystemPll
 554:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1525              	 .loc 3 554 0
 1526 009c 7B68     	 ldr r3,[r7,#4]
 1527 009e 9988     	 ldrh r1,[r3,#4]
 1528 00a0 7B68     	 ldr r3,[r7,#4]
 1529 00a2 DA78     	 ldrb r2,[r3,#3]
 555:../Libraries/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 556:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.p_div,
 1530              	 .loc 3 556 0
 1531 00a4 7B68     	 ldr r3,[r7,#4]
 1532 00a6 5B78     	 ldrb r3,[r3,#1]
 554:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1533              	 .loc 3 554 0
 1534 00a8 1D46     	 mov r5,r3
 557:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.n_div,
 1535              	 .loc 3 557 0
 1536 00aa 7B68     	 ldr r3,[r7,#4]
 1537 00ac 1B78     	 ldrb r3,[r3]
 554:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1538              	 .loc 3 554 0
 1539 00ae 1C46     	 mov r4,r3
 558:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.k_div);
 1540              	 .loc 3 558 0
 1541 00b0 7B68     	 ldr r3,[r7,#4]
 1542 00b2 9B78     	 ldrb r3,[r3,#2]
 554:../Libraries/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 1543              	 .loc 3 554 0
 1544 00b4 0093     	 str r3,[sp]
 1545 00b6 0846     	 mov r0,r1
 1546 00b8 1146     	 mov r1,r2
 1547 00ba 2A46     	 mov r2,r5
 1548 00bc 2346     	 mov r3,r4
 1549 00be FFF7FEFF 	 bl XMC_SCU_CLOCK_StartSystemPll
 1550              	.L110:
 559:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 560:../Libraries/XMCLib/src/xmc4_scu.c **** 
 561:../Libraries/XMCLib/src/xmc4_scu.c ****   /* use SYSPLL? */
 562:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL)
 1551              	 .loc 3 562 0
 1552 00c2 7B68     	 ldr r3,[r7,#4]
 1553 00c4 DB68     	 ldr r3,[r3,#12]
 1554 00c6 B3F5803F 	 cmp r3,#65536
 1555 00ca 03D1     	 bne .L111
 563:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 564:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_PLL);    
 1556              	 .loc 3 564 0
 1557 00cc 4FF48030 	 mov r0,#65536
 1558 00d0 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 1559              	.L111:
 565:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 566:../Libraries/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 1560              	 .loc 3 566 0
 1561 00d4 FFF7FEFF 	 bl SystemCoreClockUpdate
 567:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1562              	 .loc 3 567 0
 1563 00d8 0837     	 adds r7,r7,#8
 1564              	.LCFI138:
 1565              	 .cfi_def_cfa_offset 16
 1566 00da BD46     	 mov sp,r7
 1567              	.LCFI139:
 1568              	 .cfi_def_cfa_register 13
 1569              	 
 1570 00dc B0BD     	 pop {r4,r5,r7,pc}
 1571              	 .cfi_endproc
 1572              	.LFE184:
 1574 00de 00BF     	 .section .text.XMC_SCU_TRAP_Enable,"ax",%progbits
 1575              	 .align 2
 1576              	 .global XMC_SCU_TRAP_Enable
 1577              	 .thumb
 1578              	 .thumb_func
 1580              	XMC_SCU_TRAP_Enable:
 1581              	.LFB185:
 568:../Libraries/XMCLib/src/xmc4_scu.c **** 
 569:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable a trap source */
 570:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Enable(const uint32_t trap)
 571:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1582              	 .loc 3 571 0
 1583              	 .cfi_startproc
 1584              	 
 1585              	 
 1586              	 
 1587 0000 80B4     	 push {r7}
 1588              	.LCFI140:
 1589              	 .cfi_def_cfa_offset 4
 1590              	 .cfi_offset 7,-4
 1591 0002 83B0     	 sub sp,sp,#12
 1592              	.LCFI141:
 1593              	 .cfi_def_cfa_offset 16
 1594 0004 00AF     	 add r7,sp,#0
 1595              	.LCFI142:
 1596              	 .cfi_def_cfa_register 7
 1597 0006 7860     	 str r0,[r7,#4]
 572:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS &= (uint32_t)~trap;
 1598              	 .loc 3 572 0
 1599 0008 0549     	 ldr r1,.L113
 1600 000a 054B     	 ldr r3,.L113
 1601 000c 9A68     	 ldr r2,[r3,#8]
 1602 000e 7B68     	 ldr r3,[r7,#4]
 1603 0010 DB43     	 mvns r3,r3
 1604 0012 1340     	 ands r3,r3,r2
 1605 0014 8B60     	 str r3,[r1,#8]
 573:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1606              	 .loc 3 573 0
 1607 0016 0C37     	 adds r7,r7,#12
 1608              	.LCFI143:
 1609              	 .cfi_def_cfa_offset 4
 1610 0018 BD46     	 mov sp,r7
 1611              	.LCFI144:
 1612              	 .cfi_def_cfa_register 13
 1613              	 
 1614 001a 5DF8047B 	 ldr r7,[sp],#4
 1615              	.LCFI145:
 1616              	 .cfi_restore 7
 1617              	 .cfi_def_cfa_offset 0
 1618 001e 7047     	 bx lr
 1619              	.L114:
 1620              	 .align 2
 1621              	.L113:
 1622 0020 60410050 	 .word 1342194016
 1623              	 .cfi_endproc
 1624              	.LFE185:
 1626              	 .section .text.XMC_SCU_TRAP_Disable,"ax",%progbits
 1627              	 .align 2
 1628              	 .global XMC_SCU_TRAP_Disable
 1629              	 .thumb
 1630              	 .thumb_func
 1632              	XMC_SCU_TRAP_Disable:
 1633              	.LFB186:
 574:../Libraries/XMCLib/src/xmc4_scu.c **** 
 575:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable a trap source */
 576:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Disable(const uint32_t trap)
 577:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1634              	 .loc 3 577 0
 1635              	 .cfi_startproc
 1636              	 
 1637              	 
 1638              	 
 1639 0000 80B4     	 push {r7}
 1640              	.LCFI146:
 1641              	 .cfi_def_cfa_offset 4
 1642              	 .cfi_offset 7,-4
 1643 0002 83B0     	 sub sp,sp,#12
 1644              	.LCFI147:
 1645              	 .cfi_def_cfa_offset 16
 1646 0004 00AF     	 add r7,sp,#0
 1647              	.LCFI148:
 1648              	 .cfi_def_cfa_register 7
 1649 0006 7860     	 str r0,[r7,#4]
 578:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS |= (uint32_t)trap;
 1650              	 .loc 3 578 0
 1651 0008 0549     	 ldr r1,.L116
 1652 000a 054B     	 ldr r3,.L116
 1653 000c 9A68     	 ldr r2,[r3,#8]
 1654 000e 7B68     	 ldr r3,[r7,#4]
 1655 0010 1343     	 orrs r3,r3,r2
 1656 0012 8B60     	 str r3,[r1,#8]
 579:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1657              	 .loc 3 579 0
 1658 0014 0C37     	 adds r7,r7,#12
 1659              	.LCFI149:
 1660              	 .cfi_def_cfa_offset 4
 1661 0016 BD46     	 mov sp,r7
 1662              	.LCFI150:
 1663              	 .cfi_def_cfa_register 13
 1664              	 
 1665 0018 5DF8047B 	 ldr r7,[sp],#4
 1666              	.LCFI151:
 1667              	 .cfi_restore 7
 1668              	 .cfi_def_cfa_offset 0
 1669 001c 7047     	 bx lr
 1670              	.L117:
 1671 001e 00BF     	 .align 2
 1672              	.L116:
 1673 0020 60410050 	 .word 1342194016
 1674              	 .cfi_endproc
 1675              	.LFE186:
 1677              	 .section .text.XMC_SCU_TRAP_GetStatus,"ax",%progbits
 1678              	 .align 2
 1679              	 .global XMC_SCU_TRAP_GetStatus
 1680              	 .thumb
 1681              	 .thumb_func
 1683              	XMC_SCU_TRAP_GetStatus:
 1684              	.LFB187:
 580:../Libraries/XMCLib/src/xmc4_scu.c **** 
 581:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if a trap source has generated event */
 582:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_TRAP_GetStatus(void)
 583:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1685              	 .loc 3 583 0
 1686              	 .cfi_startproc
 1687              	 
 1688              	 
 1689              	 
 1690 0000 80B4     	 push {r7}
 1691              	.LCFI152:
 1692              	 .cfi_def_cfa_offset 4
 1693              	 .cfi_offset 7,-4
 1694 0002 00AF     	 add r7,sp,#0
 1695              	.LCFI153:
 1696              	 .cfi_def_cfa_register 7
 584:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_TRAP->TRAPRAW);
 1697              	 .loc 3 584 0
 1698 0004 034B     	 ldr r3,.L120
 1699 0006 5B68     	 ldr r3,[r3,#4]
 585:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1700              	 .loc 3 585 0
 1701 0008 1846     	 mov r0,r3
 1702 000a BD46     	 mov sp,r7
 1703              	.LCFI154:
 1704              	 .cfi_def_cfa_register 13
 1705              	 
 1706 000c 5DF8047B 	 ldr r7,[sp],#4
 1707              	.LCFI155:
 1708              	 .cfi_restore 7
 1709              	 .cfi_def_cfa_offset 0
 1710 0010 7047     	 bx lr
 1711              	.L121:
 1712 0012 00BF     	 .align 2
 1713              	.L120:
 1714 0014 60410050 	 .word 1342194016
 1715              	 .cfi_endproc
 1716              	.LFE187:
 1718              	 .section .text.XMC_SCU_TRAP_Trigger,"ax",%progbits
 1719              	 .align 2
 1720              	 .global XMC_SCU_TRAP_Trigger
 1721              	 .thumb
 1722              	 .thumb_func
 1724              	XMC_SCU_TRAP_Trigger:
 1725              	.LFB188:
 586:../Libraries/XMCLib/src/xmc4_scu.c **** 
 587:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually trigger a trap event */
 588:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Trigger(const uint32_t trap)
 589:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1726              	 .loc 3 589 0
 1727              	 .cfi_startproc
 1728              	 
 1729              	 
 1730              	 
 1731 0000 80B4     	 push {r7}
 1732              	.LCFI156:
 1733              	 .cfi_def_cfa_offset 4
 1734              	 .cfi_offset 7,-4
 1735 0002 83B0     	 sub sp,sp,#12
 1736              	.LCFI157:
 1737              	 .cfi_def_cfa_offset 16
 1738 0004 00AF     	 add r7,sp,#0
 1739              	.LCFI158:
 1740              	 .cfi_def_cfa_register 7
 1741 0006 7860     	 str r0,[r7,#4]
 590:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPSET = (uint32_t)trap;
 1742              	 .loc 3 590 0
 1743 0008 034A     	 ldr r2,.L123
 1744 000a 7B68     	 ldr r3,[r7,#4]
 1745 000c 1361     	 str r3,[r2,#16]
 591:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1746              	 .loc 3 591 0
 1747 000e 0C37     	 adds r7,r7,#12
 1748              	.LCFI159:
 1749              	 .cfi_def_cfa_offset 4
 1750 0010 BD46     	 mov sp,r7
 1751              	.LCFI160:
 1752              	 .cfi_def_cfa_register 13
 1753              	 
 1754 0012 5DF8047B 	 ldr r7,[sp],#4
 1755              	.LCFI161:
 1756              	 .cfi_restore 7
 1757              	 .cfi_def_cfa_offset 0
 1758 0016 7047     	 bx lr
 1759              	.L124:
 1760              	 .align 2
 1761              	.L123:
 1762 0018 60410050 	 .word 1342194016
 1763              	 .cfi_endproc
 1764              	.LFE188:
 1766              	 .section .text.XMC_SCU_TRAP_ClearStatus,"ax",%progbits
 1767              	 .align 2
 1768              	 .global XMC_SCU_TRAP_ClearStatus
 1769              	 .thumb
 1770              	 .thumb_func
 1772              	XMC_SCU_TRAP_ClearStatus:
 1773              	.LFB189:
 592:../Libraries/XMCLib/src/xmc4_scu.c **** 
 593:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear a trap event */
 594:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap)
 595:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1774              	 .loc 3 595 0
 1775              	 .cfi_startproc
 1776              	 
 1777              	 
 1778              	 
 1779 0000 80B4     	 push {r7}
 1780              	.LCFI162:
 1781              	 .cfi_def_cfa_offset 4
 1782              	 .cfi_offset 7,-4
 1783 0002 83B0     	 sub sp,sp,#12
 1784              	.LCFI163:
 1785              	 .cfi_def_cfa_offset 16
 1786 0004 00AF     	 add r7,sp,#0
 1787              	.LCFI164:
 1788              	 .cfi_def_cfa_register 7
 1789 0006 7860     	 str r0,[r7,#4]
 596:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPCLR = (uint32_t)trap;
 1790              	 .loc 3 596 0
 1791 0008 034A     	 ldr r2,.L126
 1792 000a 7B68     	 ldr r3,[r7,#4]
 1793 000c D360     	 str r3,[r2,#12]
 597:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1794              	 .loc 3 597 0
 1795 000e 0C37     	 adds r7,r7,#12
 1796              	.LCFI165:
 1797              	 .cfi_def_cfa_offset 4
 1798 0010 BD46     	 mov sp,r7
 1799              	.LCFI166:
 1800              	 .cfi_def_cfa_register 13
 1801              	 
 1802 0012 5DF8047B 	 ldr r7,[sp],#4
 1803              	.LCFI167:
 1804              	 .cfi_restore 7
 1805              	 .cfi_def_cfa_offset 0
 1806 0016 7047     	 bx lr
 1807              	.L127:
 1808              	 .align 2
 1809              	.L126:
 1810 0018 60410050 	 .word 1342194016
 1811              	 .cfi_endproc
 1812              	.LFE189:
 1814              	 .section .text.XMC_SCU_PARITY_ClearStatus,"ax",%progbits
 1815              	 .align 2
 1816              	 .global XMC_SCU_PARITY_ClearStatus
 1817              	 .thumb
 1818              	 .thumb_func
 1820              	XMC_SCU_PARITY_ClearStatus:
 1821              	.LFB190:
 598:../Libraries/XMCLib/src/xmc4_scu.c **** 
 599:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear parity error event */
 600:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory)
 601:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1822              	 .loc 3 601 0
 1823              	 .cfi_startproc
 1824              	 
 1825              	 
 1826              	 
 1827 0000 80B4     	 push {r7}
 1828              	.LCFI168:
 1829              	 .cfi_def_cfa_offset 4
 1830              	 .cfi_offset 7,-4
 1831 0002 83B0     	 sub sp,sp,#12
 1832              	.LCFI169:
 1833              	 .cfi_def_cfa_offset 16
 1834 0004 00AF     	 add r7,sp,#0
 1835              	.LCFI170:
 1836              	 .cfi_def_cfa_register 7
 1837 0006 7860     	 str r0,[r7,#4]
 602:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEFLAG |= (uint32_t)memory; 
 1838              	 .loc 3 602 0
 1839 0008 0549     	 ldr r1,.L129
 1840 000a 054B     	 ldr r3,.L129
 1841 000c 5A69     	 ldr r2,[r3,#20]
 1842 000e 7B68     	 ldr r3,[r7,#4]
 1843 0010 1343     	 orrs r3,r3,r2
 1844 0012 4B61     	 str r3,[r1,#20]
 603:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1845              	 .loc 3 603 0
 1846 0014 0C37     	 adds r7,r7,#12
 1847              	.LCFI171:
 1848              	 .cfi_def_cfa_offset 4
 1849 0016 BD46     	 mov sp,r7
 1850              	.LCFI172:
 1851              	 .cfi_def_cfa_register 13
 1852              	 
 1853 0018 5DF8047B 	 ldr r7,[sp],#4
 1854              	.LCFI173:
 1855              	 .cfi_restore 7
 1856              	 .cfi_def_cfa_offset 0
 1857 001c 7047     	 bx lr
 1858              	.L130:
 1859 001e 00BF     	 .align 2
 1860              	.L129:
 1861 0020 3C410050 	 .word 1342193980
 1862              	 .cfi_endproc
 1863              	.LFE190:
 1865              	 .section .text.XMC_SCU_PARITY_GetStatus,"ax",%progbits
 1866              	 .align 2
 1867              	 .global XMC_SCU_PARITY_GetStatus
 1868              	 .thumb
 1869              	 .thumb_func
 1871              	XMC_SCU_PARITY_GetStatus:
 1872              	.LFB191:
 604:../Libraries/XMCLib/src/xmc4_scu.c **** 
 605:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if the specified parity error has occured or not */
 606:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_PARITY_GetStatus(void)
 607:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1873              	 .loc 3 607 0
 1874              	 .cfi_startproc
 1875              	 
 1876              	 
 1877              	 
 1878 0000 80B4     	 push {r7}
 1879              	.LCFI174:
 1880              	 .cfi_def_cfa_offset 4
 1881              	 .cfi_offset 7,-4
 1882 0002 00AF     	 add r7,sp,#0
 1883              	.LCFI175:
 1884              	 .cfi_def_cfa_register 7
 608:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_PARITY->PEFLAG);
 1885              	 .loc 3 608 0
 1886 0004 034B     	 ldr r3,.L133
 1887 0006 5B69     	 ldr r3,[r3,#20]
 609:../Libraries/XMCLib/src/xmc4_scu.c **** } 
 1888              	 .loc 3 609 0
 1889 0008 1846     	 mov r0,r3
 1890 000a BD46     	 mov sp,r7
 1891              	.LCFI176:
 1892              	 .cfi_def_cfa_register 13
 1893              	 
 1894 000c 5DF8047B 	 ldr r7,[sp],#4
 1895              	.LCFI177:
 1896              	 .cfi_restore 7
 1897              	 .cfi_def_cfa_offset 0
 1898 0010 7047     	 bx lr
 1899              	.L134:
 1900 0012 00BF     	 .align 2
 1901              	.L133:
 1902 0014 3C410050 	 .word 1342193980
 1903              	 .cfi_endproc
 1904              	.LFE191:
 1906              	 .section .text.XMC_SCU_PARITY_Enable,"ax",%progbits
 1907              	 .align 2
 1908              	 .global XMC_SCU_PARITY_Enable
 1909              	 .thumb
 1910              	 .thumb_func
 1912              	XMC_SCU_PARITY_Enable:
 1913              	.LFB192:
 610:../Libraries/XMCLib/src/xmc4_scu.c **** 
 611:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable parity error checking for the selected on-chip RAM type */
 612:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Enable(const uint32_t memory)
 613:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1914              	 .loc 3 613 0
 1915              	 .cfi_startproc
 1916              	 
 1917              	 
 1918              	 
 1919 0000 80B4     	 push {r7}
 1920              	.LCFI178:
 1921              	 .cfi_def_cfa_offset 4
 1922              	 .cfi_offset 7,-4
 1923 0002 83B0     	 sub sp,sp,#12
 1924              	.LCFI179:
 1925              	 .cfi_def_cfa_offset 16
 1926 0004 00AF     	 add r7,sp,#0
 1927              	.LCFI180:
 1928              	 .cfi_def_cfa_register 7
 1929 0006 7860     	 str r0,[r7,#4]
 614:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN |= (uint32_t)memory; 
 1930              	 .loc 3 614 0
 1931 0008 0549     	 ldr r1,.L136
 1932 000a 054B     	 ldr r3,.L136
 1933 000c 1A68     	 ldr r2,[r3]
 1934 000e 7B68     	 ldr r3,[r7,#4]
 1935 0010 1343     	 orrs r3,r3,r2
 1936 0012 0B60     	 str r3,[r1]
 615:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1937              	 .loc 3 615 0
 1938 0014 0C37     	 adds r7,r7,#12
 1939              	.LCFI181:
 1940              	 .cfi_def_cfa_offset 4
 1941 0016 BD46     	 mov sp,r7
 1942              	.LCFI182:
 1943              	 .cfi_def_cfa_register 13
 1944              	 
 1945 0018 5DF8047B 	 ldr r7,[sp],#4
 1946              	.LCFI183:
 1947              	 .cfi_restore 7
 1948              	 .cfi_def_cfa_offset 0
 1949 001c 7047     	 bx lr
 1950              	.L137:
 1951 001e 00BF     	 .align 2
 1952              	.L136:
 1953 0020 3C410050 	 .word 1342193980
 1954              	 .cfi_endproc
 1955              	.LFE192:
 1957              	 .section .text.XMC_SCU_PARITY_Disable,"ax",%progbits
 1958              	 .align 2
 1959              	 .global XMC_SCU_PARITY_Disable
 1960              	 .thumb
 1961              	 .thumb_func
 1963              	XMC_SCU_PARITY_Disable:
 1964              	.LFB193:
 616:../Libraries/XMCLib/src/xmc4_scu.c **** 
 617:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable parity error checking for the selected on-chip RAM type */
 618:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Disable(const uint32_t memory)
 619:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1965              	 .loc 3 619 0
 1966              	 .cfi_startproc
 1967              	 
 1968              	 
 1969              	 
 1970 0000 80B4     	 push {r7}
 1971              	.LCFI184:
 1972              	 .cfi_def_cfa_offset 4
 1973              	 .cfi_offset 7,-4
 1974 0002 83B0     	 sub sp,sp,#12
 1975              	.LCFI185:
 1976              	 .cfi_def_cfa_offset 16
 1977 0004 00AF     	 add r7,sp,#0
 1978              	.LCFI186:
 1979              	 .cfi_def_cfa_register 7
 1980 0006 7860     	 str r0,[r7,#4]
 620:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN &= (uint32_t)~memory; 
 1981              	 .loc 3 620 0
 1982 0008 0549     	 ldr r1,.L139
 1983 000a 054B     	 ldr r3,.L139
 1984 000c 1A68     	 ldr r2,[r3]
 1985 000e 7B68     	 ldr r3,[r7,#4]
 1986 0010 DB43     	 mvns r3,r3
 1987 0012 1340     	 ands r3,r3,r2
 1988 0014 0B60     	 str r3,[r1]
 621:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1989              	 .loc 3 621 0
 1990 0016 0C37     	 adds r7,r7,#12
 1991              	.LCFI187:
 1992              	 .cfi_def_cfa_offset 4
 1993 0018 BD46     	 mov sp,r7
 1994              	.LCFI188:
 1995              	 .cfi_def_cfa_register 13
 1996              	 
 1997 001a 5DF8047B 	 ldr r7,[sp],#4
 1998              	.LCFI189:
 1999              	 .cfi_restore 7
 2000              	 .cfi_def_cfa_offset 0
 2001 001e 7047     	 bx lr
 2002              	.L140:
 2003              	 .align 2
 2004              	.L139:
 2005 0020 3C410050 	 .word 1342193980
 2006              	 .cfi_endproc
 2007              	.LFE193:
 2009              	 .section .text.XMC_SCU_PARITY_EnableTrapGeneration,"ax",%progbits
 2010              	 .align 2
 2011              	 .global XMC_SCU_PARITY_EnableTrapGeneration
 2012              	 .thumb
 2013              	 .thumb_func
 2015              	XMC_SCU_PARITY_EnableTrapGeneration:
 2016              	.LFB194:
 622:../Libraries/XMCLib/src/xmc4_scu.c **** 
 623:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable trap assertion for the parity error source */
 624:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory)
 625:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2017              	 .loc 3 625 0
 2018              	 .cfi_startproc
 2019              	 
 2020              	 
 2021              	 
 2022 0000 80B4     	 push {r7}
 2023              	.LCFI190:
 2024              	 .cfi_def_cfa_offset 4
 2025              	 .cfi_offset 7,-4
 2026 0002 83B0     	 sub sp,sp,#12
 2027              	.LCFI191:
 2028              	 .cfi_def_cfa_offset 16
 2029 0004 00AF     	 add r7,sp,#0
 2030              	.LCFI192:
 2031              	 .cfi_def_cfa_register 7
 2032 0006 7860     	 str r0,[r7,#4]
 626:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE |= (uint32_t)memory; 
 2033              	 .loc 3 626 0
 2034 0008 0549     	 ldr r1,.L142
 2035 000a 054B     	 ldr r3,.L142
 2036 000c 9A68     	 ldr r2,[r3,#8]
 2037 000e 7B68     	 ldr r3,[r7,#4]
 2038 0010 1343     	 orrs r3,r3,r2
 2039 0012 8B60     	 str r3,[r1,#8]
 627:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2040              	 .loc 3 627 0
 2041 0014 0C37     	 adds r7,r7,#12
 2042              	.LCFI193:
 2043              	 .cfi_def_cfa_offset 4
 2044 0016 BD46     	 mov sp,r7
 2045              	.LCFI194:
 2046              	 .cfi_def_cfa_register 13
 2047              	 
 2048 0018 5DF8047B 	 ldr r7,[sp],#4
 2049              	.LCFI195:
 2050              	 .cfi_restore 7
 2051              	 .cfi_def_cfa_offset 0
 2052 001c 7047     	 bx lr
 2053              	.L143:
 2054 001e 00BF     	 .align 2
 2055              	.L142:
 2056 0020 3C410050 	 .word 1342193980
 2057              	 .cfi_endproc
 2058              	.LFE194:
 2060              	 .section .text.XMC_SCU_PARITY_DisableTrapGeneration,"ax",%progbits
 2061              	 .align 2
 2062              	 .global XMC_SCU_PARITY_DisableTrapGeneration
 2063              	 .thumb
 2064              	 .thumb_func
 2066              	XMC_SCU_PARITY_DisableTrapGeneration:
 2067              	.LFB195:
 628:../Libraries/XMCLib/src/xmc4_scu.c **** 
 629:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable the assertion of trap for the parity error source */
 630:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory)
 631:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2068              	 .loc 3 631 0
 2069              	 .cfi_startproc
 2070              	 
 2071              	 
 2072              	 
 2073 0000 80B4     	 push {r7}
 2074              	.LCFI196:
 2075              	 .cfi_def_cfa_offset 4
 2076              	 .cfi_offset 7,-4
 2077 0002 83B0     	 sub sp,sp,#12
 2078              	.LCFI197:
 2079              	 .cfi_def_cfa_offset 16
 2080 0004 00AF     	 add r7,sp,#0
 2081              	.LCFI198:
 2082              	 .cfi_def_cfa_register 7
 2083 0006 7860     	 str r0,[r7,#4]
 632:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE &= (uint32_t)~memory; 
 2084              	 .loc 3 632 0
 2085 0008 0549     	 ldr r1,.L145
 2086 000a 054B     	 ldr r3,.L145
 2087 000c 9A68     	 ldr r2,[r3,#8]
 2088 000e 7B68     	 ldr r3,[r7,#4]
 2089 0010 DB43     	 mvns r3,r3
 2090 0012 1340     	 ands r3,r3,r2
 2091 0014 8B60     	 str r3,[r1,#8]
 633:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2092              	 .loc 3 633 0
 2093 0016 0C37     	 adds r7,r7,#12
 2094              	.LCFI199:
 2095              	 .cfi_def_cfa_offset 4
 2096 0018 BD46     	 mov sp,r7
 2097              	.LCFI200:
 2098              	 .cfi_def_cfa_register 13
 2099              	 
 2100 001a 5DF8047B 	 ldr r7,[sp],#4
 2101              	.LCFI201:
 2102              	 .cfi_restore 7
 2103              	 .cfi_def_cfa_offset 0
 2104 001e 7047     	 bx lr
 2105              	.L146:
 2106              	 .align 2
 2107              	.L145:
 2108 0020 3C410050 	 .word 1342193980
 2109              	 .cfi_endproc
 2110              	.LFE195:
 2112              	 .section .text.XMC_SCU_INTERRUPT_EnableNmiRequest,"ax",%progbits
 2113              	 .align 2
 2114              	 .global XMC_SCU_INTERRUPT_EnableNmiRequest
 2115              	 .thumb
 2116              	 .thumb_func
 2118              	XMC_SCU_INTERRUPT_EnableNmiRequest:
 2119              	.LFB196:
 634:../Libraries/XMCLib/src/xmc4_scu.c **** 
 635:../Libraries/XMCLib/src/xmc4_scu.c **** /* Enables a NMI source */
 636:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request)
 637:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2120              	 .loc 3 637 0
 2121              	 .cfi_startproc
 2122              	 
 2123              	 
 2124              	 
 2125 0000 80B4     	 push {r7}
 2126              	.LCFI202:
 2127              	 .cfi_def_cfa_offset 4
 2128              	 .cfi_offset 7,-4
 2129 0002 83B0     	 sub sp,sp,#12
 2130              	.LCFI203:
 2131              	 .cfi_def_cfa_offset 16
 2132 0004 00AF     	 add r7,sp,#0
 2133              	.LCFI204:
 2134              	 .cfi_def_cfa_register 7
 2135 0006 7860     	 str r0,[r7,#4]
 638:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN |= (uint32_t)request;
 2136              	 .loc 3 638 0
 2137 0008 0549     	 ldr r1,.L148
 2138 000a 054B     	 ldr r3,.L148
 2139 000c 5A69     	 ldr r2,[r3,#20]
 2140 000e 7B68     	 ldr r3,[r7,#4]
 2141 0010 1343     	 orrs r3,r3,r2
 2142 0012 4B61     	 str r3,[r1,#20]
 639:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2143              	 .loc 3 639 0
 2144 0014 0C37     	 adds r7,r7,#12
 2145              	.LCFI205:
 2146              	 .cfi_def_cfa_offset 4
 2147 0016 BD46     	 mov sp,r7
 2148              	.LCFI206:
 2149              	 .cfi_def_cfa_register 13
 2150              	 
 2151 0018 5DF8047B 	 ldr r7,[sp],#4
 2152              	.LCFI207:
 2153              	 .cfi_restore 7
 2154              	 .cfi_def_cfa_offset 0
 2155 001c 7047     	 bx lr
 2156              	.L149:
 2157 001e 00BF     	 .align 2
 2158              	.L148:
 2159 0020 74400050 	 .word 1342193780
 2160              	 .cfi_endproc
 2161              	.LFE196:
 2163              	 .section .text.XMC_SCU_INTERRUPT_DisableNmiRequest,"ax",%progbits
 2164              	 .align 2
 2165              	 .global XMC_SCU_INTERRUPT_DisableNmiRequest
 2166              	 .thumb
 2167              	 .thumb_func
 2169              	XMC_SCU_INTERRUPT_DisableNmiRequest:
 2170              	.LFB197:
 640:../Libraries/XMCLib/src/xmc4_scu.c **** 
 641:../Libraries/XMCLib/src/xmc4_scu.c **** /* Disables a NMI source */
 642:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request)
 643:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2171              	 .loc 3 643 0
 2172              	 .cfi_startproc
 2173              	 
 2174              	 
 2175              	 
 2176 0000 80B4     	 push {r7}
 2177              	.LCFI208:
 2178              	 .cfi_def_cfa_offset 4
 2179              	 .cfi_offset 7,-4
 2180 0002 83B0     	 sub sp,sp,#12
 2181              	.LCFI209:
 2182              	 .cfi_def_cfa_offset 16
 2183 0004 00AF     	 add r7,sp,#0
 2184              	.LCFI210:
 2185              	 .cfi_def_cfa_register 7
 2186 0006 7860     	 str r0,[r7,#4]
 644:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN &= (uint32_t)~request;
 2187              	 .loc 3 644 0
 2188 0008 0549     	 ldr r1,.L151
 2189 000a 054B     	 ldr r3,.L151
 2190 000c 5A69     	 ldr r2,[r3,#20]
 2191 000e 7B68     	 ldr r3,[r7,#4]
 2192 0010 DB43     	 mvns r3,r3
 2193 0012 1340     	 ands r3,r3,r2
 2194 0014 4B61     	 str r3,[r1,#20]
 645:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2195              	 .loc 3 645 0
 2196 0016 0C37     	 adds r7,r7,#12
 2197              	.LCFI211:
 2198              	 .cfi_def_cfa_offset 4
 2199 0018 BD46     	 mov sp,r7
 2200              	.LCFI212:
 2201              	 .cfi_def_cfa_register 13
 2202              	 
 2203 001a 5DF8047B 	 ldr r7,[sp],#4
 2204              	.LCFI213:
 2205              	 .cfi_restore 7
 2206              	 .cfi_def_cfa_offset 0
 2207 001e 7047     	 bx lr
 2208              	.L152:
 2209              	 .align 2
 2210              	.L151:
 2211 0020 74400050 	 .word 1342193780
 2212              	 .cfi_endproc
 2213              	.LFE197:
 2215              	 .section .text.XMC_SCU_RESET_AssertPeripheralReset,"ax",%progbits
 2216              	 .align 2
 2217              	 .global XMC_SCU_RESET_AssertPeripheralReset
 2218              	 .thumb
 2219              	 .thumb_func
 2221              	XMC_SCU_RESET_AssertPeripheralReset:
 2222              	.LFB198:
 646:../Libraries/XMCLib/src/xmc4_scu.c **** 
 647:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually assert a reset request */
 648:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 649:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2223              	 .loc 3 649 0
 2224              	 .cfi_startproc
 2225              	 
 2226              	 
 2227              	 
 2228 0000 80B4     	 push {r7}
 2229              	.LCFI214:
 2230              	 .cfi_def_cfa_offset 4
 2231              	 .cfi_offset 7,-4
 2232 0002 85B0     	 sub sp,sp,#20
 2233              	.LCFI215:
 2234              	 .cfi_def_cfa_offset 24
 2235 0004 00AF     	 add r7,sp,#0
 2236              	.LCFI216:
 2237              	 .cfi_def_cfa_register 7
 2238 0006 7860     	 str r0,[r7,#4]
 650:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2239              	 .loc 3 650 0
 2240 0008 7B68     	 ldr r3,[r7,#4]
 2241 000a 1B0F     	 lsrs r3,r3,#28
 2242 000c FB60     	 str r3,[r7,#12]
 651:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2243              	 .loc 3 651 0
 2244 000e 7B68     	 ldr r3,[r7,#4]
 2245 0010 23F07043 	 bic r3,r3,#-268435456
 2246 0014 BB60     	 str r3,[r7,#8]
 652:../Libraries/XMCLib/src/xmc4_scu.c **** 
 653:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_RESET->PRSET0) + (index * 3U)) = (uint32_t)mask;
 2247              	 .loc 3 653 0
 2248 0016 FA68     	 ldr r2,[r7,#12]
 2249 0018 1346     	 mov r3,r2
 2250 001a 5B00     	 lsls r3,r3,#1
 2251 001c 1344     	 add r3,r3,r2
 2252 001e 9B00     	 lsls r3,r3,#2
 2253 0020 1A46     	 mov r2,r3
 2254 0022 044B     	 ldr r3,.L154
 2255 0024 1344     	 add r3,r3,r2
 2256 0026 BA68     	 ldr r2,[r7,#8]
 2257 0028 1A60     	 str r2,[r3]
 654:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2258              	 .loc 3 654 0
 2259 002a 1437     	 adds r7,r7,#20
 2260              	.LCFI217:
 2261              	 .cfi_def_cfa_offset 4
 2262 002c BD46     	 mov sp,r7
 2263              	.LCFI218:
 2264              	 .cfi_def_cfa_register 13
 2265              	 
 2266 002e 5DF8047B 	 ldr r7,[sp],#4
 2267              	.LCFI219:
 2268              	 .cfi_restore 7
 2269              	 .cfi_def_cfa_offset 0
 2270 0032 7047     	 bx lr
 2271              	.L155:
 2272              	 .align 2
 2273              	.L154:
 2274 0034 10440050 	 .word 1342194704
 2275              	 .cfi_endproc
 2276              	.LFE198:
 2278              	 .section .text.XMC_SCU_RESET_DeassertPeripheralReset,"ax",%progbits
 2279              	 .align 2
 2280              	 .global XMC_SCU_RESET_DeassertPeripheralReset
 2281              	 .thumb
 2282              	 .thumb_func
 2284              	XMC_SCU_RESET_DeassertPeripheralReset:
 2285              	.LFB199:
 655:../Libraries/XMCLib/src/xmc4_scu.c **** 
 656:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually de-assert a reset request */
 657:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 658:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2286              	 .loc 3 658 0
 2287              	 .cfi_startproc
 2288              	 
 2289              	 
 2290              	 
 2291 0000 80B4     	 push {r7}
 2292              	.LCFI220:
 2293              	 .cfi_def_cfa_offset 4
 2294              	 .cfi_offset 7,-4
 2295 0002 85B0     	 sub sp,sp,#20
 2296              	.LCFI221:
 2297              	 .cfi_def_cfa_offset 24
 2298 0004 00AF     	 add r7,sp,#0
 2299              	.LCFI222:
 2300              	 .cfi_def_cfa_register 7
 2301 0006 7860     	 str r0,[r7,#4]
 659:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2302              	 .loc 3 659 0
 2303 0008 7B68     	 ldr r3,[r7,#4]
 2304 000a 1B0F     	 lsrs r3,r3,#28
 2305 000c FB60     	 str r3,[r7,#12]
 660:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2306              	 .loc 3 660 0
 2307 000e 7B68     	 ldr r3,[r7,#4]
 2308 0010 23F07043 	 bic r3,r3,#-268435456
 2309 0014 BB60     	 str r3,[r7,#8]
 661:../Libraries/XMCLib/src/xmc4_scu.c **** 
 662:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_RESET->PRCLR0) + (index * 3U)) = (uint32_t)mask;
 2310              	 .loc 3 662 0
 2311 0016 FA68     	 ldr r2,[r7,#12]
 2312 0018 1346     	 mov r3,r2
 2313 001a 5B00     	 lsls r3,r3,#1
 2314 001c 1344     	 add r3,r3,r2
 2315 001e 9B00     	 lsls r3,r3,#2
 2316 0020 1A46     	 mov r2,r3
 2317 0022 044B     	 ldr r3,.L157
 2318 0024 1344     	 add r3,r3,r2
 2319 0026 BA68     	 ldr r2,[r7,#8]
 2320 0028 1A60     	 str r2,[r3]
 663:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2321              	 .loc 3 663 0
 2322 002a 1437     	 adds r7,r7,#20
 2323              	.LCFI223:
 2324              	 .cfi_def_cfa_offset 4
 2325 002c BD46     	 mov sp,r7
 2326              	.LCFI224:
 2327              	 .cfi_def_cfa_register 13
 2328              	 
 2329 002e 5DF8047B 	 ldr r7,[sp],#4
 2330              	.LCFI225:
 2331              	 .cfi_restore 7
 2332              	 .cfi_def_cfa_offset 0
 2333 0032 7047     	 bx lr
 2334              	.L158:
 2335              	 .align 2
 2336              	.L157:
 2337 0034 14440050 	 .word 1342194708
 2338              	 .cfi_endproc
 2339              	.LFE199:
 2341              	 .section .text.XMC_SCU_RESET_IsPeripheralResetAsserted,"ax",%progbits
 2342              	 .align 2
 2343              	 .global XMC_SCU_RESET_IsPeripheralResetAsserted
 2344              	 .thumb
 2345              	 .thumb_func
 2347              	XMC_SCU_RESET_IsPeripheralResetAsserted:
 2348              	.LFB200:
 664:../Libraries/XMCLib/src/xmc4_scu.c **** 
 665:../Libraries/XMCLib/src/xmc4_scu.c **** /* Find out if the peripheral reset is asserted */
 666:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 667:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2349              	 .loc 3 667 0
 2350              	 .cfi_startproc
 2351              	 
 2352              	 
 2353              	 
 2354 0000 80B4     	 push {r7}
 2355              	.LCFI226:
 2356              	 .cfi_def_cfa_offset 4
 2357              	 .cfi_offset 7,-4
 2358 0002 85B0     	 sub sp,sp,#20
 2359              	.LCFI227:
 2360              	 .cfi_def_cfa_offset 24
 2361 0004 00AF     	 add r7,sp,#0
 2362              	.LCFI228:
 2363              	 .cfi_def_cfa_register 7
 2364 0006 7860     	 str r0,[r7,#4]
 668:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2365              	 .loc 3 668 0
 2366 0008 7B68     	 ldr r3,[r7,#4]
 2367 000a 1B0F     	 lsrs r3,r3,#28
 2368 000c FB60     	 str r3,[r7,#12]
 669:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2369              	 .loc 3 669 0
 2370 000e 7B68     	 ldr r3,[r7,#4]
 2371 0010 23F07043 	 bic r3,r3,#-268435456
 2372 0014 BB60     	 str r3,[r7,#8]
 670:../Libraries/XMCLib/src/xmc4_scu.c **** 
 671:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((*(uint32_t *)(&(SCU_RESET->PRSTAT0) + (index * 3U)) & mask) != 0U);
 2373              	 .loc 3 671 0
 2374 0016 FA68     	 ldr r2,[r7,#12]
 2375 0018 1346     	 mov r3,r2
 2376 001a 5B00     	 lsls r3,r3,#1
 2377 001c 1344     	 add r3,r3,r2
 2378 001e 9B00     	 lsls r3,r3,#2
 2379 0020 1A46     	 mov r2,r3
 2380 0022 084B     	 ldr r3,.L161
 2381 0024 1344     	 add r3,r3,r2
 2382 0026 1A68     	 ldr r2,[r3]
 2383 0028 BB68     	 ldr r3,[r7,#8]
 2384 002a 1340     	 ands r3,r3,r2
 2385 002c 002B     	 cmp r3,#0
 2386 002e 14BF     	 ite ne
 2387 0030 0123     	 movne r3,#1
 2388 0032 0023     	 moveq r3,#0
 2389 0034 DBB2     	 uxtb r3,r3
 672:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2390              	 .loc 3 672 0
 2391 0036 1846     	 mov r0,r3
 2392 0038 1437     	 adds r7,r7,#20
 2393              	.LCFI229:
 2394              	 .cfi_def_cfa_offset 4
 2395 003a BD46     	 mov sp,r7
 2396              	.LCFI230:
 2397              	 .cfi_def_cfa_register 13
 2398              	 
 2399 003c 5DF8047B 	 ldr r7,[sp],#4
 2400              	.LCFI231:
 2401              	 .cfi_restore 7
 2402              	 .cfi_def_cfa_offset 0
 2403 0040 7047     	 bx lr
 2404              	.L162:
 2405 0042 00BF     	 .align 2
 2406              	.L161:
 2407 0044 0C440050 	 .word 1342194700
 2408              	 .cfi_endproc
 2409              	.LFE200:
 2411              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency,"ax",%progbits
 2412              	 .align 2
 2413              	 .global XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2414              	 .thumb
 2415              	 .thumb_func
 2417              	XMC_SCU_CLOCK_GetSystemPllClockFrequency:
 2418              	.LFB201:
 673:../Libraries/XMCLib/src/xmc4_scu.c **** 
 674:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 675:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL output clock
 676:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 677:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void)
 678:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2419              	 .loc 3 678 0
 2420              	 .cfi_startproc
 2421              	 
 2422              	 
 2423 0000 80B5     	 push {r7,lr}
 2424              	.LCFI232:
 2425              	 .cfi_def_cfa_offset 8
 2426              	 .cfi_offset 7,-8
 2427              	 .cfi_offset 14,-4
 2428 0002 84B0     	 sub sp,sp,#16
 2429              	.LCFI233:
 2430              	 .cfi_def_cfa_offset 24
 2431 0004 00AF     	 add r7,sp,#0
 2432              	.LCFI234:
 2433              	 .cfi_def_cfa_register 7
 679:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 680:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 681:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 682:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t k2_div;
 683:../Libraries/XMCLib/src/xmc4_scu.c **** 
 684:../Libraries/XMCLib/src/xmc4_scu.c ****   clock_frequency = XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency();
 2434              	 .loc 3 684 0
 2435 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2436 000a F860     	 str r0,[r7,#12]
 685:../Libraries/XMCLib/src/xmc4_scu.c ****   if(SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk)
 2437              	 .loc 3 685 0
 2438 000c 1A4B     	 ldr r3,.L167
 2439 000e 1B68     	 ldr r3,[r3]
 2440 0010 03F00103 	 and r3,r3,#1
 2441 0014 002B     	 cmp r3,#0
 2442 0016 09D0     	 beq .L164
 686:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 687:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Prescalar mode - fOSC is the parent*/
 688:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)(clock_frequency / 
 689:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_P
 2443              	 .loc 3 689 0
 2444 0018 174B     	 ldr r3,.L167
 2445 001a 9B68     	 ldr r3,[r3,#8]
 2446 001c 03F07F03 	 and r3,r3,#127
 2447 0020 0133     	 adds r3,r3,#1
 688:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_P
 2448              	 .loc 3 688 0
 2449 0022 FA68     	 ldr r2,[r7,#12]
 2450 0024 B2FBF3F3 	 udiv r3,r2,r3
 2451 0028 FB60     	 str r3,[r7,#12]
 2452 002a 1FE0     	 b .L165
 2453              	.L164:
 690:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 691:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 692:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 693:../Libraries/XMCLib/src/xmc4_scu.c ****     p_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Po
 2454              	 .loc 3 693 0
 2455 002c 124B     	 ldr r3,.L167
 2456 002e 9B68     	 ldr r3,[r3,#8]
 2457 0030 03F07063 	 and r3,r3,#251658240
 2458 0034 1B0E     	 lsrs r3,r3,#24
 2459 0036 0133     	 adds r3,r3,#1
 2460 0038 BB60     	 str r3,[r7,#8]
 694:../Libraries/XMCLib/src/xmc4_scu.c ****     n_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Po
 2461              	 .loc 3 694 0
 2462 003a 0F4B     	 ldr r3,.L167
 2463 003c 9B68     	 ldr r3,[r3,#8]
 2464 003e 03F4FE43 	 and r3,r3,#32512
 2465 0042 1B0A     	 lsrs r3,r3,#8
 2466 0044 0133     	 adds r3,r3,#1
 2467 0046 7B60     	 str r3,[r7,#4]
 695:../Libraries/XMCLib/src/xmc4_scu.c ****     k2_div = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_
 2468              	 .loc 3 695 0
 2469 0048 0B4B     	 ldr r3,.L167
 2470 004a 9B68     	 ldr r3,[r3,#8]
 2471 004c 03F4FE03 	 and r3,r3,#8323072
 2472 0050 1B0C     	 lsrs r3,r3,#16
 2473 0052 0133     	 adds r3,r3,#1
 2474 0054 3B60     	 str r3,[r7]
 696:../Libraries/XMCLib/src/xmc4_scu.c ****        
 697:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (clock_frequency * n_div) / (p_div * k2_div);
 2475              	 .loc 3 697 0
 2476 0056 FB68     	 ldr r3,[r7,#12]
 2477 0058 7A68     	 ldr r2,[r7,#4]
 2478 005a 02FB03F2 	 mul r2,r2,r3
 2479 005e BB68     	 ldr r3,[r7,#8]
 2480 0060 3968     	 ldr r1,[r7]
 2481 0062 01FB03F3 	 mul r3,r1,r3
 2482 0066 B2FBF3F3 	 udiv r3,r2,r3
 2483 006a FB60     	 str r3,[r7,#12]
 2484              	.L165:
 698:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 699:../Libraries/XMCLib/src/xmc4_scu.c **** 
 700:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2485              	 .loc 3 700 0
 2486 006c FB68     	 ldr r3,[r7,#12]
 701:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2487              	 .loc 3 701 0
 2488 006e 1846     	 mov r0,r3
 2489 0070 1037     	 adds r7,r7,#16
 2490              	.LCFI235:
 2491              	 .cfi_def_cfa_offset 8
 2492 0072 BD46     	 mov sp,r7
 2493              	.LCFI236:
 2494              	 .cfi_def_cfa_register 13
 2495              	 
 2496 0074 80BD     	 pop {r7,pc}
 2497              	.L168:
 2498 0076 00BF     	 .align 2
 2499              	.L167:
 2500 0078 10470050 	 .word 1342195472
 2501              	 .cfi_endproc
 2502              	.LFE201:
 2504              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency,"ax",%progbits
 2505              	 .align 2
 2506              	 .global XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2507              	 .thumb
 2508              	 .thumb_func
 2510              	XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:
 2511              	.LFB202:
 702:../Libraries/XMCLib/src/xmc4_scu.c **** 
 703:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 704:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL VCO input clock
 705:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 706:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void)
 707:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2512              	 .loc 3 707 0
 2513              	 .cfi_startproc
 2514              	 
 2515              	 
 2516 0000 80B5     	 push {r7,lr}
 2517              	.LCFI237:
 2518              	 .cfi_def_cfa_offset 8
 2519              	 .cfi_offset 7,-8
 2520              	 .cfi_offset 14,-4
 2521 0002 82B0     	 sub sp,sp,#8
 2522              	.LCFI238:
 2523              	 .cfi_def_cfa_offset 16
 2524 0004 00AF     	 add r7,sp,#0
 2525              	.LCFI239:
 2526              	 .cfi_def_cfa_register 7
 708:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 709:../Libraries/XMCLib/src/xmc4_scu.c **** 
 710:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Prescalar mode - fOSC is the parent*/
 711:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk) == (uint32_t)XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 2527              	 .loc 3 711 0
 2528 0006 084B     	 ldr r3,.L173
 2529 0008 DB68     	 ldr r3,[r3,#12]
 2530 000a 03F00103 	 and r3,r3,#1
 2531 000e 002B     	 cmp r3,#0
 2532 0010 03D1     	 bne .L170
 712:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 713:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = OSCHP_GetFrequency();
 2533              	 .loc 3 713 0
 2534 0012 FFF7FEFF 	 bl OSCHP_GetFrequency
 2535 0016 7860     	 str r0,[r7,#4]
 2536 0018 01E0     	 b .L171
 2537              	.L170:
 714:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 715:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 716:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 717:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = OFI_FREQUENCY;
 2538              	 .loc 3 717 0
 2539 001a 044B     	 ldr r3,.L173+4
 2540 001c 7B60     	 str r3,[r7,#4]
 2541              	.L171:
 718:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 719:../Libraries/XMCLib/src/xmc4_scu.c ****   
 720:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2542              	 .loc 3 720 0
 2543 001e 7B68     	 ldr r3,[r7,#4]
 721:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2544              	 .loc 3 721 0
 2545 0020 1846     	 mov r0,r3
 2546 0022 0837     	 adds r7,r7,#8
 2547              	.LCFI240:
 2548              	 .cfi_def_cfa_offset 8
 2549 0024 BD46     	 mov sp,r7
 2550              	.LCFI241:
 2551              	 .cfi_def_cfa_register 13
 2552              	 
 2553 0026 80BD     	 pop {r7,pc}
 2554              	.L174:
 2555              	 .align 2
 2556              	.L173:
 2557 0028 10470050 	 .word 1342195472
 2558 002c 00366E01 	 .word 24000000
 2559              	 .cfi_endproc
 2560              	.LFE202:
 2562              	 .section .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency,"ax",%progbits
 2563              	 .align 2
 2564              	 .global XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2565              	 .thumb
 2566              	 .thumb_func
 2568              	XMC_SCU_CLOCK_GetUsbPllClockFrequency:
 2569              	.LFB203:
 722:../Libraries/XMCLib/src/xmc4_scu.c **** 
 723:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 724:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of USB PLL output clock
 725:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 726:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void)
 727:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2570              	 .loc 3 727 0
 2571              	 .cfi_startproc
 2572              	 
 2573              	 
 2574 0000 80B5     	 push {r7,lr}
 2575              	.LCFI242:
 2576              	 .cfi_def_cfa_offset 8
 2577              	 .cfi_offset 7,-8
 2578              	 .cfi_offset 14,-4
 2579 0002 84B0     	 sub sp,sp,#16
 2580              	.LCFI243:
 2581              	 .cfi_def_cfa_offset 24
 2582 0004 00AF     	 add r7,sp,#0
 2583              	.LCFI244:
 2584              	 .cfi_def_cfa_register 7
 728:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 729:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 730:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 731:../Libraries/XMCLib/src/xmc4_scu.c ****   
 732:../Libraries/XMCLib/src/xmc4_scu.c ****   clock_frequency = OSCHP_GetFrequency();
 2585              	 .loc 3 732 0
 2586 0006 FFF7FEFF 	 bl OSCHP_GetFrequency
 2587 000a F860     	 str r0,[r7,#12]
 733:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) == 0U)
 2588              	 .loc 3 733 0
 2589 000c 104B     	 ldr r3,.L178
 2590 000e 1B69     	 ldr r3,[r3,#16]
 2591 0010 03F00103 	 and r3,r3,#1
 2592 0014 002B     	 cmp r3,#0
 2593 0016 16D1     	 bne .L176
 734:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 735:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Normal mode - fVCO is the parent*/
 736:../Libraries/XMCLib/src/xmc4_scu.c ****     n_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_NDIV_Msk) >> SCU_PLL_USBPLLCON_ND
 2594              	 .loc 3 736 0
 2595 0018 0D4B     	 ldr r3,.L178
 2596 001a 5B69     	 ldr r3,[r3,#20]
 2597 001c 03F4FE43 	 and r3,r3,#32512
 2598 0020 1B0A     	 lsrs r3,r3,#8
 2599 0022 0133     	 adds r3,r3,#1
 2600 0024 BB60     	 str r3,[r7,#8]
 737:../Libraries/XMCLib/src/xmc4_scu.c ****     p_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_PDIV_Msk) >> SCU_PLL_USBPLLCON_PD
 2601              	 .loc 3 737 0
 2602 0026 0A4B     	 ldr r3,.L178
 2603 0028 5B69     	 ldr r3,[r3,#20]
 2604 002a 03F07063 	 and r3,r3,#251658240
 2605 002e 1B0E     	 lsrs r3,r3,#24
 2606 0030 0133     	 adds r3,r3,#1
 2607 0032 7B60     	 str r3,[r7,#4]
 738:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)((clock_frequency * n_div)/ (uint32_t)(p_div * 2UL));
 2608              	 .loc 3 738 0
 2609 0034 FB68     	 ldr r3,[r7,#12]
 2610 0036 BA68     	 ldr r2,[r7,#8]
 2611 0038 02FB03F2 	 mul r2,r2,r3
 2612 003c 7B68     	 ldr r3,[r7,#4]
 2613 003e 5B00     	 lsls r3,r3,#1
 2614 0040 B2FBF3F3 	 udiv r3,r2,r3
 2615 0044 FB60     	 str r3,[r7,#12]
 2616              	.L176:
 739:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 740:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2617              	 .loc 3 740 0
 2618 0046 FB68     	 ldr r3,[r7,#12]
 741:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2619              	 .loc 3 741 0
 2620 0048 1846     	 mov r0,r3
 2621 004a 1037     	 adds r7,r7,#16
 2622              	.LCFI245:
 2623              	 .cfi_def_cfa_offset 8
 2624 004c BD46     	 mov sp,r7
 2625              	.LCFI246:
 2626              	 .cfi_def_cfa_register 13
 2627              	 
 2628 004e 80BD     	 pop {r7,pc}
 2629              	.L179:
 2630              	 .align 2
 2631              	.L178:
 2632 0050 10470050 	 .word 1342195472
 2633              	 .cfi_endproc
 2634              	.LFE203:
 2636              	 .section .text.XMC_SCU_CLOCK_GetCcuClockFrequency,"ax",%progbits
 2637              	 .align 2
 2638              	 .global XMC_SCU_CLOCK_GetCcuClockFrequency
 2639              	 .thumb
 2640              	 .thumb_func
 2642              	XMC_SCU_CLOCK_GetCcuClockFrequency:
 2643              	.LFB204:
 742:../Libraries/XMCLib/src/xmc4_scu.c **** 
 743:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 744:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of CCU clock frequency
 745:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 746:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void)
 747:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2644              	 .loc 3 747 0
 2645              	 .cfi_startproc
 2646              	 
 2647              	 
 2648 0000 80B5     	 push {r7,lr}
 2649              	.LCFI247:
 2650              	 .cfi_def_cfa_offset 8
 2651              	 .cfi_offset 7,-8
 2652              	 .cfi_offset 14,-4
 2653 0002 82B0     	 sub sp,sp,#8
 2654              	.LCFI248:
 2655              	 .cfi_def_cfa_offset 16
 2656 0004 00AF     	 add r7,sp,#0
 2657              	.LCFI249:
 2658              	 .cfi_def_cfa_register 7
 748:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2659              	 .loc 3 748 0
 2660 0006 0023     	 movs r3,#0
 2661 0008 7B60     	 str r3,[r7,#4]
 749:../Libraries/XMCLib/src/xmc4_scu.c ****   frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 2662              	 .loc 3 749 0
 2663 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2664 000e 7860     	 str r0,[r7,#4]
 750:../Libraries/XMCLib/src/xmc4_scu.c ****   
 751:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency >> ((uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >>
 2665              	 .loc 3 751 0
 2666 0010 054B     	 ldr r3,.L182
 2667 0012 1B6A     	 ldr r3,[r3,#32]
 2668 0014 03F00103 	 and r3,r3,#1
 2669 0018 7A68     	 ldr r2,[r7,#4]
 2670 001a 22FA03F3 	 lsr r3,r2,r3
 752:../Libraries/XMCLib/src/xmc4_scu.c ****                                               SCU_CLK_CCUCLKCR_CCUDIV_Pos)));
 753:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2671              	 .loc 3 753 0
 2672 001e 1846     	 mov r0,r3
 2673 0020 0837     	 adds r7,r7,#8
 2674              	.LCFI250:
 2675              	 .cfi_def_cfa_offset 8
 2676 0022 BD46     	 mov sp,r7
 2677              	.LCFI251:
 2678              	 .cfi_def_cfa_register 13
 2679              	 
 2680 0024 80BD     	 pop {r7,pc}
 2681              	.L183:
 2682 0026 00BF     	 .align 2
 2683              	.L182:
 2684 0028 00460050 	 .word 1342195200
 2685              	 .cfi_endproc
 2686              	.LFE204:
 2688              	 .section .text.XMC_SCU_CLOCK_GetUsbClockFrequency,"ax",%progbits
 2689              	 .align 2
 2690              	 .global XMC_SCU_CLOCK_GetUsbClockFrequency
 2691              	 .thumb
 2692              	 .thumb_func
 2694              	XMC_SCU_CLOCK_GetUsbClockFrequency:
 2695              	.LFB205:
 754:../Libraries/XMCLib/src/xmc4_scu.c **** 
 755:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 756:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve USB and SDMMC clock frequency
 757:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 758:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void)
 759:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2696              	 .loc 3 759 0
 2697              	 .cfi_startproc
 2698              	 
 2699              	 
 2700 0000 80B5     	 push {r7,lr}
 2701              	.LCFI252:
 2702              	 .cfi_def_cfa_offset 8
 2703              	 .cfi_offset 7,-8
 2704              	 .cfi_offset 14,-4
 2705 0002 82B0     	 sub sp,sp,#8
 2706              	.LCFI253:
 2707              	 .cfi_def_cfa_offset 16
 2708 0004 00AF     	 add r7,sp,#0
 2709              	.LCFI254:
 2710              	 .cfi_def_cfa_register 7
 760:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2711              	 .loc 3 760 0
 2712 0006 0023     	 movs r3,#0
 2713 0008 7B60     	 str r3,[r7,#4]
 761:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_USBCLKSRC_t clksrc;
 762:../Libraries/XMCLib/src/xmc4_scu.c **** 
 763:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetUsbClockSource();
 2714              	 .loc 3 763 0
 2715 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbClockSource
 2716 000e 3860     	 str r0,[r7]
 764:../Libraries/XMCLib/src/xmc4_scu.c **** 
 765:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_SYSPLL)
 2717              	 .loc 3 765 0
 2718 0010 3B68     	 ldr r3,[r7]
 2719 0012 B3F5803F 	 cmp r3,#65536
 2720 0016 03D1     	 bne .L185
 766:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 767:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2721              	 .loc 3 767 0
 2722 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2723 001c 7860     	 str r0,[r7,#4]
 2724 001e 05E0     	 b .L186
 2725              	.L185:
 768:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 769:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_USBPLL)
 2726              	 .loc 3 769 0
 2727 0020 3B68     	 ldr r3,[r7]
 2728 0022 002B     	 cmp r3,#0
 2729 0024 02D1     	 bne .L186
 770:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 771:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 2730              	 .loc 3 771 0
 2731 0026 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2732 002a 7860     	 str r0,[r7,#4]
 2733              	.L186:
 772:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 773:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 774:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 775:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 776:../Libraries/XMCLib/src/xmc4_scu.c **** 
 777:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency / (((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >>
 2734              	 .loc 3 777 0
 2735 002c 054B     	 ldr r3,.L188
 2736 002e 9B69     	 ldr r3,[r3,#24]
 2737 0030 03F00703 	 and r3,r3,#7
 778:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 2738              	 .loc 3 778 0
 2739 0034 0133     	 adds r3,r3,#1
 777:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 2740              	 .loc 3 777 0
 2741 0036 7A68     	 ldr r2,[r7,#4]
 2742 0038 B2FBF3F3 	 udiv r3,r2,r3
 779:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2743              	 .loc 3 779 0
 2744 003c 1846     	 mov r0,r3
 2745 003e 0837     	 adds r7,r7,#8
 2746              	.LCFI255:
 2747              	 .cfi_def_cfa_offset 8
 2748 0040 BD46     	 mov sp,r7
 2749              	.LCFI256:
 2750              	 .cfi_def_cfa_register 13
 2751              	 
 2752 0042 80BD     	 pop {r7,pc}
 2753              	.L189:
 2754              	 .align 2
 2755              	.L188:
 2756 0044 00460050 	 .word 1342195200
 2757              	 .cfi_endproc
 2758              	.LFE205:
 2760              	 .section .text.XMC_SCU_CLOCK_GetEbuClockFrequency,"ax",%progbits
 2761              	 .align 2
 2762              	 .global XMC_SCU_CLOCK_GetEbuClockFrequency
 2763              	 .thumb
 2764              	 .thumb_func
 2766              	XMC_SCU_CLOCK_GetEbuClockFrequency:
 2767              	.LFB206:
 780:../Libraries/XMCLib/src/xmc4_scu.c **** 
 781:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
 782:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 783:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve EBU clock frequency
 784:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 785:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetEbuClockFrequency(void)
 786:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2768              	 .loc 3 786 0
 2769              	 .cfi_startproc
 2770              	 
 2771              	 
 2772 0000 80B5     	 push {r7,lr}
 2773              	.LCFI257:
 2774              	 .cfi_def_cfa_offset 8
 2775              	 .cfi_offset 7,-8
 2776              	 .cfi_offset 14,-4
 2777 0002 82B0     	 sub sp,sp,#8
 2778              	.LCFI258:
 2779              	 .cfi_def_cfa_offset 16
 2780 0004 00AF     	 add r7,sp,#0
 2781              	.LCFI259:
 2782              	 .cfi_def_cfa_register 7
 787:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2783              	 .loc 3 787 0
 2784 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2785 000a 7860     	 str r0,[r7,#4]
 788:../Libraries/XMCLib/src/xmc4_scu.c ****   
 789:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency /(((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >>
 2786              	 .loc 3 789 0
 2787 000c 054B     	 ldr r3,.L192
 2788 000e DB69     	 ldr r3,[r3,#28]
 2789 0010 03F03F03 	 and r3,r3,#63
 790:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 2790              	 .loc 3 790 0
 2791 0014 0133     	 adds r3,r3,#1
 789:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 2792              	 .loc 3 789 0
 2793 0016 7A68     	 ldr r2,[r7,#4]
 2794 0018 B2FBF3F3 	 udiv r3,r2,r3
 791:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2795              	 .loc 3 791 0
 2796 001c 1846     	 mov r0,r3
 2797 001e 0837     	 adds r7,r7,#8
 2798              	.LCFI260:
 2799              	 .cfi_def_cfa_offset 8
 2800 0020 BD46     	 mov sp,r7
 2801              	.LCFI261:
 2802              	 .cfi_def_cfa_register 13
 2803              	 
 2804 0022 80BD     	 pop {r7,pc}
 2805              	.L193:
 2806              	 .align 2
 2807              	.L192:
 2808 0024 00460050 	 .word 1342195200
 2809              	 .cfi_endproc
 2810              	.LFE206:
 2812              	 .section .text.XMC_SCU_CLOCK_GetWdtClockFrequency,"ax",%progbits
 2813              	 .align 2
 2814              	 .global XMC_SCU_CLOCK_GetWdtClockFrequency
 2815              	 .thumb
 2816              	 .thumb_func
 2818              	XMC_SCU_CLOCK_GetWdtClockFrequency:
 2819              	.LFB207:
 792:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 793:../Libraries/XMCLib/src/xmc4_scu.c **** 
 794:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
 795:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 796:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve ECAT clock frequency
 797:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 798:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetECATClockFrequency(void)
 799:../Libraries/XMCLib/src/xmc4_scu.c **** {
 800:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency;
 801:../Libraries/XMCLib/src/xmc4_scu.c **** 
 802:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) != 0U)
 803:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 804:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 805:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 806:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 807:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 808:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 809:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 810:../Libraries/XMCLib/src/xmc4_scu.c **** 
 811:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (XMC_SCU_CLOCK_GetECATClockDivider() + 1UL)));
 812:../Libraries/XMCLib/src/xmc4_scu.c **** }
 813:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 814:../Libraries/XMCLib/src/xmc4_scu.c **** 
 815:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 816:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve WDT clock frequency
 817:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 818:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetWdtClockFrequency(void)
 819:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2820              	 .loc 3 819 0
 2821              	 .cfi_startproc
 2822              	 
 2823              	 
 2824 0000 80B5     	 push {r7,lr}
 2825              	.LCFI262:
 2826              	 .cfi_def_cfa_offset 8
 2827              	 .cfi_offset 7,-8
 2828              	 .cfi_offset 14,-4
 2829 0002 82B0     	 sub sp,sp,#8
 2830              	.LCFI263:
 2831              	 .cfi_def_cfa_offset 16
 2832 0004 00AF     	 add r7,sp,#0
 2833              	.LCFI264:
 2834              	 .cfi_def_cfa_register 7
 820:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2835              	 .loc 3 820 0
 2836 0006 0023     	 movs r3,#0
 2837 0008 7B60     	 str r3,[r7,#4]
 821:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_WDTCLKSRC_t clksrc;
 822:../Libraries/XMCLib/src/xmc4_scu.c **** 
 823:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetWdtClockSource();
 2838              	 .loc 3 823 0
 2839 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetWdtClockSource
 2840 000e 3860     	 str r0,[r7]
 824:../Libraries/XMCLib/src/xmc4_scu.c **** 
 825:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_PLL)
 2841              	 .loc 3 825 0
 2842 0010 3B68     	 ldr r3,[r7]
 2843 0012 B3F5003F 	 cmp r3,#131072
 2844 0016 03D1     	 bne .L195
 826:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 827:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2845              	 .loc 3 827 0
 2846 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2847 001c 7860     	 str r0,[r7,#4]
 2848 001e 0CE0     	 b .L196
 2849              	.L195:
 828:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 829:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_OFI)
 2850              	 .loc 3 829 0
 2851 0020 3B68     	 ldr r3,[r7]
 2852 0022 002B     	 cmp r3,#0
 2853 0024 02D1     	 bne .L197
 830:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 831:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = OFI_FREQUENCY;
 2854              	 .loc 3 831 0
 2855 0026 0A4B     	 ldr r3,.L199
 2856 0028 7B60     	 str r3,[r7,#4]
 2857 002a 06E0     	 b .L196
 2858              	.L197:
 832:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 833:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_STDBY)
 2859              	 .loc 3 833 0
 2860 002c 3B68     	 ldr r3,[r7]
 2861 002e B3F5803F 	 cmp r3,#65536
 2862 0032 02D1     	 bne .L196
 834:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 835:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = OSI_FREQUENCY;
 2863              	 .loc 3 835 0
 2864 0034 4FF40043 	 mov r3,#32768
 2865 0038 7B60     	 str r3,[r7,#4]
 2866              	.L196:
 836:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 837:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 838:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 839:../Libraries/XMCLib/src/xmc4_scu.c **** 
 840:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 841:../Libraries/XMCLib/src/xmc4_scu.c **** 
 842:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >>
 2867              	 .loc 3 842 0
 2868 003a 064B     	 ldr r3,.L199+4
 2869 003c 5B6A     	 ldr r3,[r3,#36]
 2870 003e DBB2     	 uxtb r3,r3
 843:../Libraries/XMCLib/src/xmc4_scu.c ****                                     SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 2871              	 .loc 3 843 0
 2872 0040 0133     	 adds r3,r3,#1
 842:../Libraries/XMCLib/src/xmc4_scu.c ****                                     SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 2873              	 .loc 3 842 0
 2874 0042 7A68     	 ldr r2,[r7,#4]
 2875 0044 B2FBF3F3 	 udiv r3,r2,r3
 844:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2876              	 .loc 3 844 0
 2877 0048 1846     	 mov r0,r3
 2878 004a 0837     	 adds r7,r7,#8
 2879              	.LCFI265:
 2880              	 .cfi_def_cfa_offset 8
 2881 004c BD46     	 mov sp,r7
 2882              	.LCFI266:
 2883              	 .cfi_def_cfa_register 13
 2884              	 
 2885 004e 80BD     	 pop {r7,pc}
 2886              	.L200:
 2887              	 .align 2
 2888              	.L199:
 2889 0050 00366E01 	 .word 24000000
 2890 0054 00460050 	 .word 1342195200
 2891              	 .cfi_endproc
 2892              	.LFE207:
 2894              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency,"ax",%progbits
 2895              	 .align 2
 2896              	 .global XMC_SCU_CLOCK_GetExternalOutputClockFrequency
 2897              	 .thumb
 2898              	 .thumb_func
 2900              	XMC_SCU_CLOCK_GetExternalOutputClockFrequency:
 2901              	.LFB208:
 845:../Libraries/XMCLib/src/xmc4_scu.c **** 
 846:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 847:../Libraries/XMCLib/src/xmc4_scu.c ****  * @brief API to retrieve EXTERNAL-OUT clock frequency
 848:../Libraries/XMCLib/src/xmc4_scu.c ****  * @retval Clock frequency
 849:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 850:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetExternalOutputClockFrequency(void)
 851:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2902              	 .loc 3 851 0
 2903              	 .cfi_startproc
 2904              	 
 2905              	 
 2906 0000 80B5     	 push {r7,lr}
 2907              	.LCFI267:
 2908              	 .cfi_def_cfa_offset 8
 2909              	 .cfi_offset 7,-8
 2910              	 .cfi_offset 14,-4
 2911 0002 82B0     	 sub sp,sp,#8
 2912              	.LCFI268:
 2913              	 .cfi_def_cfa_offset 16
 2914 0004 00AF     	 add r7,sp,#0
 2915              	.LCFI269:
 2916              	 .cfi_def_cfa_register 7
 852:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2917              	 .loc 3 852 0
 2918 0006 0023     	 movs r3,#0
 2919 0008 7B60     	 str r3,[r7,#4]
 853:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_t clksrc;
 854:../Libraries/XMCLib/src/xmc4_scu.c **** 
 855:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetExternalOutputClockSource();
 2920              	 .loc 3 855 0
 2921 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetExternalOutputClockSource
 2922 000e 0346     	 mov r3,r0
 2923 0010 FB70     	 strb r3,[r7,#3]
 856:../Libraries/XMCLib/src/xmc4_scu.c **** 
 857:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL)
 2924              	 .loc 3 857 0
 2925 0012 FB78     	 ldrb r3,[r7,#3]
 2926 0014 032B     	 cmp r3,#3
 2927 0016 0DD1     	 bne .L202
 858:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 859:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2928              	 .loc 3 859 0
 2929 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2930 001c 7860     	 str r0,[r7,#4]
 860:../Libraries/XMCLib/src/xmc4_scu.c ****     
 861:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 2931              	 .loc 3 861 0
 2932 001e 134B     	 ldr r3,.L206
 2933 0020 9A6A     	 ldr r2,[r3,#40]
 2934 0022 134B     	 ldr r3,.L206+4
 2935 0024 1340     	 ands r3,r3,r2
 2936 0026 1B0C     	 lsrs r3,r3,#16
 862:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 2937              	 .loc 3 862 0
 2938 0028 0133     	 adds r3,r3,#1
 861:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 2939              	 .loc 3 861 0
 2940 002a 7A68     	 ldr r2,[r7,#4]
 2941 002c B2FBF3F3 	 udiv r3,r2,r3
 2942 0030 7B60     	 str r3,[r7,#4]
 2943 0032 16E0     	 b .L203
 2944              	.L202:
 863:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 864:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS)
 2945              	 .loc 3 864 0
 2946 0034 FB78     	 ldrb r3,[r7,#3]
 2947 0036 002B     	 cmp r3,#0
 2948 0038 03D1     	 bne .L204
 865:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 866:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 2949              	 .loc 3 866 0
 2950 003a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2951 003e 7860     	 str r0,[r7,#4]
 2952 0040 0FE0     	 b .L203
 2953              	.L204:
 867:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 868:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_USB)
 2954              	 .loc 3 868 0
 2955 0042 FB78     	 ldrb r3,[r7,#3]
 2956 0044 022B     	 cmp r3,#2
 2957 0046 0CD1     	 bne .L203
 869:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 870:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 2958              	 .loc 3 870 0
 2959 0048 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2960 004c 7860     	 str r0,[r7,#4]
 871:../Libraries/XMCLib/src/xmc4_scu.c ****     
 872:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 2961              	 .loc 3 872 0
 2962 004e 074B     	 ldr r3,.L206
 2963 0050 9A6A     	 ldr r2,[r3,#40]
 2964 0052 074B     	 ldr r3,.L206+4
 2965 0054 1340     	 ands r3,r3,r2
 2966 0056 1B0C     	 lsrs r3,r3,#16
 873:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 2967              	 .loc 3 873 0
 2968 0058 0133     	 adds r3,r3,#1
 872:../Libraries/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 2969              	 .loc 3 872 0
 2970 005a 7A68     	 ldr r2,[r7,#4]
 2971 005c B2FBF3F3 	 udiv r3,r2,r3
 2972 0060 7B60     	 str r3,[r7,#4]
 2973              	.L203:
 874:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 875:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 876:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 877:../Libraries/XMCLib/src/xmc4_scu.c **** 
 878:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 879:../Libraries/XMCLib/src/xmc4_scu.c **** 
 880:../Libraries/XMCLib/src/xmc4_scu.c ****   return (frequency);
 2974              	 .loc 3 880 0
 2975 0062 7B68     	 ldr r3,[r7,#4]
 881:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2976              	 .loc 3 881 0
 2977 0064 1846     	 mov r0,r3
 2978 0066 0837     	 adds r7,r7,#8
 2979              	.LCFI270:
 2980              	 .cfi_def_cfa_offset 8
 2981 0068 BD46     	 mov sp,r7
 2982              	.LCFI271:
 2983              	 .cfi_def_cfa_register 13
 2984              	 
 2985 006a 80BD     	 pop {r7,pc}
 2986              	.L207:
 2987              	 .align 2
 2988              	.L206:
 2989 006c 00460050 	 .word 1342195200
 2990 0070 0000FF01 	 .word 33488896
 2991              	 .cfi_endproc
 2992              	.LFE208:
 2994              	 .section .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency,"ax",%progbits
 2995              	 .align 2
 2996              	 .global XMC_SCU_CLOCK_GetPeripheralClockFrequency
 2997              	 .thumb
 2998              	 .thumb_func
 3000              	XMC_SCU_CLOCK_GetPeripheralClockFrequency:
 3001              	.LFB209:
 882:../Libraries/XMCLib/src/xmc4_scu.c **** 
 883:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 884:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve clock frequency of peripherals on the peripheral bus using a shared functional c
 885:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 886:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void)
 887:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3002              	 .loc 3 887 0
 3003              	 .cfi_startproc
 3004              	 
 3005              	 
 3006 0000 80B5     	 push {r7,lr}
 3007              	.LCFI272:
 3008              	 .cfi_def_cfa_offset 8
 3009              	 .cfi_offset 7,-8
 3010              	 .cfi_offset 14,-4
 3011 0002 00AF     	 add r7,sp,#0
 3012              	.LCFI273:
 3013              	 .cfi_def_cfa_register 7
 888:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3014              	 .loc 3 888 0
 3015 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetCpuClockFrequency
 3016 0008 0246     	 mov r2,r0
 889:../Libraries/XMCLib/src/xmc4_scu.c ****          ((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos));  
 3017              	 .loc 3 889 0
 3018 000a 044B     	 ldr r3,.L210
 3019 000c 5B69     	 ldr r3,[r3,#20]
 888:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3020              	 .loc 3 888 0
 3021 000e 03F00103 	 and r3,r3,#1
 3022 0012 22FA03F3 	 lsr r3,r2,r3
 890:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3023              	 .loc 3 890 0
 3024 0016 1846     	 mov r0,r3
 3025 0018 80BD     	 pop {r7,pc}
 3026              	.L211:
 3027 001a 00BF     	 .align 2
 3028              	.L210:
 3029 001c 00460050 	 .word 1342195200
 3030              	 .cfi_endproc
 3031              	.LFE209:
 3033              	 .section .text.XMC_SCU_CLOCK_SetSystemClockSource,"ax",%progbits
 3034              	 .align 2
 3035              	 .global XMC_SCU_CLOCK_SetSystemClockSource
 3036              	 .thumb
 3037              	 .thumb_func
 3039              	XMC_SCU_CLOCK_SetSystemClockSource:
 3040              	.LFB210:
 891:../Libraries/XMCLib/src/xmc4_scu.c **** 
 892:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fSYS */
 893:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source)
 894:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3041              	 .loc 3 894 0
 3042              	 .cfi_startproc
 3043              	 
 3044              	 
 3045              	 
 3046 0000 80B4     	 push {r7}
 3047              	.LCFI274:
 3048              	 .cfi_def_cfa_offset 4
 3049              	 .cfi_offset 7,-4
 3050 0002 83B0     	 sub sp,sp,#12
 3051              	.LCFI275:
 3052              	 .cfi_def_cfa_offset 16
 3053 0004 00AF     	 add r7,sp,#0
 3054              	.LCFI276:
 3055              	 .cfi_def_cfa_register 7
 3056 0006 7860     	 str r0,[r7,#4]
 895:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSSEL_Msk)) |
 3057              	 .loc 3 895 0
 3058 0008 0649     	 ldr r1,.L213
 3059 000a 064B     	 ldr r3,.L213
 3060 000c DB68     	 ldr r3,[r3,#12]
 3061 000e 23F48032 	 bic r2,r3,#65536
 3062 0012 7B68     	 ldr r3,[r7,#4]
 3063 0014 1343     	 orrs r3,r3,r2
 3064 0016 CB60     	 str r3,[r1,#12]
 896:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 897:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3065              	 .loc 3 897 0
 3066 0018 0C37     	 adds r7,r7,#12
 3067              	.LCFI277:
 3068              	 .cfi_def_cfa_offset 4
 3069 001a BD46     	 mov sp,r7
 3070              	.LCFI278:
 3071              	 .cfi_def_cfa_register 13
 3072              	 
 3073 001c 5DF8047B 	 ldr r7,[sp],#4
 3074              	.LCFI279:
 3075              	 .cfi_restore 7
 3076              	 .cfi_def_cfa_offset 0
 3077 0020 7047     	 bx lr
 3078              	.L214:
 3079 0022 00BF     	 .align 2
 3080              	.L213:
 3081 0024 00460050 	 .word 1342195200
 3082              	 .cfi_endproc
 3083              	.LFE210:
 3085              	 .section .text.XMC_SCU_CLOCK_SetUsbClockSource,"ax",%progbits
 3086              	 .align 2
 3087              	 .global XMC_SCU_CLOCK_SetUsbClockSource
 3088              	 .thumb
 3089              	 .thumb_func
 3091              	XMC_SCU_CLOCK_SetUsbClockSource:
 3092              	.LFB211:
 898:../Libraries/XMCLib/src/xmc4_scu.c **** 
 899:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fUSB */
 900:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source)
 901:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3093              	 .loc 3 901 0
 3094              	 .cfi_startproc
 3095              	 
 3096              	 
 3097              	 
 3098 0000 80B4     	 push {r7}
 3099              	.LCFI280:
 3100              	 .cfi_def_cfa_offset 4
 3101              	 .cfi_offset 7,-4
 3102 0002 83B0     	 sub sp,sp,#12
 3103              	.LCFI281:
 3104              	 .cfi_def_cfa_offset 16
 3105 0004 00AF     	 add r7,sp,#0
 3106              	.LCFI282:
 3107              	 .cfi_def_cfa_register 7
 3108 0006 7860     	 str r0,[r7,#4]
 902:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBSEL_Msk)) |
 3109              	 .loc 3 902 0
 3110 0008 0649     	 ldr r1,.L216
 3111 000a 064B     	 ldr r3,.L216
 3112 000c 9B69     	 ldr r3,[r3,#24]
 3113 000e 23F48032 	 bic r2,r3,#65536
 3114 0012 7B68     	 ldr r3,[r7,#4]
 3115 0014 1343     	 orrs r3,r3,r2
 3116 0016 8B61     	 str r3,[r1,#24]
 903:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 904:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3117              	 .loc 3 904 0
 3118 0018 0C37     	 adds r7,r7,#12
 3119              	.LCFI283:
 3120              	 .cfi_def_cfa_offset 4
 3121 001a BD46     	 mov sp,r7
 3122              	.LCFI284:
 3123              	 .cfi_def_cfa_register 13
 3124              	 
 3125 001c 5DF8047B 	 ldr r7,[sp],#4
 3126              	.LCFI285:
 3127              	 .cfi_restore 7
 3128              	 .cfi_def_cfa_offset 0
 3129 0020 7047     	 bx lr
 3130              	.L217:
 3131 0022 00BF     	 .align 2
 3132              	.L216:
 3133 0024 00460050 	 .word 1342195200
 3134              	 .cfi_endproc
 3135              	.LFE211:
 3137              	 .section .text.XMC_SCU_CLOCK_SetWdtClockSource,"ax",%progbits
 3138              	 .align 2
 3139              	 .global XMC_SCU_CLOCK_SetWdtClockSource
 3140              	 .thumb
 3141              	 .thumb_func
 3143              	XMC_SCU_CLOCK_SetWdtClockSource:
 3144              	.LFB212:
 905:../Libraries/XMCLib/src/xmc4_scu.c **** 
 906:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fWDT */
 907:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source)
 908:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3145              	 .loc 3 908 0
 3146              	 .cfi_startproc
 3147              	 
 3148              	 
 3149              	 
 3150 0000 80B4     	 push {r7}
 3151              	.LCFI286:
 3152              	 .cfi_def_cfa_offset 4
 3153              	 .cfi_offset 7,-4
 3154 0002 83B0     	 sub sp,sp,#12
 3155              	.LCFI287:
 3156              	 .cfi_def_cfa_offset 16
 3157 0004 00AF     	 add r7,sp,#0
 3158              	.LCFI288:
 3159              	 .cfi_def_cfa_register 7
 3160 0006 7860     	 str r0,[r7,#4]
 909:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTSEL_Msk)) |
 3161              	 .loc 3 909 0
 3162 0008 0649     	 ldr r1,.L219
 3163 000a 064B     	 ldr r3,.L219
 3164 000c 5B6A     	 ldr r3,[r3,#36]
 3165 000e 23F44032 	 bic r2,r3,#196608
 3166 0012 7B68     	 ldr r3,[r7,#4]
 3167 0014 1343     	 orrs r3,r3,r2
 3168 0016 4B62     	 str r3,[r1,#36]
 910:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 911:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3169              	 .loc 3 911 0
 3170 0018 0C37     	 adds r7,r7,#12
 3171              	.LCFI289:
 3172              	 .cfi_def_cfa_offset 4
 3173 001a BD46     	 mov sp,r7
 3174              	.LCFI290:
 3175              	 .cfi_def_cfa_register 13
 3176              	 
 3177 001c 5DF8047B 	 ldr r7,[sp],#4
 3178              	.LCFI291:
 3179              	 .cfi_restore 7
 3180              	 .cfi_def_cfa_offset 0
 3181 0020 7047     	 bx lr
 3182              	.L220:
 3183 0022 00BF     	 .align 2
 3184              	.L219:
 3185 0024 00460050 	 .word 1342195200
 3186              	 .cfi_endproc
 3187              	.LFE212:
 3189              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockSource,"ax",%progbits
 3190              	 .align 2
 3191              	 .global XMC_SCU_CLOCK_SetExternalOutputClockSource
 3192              	 .thumb
 3193              	 .thumb_func
 3195              	XMC_SCU_CLOCK_SetExternalOutputClockSource:
 3196              	.LFB213:
 912:../Libraries/XMCLib/src/xmc4_scu.c **** 
 913:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fEXT */
 914:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t source)
 915:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3197              	 .loc 3 915 0
 3198              	 .cfi_startproc
 3199              	 
 3200              	 
 3201              	 
 3202 0000 80B4     	 push {r7}
 3203              	.LCFI292:
 3204              	 .cfi_def_cfa_offset 4
 3205              	 .cfi_offset 7,-4
 3206 0002 83B0     	 sub sp,sp,#12
 3207              	.LCFI293:
 3208              	 .cfi_def_cfa_offset 16
 3209 0004 00AF     	 add r7,sp,#0
 3210              	.LCFI294:
 3211              	 .cfi_def_cfa_register 7
 3212 0006 0346     	 mov r3,r0
 3213 0008 FB71     	 strb r3,[r7,#7]
 916:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3214              	 .loc 3 916 0
 3215 000a 0649     	 ldr r1,.L222
 3216 000c 054B     	 ldr r3,.L222
 3217 000e 9B6A     	 ldr r3,[r3,#40]
 3218 0010 23F00302 	 bic r2,r3,#3
 917:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 3219              	 .loc 3 917 0
 3220 0014 FB79     	 ldrb r3,[r7,#7]
 916:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3221              	 .loc 3 916 0
 3222 0016 1343     	 orrs r3,r3,r2
 3223 0018 8B62     	 str r3,[r1,#40]
 918:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3224              	 .loc 3 918 0
 3225 001a 0C37     	 adds r7,r7,#12
 3226              	.LCFI295:
 3227              	 .cfi_def_cfa_offset 4
 3228 001c BD46     	 mov sp,r7
 3229              	.LCFI296:
 3230              	 .cfi_def_cfa_register 13
 3231              	 
 3232 001e 5DF8047B 	 ldr r7,[sp],#4
 3233              	.LCFI297:
 3234              	 .cfi_restore 7
 3235              	 .cfi_def_cfa_offset 0
 3236 0022 7047     	 bx lr
 3237              	.L223:
 3238              	 .align 2
 3239              	.L222:
 3240 0024 00460050 	 .word 1342195200
 3241              	 .cfi_endproc
 3242              	.LFE213:
 3244              	 .section .text.XMC_SCU_CLOCK_SetSystemPllClockSource,"ax",%progbits
 3245              	 .align 2
 3246              	 .global XMC_SCU_CLOCK_SetSystemPllClockSource
 3247              	 .thumb
 3248              	 .thumb_func
 3250              	XMC_SCU_CLOCK_SetSystemPllClockSource:
 3251              	.LFB214:
 919:../Libraries/XMCLib/src/xmc4_scu.c **** 
 920:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fPLL */
 921:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source)
 922:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3252              	 .loc 3 922 0
 3253              	 .cfi_startproc
 3254              	 
 3255              	 
 3256              	 
 3257 0000 80B4     	 push {r7}
 3258              	.LCFI298:
 3259              	 .cfi_def_cfa_offset 4
 3260              	 .cfi_offset 7,-4
 3261 0002 83B0     	 sub sp,sp,#12
 3262              	.LCFI299:
 3263              	 .cfi_def_cfa_offset 16
 3264 0004 00AF     	 add r7,sp,#0
 3265              	.LCFI300:
 3266              	 .cfi_def_cfa_register 7
 3267 0006 0346     	 mov r3,r0
 3268 0008 FB80     	 strh r3,[r7,#6]
 923:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Check input clock */
 924:../Libraries/XMCLib/src/xmc4_scu.c ****   if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) /* Select PLLClockSource */
 3269              	 .loc 3 924 0
 3270 000a FB88     	 ldrh r3,[r7,#6]
 3271 000c 002B     	 cmp r3,#0
 3272 000e 08D1     	 bne .L225
 925:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 926:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 &= (uint32_t)~(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3273              	 .loc 3 926 0
 3274 0010 0A4A     	 ldr r2,.L227
 3275 0012 0A4B     	 ldr r3,.L227
 3276 0014 DB68     	 ldr r3,[r3,#12]
 3277 0016 23F48073 	 bic r3,r3,#256
 3278 001a 23F00103 	 bic r3,r3,#1
 3279 001e D360     	 str r3,[r2,#12]
 3280 0020 07E0     	 b .L224
 3281              	.L225:
 927:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 928:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 929:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 930:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 |= (uint32_t)(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3282              	 .loc 3 930 0
 3283 0022 064A     	 ldr r2,.L227
 3284 0024 054B     	 ldr r3,.L227
 3285 0026 DB68     	 ldr r3,[r3,#12]
 3286 0028 43F48073 	 orr r3,r3,#256
 3287 002c 43F00103 	 orr r3,r3,#1
 3288 0030 D360     	 str r3,[r2,#12]
 3289              	.L224:
 931:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 932:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3290              	 .loc 3 932 0
 3291 0032 0C37     	 adds r7,r7,#12
 3292              	.LCFI301:
 3293              	 .cfi_def_cfa_offset 4
 3294 0034 BD46     	 mov sp,r7
 3295              	.LCFI302:
 3296              	 .cfi_def_cfa_register 13
 3297              	 
 3298 0036 5DF8047B 	 ldr r7,[sp],#4
 3299              	.LCFI303:
 3300              	 .cfi_restore 7
 3301              	 .cfi_def_cfa_offset 0
 3302 003a 7047     	 bx lr
 3303              	.L228:
 3304              	 .align 2
 3305              	.L227:
 3306 003c 10470050 	 .word 1342195472
 3307              	 .cfi_endproc
 3308              	.LFE214:
 3310              	 .section .text.XMC_SCU_HIB_SetRtcClockSource,"ax",%progbits
 3311              	 .align 2
 3312              	 .global XMC_SCU_HIB_SetRtcClockSource
 3313              	 .thumb
 3314              	 .thumb_func
 3316              	XMC_SCU_HIB_SetRtcClockSource:
 3317              	.LFB215:
 933:../Libraries/XMCLib/src/xmc4_scu.c **** 
 934:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fRTC */
 935:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source)
 936:../Libraries/XMCLib/src/xmc4_scu.c **** { 
 3318              	 .loc 3 936 0
 3319              	 .cfi_startproc
 3320              	 
 3321              	 
 3322              	 
 3323 0000 80B4     	 push {r7}
 3324              	.LCFI304:
 3325              	 .cfi_def_cfa_offset 4
 3326              	 .cfi_offset 7,-4
 3327 0002 83B0     	 sub sp,sp,#12
 3328              	.LCFI305:
 3329              	 .cfi_def_cfa_offset 16
 3330 0004 00AF     	 add r7,sp,#0
 3331              	.LCFI306:
 3332              	 .cfi_def_cfa_register 7
 3333 0006 0346     	 mov r3,r0
 3334 0008 FB71     	 strb r3,[r7,#7]
 937:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of HDCR register in hibernate domain is completed */
 938:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3335              	 .loc 3 938 0
 3336 000a 00BF     	 nop
 3337              	.L230:
 3338              	 .loc 3 938 0 is_stmt 0 discriminator 1
 3339 000c 094B     	 ldr r3,.L231
 3340 000e D3F8C430 	 ldr r3,[r3,#196]
 3341 0012 03F00803 	 and r3,r3,#8
 3342 0016 002B     	 cmp r3,#0
 3343 0018 F8D1     	 bne .L230
 939:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 940:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 941:../Libraries/XMCLib/src/xmc4_scu.c **** 
 942:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_RCS_Msk)) |
 3344              	 .loc 3 942 0 is_stmt 1
 3345 001a 0749     	 ldr r1,.L231+4
 3346 001c 064B     	 ldr r3,.L231+4
 3347 001e DB68     	 ldr r3,[r3,#12]
 3348 0020 23F04002 	 bic r2,r3,#64
 943:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3349              	 .loc 3 943 0
 3350 0024 FB79     	 ldrb r3,[r7,#7]
 942:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3351              	 .loc 3 942 0
 3352 0026 1343     	 orrs r3,r3,r2
 3353 0028 CB60     	 str r3,[r1,#12]
 944:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3354              	 .loc 3 944 0
 3355 002a 0C37     	 adds r7,r7,#12
 3356              	.LCFI307:
 3357              	 .cfi_def_cfa_offset 4
 3358 002c BD46     	 mov sp,r7
 3359              	.LCFI308:
 3360              	 .cfi_def_cfa_register 13
 3361              	 
 3362 002e 5DF8047B 	 ldr r7,[sp],#4
 3363              	.LCFI309:
 3364              	 .cfi_restore 7
 3365              	 .cfi_def_cfa_offset 0
 3366 0032 7047     	 bx lr
 3367              	.L232:
 3368              	 .align 2
 3369              	.L231:
 3370 0034 00400050 	 .word 1342193664
 3371 0038 00430050 	 .word 1342194432
 3372              	 .cfi_endproc
 3373              	.LFE215:
 3375              	 .section .text.XMC_SCU_HIB_SetStandbyClockSource,"ax",%progbits
 3376              	 .align 2
 3377              	 .global XMC_SCU_HIB_SetStandbyClockSource
 3378              	 .thumb
 3379              	 .thumb_func
 3381              	XMC_SCU_HIB_SetStandbyClockSource:
 3382              	.LFB216:
 945:../Libraries/XMCLib/src/xmc4_scu.c **** 
 946:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fSTDBY */
 947:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source)
 948:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3383              	 .loc 3 948 0
 3384              	 .cfi_startproc
 3385              	 
 3386              	 
 3387              	 
 3388 0000 80B4     	 push {r7}
 3389              	.LCFI310:
 3390              	 .cfi_def_cfa_offset 4
 3391              	 .cfi_offset 7,-4
 3392 0002 83B0     	 sub sp,sp,#12
 3393              	.LCFI311:
 3394              	 .cfi_def_cfa_offset 16
 3395 0004 00AF     	 add r7,sp,#0
 3396              	.LCFI312:
 3397              	 .cfi_def_cfa_register 7
 3398 0006 0346     	 mov r3,r0
 3399 0008 FB71     	 strb r3,[r7,#7]
 949:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3400              	 .loc 3 949 0
 3401 000a 00BF     	 nop
 3402              	.L234:
 3403              	 .loc 3 949 0 is_stmt 0 discriminator 1
 3404 000c 094B     	 ldr r3,.L235
 3405 000e D3F8C430 	 ldr r3,[r3,#196]
 3406 0012 03F00803 	 and r3,r3,#8
 3407 0016 002B     	 cmp r3,#0
 3408 0018 F8D1     	 bne .L234
 950:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 951:../Libraries/XMCLib/src/xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 952:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 953:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_STDBYSEL_Msk)) |
 3409              	 .loc 3 953 0 is_stmt 1
 3410 001a 0749     	 ldr r1,.L235+4
 3411 001c 064B     	 ldr r3,.L235+4
 3412 001e DB68     	 ldr r3,[r3,#12]
 3413 0020 23F08002 	 bic r2,r3,#128
 954:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3414              	 .loc 3 954 0
 3415 0024 FB79     	 ldrb r3,[r7,#7]
 953:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3416              	 .loc 3 953 0
 3417 0026 1343     	 orrs r3,r3,r2
 3418 0028 CB60     	 str r3,[r1,#12]
 955:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3419              	 .loc 3 955 0
 3420 002a 0C37     	 adds r7,r7,#12
 3421              	.LCFI313:
 3422              	 .cfi_def_cfa_offset 4
 3423 002c BD46     	 mov sp,r7
 3424              	.LCFI314:
 3425              	 .cfi_def_cfa_register 13
 3426              	 
 3427 002e 5DF8047B 	 ldr r7,[sp],#4
 3428              	.LCFI315:
 3429              	 .cfi_restore 7
 3430              	 .cfi_def_cfa_offset 0
 3431 0032 7047     	 bx lr
 3432              	.L236:
 3433              	 .align 2
 3434              	.L235:
 3435 0034 00400050 	 .word 1342193664
 3436 0038 00430050 	 .word 1342194432
 3437              	 .cfi_endproc
 3438              	.LFE216:
 3440              	 .section .text.XMC_SCU_CLOCK_SetSystemClockDivider,"ax",%progbits
 3441              	 .align 2
 3442              	 .global XMC_SCU_CLOCK_SetSystemClockDivider
 3443              	 .thumb
 3444              	 .thumb_func
 3446              	XMC_SCU_CLOCK_SetSystemClockDivider:
 3447              	.LFB217:
 956:../Libraries/XMCLib/src/xmc4_scu.c **** 
 957:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsys and its parent */
 958:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider)
 959:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3448              	 .loc 3 959 0
 3449              	 .cfi_startproc
 3450              	 
 3451              	 
 3452              	 
 3453 0000 80B4     	 push {r7}
 3454              	.LCFI316:
 3455              	 .cfi_def_cfa_offset 4
 3456              	 .cfi_offset 7,-4
 3457 0002 83B0     	 sub sp,sp,#12
 3458              	.LCFI317:
 3459              	 .cfi_def_cfa_offset 16
 3460 0004 00AF     	 add r7,sp,#0
 3461              	.LCFI318:
 3462              	 .cfi_def_cfa_register 7
 3463 0006 7860     	 str r0,[r7,#4]
 960:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSystemClockDivider:Wrong clock divider value",
 961:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_SYSCLKCR_SYSDIV_Msk + 1UL)) );
 962:../Libraries/XMCLib/src/xmc4_scu.c **** 
 963:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSDIV_Msk)) |
 3464              	 .loc 3 963 0
 3465 0008 0649     	 ldr r1,.L238
 3466 000a 064B     	 ldr r3,.L238
 3467 000c DB68     	 ldr r3,[r3,#12]
 3468 000e 23F0FF02 	 bic r2,r3,#255
 964:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3469              	 .loc 3 964 0
 3470 0012 7B68     	 ldr r3,[r7,#4]
 3471 0014 013B     	 subs r3,r3,#1
 963:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3472              	 .loc 3 963 0
 3473 0016 1343     	 orrs r3,r3,r2
 3474 0018 CB60     	 str r3,[r1,#12]
 965:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3475              	 .loc 3 965 0
 3476 001a 0C37     	 adds r7,r7,#12
 3477              	.LCFI319:
 3478              	 .cfi_def_cfa_offset 4
 3479 001c BD46     	 mov sp,r7
 3480              	.LCFI320:
 3481              	 .cfi_def_cfa_register 13
 3482              	 
 3483 001e 5DF8047B 	 ldr r7,[sp],#4
 3484              	.LCFI321:
 3485              	 .cfi_restore 7
 3486              	 .cfi_def_cfa_offset 0
 3487 0022 7047     	 bx lr
 3488              	.L239:
 3489              	 .align 2
 3490              	.L238:
 3491 0024 00460050 	 .word 1342195200
 3492              	 .cfi_endproc
 3493              	.LFE217:
 3495              	 .section .text.XMC_SCU_CLOCK_SetCcuClockDivider,"ax",%progbits
 3496              	 .align 2
 3497              	 .global XMC_SCU_CLOCK_SetCcuClockDivider
 3498              	 .thumb
 3499              	 .thumb_func
 3501              	XMC_SCU_CLOCK_SetCcuClockDivider:
 3502              	.LFB218:
 966:../Libraries/XMCLib/src/xmc4_scu.c **** 
 967:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fccu and its parent */
 968:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t divider)
 969:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3503              	 .loc 3 969 0
 3504              	 .cfi_startproc
 3505              	 
 3506              	 
 3507              	 
 3508 0000 80B4     	 push {r7}
 3509              	.LCFI322:
 3510              	 .cfi_def_cfa_offset 4
 3511              	 .cfi_offset 7,-4
 3512 0002 83B0     	 sub sp,sp,#12
 3513              	.LCFI323:
 3514              	 .cfi_def_cfa_offset 16
 3515 0004 00AF     	 add r7,sp,#0
 3516              	.LCFI324:
 3517              	 .cfi_def_cfa_register 7
 3518 0006 7860     	 str r0,[r7,#4]
 970:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCapcomClockDivider:Wrong clock divider value", (divider <= 2UL) );
 971:../Libraries/XMCLib/src/xmc4_scu.c **** 
 972:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CCUCLKCR = (SCU_CLK->CCUCLKCR & ((uint32_t)~SCU_CLK_CCUCLKCR_CCUDIV_Msk)) |
 3519              	 .loc 3 972 0
 3520 0008 0649     	 ldr r1,.L241
 3521 000a 064B     	 ldr r3,.L241
 3522 000c 1B6A     	 ldr r3,[r3,#32]
 3523 000e 23F00102 	 bic r2,r3,#1
 973:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3524              	 .loc 3 973 0
 3525 0012 7B68     	 ldr r3,[r7,#4]
 3526 0014 013B     	 subs r3,r3,#1
 972:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3527              	 .loc 3 972 0
 3528 0016 1343     	 orrs r3,r3,r2
 3529 0018 0B62     	 str r3,[r1,#32]
 974:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3530              	 .loc 3 974 0
 3531 001a 0C37     	 adds r7,r7,#12
 3532              	.LCFI325:
 3533              	 .cfi_def_cfa_offset 4
 3534 001c BD46     	 mov sp,r7
 3535              	.LCFI326:
 3536              	 .cfi_def_cfa_register 13
 3537              	 
 3538 001e 5DF8047B 	 ldr r7,[sp],#4
 3539              	.LCFI327:
 3540              	 .cfi_restore 7
 3541              	 .cfi_def_cfa_offset 0
 3542 0022 7047     	 bx lr
 3543              	.L242:
 3544              	 .align 2
 3545              	.L241:
 3546 0024 00460050 	 .word 1342195200
 3547              	 .cfi_endproc
 3548              	.LFE218:
 3550              	 .section .text.XMC_SCU_CLOCK_SetCpuClockDivider,"ax",%progbits
 3551              	 .align 2
 3552              	 .global XMC_SCU_CLOCK_SetCpuClockDivider
 3553              	 .thumb
 3554              	 .thumb_func
 3556              	XMC_SCU_CLOCK_SetCpuClockDivider:
 3557              	.LFB219:
 975:../Libraries/XMCLib/src/xmc4_scu.c **** 
 976:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fcpu and its parent */
 977:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t divider)
 978:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3558              	 .loc 3 978 0
 3559              	 .cfi_startproc
 3560              	 
 3561              	 
 3562              	 
 3563 0000 80B4     	 push {r7}
 3564              	.LCFI328:
 3565              	 .cfi_def_cfa_offset 4
 3566              	 .cfi_offset 7,-4
 3567 0002 83B0     	 sub sp,sp,#12
 3568              	.LCFI329:
 3569              	 .cfi_def_cfa_offset 16
 3570 0004 00AF     	 add r7,sp,#0
 3571              	.LCFI330:
 3572              	 .cfi_def_cfa_register 7
 3573 0006 7860     	 str r0,[r7,#4]
 979:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCpuClockDivider:Wrong clock divider value", (divider <= 2UL) );
 980:../Libraries/XMCLib/src/xmc4_scu.c **** 
 981:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CPUCLKCR = (SCU_CLK->CPUCLKCR & ((uint32_t)~SCU_CLK_CPUCLKCR_CPUDIV_Msk)) |
 3574              	 .loc 3 981 0
 3575 0008 0649     	 ldr r1,.L244
 3576 000a 064B     	 ldr r3,.L244
 3577 000c 1B69     	 ldr r3,[r3,#16]
 3578 000e 23F00102 	 bic r2,r3,#1
 982:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3579              	 .loc 3 982 0
 3580 0012 7B68     	 ldr r3,[r7,#4]
 3581 0014 013B     	 subs r3,r3,#1
 981:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3582              	 .loc 3 981 0
 3583 0016 1343     	 orrs r3,r3,r2
 3584 0018 0B61     	 str r3,[r1,#16]
 983:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3585              	 .loc 3 983 0
 3586 001a 0C37     	 adds r7,r7,#12
 3587              	.LCFI331:
 3588              	 .cfi_def_cfa_offset 4
 3589 001c BD46     	 mov sp,r7
 3590              	.LCFI332:
 3591              	 .cfi_def_cfa_register 13
 3592              	 
 3593 001e 5DF8047B 	 ldr r7,[sp],#4
 3594              	.LCFI333:
 3595              	 .cfi_restore 7
 3596              	 .cfi_def_cfa_offset 0
 3597 0022 7047     	 bx lr
 3598              	.L245:
 3599              	 .align 2
 3600              	.L244:
 3601 0024 00460050 	 .word 1342195200
 3602              	 .cfi_endproc
 3603              	.LFE219:
 3605              	 .section .text.XMC_SCU_CLOCK_SetPeripheralClockDivider,"ax",%progbits
 3606              	 .align 2
 3607              	 .global XMC_SCU_CLOCK_SetPeripheralClockDivider
 3608              	 .thumb
 3609              	 .thumb_func
 3611              	XMC_SCU_CLOCK_SetPeripheralClockDivider:
 3612              	.LFB220:
 984:../Libraries/XMCLib/src/xmc4_scu.c **** 
 985:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fperiph and its parent */
 986:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t divider)
 987:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3613              	 .loc 3 987 0
 3614              	 .cfi_startproc
 3615              	 
 3616              	 
 3617              	 
 3618 0000 80B4     	 push {r7}
 3619              	.LCFI334:
 3620              	 .cfi_def_cfa_offset 4
 3621              	 .cfi_offset 7,-4
 3622 0002 83B0     	 sub sp,sp,#12
 3623              	.LCFI335:
 3624              	 .cfi_def_cfa_offset 16
 3625 0004 00AF     	 add r7,sp,#0
 3626              	.LCFI336:
 3627              	 .cfi_def_cfa_register 7
 3628 0006 7860     	 str r0,[r7,#4]
 988:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetPeripheralClockDivider:Wrong clock divider value", (divider <= 2UL) 
 989:../Libraries/XMCLib/src/xmc4_scu.c **** 
 990:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->PBCLKCR = (SCU_CLK->PBCLKCR & ((uint32_t)~SCU_CLK_PBCLKCR_PBDIV_Msk)) |
 3629              	 .loc 3 990 0
 3630 0008 0649     	 ldr r1,.L247
 3631 000a 064B     	 ldr r3,.L247
 3632 000c 5B69     	 ldr r3,[r3,#20]
 3633 000e 23F00102 	 bic r2,r3,#1
 991:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3634              	 .loc 3 991 0
 3635 0012 7B68     	 ldr r3,[r7,#4]
 3636 0014 013B     	 subs r3,r3,#1
 990:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3637              	 .loc 3 990 0
 3638 0016 1343     	 orrs r3,r3,r2
 3639 0018 4B61     	 str r3,[r1,#20]
 992:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3640              	 .loc 3 992 0
 3641 001a 0C37     	 adds r7,r7,#12
 3642              	.LCFI337:
 3643              	 .cfi_def_cfa_offset 4
 3644 001c BD46     	 mov sp,r7
 3645              	.LCFI338:
 3646              	 .cfi_def_cfa_register 13
 3647              	 
 3648 001e 5DF8047B 	 ldr r7,[sp],#4
 3649              	.LCFI339:
 3650              	 .cfi_restore 7
 3651              	 .cfi_def_cfa_offset 0
 3652 0022 7047     	 bx lr
 3653              	.L248:
 3654              	 .align 2
 3655              	.L247:
 3656 0024 00460050 	 .word 1342195200
 3657              	 .cfi_endproc
 3658              	.LFE220:
 3660              	 .section .text.XMC_SCU_CLOCK_SetUsbClockDivider,"ax",%progbits
 3661              	 .align 2
 3662              	 .global XMC_SCU_CLOCK_SetUsbClockDivider
 3663              	 .thumb
 3664              	 .thumb_func
 3666              	XMC_SCU_CLOCK_SetUsbClockDivider:
 3667              	.LFB221:
 993:../Libraries/XMCLib/src/xmc4_scu.c **** 
 994:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsdmmc and its parent */
 995:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t divider)
 996:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3668              	 .loc 3 996 0
 3669              	 .cfi_startproc
 3670              	 
 3671              	 
 3672              	 
 3673 0000 80B4     	 push {r7}
 3674              	.LCFI340:
 3675              	 .cfi_def_cfa_offset 4
 3676              	 .cfi_offset 7,-4
 3677 0002 83B0     	 sub sp,sp,#12
 3678              	.LCFI341:
 3679              	 .cfi_def_cfa_offset 16
 3680 0004 00AF     	 add r7,sp,#0
 3681              	.LCFI342:
 3682              	 .cfi_def_cfa_register 7
 3683 0006 7860     	 str r0,[r7,#4]
 997:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSdmmcClockDivider:Wrong clock divider value",
 998:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_USBCLKCR_USBDIV_Msk + 1UL)) );
 999:../Libraries/XMCLib/src/xmc4_scu.c **** 
1000:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBDIV_Msk)) |
 3684              	 .loc 3 1000 0
 3685 0008 0649     	 ldr r1,.L250
 3686 000a 064B     	 ldr r3,.L250
 3687 000c 9B69     	 ldr r3,[r3,#24]
 3688 000e 23F00702 	 bic r2,r3,#7
1001:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos); 
 3689              	 .loc 3 1001 0
 3690 0012 7B68     	 ldr r3,[r7,#4]
 3691 0014 013B     	 subs r3,r3,#1
1000:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos); 
 3692              	 .loc 3 1000 0
 3693 0016 1343     	 orrs r3,r3,r2
 3694 0018 8B61     	 str r3,[r1,#24]
1002:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3695              	 .loc 3 1002 0
 3696 001a 0C37     	 adds r7,r7,#12
 3697              	.LCFI343:
 3698              	 .cfi_def_cfa_offset 4
 3699 001c BD46     	 mov sp,r7
 3700              	.LCFI344:
 3701              	 .cfi_def_cfa_register 13
 3702              	 
 3703 001e 5DF8047B 	 ldr r7,[sp],#4
 3704              	.LCFI345:
 3705              	 .cfi_restore 7
 3706              	 .cfi_def_cfa_offset 0
 3707 0022 7047     	 bx lr
 3708              	.L251:
 3709              	 .align 2
 3710              	.L250:
 3711 0024 00460050 	 .word 1342195200
 3712              	 .cfi_endproc
 3713              	.LFE221:
 3715              	 .section .text.XMC_SCU_CLOCK_SetEbuClockDivider,"ax",%progbits
 3716              	 .align 2
 3717              	 .global XMC_SCU_CLOCK_SetEbuClockDivider
 3718              	 .thumb
 3719              	 .thumb_func
 3721              	XMC_SCU_CLOCK_SetEbuClockDivider:
 3722              	.LFB222:
1003:../Libraries/XMCLib/src/xmc4_scu.c **** 
1004:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
1005:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between febu and its parent */
1006:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t divider)
1007:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3723              	 .loc 3 1007 0
 3724              	 .cfi_startproc
 3725              	 
 3726              	 
 3727              	 
 3728 0000 80B4     	 push {r7}
 3729              	.LCFI346:
 3730              	 .cfi_def_cfa_offset 4
 3731              	 .cfi_offset 7,-4
 3732 0002 83B0     	 sub sp,sp,#12
 3733              	.LCFI347:
 3734              	 .cfi_def_cfa_offset 16
 3735 0004 00AF     	 add r7,sp,#0
 3736              	.LCFI348:
 3737              	 .cfi_def_cfa_register 7
 3738 0006 7860     	 str r0,[r7,#4]
1008:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetEbuClockDivider:Wrong clock divider value",
1009:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_EBUCLKCR_EBUDIV_Msk + 1UL) ) );
1010:../Libraries/XMCLib/src/xmc4_scu.c **** 
1011:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EBUCLKCR = (SCU_CLK->EBUCLKCR & ((uint32_t)~SCU_CLK_EBUCLKCR_EBUDIV_Msk)) |
 3739              	 .loc 3 1011 0
 3740 0008 0649     	 ldr r1,.L253
 3741 000a 064B     	 ldr r3,.L253
 3742 000c DB69     	 ldr r3,[r3,#28]
 3743 000e 23F03F02 	 bic r2,r3,#63
1012:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
 3744              	 .loc 3 1012 0
 3745 0012 7B68     	 ldr r3,[r7,#4]
 3746 0014 013B     	 subs r3,r3,#1
1011:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
 3747              	 .loc 3 1011 0
 3748 0016 1343     	 orrs r3,r3,r2
 3749 0018 CB61     	 str r3,[r1,#28]
1013:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3750              	 .loc 3 1013 0
 3751 001a 0C37     	 adds r7,r7,#12
 3752              	.LCFI349:
 3753              	 .cfi_def_cfa_offset 4
 3754 001c BD46     	 mov sp,r7
 3755              	.LCFI350:
 3756              	 .cfi_def_cfa_register 13
 3757              	 
 3758 001e 5DF8047B 	 ldr r7,[sp],#4
 3759              	.LCFI351:
 3760              	 .cfi_restore 7
 3761              	 .cfi_def_cfa_offset 0
 3762 0022 7047     	 bx lr
 3763              	.L254:
 3764              	 .align 2
 3765              	.L253:
 3766 0024 00460050 	 .word 1342195200
 3767              	 .cfi_endproc
 3768              	.LFE222:
 3770              	 .section .text.XMC_SCU_CLOCK_SetWdtClockDivider,"ax",%progbits
 3771              	 .align 2
 3772              	 .global XMC_SCU_CLOCK_SetWdtClockDivider
 3773              	 .thumb
 3774              	 .thumb_func
 3776              	XMC_SCU_CLOCK_SetWdtClockDivider:
 3777              	.LFB223:
1014:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1015:../Libraries/XMCLib/src/xmc4_scu.c **** 
1016:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fwdt and its parent */
1017:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t divider)
1018:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3778              	 .loc 3 1018 0
 3779              	 .cfi_startproc
 3780              	 
 3781              	 
 3782              	 
 3783 0000 80B4     	 push {r7}
 3784              	.LCFI352:
 3785              	 .cfi_def_cfa_offset 4
 3786              	 .cfi_offset 7,-4
 3787 0002 83B0     	 sub sp,sp,#12
 3788              	.LCFI353:
 3789              	 .cfi_def_cfa_offset 16
 3790 0004 00AF     	 add r7,sp,#0
 3791              	.LCFI354:
 3792              	 .cfi_def_cfa_register 7
 3793 0006 7860     	 str r0,[r7,#4]
1019:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetWdtClockDivider:Wrong clock divider value",
1020:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_WDTCLKCR_WDTDIV_Msk + 1UL) ) );
1021:../Libraries/XMCLib/src/xmc4_scu.c **** 
1022:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTDIV_Msk)) |
 3794              	 .loc 3 1022 0
 3795 0008 0649     	 ldr r1,.L256
 3796 000a 064B     	 ldr r3,.L256
 3797 000c 5B6A     	 ldr r3,[r3,#36]
 3798 000e 23F0FF02 	 bic r2,r3,#255
1023:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3799              	 .loc 3 1023 0
 3800 0012 7B68     	 ldr r3,[r7,#4]
 3801 0014 013B     	 subs r3,r3,#1
1022:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3802              	 .loc 3 1022 0
 3803 0016 1343     	 orrs r3,r3,r2
 3804 0018 4B62     	 str r3,[r1,#36]
1024:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3805              	 .loc 3 1024 0
 3806 001a 0C37     	 adds r7,r7,#12
 3807              	.LCFI355:
 3808              	 .cfi_def_cfa_offset 4
 3809 001c BD46     	 mov sp,r7
 3810              	.LCFI356:
 3811              	 .cfi_def_cfa_register 13
 3812              	 
 3813 001e 5DF8047B 	 ldr r7,[sp],#4
 3814              	.LCFI357:
 3815              	 .cfi_restore 7
 3816              	 .cfi_def_cfa_offset 0
 3817 0022 7047     	 bx lr
 3818              	.L257:
 3819              	 .align 2
 3820              	.L256:
 3821 0024 00460050 	 .word 1342195200
 3822              	 .cfi_endproc
 3823              	.LFE223:
 3825              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider,"ax",%progbits
 3826              	 .align 2
 3827              	 .global XMC_SCU_CLOCK_SetExternalOutputClockDivider
 3828              	 .thumb
 3829              	 .thumb_func
 3831              	XMC_SCU_CLOCK_SetExternalOutputClockDivider:
 3832              	.LFB224:
1025:../Libraries/XMCLib/src/xmc4_scu.c **** 
1026:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fext and its parent */
1027:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t divider)
1028:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3833              	 .loc 3 1028 0
 3834              	 .cfi_startproc
 3835              	 
 3836              	 
 3837              	 
 3838 0000 80B4     	 push {r7}
 3839              	.LCFI358:
 3840              	 .cfi_def_cfa_offset 4
 3841              	 .cfi_offset 7,-4
 3842 0002 83B0     	 sub sp,sp,#12
 3843              	.LCFI359:
 3844              	 .cfi_def_cfa_offset 16
 3845 0004 00AF     	 add r7,sp,#0
 3846              	.LCFI360:
 3847              	 .cfi_def_cfa_register 7
 3848 0006 7860     	 str r0,[r7,#4]
1029:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetExternalOutputClockDivider:Wrong clock divider value",
1030:../Libraries/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_EXTCLKCR_ECKDIV_Msk + 1UL) ) );
1031:../Libraries/XMCLib/src/xmc4_scu.c **** 
1032:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKDIV_Msk)) |
 3849              	 .loc 3 1032 0
 3850 0008 0849     	 ldr r1,.L259
 3851 000a 084B     	 ldr r3,.L259
 3852 000c 9B6A     	 ldr r3,[r3,#40]
 3853 000e 23F0FF73 	 bic r3,r3,#33423360
 3854 0012 23F48033 	 bic r3,r3,#65536
1033:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 3855              	 .loc 3 1033 0
 3856 0016 7A68     	 ldr r2,[r7,#4]
 3857 0018 013A     	 subs r2,r2,#1
 3858 001a 1204     	 lsls r2,r2,#16
1032:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 3859              	 .loc 3 1032 0
 3860 001c 1343     	 orrs r3,r3,r2
 3861 001e 8B62     	 str r3,[r1,#40]
1034:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3862              	 .loc 3 1034 0
 3863 0020 0C37     	 adds r7,r7,#12
 3864              	.LCFI361:
 3865              	 .cfi_def_cfa_offset 4
 3866 0022 BD46     	 mov sp,r7
 3867              	.LCFI362:
 3868              	 .cfi_def_cfa_register 13
 3869              	 
 3870 0024 5DF8047B 	 ldr r7,[sp],#4
 3871              	.LCFI363:
 3872              	 .cfi_restore 7
 3873              	 .cfi_def_cfa_offset 0
 3874 0028 7047     	 bx lr
 3875              	.L260:
 3876 002a 00BF     	 .align 2
 3877              	.L259:
 3878 002c 00460050 	 .word 1342195200
 3879              	 .cfi_endproc
 3880              	.LFE224:
 3882              	 .section .text.XMC_SCU_CLOCK_EnableClock,"ax",%progbits
 3883              	 .align 2
 3884              	 .global XMC_SCU_CLOCK_EnableClock
 3885              	 .thumb
 3886              	 .thumb_func
 3888              	XMC_SCU_CLOCK_EnableClock:
 3889              	.LFB225:
1035:../Libraries/XMCLib/src/xmc4_scu.c **** 
1036:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
1037:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the ECAT clock by setting the clock divider for the ECAT clock source */
1038:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider)
1039:../Libraries/XMCLib/src/xmc4_scu.c **** {
1040:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ~SCU_CLK_ECATCLKCR_ECADIV_Msk) |
1041:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_ECATCLKCR_ECADIV_Pos);
1042:../Libraries/XMCLib/src/xmc4_scu.c **** }
1043:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1044:../Libraries/XMCLib/src/xmc4_scu.c **** 
1045:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable a given module clock */
1046:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock)
1047:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3890              	 .loc 3 1047 0
 3891              	 .cfi_startproc
 3892              	 
 3893              	 
 3894              	 
 3895 0000 80B4     	 push {r7}
 3896              	.LCFI364:
 3897              	 .cfi_def_cfa_offset 4
 3898              	 .cfi_offset 7,-4
 3899 0002 83B0     	 sub sp,sp,#12
 3900              	.LCFI365:
 3901              	 .cfi_def_cfa_offset 16
 3902 0004 00AF     	 add r7,sp,#0
 3903              	.LCFI366:
 3904              	 .cfi_def_cfa_register 7
 3905 0006 0346     	 mov r3,r0
 3906 0008 FB71     	 strb r3,[r7,#7]
1048:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKSET = ((uint32_t)clock);
 3907              	 .loc 3 1048 0
 3908 000a 044A     	 ldr r2,.L262
 3909 000c FB79     	 ldrb r3,[r7,#7]
 3910 000e 5360     	 str r3,[r2,#4]
1049:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3911              	 .loc 3 1049 0
 3912 0010 0C37     	 adds r7,r7,#12
 3913              	.LCFI367:
 3914              	 .cfi_def_cfa_offset 4
 3915 0012 BD46     	 mov sp,r7
 3916              	.LCFI368:
 3917              	 .cfi_def_cfa_register 13
 3918              	 
 3919 0014 5DF8047B 	 ldr r7,[sp],#4
 3920              	.LCFI369:
 3921              	 .cfi_restore 7
 3922              	 .cfi_def_cfa_offset 0
 3923 0018 7047     	 bx lr
 3924              	.L263:
 3925 001a 00BF     	 .align 2
 3926              	.L262:
 3927 001c 00460050 	 .word 1342195200
 3928              	 .cfi_endproc
 3929              	.LFE225:
 3931              	 .section .text.XMC_SCU_CLOCK_DisableClock,"ax",%progbits
 3932              	 .align 2
 3933              	 .global XMC_SCU_CLOCK_DisableClock
 3934              	 .thumb
 3935              	 .thumb_func
 3937              	XMC_SCU_CLOCK_DisableClock:
 3938              	.LFB226:
1050:../Libraries/XMCLib/src/xmc4_scu.c **** 
1051:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable a given module clock */
1052:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock)
1053:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3939              	 .loc 3 1053 0
 3940              	 .cfi_startproc
 3941              	 
 3942              	 
 3943              	 
 3944 0000 80B4     	 push {r7}
 3945              	.LCFI370:
 3946              	 .cfi_def_cfa_offset 4
 3947              	 .cfi_offset 7,-4
 3948 0002 83B0     	 sub sp,sp,#12
 3949              	.LCFI371:
 3950              	 .cfi_def_cfa_offset 16
 3951 0004 00AF     	 add r7,sp,#0
 3952              	.LCFI372:
 3953              	 .cfi_def_cfa_register 7
 3954 0006 0346     	 mov r3,r0
 3955 0008 FB71     	 strb r3,[r7,#7]
1054:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKCLR = ((uint32_t)clock);
 3956              	 .loc 3 1054 0
 3957 000a 044A     	 ldr r2,.L265
 3958 000c FB79     	 ldrb r3,[r7,#7]
 3959 000e 9360     	 str r3,[r2,#8]
1055:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3960              	 .loc 3 1055 0
 3961 0010 0C37     	 adds r7,r7,#12
 3962              	.LCFI373:
 3963              	 .cfi_def_cfa_offset 4
 3964 0012 BD46     	 mov sp,r7
 3965              	.LCFI374:
 3966              	 .cfi_def_cfa_register 13
 3967              	 
 3968 0014 5DF8047B 	 ldr r7,[sp],#4
 3969              	.LCFI375:
 3970              	 .cfi_restore 7
 3971              	 .cfi_def_cfa_offset 0
 3972 0018 7047     	 bx lr
 3973              	.L266:
 3974 001a 00BF     	 .align 2
 3975              	.L265:
 3976 001c 00460050 	 .word 1342195200
 3977              	 .cfi_endproc
 3978              	.LFE226:
 3980              	 .section .text.XMC_SCU_CLOCK_IsClockEnabled,"ax",%progbits
 3981              	 .align 2
 3982              	 .global XMC_SCU_CLOCK_IsClockEnabled
 3983              	 .thumb
 3984              	 .thumb_func
 3986              	XMC_SCU_CLOCK_IsClockEnabled:
 3987              	.LFB227:
1056:../Libraries/XMCLib/src/xmc4_scu.c **** 
1057:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if module clock of the given peripheral is enabled */
1058:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock)
1059:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3988              	 .loc 3 1059 0
 3989              	 .cfi_startproc
 3990              	 
 3991              	 
 3992              	 
 3993 0000 80B4     	 push {r7}
 3994              	.LCFI376:
 3995              	 .cfi_def_cfa_offset 4
 3996              	 .cfi_offset 7,-4
 3997 0002 83B0     	 sub sp,sp,#12
 3998              	.LCFI377:
 3999              	 .cfi_def_cfa_offset 16
 4000 0004 00AF     	 add r7,sp,#0
 4001              	.LCFI378:
 4002              	 .cfi_def_cfa_register 7
 4003 0006 0346     	 mov r3,r0
 4004 0008 FB71     	 strb r3,[r7,#7]
1060:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)(SCU_CLK->CLKSTAT & ((uint32_t)clock));
 4005              	 .loc 3 1060 0
 4006 000a 074B     	 ldr r3,.L269
 4007 000c 1A68     	 ldr r2,[r3]
 4008 000e FB79     	 ldrb r3,[r7,#7]
 4009 0010 1340     	 ands r3,r3,r2
 4010 0012 002B     	 cmp r3,#0
 4011 0014 14BF     	 ite ne
 4012 0016 0123     	 movne r3,#1
 4013 0018 0023     	 moveq r3,#0
 4014 001a DBB2     	 uxtb r3,r3
1061:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4015              	 .loc 3 1061 0
 4016 001c 1846     	 mov r0,r3
 4017 001e 0C37     	 adds r7,r7,#12
 4018              	.LCFI379:
 4019              	 .cfi_def_cfa_offset 4
 4020 0020 BD46     	 mov sp,r7
 4021              	.LCFI380:
 4022              	 .cfi_def_cfa_register 13
 4023              	 
 4024 0022 5DF8047B 	 ldr r7,[sp],#4
 4025              	.LCFI381:
 4026              	 .cfi_restore 7
 4027              	 .cfi_def_cfa_offset 0
 4028 0026 7047     	 bx lr
 4029              	.L270:
 4030              	 .align 2
 4031              	.L269:
 4032 0028 00460050 	 .word 1342195200
 4033              	 .cfi_endproc
 4034              	.LFE227:
 4036              	 .section .text.XMC_SCU_POWER_GetEVR13Voltage,"ax",%progbits
 4037              	 .align 2
 4038              	 .global XMC_SCU_POWER_GetEVR13Voltage
 4039              	 .thumb
 4040              	 .thumb_func
 4042              	XMC_SCU_POWER_GetEVR13Voltage:
 4043              	.LFB228:
1062:../Libraries/XMCLib/src/xmc4_scu.c **** 
1063:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(CLOCK_GATING_SUPPORTED)
1064:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to gate a given module clock */
1065:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1066:../Libraries/XMCLib/src/xmc4_scu.c **** {
1067:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (peripheral & 0xf0000000UL) >> 28UL;
1068:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
1069:../Libraries/XMCLib/src/xmc4_scu.c **** 
1070:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)((&(SCU_CLK->CGATSET0)) + (index * 3U)) = (uint32_t)mask;
1071:../Libraries/XMCLib/src/xmc4_scu.c **** }
1072:../Libraries/XMCLib/src/xmc4_scu.c **** 
1073:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1074:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1075:../Libraries/XMCLib/src/xmc4_scu.c **** {
1076:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((peripheral & 0xf0000000UL) >> 28UL);
1077:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
1078:../Libraries/XMCLib/src/xmc4_scu.c **** 
1079:../Libraries/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_CLK->CGATCLR0) + (index * 3U)) = (uint32_t)mask;
1080:../Libraries/XMCLib/src/xmc4_scu.c **** }
1081:../Libraries/XMCLib/src/xmc4_scu.c **** 
1082:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1083:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1084:../Libraries/XMCLib/src/xmc4_scu.c **** {
1085:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = ((peripheral & 0xf0000000UL) >> 28UL);
1086:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
1087:../Libraries/XMCLib/src/xmc4_scu.c **** 
1088:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((*(uint32_t *)(&(SCU_CLK->CGATSTAT0) + (index * 3U)) & mask) != 0U);
1089:../Libraries/XMCLib/src/xmc4_scu.c **** }
1090:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1091:../Libraries/XMCLib/src/xmc4_scu.c **** 
1092:../Libraries/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR13Voltage(void)
1093:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4044              	 .loc 3 1093 0
 4045              	 .cfi_startproc
 4046              	 
 4047              	 
 4048              	 
 4049 0000 80B4     	 push {r7}
 4050              	.LCFI382:
 4051              	 .cfi_def_cfa_offset 4
 4052              	 .cfi_offset 7,-4
 4053 0002 00AF     	 add r7,sp,#0
 4054              	.LCFI383:
 4055              	 .cfi_def_cfa_register 7
1094:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC13V_Msk) * XMC_SCU_POWER_LSB13V;
 4056              	 .loc 3 1094 0
 4057 0004 084B     	 ldr r3,.L273
 4058 0006 5B69     	 ldr r3,[r3,#20]
 4059 0008 DBB2     	 uxtb r3,r3
 4060 000a 07EE903A 	 fmsr s15,r3
 4061 000e F8EE677A 	 fuitos s15,s15
 4062 0012 9FED067A 	 flds s14,.L273+4
 4063 0016 67EE877A 	 fmuls s15,s15,s14
 4064 001a 17EE903A 	 fmrs r3,s15
1095:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4065              	 .loc 3 1095 0
 4066 001e 1846     	 mov r0,r3
 4067 0020 BD46     	 mov sp,r7
 4068              	.LCFI384:
 4069              	 .cfi_def_cfa_register 13
 4070              	 
 4071 0022 5DF8047B 	 ldr r7,[sp],#4
 4072              	.LCFI385:
 4073              	 .cfi_restore 7
 4074              	 .cfi_def_cfa_offset 0
 4075 0026 7047     	 bx lr
 4076              	.L274:
 4077              	 .align 2
 4078              	.L273:
 4079 0028 00420050 	 .word 1342194176
 4080 002c ED0DBE3B 	 .word 1002311149
 4081              	 .cfi_endproc
 4082              	.LFE228:
 4084              	 .section .text.XMC_SCU_POWER_GetEVR33Voltage,"ax",%progbits
 4085              	 .align 2
 4086              	 .global XMC_SCU_POWER_GetEVR33Voltage
 4087              	 .thumb
 4088              	 .thumb_func
 4090              	XMC_SCU_POWER_GetEVR33Voltage:
 4091              	.LFB229:
1096:../Libraries/XMCLib/src/xmc4_scu.c **** 
1097:../Libraries/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR33Voltage(void)
1098:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4092              	 .loc 3 1098 0
 4093              	 .cfi_startproc
 4094              	 
 4095              	 
 4096              	 
 4097 0000 80B4     	 push {r7}
 4098              	.LCFI386:
 4099              	 .cfi_def_cfa_offset 4
 4100              	 .cfi_offset 7,-4
 4101 0002 00AF     	 add r7,sp,#0
 4102              	.LCFI387:
 4103              	 .cfi_def_cfa_register 7
1099:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC33V_Msk) >> SCU_POWER_EVRVADCSTAT_VAD
 4104              	 .loc 3 1099 0
 4105 0004 094B     	 ldr r3,.L277
 4106 0006 5B69     	 ldr r3,[r3,#20]
 4107 0008 03F47F43 	 and r3,r3,#65280
 4108 000c 1B0A     	 lsrs r3,r3,#8
 4109 000e 07EE903A 	 fmsr s15,r3
 4110 0012 F8EE677A 	 fuitos s15,s15
 4111 0016 9FED067A 	 flds s14,.L277+4
 4112 001a 67EE877A 	 fmuls s15,s15,s14
 4113 001e 17EE903A 	 fmrs r3,s15
1100:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4114              	 .loc 3 1100 0
 4115 0022 1846     	 mov r0,r3
 4116 0024 BD46     	 mov sp,r7
 4117              	.LCFI388:
 4118              	 .cfi_def_cfa_register 13
 4119              	 
 4120 0026 5DF8047B 	 ldr r7,[sp],#4
 4121              	.LCFI389:
 4122              	 .cfi_restore 7
 4123              	 .cfi_def_cfa_offset 0
 4124 002a 7047     	 bx lr
 4125              	.L278:
 4126              	 .align 2
 4127              	.L277:
 4128 002c 00420050 	 .word 1342194176
 4129 0030 EC51B83C 	 .word 1018712556
 4130              	 .cfi_endproc
 4131              	.LFE229:
 4133              	 .section .text.XMC_SCU_CLOCK_EnableUsbPll,"ax",%progbits
 4134              	 .align 2
 4135              	 .global XMC_SCU_CLOCK_EnableUsbPll
 4136              	 .thumb
 4137              	 .thumb_func
 4139              	XMC_SCU_CLOCK_EnableUsbPll:
 4140              	.LFB230:
1101:../Libraries/XMCLib/src/xmc4_scu.c **** 
1102:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable USB PLL for USB clock */
1103:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableUsbPll(void)
1104:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4141              	 .loc 3 1104 0
 4142              	 .cfi_startproc
 4143              	 
 4144              	 
 4145              	 
 4146 0000 80B4     	 push {r7}
 4147              	.LCFI390:
 4148              	 .cfi_def_cfa_offset 4
 4149              	 .cfi_offset 7,-4
 4150 0002 00AF     	 add r7,sp,#0
 4151              	.LCFI391:
 4152              	 .cfi_def_cfa_register 7
1105:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4153              	 .loc 3 1105 0
 4154 0004 054A     	 ldr r2,.L280
 4155 0006 054B     	 ldr r3,.L280
 4156 0008 5B69     	 ldr r3,[r3,#20]
 4157 000a 23F48033 	 bic r3,r3,#65536
 4158 000e 23F00203 	 bic r3,r3,#2
 4159 0012 5361     	 str r3,[r2,#20]
1106:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4160              	 .loc 3 1106 0
 4161 0014 BD46     	 mov sp,r7
 4162              	.LCFI392:
 4163              	 .cfi_def_cfa_register 13
 4164              	 
 4165 0016 5DF8047B 	 ldr r7,[sp],#4
 4166              	.LCFI393:
 4167              	 .cfi_restore 7
 4168              	 .cfi_def_cfa_offset 0
 4169 001a 7047     	 bx lr
 4170              	.L281:
 4171              	 .align 2
 4172              	.L280:
 4173 001c 10470050 	 .word 1342195472
 4174              	 .cfi_endproc
 4175              	.LFE230:
 4177              	 .section .text.XMC_SCU_CLOCK_DisableUsbPll,"ax",%progbits
 4178              	 .align 2
 4179              	 .global XMC_SCU_CLOCK_DisableUsbPll
 4180              	 .thumb
 4181              	 .thumb_func
 4183              	XMC_SCU_CLOCK_DisableUsbPll:
 4184              	.LFB231:
1107:../Libraries/XMCLib/src/xmc4_scu.c **** 
1108:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL for USB clock */
1109:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableUsbPll(void)
1110:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4185              	 .loc 3 1110 0
 4186              	 .cfi_startproc
 4187              	 
 4188              	 
 4189              	 
 4190 0000 80B4     	 push {r7}
 4191              	.LCFI394:
 4192              	 .cfi_def_cfa_offset 4
 4193              	 .cfi_offset 7,-4
 4194 0002 00AF     	 add r7,sp,#0
 4195              	.LCFI395:
 4196              	 .cfi_def_cfa_register 7
1111:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4197              	 .loc 3 1111 0
 4198 0004 054A     	 ldr r2,.L283
 4199 0006 054B     	 ldr r3,.L283
 4200 0008 5B69     	 ldr r3,[r3,#20]
 4201 000a 43F48033 	 orr r3,r3,#65536
 4202 000e 43F00203 	 orr r3,r3,#2
 4203 0012 5361     	 str r3,[r2,#20]
1112:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4204              	 .loc 3 1112 0
 4205 0014 BD46     	 mov sp,r7
 4206              	.LCFI396:
 4207              	 .cfi_def_cfa_register 13
 4208              	 
 4209 0016 5DF8047B 	 ldr r7,[sp],#4
 4210              	.LCFI397:
 4211              	 .cfi_restore 7
 4212              	 .cfi_def_cfa_offset 0
 4213 001a 7047     	 bx lr
 4214              	.L284:
 4215              	 .align 2
 4216              	.L283:
 4217 001c 10470050 	 .word 1342195472
 4218              	 .cfi_endproc
 4219              	.LFE231:
 4221              	 .section .text.XMC_SCU_CLOCK_StartUsbPll,"ax",%progbits
 4222              	 .align 2
 4223              	 .global XMC_SCU_CLOCK_StartUsbPll
 4224              	 .thumb
 4225              	 .thumb_func
 4227              	XMC_SCU_CLOCK_StartUsbPll:
 4228              	.LFB232:
1113:../Libraries/XMCLib/src/xmc4_scu.c **** 
1114:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure USB PLL */
1115:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartUsbPll(uint32_t pdiv, uint32_t ndiv)
1116:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4229              	 .loc 3 1116 0
 4230              	 .cfi_startproc
 4231              	 
 4232              	 
 4233              	 
 4234 0000 80B4     	 push {r7}
 4235              	.LCFI398:
 4236              	 .cfi_def_cfa_offset 4
 4237              	 .cfi_offset 7,-4
 4238 0002 83B0     	 sub sp,sp,#12
 4239              	.LCFI399:
 4240              	 .cfi_def_cfa_offset 16
 4241 0004 00AF     	 add r7,sp,#0
 4242              	.LCFI400:
 4243              	 .cfi_def_cfa_register 7
 4244 0006 7860     	 str r0,[r7,#4]
 4245 0008 3960     	 str r1,[r7]
1117:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Go to bypass the USB PLL */
1118:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_VCOBYP_Msk;
 4246              	 .loc 3 1118 0
 4247 000a 194A     	 ldr r2,.L287
 4248 000c 184B     	 ldr r3,.L287
 4249 000e 5B69     	 ldr r3,[r3,#20]
 4250 0010 43F00103 	 orr r3,r3,#1
 4251 0014 5361     	 str r3,[r2,#20]
1119:../Libraries/XMCLib/src/xmc4_scu.c **** 
1120:../Libraries/XMCLib/src/xmc4_scu.c ****   /* disconnect Oscillator from USB PLL */
1121:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_FINDIS_Msk;
 4252              	 .loc 3 1121 0
 4253 0016 164A     	 ldr r2,.L287
 4254 0018 154B     	 ldr r3,.L287
 4255 001a 5B69     	 ldr r3,[r3,#20]
 4256 001c 43F01003 	 orr r3,r3,#16
 4257 0020 5361     	 str r3,[r2,#20]
1122:../Libraries/XMCLib/src/xmc4_scu.c **** 
1123:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Setup Divider settings for USB PLL */
1124:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)((uint32_t)((ndiv -1U) << SCU_PLL_USBPLLCON_NDIV_Pos) |
 4258              	 .loc 3 1124 0
 4259 0022 1349     	 ldr r1,.L287
 4260 0024 3B68     	 ldr r3,[r7]
 4261 0026 013B     	 subs r3,r3,#1
 4262 0028 1A02     	 lsls r2,r3,#8
1125:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4263              	 .loc 3 1125 0
 4264 002a 7B68     	 ldr r3,[r7,#4]
 4265 002c 013B     	 subs r3,r3,#1
 4266 002e 1B06     	 lsls r3,r3,#24
1124:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4267              	 .loc 3 1124 0
 4268 0030 1343     	 orrs r3,r3,r2
 4269 0032 4B61     	 str r3,[r1,#20]
1126:../Libraries/XMCLib/src/xmc4_scu.c **** 
1127:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Set OSCDISCDIS */
1128:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 4270              	 .loc 3 1128 0
 4271 0034 0E4A     	 ldr r2,.L287
 4272 0036 0E4B     	 ldr r3,.L287
 4273 0038 5B69     	 ldr r3,[r3,#20]
 4274 003a 43F04003 	 orr r3,r3,#64
 4275 003e 5361     	 str r3,[r2,#20]
1129:../Libraries/XMCLib/src/xmc4_scu.c **** 
1130:../Libraries/XMCLib/src/xmc4_scu.c ****   /* connect Oscillator to USB PLL */
1131:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~SCU_PLL_USBPLLCON_FINDIS_Msk;
 4276              	 .loc 3 1131 0
 4277 0040 0B4A     	 ldr r2,.L287
 4278 0042 0B4B     	 ldr r3,.L287
 4279 0044 5B69     	 ldr r3,[r3,#20]
 4280 0046 23F01003 	 bic r3,r3,#16
 4281 004a 5361     	 str r3,[r2,#20]
1132:../Libraries/XMCLib/src/xmc4_scu.c **** 
1133:../Libraries/XMCLib/src/xmc4_scu.c ****   /* restart PLL Lock detection */
1134:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_RESLD_Msk;
 4282              	 .loc 3 1134 0
 4283 004c 084A     	 ldr r2,.L287
 4284 004e 084B     	 ldr r3,.L287
 4285 0050 5B69     	 ldr r3,[r3,#20]
 4286 0052 43F48023 	 orr r3,r3,#262144
 4287 0056 5361     	 str r3,[r2,#20]
1135:../Libraries/XMCLib/src/xmc4_scu.c **** 
1136:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 4288              	 .loc 3 1136 0
 4289 0058 00BF     	 nop
 4290              	.L286:
 4291              	 .loc 3 1136 0 is_stmt 0 discriminator 1
 4292 005a 054B     	 ldr r3,.L287
 4293 005c 1B69     	 ldr r3,[r3,#16]
 4294 005e 03F00403 	 and r3,r3,#4
 4295 0062 002B     	 cmp r3,#0
 4296 0064 F9D0     	 beq .L286
1137:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1138:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait for PLL Lock */
1139:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1140:../Libraries/XMCLib/src/xmc4_scu.c **** 
1141:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4297              	 .loc 3 1141 0 is_stmt 1
 4298 0066 0C37     	 adds r7,r7,#12
 4299              	.LCFI401:
 4300              	 .cfi_def_cfa_offset 4
 4301 0068 BD46     	 mov sp,r7
 4302              	.LCFI402:
 4303              	 .cfi_def_cfa_register 13
 4304              	 
 4305 006a 5DF8047B 	 ldr r7,[sp],#4
 4306              	.LCFI403:
 4307              	 .cfi_restore 7
 4308              	 .cfi_def_cfa_offset 0
 4309 006e 7047     	 bx lr
 4310              	.L288:
 4311              	 .align 2
 4312              	.L287:
 4313 0070 10470050 	 .word 1342195472
 4314              	 .cfi_endproc
 4315              	.LFE232:
 4317              	 .section .text.XMC_SCU_CLOCK_StopUsbPll,"ax",%progbits
 4318              	 .align 2
 4319              	 .global XMC_SCU_CLOCK_StopUsbPll
 4320              	 .thumb
 4321              	 .thumb_func
 4323              	XMC_SCU_CLOCK_StopUsbPll:
 4324              	.LFB233:
1142:../Libraries/XMCLib/src/xmc4_scu.c **** 
1143:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL operation */
1144:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopUsbPll(void)
1145:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4325              	 .loc 3 1145 0
 4326              	 .cfi_startproc
 4327              	 
 4328              	 
 4329              	 
 4330 0000 80B4     	 push {r7}
 4331              	.LCFI404:
 4332              	 .cfi_def_cfa_offset 4
 4333              	 .cfi_offset 7,-4
 4334 0002 00AF     	 add r7,sp,#0
 4335              	.LCFI405:
 4336              	 .cfi_def_cfa_register 7
1146:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk |
 4337              	 .loc 3 1146 0
 4338 0004 034B     	 ldr r3,.L290
 4339 0006 044A     	 ldr r2,.L290+4
 4340 0008 5A61     	 str r2,[r3,#20]
1147:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_PLL_USBPLLCON_VCOBYP_Msk);
1148:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4341              	 .loc 3 1148 0
 4342 000a BD46     	 mov sp,r7
 4343              	.LCFI406:
 4344              	 .cfi_def_cfa_register 13
 4345              	 
 4346 000c 5DF8047B 	 ldr r7,[sp],#4
 4347              	.LCFI407:
 4348              	 .cfi_restore 7
 4349              	 .cfi_def_cfa_offset 0
 4350 0010 7047     	 bx lr
 4351              	.L291:
 4352 0012 00BF     	 .align 2
 4353              	.L290:
 4354 0014 10470050 	 .word 1342195472
 4355 0018 03000100 	 .word 65539
 4356              	 .cfi_endproc
 4357              	.LFE233:
 4359              	 .section .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode,"ax",%progbits
 4360              	 .align 2
 4361              	 .global XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 4362              	 .thumb
 4363              	 .thumb_func
 4365              	XMC_SCU_CLOCK_SetBackupClockCalibrationMode:
 4366              	.LFB234:
1149:../Libraries/XMCLib/src/xmc4_scu.c **** 
1150:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to onfigure the calibration mode for internal oscillator */
1151:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetBackupClockCalibrationMode(XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t mode)
1152:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4367              	 .loc 3 1152 0
 4368              	 .cfi_startproc
 4369              	 
 4370              	 
 4371 0000 80B5     	 push {r7,lr}
 4372              	.LCFI408:
 4373              	 .cfi_def_cfa_offset 8
 4374              	 .cfi_offset 7,-8
 4375              	 .cfi_offset 14,-4
 4376 0002 82B0     	 sub sp,sp,#8
 4377              	.LCFI409:
 4378              	 .cfi_def_cfa_offset 16
 4379 0004 00AF     	 add r7,sp,#0
 4380              	.LCFI410:
 4381              	 .cfi_def_cfa_register 7
 4382 0006 0346     	 mov r3,r0
 4383 0008 FB71     	 strb r3,[r7,#7]
1153:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable factory calibration based trimming */
1154:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FOTR_Msk;
 4384              	 .loc 3 1154 0
 4385 000a 0F4A     	 ldr r2,.L294
 4386 000c 0E4B     	 ldr r3,.L294
 4387 000e 5B68     	 ldr r3,[r3,#4]
 4388 0010 43F48013 	 orr r3,r3,#1048576
 4389 0014 5360     	 str r3,[r2,#4]
1155:../Libraries/XMCLib/src/xmc4_scu.c **** 
1156:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC)
 4390              	 .loc 3 1156 0
 4391 0016 FB79     	 ldrb r3,[r7,#7]
 4392 0018 012B     	 cmp r3,#1
 4393 001a 0ED1     	 bne .L293
1157:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1158:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Disable factory calibration based trimming */
1159:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FOTR_Msk;
 4394              	 .loc 3 1159 0
 4395 001c 0A4A     	 ldr r2,.L294
 4396 001e 0A4B     	 ldr r3,.L294
 4397 0020 5B68     	 ldr r3,[r3,#4]
 4398 0022 23F48013 	 bic r3,r3,#1048576
 4399 0026 5360     	 str r3,[r2,#4]
1160:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_lDelay(100UL);
 4400              	 .loc 3 1160 0
 4401 0028 6420     	 movs r0,#100
 4402 002a FFF7FEFF 	 bl XMC_SCU_lDelay
1161:../Libraries/XMCLib/src/xmc4_scu.c **** 
1162:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Enable automatic calibration */
1163:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_AOTREN_Msk;
 4403              	 .loc 3 1163 0
 4404 002e 064A     	 ldr r2,.L294
 4405 0030 054B     	 ldr r3,.L294
 4406 0032 5B68     	 ldr r3,[r3,#4]
 4407 0034 43F40023 	 orr r3,r3,#524288
 4408 0038 5360     	 str r3,[r2,#4]
 4409              	.L293:
1164:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1165:../Libraries/XMCLib/src/xmc4_scu.c **** 
1166:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(100UL);
 4410              	 .loc 3 1166 0
 4411 003a 6420     	 movs r0,#100
 4412 003c FFF7FEFF 	 bl XMC_SCU_lDelay
1167:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4413              	 .loc 3 1167 0
 4414 0040 0837     	 adds r7,r7,#8
 4415              	.LCFI411:
 4416              	 .cfi_def_cfa_offset 8
 4417 0042 BD46     	 mov sp,r7
 4418              	.LCFI412:
 4419              	 .cfi_def_cfa_register 13
 4420              	 
 4421 0044 80BD     	 pop {r7,pc}
 4422              	.L295:
 4423 0046 00BF     	 .align 2
 4424              	.L294:
 4425 0048 10470050 	 .word 1342195472
 4426              	 .cfi_endproc
 4427              	.LFE234:
 4429              	 .section .text.XMC_SCU_POWER_EnableUsb,"ax",%progbits
 4430              	 .align 2
 4431              	 .global XMC_SCU_POWER_EnableUsb
 4432              	 .thumb
 4433              	 .thumb_func
 4435              	XMC_SCU_POWER_EnableUsb:
 4436              	.LFB235:
1168:../Libraries/XMCLib/src/xmc4_scu.c **** 
1169:../Libraries/XMCLib/src/xmc4_scu.c **** 
1170:../Libraries/XMCLib/src/xmc4_scu.c **** 
1171:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable USB Phy and comparator */
1172:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_EnableUsb(void)
1173:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4437              	 .loc 3 1173 0
 4438              	 .cfi_startproc
 4439              	 
 4440              	 
 4441              	 
 4442 0000 80B4     	 push {r7}
 4443              	.LCFI413:
 4444              	 .cfi_def_cfa_offset 4
 4445              	 .cfi_offset 7,-4
 4446 0002 00AF     	 add r7,sp,#0
 4447              	.LCFI414:
 4448              	 .cfi_def_cfa_register 7
1174:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1175:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)(SCU_POWER_PWRSET_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 4449              	 .loc 3 1175 0
 4450 0004 034B     	 ldr r3,.L297
 4451 0006 4FF44032 	 mov r2,#196608
 4452 000a 5A60     	 str r2,[r3,#4]
1176:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1177:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_USBPHYPDQ_Msk;
1178:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1179:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4453              	 .loc 3 1179 0
 4454 000c BD46     	 mov sp,r7
 4455              	.LCFI415:
 4456              	 .cfi_def_cfa_register 13
 4457              	 
 4458 000e 5DF8047B 	 ldr r7,[sp],#4
 4459              	.LCFI416:
 4460              	 .cfi_restore 7
 4461              	 .cfi_def_cfa_offset 0
 4462 0012 7047     	 bx lr
 4463              	.L298:
 4464              	 .align 2
 4465              	.L297:
 4466 0014 00420050 	 .word 1342194176
 4467              	 .cfi_endproc
 4468              	.LFE235:
 4470              	 .section .text.XMC_SCU_POWER_DisableUsb,"ax",%progbits
 4471              	 .align 2
 4472              	 .global XMC_SCU_POWER_DisableUsb
 4473              	 .thumb
 4474              	 .thumb_func
 4476              	XMC_SCU_POWER_DisableUsb:
 4477              	.LFB236:
1180:../Libraries/XMCLib/src/xmc4_scu.c **** 
1181:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power down USB Phy and comparator */
1182:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_DisableUsb(void)
1183:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4478              	 .loc 3 1183 0
 4479              	 .cfi_startproc
 4480              	 
 4481              	 
 4482              	 
 4483 0000 80B4     	 push {r7}
 4484              	.LCFI417:
 4485              	 .cfi_def_cfa_offset 4
 4486              	 .cfi_offset 7,-4
 4487 0002 00AF     	 add r7,sp,#0
 4488              	.LCFI418:
 4489              	 .cfi_def_cfa_register 7
1184:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1185:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)(SCU_POWER_PWRCLR_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 4490              	 .loc 3 1185 0
 4491 0004 034B     	 ldr r3,.L300
 4492 0006 4FF44032 	 mov r2,#196608
 4493 000a 9A60     	 str r2,[r3,#8]
1186:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1187:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_USBPHYPDQ_Msk;
1188:../Libraries/XMCLib/src/xmc4_scu.c **** #endif    
1189:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4494              	 .loc 3 1189 0
 4495 000c BD46     	 mov sp,r7
 4496              	.LCFI419:
 4497              	 .cfi_def_cfa_register 13
 4498              	 
 4499 000e 5DF8047B 	 ldr r7,[sp],#4
 4500              	.LCFI420:
 4501              	 .cfi_restore 7
 4502              	 .cfi_def_cfa_offset 0
 4503 0012 7047     	 bx lr
 4504              	.L301:
 4505              	 .align 2
 4506              	.L300:
 4507 0014 00420050 	 .word 1342194176
 4508              	 .cfi_endproc
 4509              	.LFE236:
 4511              	 .section .text.XMC_SCU_CLOCK_IsUsbPllLocked,"ax",%progbits
 4512              	 .align 2
 4513              	 .global XMC_SCU_CLOCK_IsUsbPllLocked
 4514              	 .thumb
 4515              	 .thumb_func
 4517              	XMC_SCU_CLOCK_IsUsbPllLocked:
 4518              	.LFB237:
1190:../Libraries/XMCLib/src/xmc4_scu.c **** 
1191:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check USB PLL is locked or not */
1192:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsUsbPllLocked(void)
1193:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4519              	 .loc 3 1193 0
 4520              	 .cfi_startproc
 4521              	 
 4522              	 
 4523              	 
 4524 0000 80B4     	 push {r7}
 4525              	.LCFI421:
 4526              	 .cfi_def_cfa_offset 4
 4527              	 .cfi_offset 7,-4
 4528 0002 00AF     	 add r7,sp,#0
 4529              	.LCFI422:
 4530              	 .cfi_def_cfa_register 7
1194:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) != 0UL);
 4531              	 .loc 3 1194 0
 4532 0004 064B     	 ldr r3,.L304
 4533 0006 1B69     	 ldr r3,[r3,#16]
 4534 0008 03F00403 	 and r3,r3,#4
 4535 000c 002B     	 cmp r3,#0
 4536 000e 14BF     	 ite ne
 4537 0010 0123     	 movne r3,#1
 4538 0012 0023     	 moveq r3,#0
 4539 0014 DBB2     	 uxtb r3,r3
1195:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4540              	 .loc 3 1195 0
 4541 0016 1846     	 mov r0,r3
 4542 0018 BD46     	 mov sp,r7
 4543              	.LCFI423:
 4544              	 .cfi_def_cfa_register 13
 4545              	 
 4546 001a 5DF8047B 	 ldr r7,[sp],#4
 4547              	.LCFI424:
 4548              	 .cfi_restore 7
 4549              	 .cfi_def_cfa_offset 0
 4550 001e 7047     	 bx lr
 4551              	.L305:
 4552              	 .align 2
 4553              	.L304:
 4554 0020 10470050 	 .word 1342195472
 4555              	 .cfi_endproc
 4556              	.LFE237:
 4558              	 .section .text.XMC_SCU_HIB_EnableHibernateDomain,"ax",%progbits
 4559              	 .align 2
 4560              	 .global XMC_SCU_HIB_EnableHibernateDomain
 4561              	 .thumb
 4562              	 .thumb_func
 4564              	XMC_SCU_HIB_EnableHibernateDomain:
 4565              	.LFB238:
1196:../Libraries/XMCLib/src/xmc4_scu.c **** 
1197:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power up the hibernation domain */
1198:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableHibernateDomain(void)
1199:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4566              	 .loc 3 1199 0
 4567              	 .cfi_startproc
 4568              	 
 4569              	 
 4570              	 
 4571 0000 80B4     	 push {r7}
 4572              	.LCFI425:
 4573              	 .cfi_def_cfa_offset 4
 4574              	 .cfi_offset 7,-4
 4575 0002 00AF     	 add r7,sp,#0
 4576              	.LCFI426:
 4577              	 .cfi_def_cfa_register 7
1200:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Power up HIB domain if and only if it is currently powered down */
1201:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 4578              	 .loc 3 1201 0
 4579 0004 124B     	 ldr r3,.L311
 4580 0006 1B68     	 ldr r3,[r3]
 4581 0008 03F00103 	 and r3,r3,#1
 4582 000c 002B     	 cmp r3,#0
 4583 000e 09D1     	 bne .L307
1202:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1203:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_HIB_Msk;
 4584              	 .loc 3 1203 0
 4585 0010 0F4B     	 ldr r3,.L311
 4586 0012 0122     	 movs r2,#1
 4587 0014 5A60     	 str r2,[r3,#4]
1204:../Libraries/XMCLib/src/xmc4_scu.c ****     
1205:../Libraries/XMCLib/src/xmc4_scu.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 4588              	 .loc 3 1205 0
 4589 0016 00BF     	 nop
 4590              	.L308:
 4591              	 .loc 3 1205 0 is_stmt 0 discriminator 1
 4592 0018 0D4B     	 ldr r3,.L311
 4593 001a 1B68     	 ldr r3,[r3]
 4594 001c 03F00103 	 and r3,r3,#1
 4595 0020 002B     	 cmp r3,#0
 4596 0022 F9D0     	 beq .L308
 4597              	.L307:
1206:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1207:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1208:../Libraries/XMCLib/src/xmc4_scu.c ****     }    
1209:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1210:../Libraries/XMCLib/src/xmc4_scu.c ****   
1211:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Remove the reset only if HIB domain were in a state of reset */
1212:../Libraries/XMCLib/src/xmc4_scu.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 4598              	 .loc 3 1212 0 is_stmt 1
 4599 0024 0B4B     	 ldr r3,.L311+4
 4600 0026 1B68     	 ldr r3,[r3]
 4601 0028 03F40073 	 and r3,r3,#512
 4602 002c 002B     	 cmp r3,#0
 4603 002e 0AD0     	 beq .L306
1213:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1214:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_HIBRS_Msk;
 4604              	 .loc 3 1214 0
 4605 0030 084B     	 ldr r3,.L311+4
 4606 0032 4FF40072 	 mov r2,#512
 4607 0036 9A60     	 str r2,[r3,#8]
1215:../Libraries/XMCLib/src/xmc4_scu.c ****     while((SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk) != 0UL)
 4608              	 .loc 3 1215 0
 4609 0038 00BF     	 nop
 4610              	.L310:
 4611              	 .loc 3 1215 0 is_stmt 0 discriminator 1
 4612 003a 064B     	 ldr r3,.L311+4
 4613 003c 1B68     	 ldr r3,[r3]
 4614 003e 03F40073 	 and r3,r3,#512
 4615 0042 002B     	 cmp r3,#0
 4616 0044 F9D1     	 bne .L310
 4617              	.L306:
1216:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1217:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1218:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1219:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1220:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4618              	 .loc 3 1220 0 is_stmt 1
 4619 0046 BD46     	 mov sp,r7
 4620              	.LCFI427:
 4621              	 .cfi_def_cfa_register 13
 4622              	 
 4623 0048 5DF8047B 	 ldr r7,[sp],#4
 4624              	.LCFI428:
 4625              	 .cfi_restore 7
 4626              	 .cfi_def_cfa_offset 0
 4627 004c 7047     	 bx lr
 4628              	.L312:
 4629 004e 00BF     	 .align 2
 4630              	.L311:
 4631 0050 00420050 	 .word 1342194176
 4632 0054 00440050 	 .word 1342194688
 4633              	 .cfi_endproc
 4634              	.LFE238:
 4636              	 .section .text.XMC_SCU_HIB_DisableHibernateDomain,"ax",%progbits
 4637              	 .align 2
 4638              	 .global XMC_SCU_HIB_DisableHibernateDomain
 4639              	 .thumb
 4640              	 .thumb_func
 4642              	XMC_SCU_HIB_DisableHibernateDomain:
 4643              	.LFB239:
1221:../Libraries/XMCLib/src/xmc4_scu.c **** 
1222:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power down the hibernation domain */
1223:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableHibernateDomain(void)
1224:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4644              	 .loc 3 1224 0
 4645              	 .cfi_startproc
 4646              	 
 4647              	 
 4648              	 
 4649 0000 80B4     	 push {r7}
 4650              	.LCFI429:
 4651              	 .cfi_def_cfa_offset 4
 4652              	 .cfi_offset 7,-4
 4653 0002 00AF     	 add r7,sp,#0
 4654              	.LCFI430:
 4655              	 .cfi_def_cfa_register 7
1225:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Disable hibernate domain */   
1226:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_HIB_Msk;
 4656              	 .loc 3 1226 0
 4657 0004 054B     	 ldr r3,.L314
 4658 0006 0122     	 movs r2,#1
 4659 0008 9A60     	 str r2,[r3,#8]
1227:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Reset of hibernate domain reset */  
1228:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_RESET->RSTSET = (uint32_t)SCU_RESET_RSTSET_HIBRS_Msk;
 4660              	 .loc 3 1228 0
 4661 000a 054B     	 ldr r3,.L314+4
 4662 000c 4FF40072 	 mov r2,#512
 4663 0010 5A60     	 str r2,[r3,#4]
1229:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4664              	 .loc 3 1229 0
 4665 0012 BD46     	 mov sp,r7
 4666              	.LCFI431:
 4667              	 .cfi_def_cfa_register 13
 4668              	 
 4669 0014 5DF8047B 	 ldr r7,[sp],#4
 4670              	.LCFI432:
 4671              	 .cfi_restore 7
 4672              	 .cfi_def_cfa_offset 0
 4673 0018 7047     	 bx lr
 4674              	.L315:
 4675 001a 00BF     	 .align 2
 4676              	.L314:
 4677 001c 00420050 	 .word 1342194176
 4678 0020 00440050 	 .word 1342194688
 4679              	 .cfi_endproc
 4680              	.LFE239:
 4682              	 .section .text.XMC_SCU_HIB_IsHibernateDomainEnabled,"ax",%progbits
 4683              	 .align 2
 4684              	 .global XMC_SCU_HIB_IsHibernateDomainEnabled
 4685              	 .thumb
 4686              	 .thumb_func
 4688              	XMC_SCU_HIB_IsHibernateDomainEnabled:
 4689              	.LFB240:
1230:../Libraries/XMCLib/src/xmc4_scu.c **** 
1231:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check the hibernation domain is enabled or not */
1232:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HIB_IsHibernateDomainEnabled(void)
1233:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4690              	 .loc 3 1233 0
 4691              	 .cfi_startproc
 4692              	 
 4693              	 
 4694              	 
 4695 0000 80B4     	 push {r7}
 4696              	.LCFI433:
 4697              	 .cfi_def_cfa_offset 4
 4698              	 .cfi_offset 7,-4
 4699 0002 00AF     	 add r7,sp,#0
 4700              	.LCFI434:
 4701              	 .cfi_def_cfa_register 7
1234:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 4702              	 .loc 3 1234 0
 4703 0004 0B4B     	 ldr r3,.L320
 4704 0006 1B68     	 ldr r3,[r3]
 4705 0008 03F00103 	 and r3,r3,#1
 4706 000c 002B     	 cmp r3,#0
 4707 000e 07D0     	 beq .L317
1235:../Libraries/XMCLib/src/xmc4_scu.c ****           !(bool)(SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk));
 4708              	 .loc 3 1235 0 discriminator 1
 4709 0010 094B     	 ldr r3,.L320+4
 4710 0012 1B68     	 ldr r3,[r3]
 4711 0014 03F40073 	 and r3,r3,#512
1234:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 4712              	 .loc 3 1234 0 discriminator 1
 4713 0018 002B     	 cmp r3,#0
 4714 001a 01D1     	 bne .L317
1234:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 4715              	 .loc 3 1234 0 is_stmt 0 discriminator 3
 4716 001c 0123     	 movs r3,#1
 4717 001e 00E0     	 b .L318
 4718              	.L317:
1234:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 4719              	 .loc 3 1234 0 discriminator 4
 4720 0020 0023     	 movs r3,#0
 4721              	.L318:
1234:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 4722              	 .loc 3 1234 0 discriminator 6
 4723 0022 03F00103 	 and r3,r3,#1
 4724 0026 DBB2     	 uxtb r3,r3
1236:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4725              	 .loc 3 1236 0 is_stmt 1 discriminator 6
 4726 0028 1846     	 mov r0,r3
 4727 002a BD46     	 mov sp,r7
 4728              	.LCFI435:
 4729              	 .cfi_def_cfa_register 13
 4730              	 
 4731 002c 5DF8047B 	 ldr r7,[sp],#4
 4732              	.LCFI436:
 4733              	 .cfi_restore 7
 4734              	 .cfi_def_cfa_offset 0
 4735 0030 7047     	 bx lr
 4736              	.L321:
 4737 0032 00BF     	 .align 2
 4738              	.L320:
 4739 0034 00420050 	 .word 1342194176
 4740 0038 00440050 	 .word 1342194688
 4741              	 .cfi_endproc
 4742              	.LFE240:
 4744              	 .section .text.XMC_SCU_HIB_EnableInternalSlowClock,"ax",%progbits
 4745              	 .align 2
 4746              	 .global XMC_SCU_HIB_EnableInternalSlowClock
 4747              	 .thumb
 4748              	 .thumb_func
 4750              	XMC_SCU_HIB_EnableInternalSlowClock:
 4751              	.LFB241:
1237:../Libraries/XMCLib/src/xmc4_scu.c **** 
1238:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1239:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableInternalSlowClock(void)
1240:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4752              	 .loc 3 1240 0
 4753              	 .cfi_startproc
 4754              	 
 4755              	 
 4756              	 
 4757 0000 80B4     	 push {r7}
 4758              	.LCFI437:
 4759              	 .cfi_def_cfa_offset 4
 4760              	 .cfi_offset 7,-4
 4761 0002 00AF     	 add r7,sp,#0
 4762              	.LCFI438:
 4763              	 .cfi_def_cfa_register 7
1241:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 4764              	 .loc 3 1241 0
 4765 0004 00BF     	 nop
 4766              	.L323:
 4767              	 .loc 3 1241 0 is_stmt 0 discriminator 1
 4768 0006 084B     	 ldr r3,.L324
 4769 0008 D3F8C430 	 ldr r3,[r3,#196]
 4770 000c 03F02003 	 and r3,r3,#32
 4771 0010 002B     	 cmp r3,#0
 4772 0012 F8D1     	 bne .L323
1242:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1243:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */  
1244:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1245:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL &= (uint32_t)~(SCU_HIBERNATE_OSCSICTRL_PWD_Msk);
 4773              	 .loc 3 1245 0 is_stmt 1
 4774 0014 054A     	 ldr r2,.L324+4
 4775 0016 054B     	 ldr r3,.L324+4
 4776 0018 5B69     	 ldr r3,[r3,#20]
 4777 001a 23F00103 	 bic r3,r3,#1
 4778 001e 5361     	 str r3,[r2,#20]
1246:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4779              	 .loc 3 1246 0
 4780 0020 BD46     	 mov sp,r7
 4781              	.LCFI439:
 4782              	 .cfi_def_cfa_register 13
 4783              	 
 4784 0022 5DF8047B 	 ldr r7,[sp],#4
 4785              	.LCFI440:
 4786              	 .cfi_restore 7
 4787              	 .cfi_def_cfa_offset 0
 4788 0026 7047     	 bx lr
 4789              	.L325:
 4790              	 .align 2
 4791              	.L324:
 4792 0028 00400050 	 .word 1342193664
 4793 002c 00430050 	 .word 1342194432
 4794              	 .cfi_endproc
 4795              	.LFE241:
 4797              	 .section .text.XMC_SCU_HIB_DisableInternalSlowClock,"ax",%progbits
 4798              	 .align 2
 4799              	 .global XMC_SCU_HIB_DisableInternalSlowClock
 4800              	 .thumb
 4801              	 .thumb_func
 4803              	XMC_SCU_HIB_DisableInternalSlowClock:
 4804              	.LFB242:
1247:../Libraries/XMCLib/src/xmc4_scu.c **** 
1248:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1249:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableInternalSlowClock(void)
1250:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4805              	 .loc 3 1250 0
 4806              	 .cfi_startproc
 4807              	 
 4808              	 
 4809              	 
 4810 0000 80B4     	 push {r7}
 4811              	.LCFI441:
 4812              	 .cfi_def_cfa_offset 4
 4813              	 .cfi_offset 7,-4
 4814 0002 00AF     	 add r7,sp,#0
 4815              	.LCFI442:
 4816              	 .cfi_def_cfa_register 7
1251:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 4817              	 .loc 3 1251 0
 4818 0004 00BF     	 nop
 4819              	.L327:
 4820              	 .loc 3 1251 0 is_stmt 0 discriminator 1
 4821 0006 084B     	 ldr r3,.L328
 4822 0008 D3F8C430 	 ldr r3,[r3,#196]
 4823 000c 03F02003 	 and r3,r3,#32
 4824 0010 002B     	 cmp r3,#0
 4825 0012 F8D1     	 bne .L327
1252:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1253:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */  
1254:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1255:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL |= (uint32_t)SCU_HIBERNATE_OSCSICTRL_PWD_Msk;
 4826              	 .loc 3 1255 0 is_stmt 1
 4827 0014 054A     	 ldr r2,.L328+4
 4828 0016 054B     	 ldr r3,.L328+4
 4829 0018 5B69     	 ldr r3,[r3,#20]
 4830 001a 43F00103 	 orr r3,r3,#1
 4831 001e 5361     	 str r3,[r2,#20]
1256:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4832              	 .loc 3 1256 0
 4833 0020 BD46     	 mov sp,r7
 4834              	.LCFI443:
 4835              	 .cfi_def_cfa_register 13
 4836              	 
 4837 0022 5DF8047B 	 ldr r7,[sp],#4
 4838              	.LCFI444:
 4839              	 .cfi_restore 7
 4840              	 .cfi_def_cfa_offset 0
 4841 0026 7047     	 bx lr
 4842              	.L329:
 4843              	 .align 2
 4844              	.L328:
 4845 0028 00400050 	 .word 1342193664
 4846 002c 00430050 	 .word 1342194432
 4847              	 .cfi_endproc
 4848              	.LFE242:
 4850              	 .section .text.XMC_SCU_HIB_ClearEventStatus,"ax",%progbits
 4851              	 .align 2
 4852              	 .global XMC_SCU_HIB_ClearEventStatus
 4853              	 .thumb
 4854              	 .thumb_func
 4856              	XMC_SCU_HIB_ClearEventStatus:
 4857              	.LFB243:
1257:../Libraries/XMCLib/src/xmc4_scu.c **** 
1258:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_ClearEventStatus(int32_t event)
1259:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4858              	 .loc 3 1259 0
 4859              	 .cfi_startproc
 4860              	 
 4861              	 
 4862              	 
 4863 0000 80B4     	 push {r7}
 4864              	.LCFI445:
 4865              	 .cfi_def_cfa_offset 4
 4866              	 .cfi_offset 7,-4
 4867 0002 83B0     	 sub sp,sp,#12
 4868              	.LCFI446:
 4869              	 .cfi_def_cfa_offset 16
 4870 0004 00AF     	 add r7,sp,#0
 4871              	.LCFI447:
 4872              	 .cfi_def_cfa_register 7
 4873 0006 7860     	 str r0,[r7,#4]
1260:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 4874              	 .loc 3 1260 0
 4875 0008 00BF     	 nop
 4876              	.L331:
 4877              	 .loc 3 1260 0 is_stmt 0 discriminator 1
 4878 000a 074B     	 ldr r3,.L332
 4879 000c D3F8C430 	 ldr r3,[r3,#196]
 4880 0010 03F00203 	 and r3,r3,#2
 4881 0014 002B     	 cmp r3,#0
 4882 0016 F8D1     	 bne .L331
1261:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1262:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCLR register in hibernate domain is ready to accept a write */  
1263:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1264:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = event;
 4883              	 .loc 3 1264 0 is_stmt 1
 4884 0018 044A     	 ldr r2,.L332+4
 4885 001a 7B68     	 ldr r3,[r7,#4]
 4886 001c 5360     	 str r3,[r2,#4]
1265:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4887              	 .loc 3 1265 0
 4888 001e 0C37     	 adds r7,r7,#12
 4889              	.LCFI448:
 4890              	 .cfi_def_cfa_offset 4
 4891 0020 BD46     	 mov sp,r7
 4892              	.LCFI449:
 4893              	 .cfi_def_cfa_register 13
 4894              	 
 4895 0022 5DF8047B 	 ldr r7,[sp],#4
 4896              	.LCFI450:
 4897              	 .cfi_restore 7
 4898              	 .cfi_def_cfa_offset 0
 4899 0026 7047     	 bx lr
 4900              	.L333:
 4901              	 .align 2
 4902              	.L332:
 4903 0028 00400050 	 .word 1342193664
 4904 002c 00430050 	 .word 1342194432
 4905              	 .cfi_endproc
 4906              	.LFE243:
 4908              	 .section .text.XMC_SCU_HIB_TriggerEvent,"ax",%progbits
 4909              	 .align 2
 4910              	 .global XMC_SCU_HIB_TriggerEvent
 4911              	 .thumb
 4912              	 .thumb_func
 4914              	XMC_SCU_HIB_TriggerEvent:
 4915              	.LFB244:
1266:../Libraries/XMCLib/src/xmc4_scu.c **** 
1267:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_TriggerEvent(int32_t event)
1268:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4916              	 .loc 3 1268 0
 4917              	 .cfi_startproc
 4918              	 
 4919              	 
 4920              	 
 4921 0000 80B4     	 push {r7}
 4922              	.LCFI451:
 4923              	 .cfi_def_cfa_offset 4
 4924              	 .cfi_offset 7,-4
 4925 0002 83B0     	 sub sp,sp,#12
 4926              	.LCFI452:
 4927              	 .cfi_def_cfa_offset 16
 4928 0004 00AF     	 add r7,sp,#0
 4929              	.LCFI453:
 4930              	 .cfi_def_cfa_register 7
 4931 0006 7860     	 str r0,[r7,#4]
1269:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDSET_Msk)
 4932              	 .loc 3 1269 0
 4933 0008 00BF     	 nop
 4934              	.L335:
 4935              	 .loc 3 1269 0 is_stmt 0 discriminator 1
 4936 000a 074B     	 ldr r3,.L336
 4937 000c D3F8C430 	 ldr r3,[r3,#196]
 4938 0010 03F00403 	 and r3,r3,#4
 4939 0014 002B     	 cmp r3,#0
 4940 0016 F8D1     	 bne .L335
1270:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1271:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDSET register in hibernate domain is ready to accept a write */    
1272:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1273:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDSET = event;
 4941              	 .loc 3 1273 0 is_stmt 1
 4942 0018 044A     	 ldr r2,.L336+4
 4943 001a 7B68     	 ldr r3,[r7,#4]
 4944 001c 9360     	 str r3,[r2,#8]
1274:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4945              	 .loc 3 1274 0
 4946 001e 0C37     	 adds r7,r7,#12
 4947              	.LCFI454:
 4948              	 .cfi_def_cfa_offset 4
 4949 0020 BD46     	 mov sp,r7
 4950              	.LCFI455:
 4951              	 .cfi_def_cfa_register 13
 4952              	 
 4953 0022 5DF8047B 	 ldr r7,[sp],#4
 4954              	.LCFI456:
 4955              	 .cfi_restore 7
 4956              	 .cfi_def_cfa_offset 0
 4957 0026 7047     	 bx lr
 4958              	.L337:
 4959              	 .align 2
 4960              	.L336:
 4961 0028 00400050 	 .word 1342193664
 4962 002c 00430050 	 .word 1342194432
 4963              	 .cfi_endproc
 4964              	.LFE244:
 4966              	 .section .text.XMC_SCU_HIB_EnableEvent,"ax",%progbits
 4967              	 .align 2
 4968              	 .global XMC_SCU_HIB_EnableEvent
 4969              	 .thumb
 4970              	 .thumb_func
 4972              	XMC_SCU_HIB_EnableEvent:
 4973              	.LFB245:
1275:../Libraries/XMCLib/src/xmc4_scu.c **** 
1276:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableEvent(int32_t event)
1277:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4974              	 .loc 3 1277 0
 4975              	 .cfi_startproc
 4976              	 
 4977              	 
 4978              	 
 4979 0000 80B4     	 push {r7}
 4980              	.LCFI457:
 4981              	 .cfi_def_cfa_offset 4
 4982              	 .cfi_offset 7,-4
 4983 0002 83B0     	 sub sp,sp,#12
 4984              	.LCFI458:
 4985              	 .cfi_def_cfa_offset 16
 4986 0004 00AF     	 add r7,sp,#0
 4987              	.LCFI459:
 4988              	 .cfi_def_cfa_register 7
 4989 0006 7860     	 str r0,[r7,#4]
1278:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
1280:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
1281:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
1282:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
1283:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1284:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1285:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1286:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1287:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1288:../Libraries/XMCLib/src/xmc4_scu.c **** 
1289:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 4990              	 .loc 3 1289 0
 4991 0008 00BF     	 nop
 4992              	.L339:
 4993              	 .loc 3 1289 0 is_stmt 0 discriminator 1
 4994 000a 094B     	 ldr r3,.L340
 4995 000c D3F8C430 	 ldr r3,[r3,#196]
 4996 0010 03F00803 	 and r3,r3,#8
 4997 0014 002B     	 cmp r3,#0
 4998 0016 F8D1     	 bne .L339
1290:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1291:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1292:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1293:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= event;
 4999              	 .loc 3 1293 0 is_stmt 1
 5000 0018 0649     	 ldr r1,.L340+4
 5001 001a 064B     	 ldr r3,.L340+4
 5002 001c DA68     	 ldr r2,[r3,#12]
 5003 001e 7B68     	 ldr r3,[r7,#4]
 5004 0020 1343     	 orrs r3,r3,r2
 5005 0022 CB60     	 str r3,[r1,#12]
1294:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5006              	 .loc 3 1294 0
 5007 0024 0C37     	 adds r7,r7,#12
 5008              	.LCFI460:
 5009              	 .cfi_def_cfa_offset 4
 5010 0026 BD46     	 mov sp,r7
 5011              	.LCFI461:
 5012              	 .cfi_def_cfa_register 13
 5013              	 
 5014 0028 5DF8047B 	 ldr r7,[sp],#4
 5015              	.LCFI462:
 5016              	 .cfi_restore 7
 5017              	 .cfi_def_cfa_offset 0
 5018 002c 7047     	 bx lr
 5019              	.L341:
 5020 002e 00BF     	 .align 2
 5021              	.L340:
 5022 0030 00400050 	 .word 1342193664
 5023 0034 00430050 	 .word 1342194432
 5024              	 .cfi_endproc
 5025              	.LFE245:
 5027              	 .section .text.XMC_SCU_HIB_DisableEvent,"ax",%progbits
 5028              	 .align 2
 5029              	 .global XMC_SCU_HIB_DisableEvent
 5030              	 .thumb
 5031              	 .thumb_func
 5033              	XMC_SCU_HIB_DisableEvent:
 5034              	.LFB246:
1295:../Libraries/XMCLib/src/xmc4_scu.c **** 
1296:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableEvent(int32_t event)
1297:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5035              	 .loc 3 1297 0
 5036              	 .cfi_startproc
 5037              	 
 5038              	 
 5039              	 
 5040 0000 80B4     	 push {r7}
 5041              	.LCFI463:
 5042              	 .cfi_def_cfa_offset 4
 5043              	 .cfi_offset 7,-4
 5044 0002 83B0     	 sub sp,sp,#12
 5045              	.LCFI464:
 5046              	 .cfi_def_cfa_offset 16
 5047 0004 00AF     	 add r7,sp,#0
 5048              	.LCFI465:
 5049              	 .cfi_def_cfa_register 7
 5050 0006 7860     	 str r0,[r7,#4]
1298:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1299:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
1300:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
1301:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
1302:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
1303:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1304:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1305:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1306:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1307:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1308:../Libraries/XMCLib/src/xmc4_scu.c **** 
1309:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5051              	 .loc 3 1309 0
 5052 0008 00BF     	 nop
 5053              	.L343:
 5054              	 .loc 3 1309 0 is_stmt 0 discriminator 1
 5055 000a 094B     	 ldr r3,.L344
 5056 000c D3F8C430 	 ldr r3,[r3,#196]
 5057 0010 03F00803 	 and r3,r3,#8
 5058 0014 002B     	 cmp r3,#0
 5059 0016 F8D1     	 bne .L343
1310:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1311:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1312:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1313:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR &= ~event;
 5060              	 .loc 3 1313 0 is_stmt 1
 5061 0018 0649     	 ldr r1,.L344+4
 5062 001a 064B     	 ldr r3,.L344+4
 5063 001c DB68     	 ldr r3,[r3,#12]
 5064 001e 7A68     	 ldr r2,[r7,#4]
 5065 0020 D243     	 mvns r2,r2
 5066 0022 1340     	 ands r3,r3,r2
 5067 0024 CB60     	 str r3,[r1,#12]
1314:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5068              	 .loc 3 1314 0
 5069 0026 0C37     	 adds r7,r7,#12
 5070              	.LCFI466:
 5071              	 .cfi_def_cfa_offset 4
 5072 0028 BD46     	 mov sp,r7
 5073              	.LCFI467:
 5074              	 .cfi_def_cfa_register 13
 5075              	 
 5076 002a 5DF8047B 	 ldr r7,[sp],#4
 5077              	.LCFI468:
 5078              	 .cfi_restore 7
 5079              	 .cfi_def_cfa_offset 0
 5080 002e 7047     	 bx lr
 5081              	.L345:
 5082              	 .align 2
 5083              	.L344:
 5084 0030 00400050 	 .word 1342193664
 5085 0034 00430050 	 .word 1342194432
 5086              	 .cfi_endproc
 5087              	.LFE246:
 5089              	 .section .text.XMC_SCU_HIB_EnterHibernateState,"ax",%progbits
 5090              	 .align 2
 5091              	 .global XMC_SCU_HIB_EnterHibernateState
 5092              	 .thumb
 5093              	 .thumb_func
 5095              	XMC_SCU_HIB_EnterHibernateState:
 5096              	.LFB247:
1315:../Libraries/XMCLib/src/xmc4_scu.c **** 
1316:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateState(void) 
1317:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5097              	 .loc 3 1317 0
 5098              	 .cfi_startproc
 5099              	 
 5100              	 
 5101              	 
 5102 0000 80B4     	 push {r7}
 5103              	.LCFI469:
 5104              	 .cfi_def_cfa_offset 4
 5105              	 .cfi_offset 7,-4
 5106 0002 00AF     	 add r7,sp,#0
 5107              	.LCFI470:
 5108              	 .cfi_def_cfa_register 7
1318:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5109              	 .loc 3 1318 0
 5110 0004 00BF     	 nop
 5111              	.L347:
 5112              	 .loc 3 1318 0 is_stmt 0 discriminator 1
 5113 0006 084B     	 ldr r3,.L348
 5114 0008 D3F8C430 	 ldr r3,[r3,#196]
 5115 000c 03F00803 	 and r3,r3,#8
 5116 0010 002B     	 cmp r3,#0
 5117 0012 F8D1     	 bne .L347
1319:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1320:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1321:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1322:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_HIB_Msk;
 5118              	 .loc 3 1322 0 is_stmt 1
 5119 0014 054A     	 ldr r2,.L348+4
 5120 0016 054B     	 ldr r3,.L348+4
 5121 0018 DB68     	 ldr r3,[r3,#12]
 5122 001a 43F01003 	 orr r3,r3,#16
 5123 001e D360     	 str r3,[r2,#12]
1323:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5124              	 .loc 3 1323 0
 5125 0020 BD46     	 mov sp,r7
 5126              	.LCFI471:
 5127              	 .cfi_def_cfa_register 13
 5128              	 
 5129 0022 5DF8047B 	 ldr r7,[sp],#4
 5130              	.LCFI472:
 5131              	 .cfi_restore 7
 5132              	 .cfi_def_cfa_offset 0
 5133 0026 7047     	 bx lr
 5134              	.L349:
 5135              	 .align 2
 5136              	.L348:
 5137 0028 00400050 	 .word 1342193664
 5138 002c 00430050 	 .word 1342194432
 5139              	 .cfi_endproc
 5140              	.LFE247:
 5142              	 .section .text.XMC_SCU_HIB_EnterHibernateStateEx,"ax",%progbits
 5143              	 .align 2
 5144              	 .global XMC_SCU_HIB_EnterHibernateStateEx
 5145              	 .thumb
 5146              	 .thumb_func
 5148              	XMC_SCU_HIB_EnterHibernateStateEx:
 5149              	.LFB248:
1324:../Libraries/XMCLib/src/xmc4_scu.c **** 
1325:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateStateEx(XMC_SCU_HIB_HIBERNATE_MODE_t mode)
1326:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5150              	 .loc 3 1326 0
 5151              	 .cfi_startproc
 5152              	 
 5153              	 
 5154 0000 80B5     	 push {r7,lr}
 5155              	.LCFI473:
 5156              	 .cfi_def_cfa_offset 8
 5157              	 .cfi_offset 7,-8
 5158              	 .cfi_offset 14,-4
 5159 0002 82B0     	 sub sp,sp,#8
 5160              	.LCFI474:
 5161              	 .cfi_def_cfa_offset 16
 5162 0004 00AF     	 add r7,sp,#0
 5163              	.LCFI475:
 5164              	 .cfi_def_cfa_register 7
 5165 0006 0346     	 mov r3,r0
 5166 0008 FB71     	 strb r3,[r7,#7]
1327:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL)
 5167              	 .loc 3 1327 0
 5168 000a FB79     	 ldrb r3,[r7,#7]
 5169 000c 002B     	 cmp r3,#0
 5170 000e 01D1     	 bne .L350
1328:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1329:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_HIB_EnterHibernateState();
 5171              	 .loc 3 1329 0
 5172 0010 FFF7FEFF 	 bl XMC_SCU_HIB_EnterHibernateState
 5173              	.L350:
1330:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1331:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1332:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL)
1333:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1334:../Libraries/XMCLib/src/xmc4_scu.c ****     while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HINTSET_Msk)
1335:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1336:../Libraries/XMCLib/src/xmc4_scu.c ****       /* Wait until HDCR register in hibernate domain is ready to accept a write */
1337:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1338:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HINTSET = SCU_HIBERNATE_HINTSET_HIBNINT_Msk;
1339:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1340:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1341:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5174              	 .loc 3 1341 0
 5175 0014 0837     	 adds r7,r7,#8
 5176              	.LCFI476:
 5177              	 .cfi_def_cfa_offset 8
 5178 0016 BD46     	 mov sp,r7
 5179              	.LCFI477:
 5180              	 .cfi_def_cfa_register 13
 5181              	 
 5182 0018 80BD     	 pop {r7,pc}
 5183              	 .cfi_endproc
 5184              	.LFE248:
 5186 001a 00BF     	 .section .text.XMC_SCU_HIB_SetWakeupTriggerInput,"ax",%progbits
 5187              	 .align 2
 5188              	 .global XMC_SCU_HIB_SetWakeupTriggerInput
 5189              	 .thumb
 5190              	 .thumb_func
 5192              	XMC_SCU_HIB_SetWakeupTriggerInput:
 5193              	.LFB249:
1342:../Libraries/XMCLib/src/xmc4_scu.c **** 
1343:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetWakeupTriggerInput(XMC_SCU_HIB_IO_t pin)
1344:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5194              	 .loc 3 1344 0
 5195              	 .cfi_startproc
 5196              	 
 5197              	 
 5198              	 
 5199 0000 80B4     	 push {r7}
 5200              	.LCFI478:
 5201              	 .cfi_def_cfa_offset 4
 5202              	 .cfi_offset 7,-4
 5203 0002 83B0     	 sub sp,sp,#12
 5204              	.LCFI479:
 5205              	 .cfi_def_cfa_offset 16
 5206 0004 00AF     	 add r7,sp,#0
 5207              	.LCFI480:
 5208              	 .cfi_def_cfa_register 7
 5209 0006 0346     	 mov r3,r0
 5210 0008 FB71     	 strb r3,[r7,#7]
1345:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5211              	 .loc 3 1345 0
 5212 000a 00BF     	 nop
 5213              	.L353:
 5214              	 .loc 3 1345 0 is_stmt 0 discriminator 1
 5215 000c 0D4B     	 ldr r3,.L356
 5216 000e D3F8C430 	 ldr r3,[r3,#196]
 5217 0012 03F00803 	 and r3,r3,#8
 5218 0016 002B     	 cmp r3,#0
 5219 0018 F8D1     	 bne .L353
1346:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1347:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1348:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1349:../Libraries/XMCLib/src/xmc4_scu.c **** 
1350:../Libraries/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5220              	 .loc 3 1350 0 is_stmt 1
 5221 001a FB79     	 ldrb r3,[r7,#7]
 5222 001c 002B     	 cmp r3,#0
 5223 001e 06D1     	 bne .L354
1351:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1352:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_WKUPSEL_Msk;
 5224              	 .loc 3 1352 0
 5225 0020 094A     	 ldr r2,.L356+4
 5226 0022 094B     	 ldr r3,.L356+4
 5227 0024 DB68     	 ldr r3,[r3,#12]
 5228 0026 43F48073 	 orr r3,r3,#256
 5229 002a D360     	 str r3,[r2,#12]
 5230 002c 05E0     	 b .L352
 5231              	.L354:
1353:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1354:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1355:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1356:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_WKUPSEL_Msk; 
 5232              	 .loc 3 1356 0
 5233 002e 064A     	 ldr r2,.L356+4
 5234 0030 054B     	 ldr r3,.L356+4
 5235 0032 DB68     	 ldr r3,[r3,#12]
 5236 0034 23F48073 	 bic r3,r3,#256
 5237 0038 D360     	 str r3,[r2,#12]
 5238              	.L352:
1357:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1358:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5239              	 .loc 3 1358 0
 5240 003a 0C37     	 adds r7,r7,#12
 5241              	.LCFI481:
 5242              	 .cfi_def_cfa_offset 4
 5243 003c BD46     	 mov sp,r7
 5244              	.LCFI482:
 5245              	 .cfi_def_cfa_register 13
 5246              	 
 5247 003e 5DF8047B 	 ldr r7,[sp],#4
 5248              	.LCFI483:
 5249              	 .cfi_restore 7
 5250              	 .cfi_def_cfa_offset 0
 5251 0042 7047     	 bx lr
 5252              	.L357:
 5253              	 .align 2
 5254              	.L356:
 5255 0044 00400050 	 .word 1342193664
 5256 0048 00430050 	 .word 1342194432
 5257              	 .cfi_endproc
 5258              	.LFE249:
 5260              	 .section .text.XMC_SCU_HIB_SetPinMode,"ax",%progbits
 5261              	 .align 2
 5262              	 .global XMC_SCU_HIB_SetPinMode
 5263              	 .thumb
 5264              	 .thumb_func
 5266              	XMC_SCU_HIB_SetPinMode:
 5267              	.LFB250:
1359:../Libraries/XMCLib/src/xmc4_scu.c **** 
1360:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinMode(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_PIN_MODE_t mode)
1361:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5268              	 .loc 3 1361 0
 5269              	 .cfi_startproc
 5270              	 
 5271              	 
 5272              	 
 5273 0000 80B4     	 push {r7}
 5274              	.LCFI484:
 5275              	 .cfi_def_cfa_offset 4
 5276              	 .cfi_offset 7,-4
 5277 0002 83B0     	 sub sp,sp,#12
 5278              	.LCFI485:
 5279              	 .cfi_def_cfa_offset 16
 5280 0004 00AF     	 add r7,sp,#0
 5281              	.LCFI486:
 5282              	 .cfi_def_cfa_register 7
 5283 0006 0346     	 mov r3,r0
 5284 0008 3960     	 str r1,[r7]
 5285 000a FB71     	 strb r3,[r7,#7]
1362:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5286              	 .loc 3 1362 0
 5287 000c 00BF     	 nop
 5288              	.L359:
 5289              	 .loc 3 1362 0 is_stmt 0 discriminator 1
 5290 000e 0F4B     	 ldr r3,.L360
 5291 0010 D3F8C430 	 ldr r3,[r3,#196]
 5292 0014 03F00803 	 and r3,r3,#8
 5293 0018 002B     	 cmp r3,#0
 5294 001a F8D1     	 bne .L359
1363:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1364:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1365:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1366:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0SEL_Msk << (SCU_HIBERNATE
 5295              	 .loc 3 1366 0 is_stmt 1
 5296 001c 0C49     	 ldr r1,.L360+4
 5297 001e 0C4B     	 ldr r3,.L360+4
 5298 0020 DA68     	 ldr r2,[r3,#12]
 5299 0022 FB79     	 ldrb r3,[r7,#7]
 5300 0024 9B00     	 lsls r3,r3,#2
 5301 0026 1846     	 mov r0,r3
 5302 0028 4FF47023 	 mov r3,#983040
 5303 002c 8340     	 lsls r3,r3,r0
 5304 002e DB43     	 mvns r3,r3
 5305 0030 1A40     	 ands r2,r2,r3
1367:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5306              	 .loc 3 1367 0
 5307 0032 FB79     	 ldrb r3,[r7,#7]
 5308 0034 9B00     	 lsls r3,r3,#2
1366:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5309              	 .loc 3 1366 0
 5310 0036 1846     	 mov r0,r3
 5311              	 .loc 3 1367 0
 5312 0038 3B68     	 ldr r3,[r7]
 5313 003a 8340     	 lsls r3,r3,r0
1366:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5314              	 .loc 3 1366 0
 5315 003c 1343     	 orrs r3,r3,r2
 5316 003e CB60     	 str r3,[r1,#12]
1368:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5317              	 .loc 3 1368 0
 5318 0040 0C37     	 adds r7,r7,#12
 5319              	.LCFI487:
 5320              	 .cfi_def_cfa_offset 4
 5321 0042 BD46     	 mov sp,r7
 5322              	.LCFI488:
 5323              	 .cfi_def_cfa_register 13
 5324              	 
 5325 0044 5DF8047B 	 ldr r7,[sp],#4
 5326              	.LCFI489:
 5327              	 .cfi_restore 7
 5328              	 .cfi_def_cfa_offset 0
 5329 0048 7047     	 bx lr
 5330              	.L361:
 5331 004a 00BF     	 .align 2
 5332              	.L360:
 5333 004c 00400050 	 .word 1342193664
 5334 0050 00430050 	 .word 1342194432
 5335              	 .cfi_endproc
 5336              	.LFE250:
 5338              	 .section .text.XMC_SCU_HIB_SetPinOutputLevel,"ax",%progbits
 5339              	 .align 2
 5340              	 .global XMC_SCU_HIB_SetPinOutputLevel
 5341              	 .thumb
 5342              	 .thumb_func
 5344              	XMC_SCU_HIB_SetPinOutputLevel:
 5345              	.LFB251:
1369:../Libraries/XMCLib/src/xmc4_scu.c **** 
1370:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinOutputLevel(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_IO_OUTPUT_LEVEL_t level)
1371:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5346              	 .loc 3 1371 0
 5347              	 .cfi_startproc
 5348              	 
 5349              	 
 5350              	 
 5351 0000 80B4     	 push {r7}
 5352              	.LCFI490:
 5353              	 .cfi_def_cfa_offset 4
 5354              	 .cfi_offset 7,-4
 5355 0002 83B0     	 sub sp,sp,#12
 5356              	.LCFI491:
 5357              	 .cfi_def_cfa_offset 16
 5358 0004 00AF     	 add r7,sp,#0
 5359              	.LCFI492:
 5360              	 .cfi_def_cfa_register 7
 5361 0006 0346     	 mov r3,r0
 5362 0008 0A46     	 mov r2,r1
 5363 000a FB71     	 strb r3,[r7,#7]
 5364 000c 1346     	 mov r3,r2
 5365 000e BB80     	 strh r3,[r7,#4]
1372:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5366              	 .loc 3 1372 0
 5367 0010 00BF     	 nop
 5368              	.L363:
 5369              	 .loc 3 1372 0 is_stmt 0 discriminator 1
 5370 0012 0E4B     	 ldr r3,.L364
 5371 0014 D3F8C430 	 ldr r3,[r3,#196]
 5372 0018 03F00803 	 and r3,r3,#8
 5373 001c 002B     	 cmp r3,#0
 5374 001e F8D1     	 bne .L363
1373:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1374:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1375:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1376:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0POL_Msk << pin)) |
 5375              	 .loc 3 1376 0 is_stmt 1
 5376 0020 0B48     	 ldr r0,.L364+4
 5377 0022 0B4B     	 ldr r3,.L364+4
 5378 0024 DA68     	 ldr r2,[r3,#12]
 5379 0026 FB79     	 ldrb r3,[r7,#7]
 5380 0028 4FF48051 	 mov r1,#4096
 5381 002c 01FA03F3 	 lsl r3,r1,r3
 5382 0030 DB43     	 mvns r3,r3
 5383 0032 1340     	 ands r3,r3,r2
1377:../Libraries/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5384              	 .loc 3 1377 0
 5385 0034 B988     	 ldrh r1,[r7,#4]
 5386 0036 FA79     	 ldrb r2,[r7,#7]
 5387 0038 01FA02F2 	 lsl r2,r1,r2
1376:../Libraries/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5388              	 .loc 3 1376 0
 5389 003c 1343     	 orrs r3,r3,r2
 5390 003e C360     	 str r3,[r0,#12]
1378:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5391              	 .loc 3 1378 0
 5392 0040 0C37     	 adds r7,r7,#12
 5393              	.LCFI493:
 5394              	 .cfi_def_cfa_offset 4
 5395 0042 BD46     	 mov sp,r7
 5396              	.LCFI494:
 5397              	 .cfi_def_cfa_register 13
 5398              	 
 5399 0044 5DF8047B 	 ldr r7,[sp],#4
 5400              	.LCFI495:
 5401              	 .cfi_restore 7
 5402              	 .cfi_def_cfa_offset 0
 5403 0048 7047     	 bx lr
 5404              	.L365:
 5405 004a 00BF     	 .align 2
 5406              	.L364:
 5407 004c 00400050 	 .word 1342193664
 5408 0050 00430050 	 .word 1342194432
 5409              	 .cfi_endproc
 5410              	.LFE251:
 5412              	 .section .text.XMC_SCU_HIB_SetInput0,"ax",%progbits
 5413              	 .align 2
 5414              	 .global XMC_SCU_HIB_SetInput0
 5415              	 .thumb
 5416              	 .thumb_func
 5418              	XMC_SCU_HIB_SetInput0:
 5419              	.LFB252:
1379:../Libraries/XMCLib/src/xmc4_scu.c **** 
1380:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetInput0(XMC_SCU_HIB_IO_t pin)
1381:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5420              	 .loc 3 1381 0
 5421              	 .cfi_startproc
 5422              	 
 5423              	 
 5424              	 
 5425 0000 80B4     	 push {r7}
 5426              	.LCFI496:
 5427              	 .cfi_def_cfa_offset 4
 5428              	 .cfi_offset 7,-4
 5429 0002 83B0     	 sub sp,sp,#12
 5430              	.LCFI497:
 5431              	 .cfi_def_cfa_offset 16
 5432 0004 00AF     	 add r7,sp,#0
 5433              	.LCFI498:
 5434              	 .cfi_def_cfa_register 7
 5435 0006 0346     	 mov r3,r0
 5436 0008 FB71     	 strb r3,[r7,#7]
1382:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5437              	 .loc 3 1382 0
 5438 000a 00BF     	 nop
 5439              	.L367:
 5440              	 .loc 3 1382 0 is_stmt 0 discriminator 1
 5441 000c 0D4B     	 ldr r3,.L370
 5442 000e D3F8C430 	 ldr r3,[r3,#196]
 5443 0012 03F00803 	 and r3,r3,#8
 5444 0016 002B     	 cmp r3,#0
 5445 0018 F8D1     	 bne .L367
1383:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1384:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1385:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1386:../Libraries/XMCLib/src/xmc4_scu.c **** 
1387:../Libraries/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5446              	 .loc 3 1387 0 is_stmt 1
 5447 001a FB79     	 ldrb r3,[r7,#7]
 5448 001c 002B     	 cmp r3,#0
 5449 001e 06D1     	 bne .L368
1388:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1389:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_GPI0SEL_Msk;
 5450              	 .loc 3 1389 0
 5451 0020 094A     	 ldr r2,.L370+4
 5452 0022 094B     	 ldr r3,.L370+4
 5453 0024 DB68     	 ldr r3,[r3,#12]
 5454 0026 43F48063 	 orr r3,r3,#1024
 5455 002a D360     	 str r3,[r2,#12]
 5456 002c 05E0     	 b .L366
 5457              	.L368:
1390:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1391:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1392:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1393:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_GPI0SEL_Msk; 
 5458              	 .loc 3 1393 0
 5459 002e 064A     	 ldr r2,.L370+4
 5460 0030 054B     	 ldr r3,.L370+4
 5461 0032 DB68     	 ldr r3,[r3,#12]
 5462 0034 23F48063 	 bic r3,r3,#1024
 5463 0038 D360     	 str r3,[r2,#12]
 5464              	.L366:
1394:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1395:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5465              	 .loc 3 1395 0
 5466 003a 0C37     	 adds r7,r7,#12
 5467              	.LCFI499:
 5468              	 .cfi_def_cfa_offset 4
 5469 003c BD46     	 mov sp,r7
 5470              	.LCFI500:
 5471              	 .cfi_def_cfa_register 13
 5472              	 
 5473 003e 5DF8047B 	 ldr r7,[sp],#4
 5474              	.LCFI501:
 5475              	 .cfi_restore 7
 5476              	 .cfi_def_cfa_offset 0
 5477 0042 7047     	 bx lr
 5478              	.L371:
 5479              	 .align 2
 5480              	.L370:
 5481 0044 00400050 	 .word 1342193664
 5482 0048 00430050 	 .word 1342194432
 5483              	 .cfi_endproc
 5484              	.LFE252:
 5486              	 .section .text.XMC_SCU_HIB_SetSR0Input,"ax",%progbits
 5487              	 .align 2
 5488              	 .global XMC_SCU_HIB_SetSR0Input
 5489              	 .thumb
 5490              	 .thumb_func
 5492              	XMC_SCU_HIB_SetSR0Input:
 5493              	.LFB253:
1396:../Libraries/XMCLib/src/xmc4_scu.c **** 
1397:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR0Input(XMC_SCU_HIB_SR0_INPUT_t input)
1398:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5494              	 .loc 3 1398 0
 5495              	 .cfi_startproc
 5496              	 
 5497              	 
 5498              	 
 5499 0000 80B4     	 push {r7}
 5500              	.LCFI502:
 5501              	 .cfi_def_cfa_offset 4
 5502              	 .cfi_offset 7,-4
 5503 0002 83B0     	 sub sp,sp,#12
 5504              	.LCFI503:
 5505              	 .cfi_def_cfa_offset 16
 5506 0004 00AF     	 add r7,sp,#0
 5507              	.LCFI504:
 5508              	 .cfi_def_cfa_register 7
 5509 0006 0346     	 mov r3,r0
 5510 0008 FB80     	 strh r3,[r7,#6]
1399:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5511              	 .loc 3 1399 0
 5512 000a 00BF     	 nop
 5513              	.L373:
 5514              	 .loc 3 1399 0 is_stmt 0 discriminator 1
 5515 000c 094B     	 ldr r3,.L374
 5516 000e D3F8C430 	 ldr r3,[r3,#196]
 5517 0012 03F00803 	 and r3,r3,#8
 5518 0016 002B     	 cmp r3,#0
 5519 0018 F8D1     	 bne .L373
1400:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1401:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1402:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1403:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1404:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk | SCU_HIB
1405:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1406:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk)) | 
 5520              	 .loc 3 1406 0 is_stmt 1
 5521 001a 0749     	 ldr r1,.L374+4
 5522 001c 064B     	 ldr r3,.L374+4
 5523 001e DB68     	 ldr r3,[r3,#12]
 5524 0020 23F48062 	 bic r2,r3,#1024
 5525 0024 FB88     	 ldrh r3,[r7,#6]
 5526 0026 1343     	 orrs r3,r3,r2
 5527 0028 CB60     	 str r3,[r1,#12]
1407:../Libraries/XMCLib/src/xmc4_scu.c **** #endif  
1408:../Libraries/XMCLib/src/xmc4_scu.c ****                         input;
1409:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5528              	 .loc 3 1409 0
 5529 002a 0C37     	 adds r7,r7,#12
 5530              	.LCFI505:
 5531              	 .cfi_def_cfa_offset 4
 5532 002c BD46     	 mov sp,r7
 5533              	.LCFI506:
 5534              	 .cfi_def_cfa_register 13
 5535              	 
 5536 002e 5DF8047B 	 ldr r7,[sp],#4
 5537              	.LCFI507:
 5538              	 .cfi_restore 7
 5539              	 .cfi_def_cfa_offset 0
 5540 0032 7047     	 bx lr
 5541              	.L375:
 5542              	 .align 2
 5543              	.L374:
 5544 0034 00400050 	 .word 1342193664
 5545 0038 00430050 	 .word 1342194432
 5546              	 .cfi_endproc
 5547              	.LFE253:
 5549              	 .section .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable,"ax",%progbits
 5550              	 .align 2
 5551              	 .global XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 5552              	 .thumb
 5553              	 .thumb_func
 5555              	XMC_SCU_CLOCK_IsLowPowerOscillatorStable:
 5556              	.LFB254:
1410:../Libraries/XMCLib/src/xmc4_scu.c **** 
1411:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1412:../Libraries/XMCLib/src/xmc4_scu.c **** 
1413:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1414:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR1Input(XMC_SCU_HIB_SR1_INPUT_t input)
1415:../Libraries/XMCLib/src/xmc4_scu.c **** {
1416:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
1417:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1418:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1419:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1420:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk | SCU_HIB
1421:../Libraries/XMCLib/src/xmc4_scu.c ****                         input;
1422:../Libraries/XMCLib/src/xmc4_scu.c **** }
1423:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1424:../Libraries/XMCLib/src/xmc4_scu.c **** 
1425:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetInput(XMC_SCU_HIB_LPAC_INPUT_t input)
1426:../Libraries/XMCLib/src/xmc4_scu.c **** {
1427:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1428:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1429:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1430:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1431:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_CMPEN_Msk
1432:../Libraries/XMCLib/src/xmc4_scu.c ****                             input;
1433:../Libraries/XMCLib/src/xmc4_scu.c **** }
1434:../Libraries/XMCLib/src/xmc4_scu.c **** 
1435:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTrigger(XMC_SCU_HIB_LPAC_TRIGGER_t trigger)
1436:../Libraries/XMCLib/src/xmc4_scu.c **** {
1437:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1438:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1439:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1440:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1441:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_TRIGSEL_M
1442:../Libraries/XMCLib/src/xmc4_scu.c ****                             trigger;
1443:../Libraries/XMCLib/src/xmc4_scu.c **** }
1444:../Libraries/XMCLib/src/xmc4_scu.c **** 
1445:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTiming(bool enable_delay, uint16_t interval_count, uint8_t settle_count)
1446:../Libraries/XMCLib/src/xmc4_scu.c **** {
1447:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t config = 0;
1448:../Libraries/XMCLib/src/xmc4_scu.c **** 
1449:../Libraries/XMCLib/src/xmc4_scu.c ****   if (enable_delay)
1450:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1451:../Libraries/XMCLib/src/xmc4_scu.c ****     config = SCU_HIBERNATE_LPACCONF_CONVDEL_Msk;
1452:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1453:../Libraries/XMCLib/src/xmc4_scu.c **** 
1454:../Libraries/XMCLib/src/xmc4_scu.c ****   config |= interval_count << SCU_HIBERNATE_LPACCONF_INTERVCNT_Pos;
1455:../Libraries/XMCLib/src/xmc4_scu.c ****   config |= settle_count << SCU_HIBERNATE_LPACCONF_SETTLECNT_Pos;
1456:../Libraries/XMCLib/src/xmc4_scu.c **** 
1457:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1458:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1459:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1460:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1461:../Libraries/XMCLib/src/xmc4_scu.c **** 
1462:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~(SCU_HIBERNATE_LPACCONF_CONVDEL_
1463:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_INTERVCN
1464:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_SETTLECN
1465:../Libraries/XMCLib/src/xmc4_scu.c ****                             config;
1466:../Libraries/XMCLib/src/xmc4_scu.c **** 
1467:../Libraries/XMCLib/src/xmc4_scu.c **** }
1468:../Libraries/XMCLib/src/xmc4_scu.c **** 
1469:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetVBATThresholds(uint8_t lower, uint8_t upper)
1470:../Libraries/XMCLib/src/xmc4_scu.c **** {
1471:../Libraries/XMCLib/src/xmc4_scu.c **** 
1472:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH0_Msk)
1473:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1474:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1475:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1476:../Libraries/XMCLib/src/xmc4_scu.c **** 
1477:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH0 = (lower << SCU_HIBERNATE_LPACTH0_VBATLO_Pos) | (upper << SCU_HIBERNATE_LP
1478:../Libraries/XMCLib/src/xmc4_scu.c **** 
1479:../Libraries/XMCLib/src/xmc4_scu.c **** 
1480:../Libraries/XMCLib/src/xmc4_scu.c **** 
1481:../Libraries/XMCLib/src/xmc4_scu.c **** }
1482:../Libraries/XMCLib/src/xmc4_scu.c **** 
1483:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds(uint8_t lower, uint8_t upper)
1484:../Libraries/XMCLib/src/xmc4_scu.c **** {
1485:../Libraries/XMCLib/src/xmc4_scu.c **** 
1486:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1487:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1488:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1489:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1490:../Libraries/XMCLib/src/xmc4_scu.c **** 
1491:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Ms
1492:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
1493:../Libraries/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO0HI_Pos);
1494:../Libraries/XMCLib/src/xmc4_scu.c **** 
1495:../Libraries/XMCLib/src/xmc4_scu.c **** }
1496:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1497:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds(uint8_t lower, uint8_t upper)
1498:../Libraries/XMCLib/src/xmc4_scu.c **** {
1499:../Libraries/XMCLib/src/xmc4_scu.c **** 
1500:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1501:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1502:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1503:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1504:../Libraries/XMCLib/src/xmc4_scu.c **** 
1505:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Ms
1506:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Pos) |
1507:../Libraries/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO1HI_Pos);
1508:../Libraries/XMCLib/src/xmc4_scu.c **** 
1509:../Libraries/XMCLib/src/xmc4_scu.c **** }
1510:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1511:../Libraries/XMCLib/src/xmc4_scu.c **** int32_t XMC_SCU_HIB_LPAC_GetStatus(void)
1512:../Libraries/XMCLib/src/xmc4_scu.c **** {
1513:../Libraries/XMCLib/src/xmc4_scu.c ****   return SCU_HIBERNATE->LPACST;
1514:../Libraries/XMCLib/src/xmc4_scu.c **** }
1515:../Libraries/XMCLib/src/xmc4_scu.c **** 
1516:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_ClearStatus(int32_t status)
1517:../Libraries/XMCLib/src/xmc4_scu.c **** {
1518:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCLR_Msk)
1519:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1520:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACCLR register in hibernate domain is ready to accept a write */
1521:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1522:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCLR = status;;
1523:../Libraries/XMCLib/src/xmc4_scu.c **** }
1524:../Libraries/XMCLib/src/xmc4_scu.c **** 
1525:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_TriggerCompare(XMC_SCU_HIB_LPAC_INPUT_t input)
1526:../Libraries/XMCLib/src/xmc4_scu.c **** {
1527:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACSET_Msk)
1528:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1529:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACSET register in hibernate domain is ready to accept a write */
1530:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1531:../Libraries/XMCLib/src/xmc4_scu.c **** 
1532:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACSET = input;
1533:../Libraries/XMCLib/src/xmc4_scu.c **** }
1534:../Libraries/XMCLib/src/xmc4_scu.c **** 
1535:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1536:../Libraries/XMCLib/src/xmc4_scu.c **** 
1537:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void)
1538:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5557              	 .loc 3 1538 0
 5558              	 .cfi_startproc
 5559              	 
 5560              	 
 5561              	 
 5562 0000 80B4     	 push {r7}
 5563              	.LCFI508:
 5564              	 .cfi_def_cfa_offset 4
 5565              	 .cfi_offset 7,-4
 5566 0002 00AF     	 add r7,sp,#0
 5567              	.LCFI509:
 5568              	 .cfi_def_cfa_register 7
1539:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) == 0UL);
 5569              	 .loc 3 1539 0
 5570 0004 064B     	 ldr r3,.L378
 5571 0006 1B68     	 ldr r3,[r3]
 5572 0008 03F00803 	 and r3,r3,#8
 5573 000c 002B     	 cmp r3,#0
 5574 000e 0CBF     	 ite eq
 5575 0010 0123     	 moveq r3,#1
 5576 0012 0023     	 movne r3,#0
 5577 0014 DBB2     	 uxtb r3,r3
1540:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5578              	 .loc 3 1540 0
 5579 0016 1846     	 mov r0,r3
 5580 0018 BD46     	 mov sp,r7
 5581              	.LCFI510:
 5582              	 .cfi_def_cfa_register 13
 5583              	 
 5584 001a 5DF8047B 	 ldr r7,[sp],#4
 5585              	.LCFI511:
 5586              	 .cfi_restore 7
 5587              	 .cfi_def_cfa_offset 0
 5588 001e 7047     	 bx lr
 5589              	.L379:
 5590              	 .align 2
 5591              	.L378:
 5592 0020 00430050 	 .word 1342194432
 5593              	 .cfi_endproc
 5594              	.LFE254:
 5596              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillator,"ax",%progbits
 5597              	 .align 2
 5598              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillator
 5599              	 .thumb
 5600              	 .thumb_func
 5602              	XMC_SCU_CLOCK_EnableLowPowerOscillator:
 5603              	.LFB255:
1541:../Libraries/XMCLib/src/xmc4_scu.c **** 
1542:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1543:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void)
1544:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5604              	 .loc 3 1544 0
 5605              	 .cfi_startproc
 5606              	 
 5607              	 
 5608              	 
 5609 0000 80B4     	 push {r7}
 5610              	.LCFI512:
 5611              	 .cfi_def_cfa_offset 4
 5612              	 .cfi_offset 7,-4
 5613 0002 00AF     	 add r7,sp,#0
 5614              	.LCFI513:
 5615              	 .cfi_def_cfa_register 7
1545:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable OSC_ULP */
1546:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 5616              	 .loc 3 1546 0
 5617 0004 00BF     	 nop
 5618              	.L381:
 5619              	 .loc 3 1546 0 is_stmt 0 discriminator 1
 5620 0006 154B     	 ldr r3,.L384
 5621 0008 D3F8C430 	 ldr r3,[r3,#196]
 5622 000c 03F08003 	 and r3,r3,#128
 5623 0010 002B     	 cmp r3,#0
 5624 0012 F8D1     	 bne .L381
1547:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1548:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until the update of OSCULCTRL register in hibernate domain is completed */
1549:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1550:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 5625              	 .loc 3 1550 0 is_stmt 1
 5626 0014 124A     	 ldr r2,.L384+4
 5627 0016 124B     	 ldr r3,.L384+4
 5628 0018 DB69     	 ldr r3,[r3,#28]
 5629 001a 23F03003 	 bic r3,r3,#48
 5630 001e D361     	 str r3,[r2,#28]
1551:../Libraries/XMCLib/src/xmc4_scu.c **** 
1552:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable OSC_ULP Oscillator Watchdog*/
1553:../Libraries/XMCLib/src/xmc4_scu.c ****   while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5631              	 .loc 3 1553 0
 5632 0020 00BF     	 nop
 5633              	.L382:
 5634              	 .loc 3 1553 0 is_stmt 0 discriminator 1
 5635 0022 0E4B     	 ldr r3,.L384
 5636 0024 D3F8C430 	 ldr r3,[r3,#196]
 5637 0028 03F00803 	 and r3,r3,#8
 5638 002c 002B     	 cmp r3,#0
 5639 002e F8D1     	 bne .L382
1554:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1555:../Libraries/XMCLib/src/xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
1556:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1557:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= (uint32_t)SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 5640              	 .loc 3 1557 0 is_stmt 1
 5641 0030 0B4A     	 ldr r2,.L384+4
 5642 0032 0B4B     	 ldr r3,.L384+4
 5643 0034 DB68     	 ldr r3,[r3,#12]
 5644 0036 43F00803 	 orr r3,r3,#8
 5645 003a D360     	 str r3,[r2,#12]
1558:../Libraries/XMCLib/src/xmc4_scu.c **** 
1559:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable OSC_ULP Oscillator Watchdog*/
1560:../Libraries/XMCLib/src/xmc4_scu.c ****   while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDSET_Msk)
 5646              	 .loc 3 1560 0
 5647 003c 00BF     	 nop
 5648              	.L383:
 5649              	 .loc 3 1560 0 is_stmt 0 discriminator 1
 5650 003e 074B     	 ldr r3,.L384
 5651 0040 D3F8C430 	 ldr r3,[r3,#196]
 5652 0044 03F00403 	 and r3,r3,#4
 5653 0048 002B     	 cmp r3,#0
 5654 004a F8D1     	 bne .L383
1561:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1562:../Libraries/XMCLib/src/xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
1563:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1564:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDSET = (uint32_t)SCU_HIBERNATE_HDSET_ULPWDG_Msk;
 5655              	 .loc 3 1564 0 is_stmt 1
 5656 004c 044B     	 ldr r3,.L384+4
 5657 004e 0822     	 movs r2,#8
 5658 0050 9A60     	 str r2,[r3,#8]
1565:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5659              	 .loc 3 1565 0
 5660 0052 BD46     	 mov sp,r7
 5661              	.LCFI514:
 5662              	 .cfi_def_cfa_register 13
 5663              	 
 5664 0054 5DF8047B 	 ldr r7,[sp],#4
 5665              	.LCFI515:
 5666              	 .cfi_restore 7
 5667              	 .cfi_def_cfa_offset 0
 5668 0058 7047     	 bx lr
 5669              	.L385:
 5670 005a 00BF     	 .align 2
 5671              	.L384:
 5672 005c 00400050 	 .word 1342193664
 5673 0060 00430050 	 .word 1342194432
 5674              	 .cfi_endproc
 5675              	.LFE255:
 5677              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillator,"ax",%progbits
 5678              	 .align 2
 5679              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillator
 5680              	 .thumb
 5681              	 .thumb_func
 5683              	XMC_SCU_CLOCK_DisableLowPowerOscillator:
 5684              	.LFB256:
1566:../Libraries/XMCLib/src/xmc4_scu.c **** 
1567:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1568:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void)
1569:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5685              	 .loc 3 1569 0
 5686              	 .cfi_startproc
 5687              	 
 5688              	 
 5689              	 
 5690 0000 80B4     	 push {r7}
 5691              	.LCFI516:
 5692              	 .cfi_def_cfa_offset 4
 5693              	 .cfi_offset 7,-4
 5694 0002 00AF     	 add r7,sp,#0
 5695              	.LCFI517:
 5696              	 .cfi_def_cfa_register 7
1570:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 5697              	 .loc 3 1570 0
 5698 0004 00BF     	 nop
 5699              	.L387:
 5700              	 .loc 3 1570 0 is_stmt 0 discriminator 1
 5701 0006 084B     	 ldr r3,.L388
 5702 0008 D3F8C430 	 ldr r3,[r3,#196]
 5703 000c 03F08003 	 and r3,r3,#128
 5704 0010 002B     	 cmp r3,#0
 5705 0012 F8D1     	 bne .L387
1571:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1572:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1573:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1574:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= (uint32_t)SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 5706              	 .loc 3 1574 0 is_stmt 1
 5707 0014 054A     	 ldr r2,.L388+4
 5708 0016 054B     	 ldr r3,.L388+4
 5709 0018 DB69     	 ldr r3,[r3,#28]
 5710 001a 43F03003 	 orr r3,r3,#48
 5711 001e D361     	 str r3,[r2,#28]
1575:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5712              	 .loc 3 1575 0
 5713 0020 BD46     	 mov sp,r7
 5714              	.LCFI518:
 5715              	 .cfi_def_cfa_register 13
 5716              	 
 5717 0022 5DF8047B 	 ldr r7,[sp],#4
 5718              	.LCFI519:
 5719              	 .cfi_restore 7
 5720              	 .cfi_def_cfa_offset 0
 5721 0026 7047     	 bx lr
 5722              	.L389:
 5723              	 .align 2
 5724              	.L388:
 5725 0028 00400050 	 .word 1342193664
 5726 002c 00430050 	 .word 1342194432
 5727              	 .cfi_endproc
 5728              	.LFE256:
 5730              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 5731              	 .align 2
 5732              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
 5733              	 .thumb
 5734              	 .thumb_func
 5736              	XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:
 5737              	.LFB257:
1576:../Libraries/XMCLib/src/xmc4_scu.c **** 
1577:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void)
1578:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5738              	 .loc 3 1578 0
 5739              	 .cfi_startproc
 5740              	 
 5741              	 
 5742              	 
 5743 0000 80B4     	 push {r7}
 5744              	.LCFI520:
 5745              	 .cfi_def_cfa_offset 4
 5746              	 .cfi_offset 7,-4
 5747 0002 00AF     	 add r7,sp,#0
 5748              	.LCFI521:
 5749              	 .cfi_def_cfa_register 7
1579:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 5750              	 .loc 3 1579 0
 5751 0004 00BF     	 nop
 5752              	.L391:
 5753              	 .loc 3 1579 0 is_stmt 0 discriminator 1
 5754 0006 084B     	 ldr r3,.L392
 5755 0008 D3F8C430 	 ldr r3,[r3,#196]
 5756 000c 03F08003 	 and r3,r3,#128
 5757 0010 002B     	 cmp r3,#0
 5758 0012 F8D1     	 bne .L391
1580:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1581:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1582:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1583:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= SCU_HIBERNATE_OSCULCTRL_X1DEN_Msk | SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 5759              	 .loc 3 1583 0 is_stmt 1
 5760 0014 054A     	 ldr r2,.L392+4
 5761 0016 054B     	 ldr r3,.L392+4
 5762 0018 DB69     	 ldr r3,[r3,#28]
 5763 001a 43F03103 	 orr r3,r3,#49
 5764 001e D361     	 str r3,[r2,#28]
1584:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5765              	 .loc 3 1584 0
 5766 0020 BD46     	 mov sp,r7
 5767              	.LCFI522:
 5768              	 .cfi_def_cfa_register 13
 5769              	 
 5770 0022 5DF8047B 	 ldr r7,[sp],#4
 5771              	.LCFI523:
 5772              	 .cfi_restore 7
 5773              	 .cfi_def_cfa_offset 0
 5774 0026 7047     	 bx lr
 5775              	.L393:
 5776              	 .align 2
 5777              	.L392:
 5778 0028 00400050 	 .word 1342193664
 5779 002c 00430050 	 .word 1342194432
 5780              	 .cfi_endproc
 5781              	.LFE257:
 5783              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 5784              	 .align 2
 5785              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
 5786              	 .thumb
 5787              	 .thumb_func
 5789              	XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:
 5790              	.LFB258:
1585:../Libraries/XMCLib/src/xmc4_scu.c **** 
1586:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void)
1587:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5791              	 .loc 3 1587 0
 5792              	 .cfi_startproc
 5793              	 
 5794              	 
 5795              	 
 5796 0000 80B4     	 push {r7}
 5797              	.LCFI524:
 5798              	 .cfi_def_cfa_offset 4
 5799              	 .cfi_offset 7,-4
 5800 0002 00AF     	 add r7,sp,#0
 5801              	.LCFI525:
 5802              	 .cfi_def_cfa_register 7
1588:../Libraries/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 5803              	 .loc 3 1588 0
 5804 0004 00BF     	 nop
 5805              	.L395:
 5806              	 .loc 3 1588 0 is_stmt 0 discriminator 1
 5807 0006 094B     	 ldr r3,.L396
 5808 0008 D3F8C430 	 ldr r3,[r3,#196]
 5809 000c 03F08003 	 and r3,r3,#128
 5810 0010 002B     	 cmp r3,#0
 5811 0012 F8D1     	 bne .L395
1589:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1590:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1591:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1592:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL = (SCU_HIBERNATE->OSCULCTRL & ~(uint32_t)(SCU_HIBERNATE_OSCULCTRL_X1DEN_
 5812              	 .loc 3 1592 0 is_stmt 1
 5813 0014 064A     	 ldr r2,.L396+4
 5814 0016 064B     	 ldr r3,.L396+4
 5815 0018 DB69     	 ldr r3,[r3,#28]
 5816 001a 23F03103 	 bic r3,r3,#49
 5817 001e 43F02003 	 orr r3,r3,#32
 5818 0022 D361     	 str r3,[r2,#28]
1593:../Libraries/XMCLib/src/xmc4_scu.c ****                              (SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN << SCU_HIBERNATE_OSCULCTR
1594:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5819              	 .loc 3 1594 0
 5820 0024 BD46     	 mov sp,r7
 5821              	.LCFI526:
 5822              	 .cfi_def_cfa_register 13
 5823              	 
 5824 0026 5DF8047B 	 ldr r7,[sp],#4
 5825              	.LCFI527:
 5826              	 .cfi_restore 7
 5827              	 .cfi_def_cfa_offset 0
 5828 002a 7047     	 bx lr
 5829              	.L397:
 5830              	 .align 2
 5831              	.L396:
 5832 002c 00400050 	 .word 1342193664
 5833 0030 00430050 	 .word 1342194432
 5834              	 .cfi_endproc
 5835              	.LFE258:
 5837              	 .section .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus,"ax",%progbits
 5838              	 .align 2
 5839              	 .global XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
 5840              	 .thumb
 5841              	 .thumb_func
 5843              	XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:
 5844              	.LFB259:
1595:../Libraries/XMCLib/src/xmc4_scu.c **** 
1596:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void)
1597:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5845              	 .loc 3 1597 0
 5846              	 .cfi_startproc
 5847              	 
 5848              	 
 5849              	 
 5850 0000 80B4     	 push {r7}
 5851              	.LCFI528:
 5852              	 .cfi_def_cfa_offset 4
 5853              	 .cfi_offset 7,-4
 5854 0002 00AF     	 add r7,sp,#0
 5855              	.LCFI529:
 5856              	 .cfi_def_cfa_register 7
1598:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_HIBERNATE->OSCULSTAT & SCU_HIBERNATE_OSCULSTAT_X1D_Msk);
 5857              	 .loc 3 1598 0
 5858 0004 044B     	 ldr r3,.L400
 5859 0006 9B69     	 ldr r3,[r3,#24]
 5860 0008 03F00103 	 and r3,r3,#1
1599:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5861              	 .loc 3 1599 0
 5862 000c 1846     	 mov r0,r3
 5863 000e BD46     	 mov sp,r7
 5864              	.LCFI530:
 5865              	 .cfi_def_cfa_register 13
 5866              	 
 5867 0010 5DF8047B 	 ldr r7,[sp],#4
 5868              	.LCFI531:
 5869              	 .cfi_restore 7
 5870              	 .cfi_def_cfa_offset 0
 5871 0014 7047     	 bx lr
 5872              	.L401:
 5873 0016 00BF     	 .align 2
 5874              	.L400:
 5875 0018 00430050 	 .word 1342194432
 5876              	 .cfi_endproc
 5877              	.LFE259:
 5879              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator,"ax",%progbits
 5880              	 .align 2
 5881              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 5882              	 .thumb
 5883              	 .thumb_func
 5885              	XMC_SCU_CLOCK_EnableHighPerformanceOscillator:
 5886              	.LFB260:
1600:../Libraries/XMCLib/src/xmc4_scu.c **** 
1601:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable High Precision High Speed oscillator */
1602:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void)
1603:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5887              	 .loc 3 1603 0
 5888              	 .cfi_startproc
 5889              	 
 5890              	 
 5891 0000 B0B5     	 push {r4,r5,r7,lr}
 5892              	.LCFI532:
 5893              	 .cfi_def_cfa_offset 16
 5894              	 .cfi_offset 4,-16
 5895              	 .cfi_offset 5,-12
 5896              	 .cfi_offset 7,-8
 5897              	 .cfi_offset 14,-4
 5898 0002 00AF     	 add r7,sp,#0
 5899              	.LCFI533:
 5900              	 .cfi_def_cfa_register 7
1604:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_PLLPWD_Msk;
 5901              	 .loc 3 1604 0
 5902 0004 0F4A     	 ldr r2,.L403
 5903 0006 0F4B     	 ldr r3,.L403
 5904 0008 5B68     	 ldr r3,[r3,#4]
 5905 000a 23F48033 	 bic r3,r3,#65536
 5906 000e 5360     	 str r3,[r2,#4]
1605:../Libraries/XMCLib/src/xmc4_scu.c **** 
1606:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL = (uint32_t)((SCU_OSC->OSCHPCTRL & ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCH
 5907              	 .loc 3 1606 0
 5908 0010 0D4D     	 ldr r5,.L403+4
 5909 0012 0D4B     	 ldr r3,.L403+4
 5910 0014 5B68     	 ldr r3,[r3,#4]
 5911 0016 23F47024 	 bic r4,r3,#983040
 5912 001a 24F03004 	 bic r4,r4,#48
1607:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 5913              	 .loc 3 1607 0
 5914 001e FFF7FEFF 	 bl OSCHP_GetFrequency
 5915 0022 0246     	 mov r2,r0
 5916 0024 094B     	 ldr r3,.L403+8
 5917 0026 A3FB0223 	 umull r2,r3,r3,r2
 5918 002a 1B0D     	 lsrs r3,r3,#20
 5919 002c 013B     	 subs r3,r3,#1
 5920 002e 1B04     	 lsls r3,r3,#16
1606:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 5921              	 .loc 3 1606 0
 5922 0030 2343     	 orrs r3,r3,r4
 5923 0032 6B60     	 str r3,[r5,#4]
1608:../Libraries/XMCLib/src/xmc4_scu.c **** 
1609:../Libraries/XMCLib/src/xmc4_scu.c ****   /* restart OSC Watchdog */
1610:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_OSCRES_Msk;
 5924              	 .loc 3 1610 0
 5925 0034 034A     	 ldr r2,.L403
 5926 0036 034B     	 ldr r3,.L403
 5927 0038 5B68     	 ldr r3,[r3,#4]
 5928 003a 23F40033 	 bic r3,r3,#131072
 5929 003e 5360     	 str r3,[r2,#4]
1611:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5930              	 .loc 3 1611 0
 5931 0040 B0BD     	 pop {r4,r5,r7,pc}
 5932              	.L404:
 5933 0042 00BF     	 .align 2
 5934              	.L403:
 5935 0044 10470050 	 .word 1342195472
 5936 0048 00470050 	 .word 1342195456
 5937 004c 6BCA5F6B 	 .word 1801439851
 5938              	 .cfi_endproc
 5939              	.LFE260:
 5941              	 .section .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable,"ax",%progbits
 5942              	 .align 2
 5943              	 .global XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 5944              	 .thumb
 5945              	 .thumb_func
 5947              	XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:
 5948              	.LFB261:
1612:../Libraries/XMCLib/src/xmc4_scu.c **** 
1613:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void)
1614:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5949              	 .loc 3 1614 0
 5950              	 .cfi_startproc
 5951              	 
 5952              	 
 5953              	 
 5954 0000 80B4     	 push {r7}
 5955              	.LCFI534:
 5956              	 .cfi_def_cfa_offset 4
 5957              	 .cfi_offset 7,-4
 5958 0002 00AF     	 add r7,sp,#0
 5959              	.LCFI535:
 5960              	 .cfi_def_cfa_register 7
1615:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_PLL->PLLSTAT & XMC_SCU_PLL_PLLSTAT_OSC_USABLE) == XMC_SCU_PLL_PLLSTAT_OSC_USABLE);
 5961              	 .loc 3 1615 0
 5962 0004 074B     	 ldr r3,.L407
 5963 0006 1B68     	 ldr r3,[r3]
 5964 0008 03F46073 	 and r3,r3,#896
 5965 000c B3F5607F 	 cmp r3,#896
 5966 0010 0CBF     	 ite eq
 5967 0012 0123     	 moveq r3,#1
 5968 0014 0023     	 movne r3,#0
 5969 0016 DBB2     	 uxtb r3,r3
1616:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5970              	 .loc 3 1616 0
 5971 0018 1846     	 mov r0,r3
 5972 001a BD46     	 mov sp,r7
 5973              	.LCFI536:
 5974              	 .cfi_def_cfa_register 13
 5975              	 
 5976 001c 5DF8047B 	 ldr r7,[sp],#4
 5977              	.LCFI537:
 5978              	 .cfi_restore 7
 5979              	 .cfi_def_cfa_offset 0
 5980 0020 7047     	 bx lr
 5981              	.L408:
 5982 0022 00BF     	 .align 2
 5983              	.L407:
 5984 0024 10470050 	 .word 1342195472
 5985              	 .cfi_endproc
 5986              	.LFE261:
 5988              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator,"ax",%progbits
 5989              	 .align 2
 5990              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillator
 5991              	 .thumb
 5992              	 .thumb_func
 5994              	XMC_SCU_CLOCK_DisableHighPerformanceOscillator:
 5995              	.LFB262:
1617:../Libraries/XMCLib/src/xmc4_scu.c **** 
1618:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable High Precision High Speed oscillator */
1619:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void)
1620:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5996              	 .loc 3 1620 0
 5997              	 .cfi_startproc
 5998              	 
 5999              	 
 6000              	 
 6001 0000 80B4     	 push {r7}
 6002              	.LCFI538:
 6003              	 .cfi_def_cfa_offset 4
 6004              	 .cfi_offset 7,-4
 6005 0002 00AF     	 add r7,sp,#0
 6006              	.LCFI539:
 6007              	 .cfi_def_cfa_register 7
1621:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= (uint32_t)SCU_OSC_OSCHPCTRL_MODE_Msk;
 6008              	 .loc 3 1621 0
 6009 0004 044A     	 ldr r2,.L410
 6010 0006 044B     	 ldr r3,.L410
 6011 0008 5B68     	 ldr r3,[r3,#4]
 6012 000a 43F03003 	 orr r3,r3,#48
 6013 000e 5360     	 str r3,[r2,#4]
1622:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6014              	 .loc 3 1622 0
 6015 0010 BD46     	 mov sp,r7
 6016              	.LCFI540:
 6017              	 .cfi_def_cfa_register 13
 6018              	 
 6019 0012 5DF8047B 	 ldr r7,[sp],#4
 6020              	.LCFI541:
 6021              	 .cfi_restore 7
 6022              	 .cfi_def_cfa_offset 0
 6023 0016 7047     	 bx lr
 6024              	.L411:
 6025              	 .align 2
 6026              	.L410:
 6027 0018 00470050 	 .word 1342195456
 6028              	 .cfi_endproc
 6029              	.LFE262:
 6031              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 6032              	 .align 2
 6033              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
 6034              	 .thumb
 6035              	 .thumb_func
 6037              	XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:
 6038              	.LFB263:
1623:../Libraries/XMCLib/src/xmc4_scu.c **** 
1624:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void)
1625:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6039              	 .loc 3 1625 0
 6040              	 .cfi_startproc
 6041              	 
 6042              	 
 6043              	 
 6044 0000 80B4     	 push {r7}
 6045              	.LCFI542:
 6046              	 .cfi_def_cfa_offset 4
 6047              	 .cfi_offset 7,-4
 6048 0002 00AF     	 add r7,sp,#0
 6049              	.LCFI543:
 6050              	 .cfi_def_cfa_register 7
1626:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 6051              	 .loc 3 1626 0
 6052 0004 044A     	 ldr r2,.L413
 6053 0006 044B     	 ldr r3,.L413
 6054 0008 5B68     	 ldr r3,[r3,#4]
 6055 000a 43F00103 	 orr r3,r3,#1
 6056 000e 5360     	 str r3,[r2,#4]
1627:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6057              	 .loc 3 1627 0
 6058 0010 BD46     	 mov sp,r7
 6059              	.LCFI544:
 6060              	 .cfi_def_cfa_register 13
 6061              	 
 6062 0012 5DF8047B 	 ldr r7,[sp],#4
 6063              	.LCFI545:
 6064              	 .cfi_restore 7
 6065              	 .cfi_def_cfa_offset 0
 6066 0016 7047     	 bx lr
 6067              	.L414:
 6068              	 .align 2
 6069              	.L413:
 6070 0018 00470050 	 .word 1342195456
 6071              	 .cfi_endproc
 6072              	.LFE263:
 6074              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 6075              	 .align 2
 6076              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
 6077              	 .thumb
 6078              	 .thumb_func
 6080              	XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:
 6081              	.LFB264:
1628:../Libraries/XMCLib/src/xmc4_scu.c **** 
1629:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void)
1630:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6082              	 .loc 3 1630 0
 6083              	 .cfi_startproc
 6084              	 
 6085              	 
 6086              	 
 6087 0000 80B4     	 push {r7}
 6088              	.LCFI546:
 6089              	 .cfi_def_cfa_offset 4
 6090              	 .cfi_offset 7,-4
 6091 0002 00AF     	 add r7,sp,#0
 6092              	.LCFI547:
 6093              	 .cfi_def_cfa_register 7
1631:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL &= ~SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 6094              	 .loc 3 1631 0
 6095 0004 044A     	 ldr r2,.L416
 6096 0006 044B     	 ldr r3,.L416
 6097 0008 5B68     	 ldr r3,[r3,#4]
 6098 000a 23F00103 	 bic r3,r3,#1
 6099 000e 5360     	 str r3,[r2,#4]
1632:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6100              	 .loc 3 1632 0
 6101 0010 BD46     	 mov sp,r7
 6102              	.LCFI548:
 6103              	 .cfi_def_cfa_register 13
 6104              	 
 6105 0012 5DF8047B 	 ldr r7,[sp],#4
 6106              	.LCFI549:
 6107              	 .cfi_restore 7
 6108              	 .cfi_def_cfa_offset 0
 6109 0016 7047     	 bx lr
 6110              	.L417:
 6111              	 .align 2
 6112              	.L416:
 6113 0018 00470050 	 .word 1342195456
 6114              	 .cfi_endproc
 6115              	.LFE264:
 6117              	 .section .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus,"ax",%progbits
 6118              	 .align 2
 6119              	 .global XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
 6120              	 .thumb
 6121              	 .thumb_func
 6123              	XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:
 6124              	.LFB265:
1633:../Libraries/XMCLib/src/xmc4_scu.c **** 
1634:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void)
1635:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6125              	 .loc 3 1635 0
 6126              	 .cfi_startproc
 6127              	 
 6128              	 
 6129              	 
 6130 0000 80B4     	 push {r7}
 6131              	.LCFI550:
 6132              	 .cfi_def_cfa_offset 4
 6133              	 .cfi_offset 7,-4
 6134 0002 00AF     	 add r7,sp,#0
 6135              	.LCFI551:
 6136              	 .cfi_def_cfa_register 7
1636:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_OSC->OSCHPSTAT & SCU_OSC_OSCHPSTAT_X1D_Msk);
 6137              	 .loc 3 1636 0
 6138 0004 044B     	 ldr r3,.L420
 6139 0006 1B68     	 ldr r3,[r3]
 6140 0008 03F00103 	 and r3,r3,#1
1637:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6141              	 .loc 3 1637 0
 6142 000c 1846     	 mov r0,r3
 6143 000e BD46     	 mov sp,r7
 6144              	.LCFI552:
 6145              	 .cfi_def_cfa_register 13
 6146              	 
 6147 0010 5DF8047B 	 ldr r7,[sp],#4
 6148              	.LCFI553:
 6149              	 .cfi_restore 7
 6150              	 .cfi_def_cfa_offset 0
 6151 0014 7047     	 bx lr
 6152              	.L421:
 6153 0016 00BF     	 .align 2
 6154              	.L420:
 6155 0018 00470050 	 .word 1342195456
 6156              	 .cfi_endproc
 6157              	.LFE265:
 6159              	 .section .text.XMC_SCU_CLOCK_EnableSystemPll,"ax",%progbits
 6160              	 .align 2
 6161              	 .global XMC_SCU_CLOCK_EnableSystemPll
 6162              	 .thumb
 6163              	 .thumb_func
 6165              	XMC_SCU_CLOCK_EnableSystemPll:
 6166              	.LFB266:
1638:../Libraries/XMCLib/src/xmc4_scu.c **** 
1639:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable main PLL */
1640:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableSystemPll(void)
1641:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6167              	 .loc 3 1641 0
 6168              	 .cfi_startproc
 6169              	 
 6170              	 
 6171              	 
 6172 0000 80B4     	 push {r7}
 6173              	.LCFI554:
 6174              	 .cfi_def_cfa_offset 4
 6175              	 .cfi_offset 7,-4
 6176 0002 00AF     	 add r7,sp,#0
 6177              	.LCFI555:
 6178              	 .cfi_def_cfa_register 7
1642:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 6179              	 .loc 3 1642 0
 6180 0004 054A     	 ldr r2,.L423
 6181 0006 054B     	 ldr r3,.L423
 6182 0008 5B68     	 ldr r3,[r3,#4]
 6183 000a 23F48033 	 bic r3,r3,#65536
 6184 000e 23F00203 	 bic r3,r3,#2
 6185 0012 5360     	 str r3,[r2,#4]
1643:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6186              	 .loc 3 1643 0
 6187 0014 BD46     	 mov sp,r7
 6188              	.LCFI556:
 6189              	 .cfi_def_cfa_register 13
 6190              	 
 6191 0016 5DF8047B 	 ldr r7,[sp],#4
 6192              	.LCFI557:
 6193              	 .cfi_restore 7
 6194              	 .cfi_def_cfa_offset 0
 6195 001a 7047     	 bx lr
 6196              	.L424:
 6197              	 .align 2
 6198              	.L423:
 6199 001c 10470050 	 .word 1342195472
 6200              	 .cfi_endproc
 6201              	.LFE266:
 6203              	 .section .text.XMC_SCU_CLOCK_DisableSystemPll,"ax",%progbits
 6204              	 .align 2
 6205              	 .global XMC_SCU_CLOCK_DisableSystemPll
 6206              	 .thumb
 6207              	 .thumb_func
 6209              	XMC_SCU_CLOCK_DisableSystemPll:
 6210              	.LFB267:
1644:../Libraries/XMCLib/src/xmc4_scu.c **** 
1645:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable main PLL */
1646:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableSystemPll(void)
1647:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6211              	 .loc 3 1647 0
 6212              	 .cfi_startproc
 6213              	 
 6214              	 
 6215              	 
 6216 0000 80B4     	 push {r7}
 6217              	.LCFI558:
 6218              	 .cfi_def_cfa_offset 4
 6219              	 .cfi_offset 7,-4
 6220 0002 00AF     	 add r7,sp,#0
 6221              	.LCFI559:
 6222              	 .cfi_def_cfa_register 7
1648:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 6223              	 .loc 3 1648 0
 6224 0004 054A     	 ldr r2,.L426
 6225 0006 054B     	 ldr r3,.L426
 6226 0008 5B68     	 ldr r3,[r3,#4]
 6227 000a 43F48033 	 orr r3,r3,#65536
 6228 000e 43F00203 	 orr r3,r3,#2
 6229 0012 5360     	 str r3,[r2,#4]
1649:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6230              	 .loc 3 1649 0
 6231 0014 BD46     	 mov sp,r7
 6232              	.LCFI560:
 6233              	 .cfi_def_cfa_register 13
 6234              	 
 6235 0016 5DF8047B 	 ldr r7,[sp],#4
 6236              	.LCFI561:
 6237              	 .cfi_restore 7
 6238              	 .cfi_def_cfa_offset 0
 6239 001a 7047     	 bx lr
 6240              	.L427:
 6241              	 .align 2
 6242              	.L426:
 6243 001c 10470050 	 .word 1342195472
 6244              	 .cfi_endproc
 6245              	.LFE267:
 6247              	 .section .text.XMC_SCU_CLOCK_StartSystemPll,"ax",%progbits
 6248              	 .align 2
 6249              	 .global XMC_SCU_CLOCK_StartSystemPll
 6250              	 .thumb
 6251              	 .thumb_func
 6253              	XMC_SCU_CLOCK_StartSystemPll:
 6254              	.LFB268:
1650:../Libraries/XMCLib/src/xmc4_scu.c **** 
1651:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure main PLL */
1652:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartSystemPll(XMC_SCU_CLOCK_SYSPLLCLKSRC_t source,
1653:../Libraries/XMCLib/src/xmc4_scu.c ****                                   XMC_SCU_CLOCK_SYSPLL_MODE_t mode,
1654:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t pdiv,
1655:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t ndiv,
1656:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t kdiv)
1657:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6255              	 .loc 3 1657 0
 6256              	 .cfi_startproc
 6257              	 
 6258              	 
 6259 0000 80B5     	 push {r7,lr}
 6260              	.LCFI562:
 6261              	 .cfi_def_cfa_offset 8
 6262              	 .cfi_offset 7,-8
 6263              	 .cfi_offset 14,-4
 6264 0002 86B0     	 sub sp,sp,#24
 6265              	.LCFI563:
 6266              	 .cfi_def_cfa_offset 32
 6267 0004 00AF     	 add r7,sp,#0
 6268              	.LCFI564:
 6269              	 .cfi_def_cfa_register 7
 6270 0006 BA60     	 str r2,[r7,#8]
 6271 0008 7B60     	 str r3,[r7,#4]
 6272 000a 0346     	 mov r3,r0
 6273 000c FB81     	 strh r3,[r7,#14]
 6274 000e 0B46     	 mov r3,r1
 6275 0010 7B73     	 strb r3,[r7,#13]
1658:../Libraries/XMCLib/src/xmc4_scu.c **** 
1659:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t vco_frequency; /* Q10.22, max VCO frequency = 520MHz */
1660:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t kdiv_temp;
1661:../Libraries/XMCLib/src/xmc4_scu.c **** 
1662:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemPllClockSource(source);
 6276              	 .loc 3 1662 0
 6277 0012 FB89     	 ldrh r3,[r7,#14]
 6278 0014 1846     	 mov r0,r3
 6279 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemPllClockSource
1663:../Libraries/XMCLib/src/xmc4_scu.c **** 
1664:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)
 6280              	 .loc 3 1664 0
 6281 001a 7B7B     	 ldrb r3,[r7,#13]
 6282 001c 012B     	 cmp r3,#1
 6283 001e 40F08480 	 bne .L429
1665:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1666:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Calculate initial step to be close to fOFI */
1667:../Libraries/XMCLib/src/xmc4_scu.c ****     if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 6284              	 .loc 3 1667 0
 6285 0022 FB89     	 ldrh r3,[r7,#14]
 6286 0024 002B     	 cmp r3,#0
 6287 0026 09D1     	 bne .L430
1668:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1669:../Libraries/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OSCHP_GetFrequency() / 1000000U) << 22;
 6288              	 .loc 3 1669 0
 6289 0028 FFF7FEFF 	 bl OSCHP_GetFrequency
 6290 002c 0246     	 mov r2,r0
 6291 002e 4B4B     	 ldr r3,.L438
 6292 0030 A3FB0223 	 umull r2,r3,r3,r2
 6293 0034 9B0C     	 lsrs r3,r3,#18
 6294 0036 9B05     	 lsls r3,r3,#22
 6295 0038 7B61     	 str r3,[r7,#20]
 6296 003a 02E0     	 b .L431
 6297              	.L430:
1670:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1671:../Libraries/XMCLib/src/xmc4_scu.c ****     else
1672:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1673:../Libraries/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OFI_FREQUENCY / 1000000U) << 22;
 6298              	 .loc 3 1673 0
 6299 003c 4FF0C063 	 mov r3,#100663296
 6300 0040 7B61     	 str r3,[r7,#20]
 6301              	.L431:
1674:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1675:../Libraries/XMCLib/src/xmc4_scu.c ****     vco_frequency = ((vco_frequency * ndiv) / pdiv);
 6302              	 .loc 3 1675 0
 6303 0042 7B69     	 ldr r3,[r7,#20]
 6304 0044 7A68     	 ldr r2,[r7,#4]
 6305 0046 02FB03F2 	 mul r2,r2,r3
 6306 004a BB68     	 ldr r3,[r7,#8]
 6307 004c B2FBF3F3 	 udiv r3,r2,r3
 6308 0050 7B61     	 str r3,[r7,#20]
1676:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / (OFI_FREQUENCY / 1000000U)) >> 22;
 6309              	 .loc 3 1676 0
 6310 0052 7B69     	 ldr r3,[r7,#20]
 6311 0054 424A     	 ldr r2,.L438+4
 6312 0056 A2FB0323 	 umull r2,r3,r2,r3
 6313 005a 1B09     	 lsrs r3,r3,#4
 6314 005c 9B0D     	 lsrs r3,r3,#22
 6315 005e 3B61     	 str r3,[r7,#16]
1677:../Libraries/XMCLib/src/xmc4_scu.c **** 
1678:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1679:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 6316              	 .loc 3 1679 0
 6317 0060 404A     	 ldr r2,.L438+8
 6318 0062 404B     	 ldr r3,.L438+8
 6319 0064 5B68     	 ldr r3,[r3,#4]
 6320 0066 43F00103 	 orr r3,r3,#1
 6321 006a 5360     	 str r3,[r2,#4]
1680:../Libraries/XMCLib/src/xmc4_scu.c **** 
1681:../Libraries/XMCLib/src/xmc4_scu.c ****     /* disconnect Oscillator from PLL */
1682:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FINDIS_Msk;
 6322              	 .loc 3 1682 0
 6323 006c 3D4A     	 ldr r2,.L438+8
 6324 006e 3D4B     	 ldr r3,.L438+8
 6325 0070 5B68     	 ldr r3,[r3,#4]
 6326 0072 43F01003 	 orr r3,r3,#16
 6327 0076 5360     	 str r3,[r2,#4]
1683:../Libraries/XMCLib/src/xmc4_scu.c **** 
1684:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Setup divider settings for main PLL */
1685:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~(SCU_PLL_PLLCON1_NDIV_Msk | SCU_PLL_PLLCON1_
 6328              	 .loc 3 1685 0
 6329 0078 3A49     	 ldr r1,.L438+8
 6330 007a 3A4B     	 ldr r3,.L438+8
 6331 007c 9A68     	 ldr r2,[r3,#8]
 6332 007e 3A4B     	 ldr r3,.L438+12
 6333 0080 1340     	 ands r3,r3,r2
1686:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6334              	 .loc 3 1686 0
 6335 0082 7A68     	 ldr r2,[r7,#4]
 6336 0084 013A     	 subs r2,r2,#1
 6337 0086 1202     	 lsls r2,r2,#8
 6338 0088 1A43     	 orrs r2,r2,r3
1687:../Libraries/XMCLib/src/xmc4_scu.c ****                                    ((kdiv_temp - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos) |
 6339              	 .loc 3 1687 0
 6340 008a 3B69     	 ldr r3,[r7,#16]
 6341 008c 013B     	 subs r3,r3,#1
 6342 008e 1B04     	 lsls r3,r3,#16
1686:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6343              	 .loc 3 1686 0
 6344 0090 1A43     	 orrs r2,r2,r3
1688:../Libraries/XMCLib/src/xmc4_scu.c ****                                    ((pdiv - 1UL)<< SCU_PLL_PLLCON1_PDIV_Pos));
 6345              	 .loc 3 1688 0
 6346 0092 BB68     	 ldr r3,[r7,#8]
 6347 0094 013B     	 subs r3,r3,#1
 6348 0096 1B06     	 lsls r3,r3,#24
1685:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6349              	 .loc 3 1685 0
 6350 0098 1343     	 orrs r3,r3,r2
 6351 009a 8B60     	 str r3,[r1,#8]
1689:../Libraries/XMCLib/src/xmc4_scu.c **** 
1690:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Set OSCDISCDIS, OSC clock remains connected to the VCO in case of loss of lock */
1691:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 6352              	 .loc 3 1691 0
 6353 009c 314A     	 ldr r2,.L438+8
 6354 009e 314B     	 ldr r3,.L438+8
 6355 00a0 5B68     	 ldr r3,[r3,#4]
 6356 00a2 43F04003 	 orr r3,r3,#64
 6357 00a6 5360     	 str r3,[r2,#4]
1692:../Libraries/XMCLib/src/xmc4_scu.c **** 
1693:../Libraries/XMCLib/src/xmc4_scu.c ****     /* connect Oscillator to PLL */
1694:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FINDIS_Msk;
 6358              	 .loc 3 1694 0
 6359 00a8 2E4A     	 ldr r2,.L438+8
 6360 00aa 2E4B     	 ldr r3,.L438+8
 6361 00ac 5B68     	 ldr r3,[r3,#4]
 6362 00ae 23F01003 	 bic r3,r3,#16
 6363 00b2 5360     	 str r3,[r2,#4]
1695:../Libraries/XMCLib/src/xmc4_scu.c **** 
1696:../Libraries/XMCLib/src/xmc4_scu.c ****     /* restart PLL Lock detection */
1697:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_RESLD_Msk;
 6364              	 .loc 3 1697 0
 6365 00b4 2B4A     	 ldr r2,.L438+8
 6366 00b6 2B4B     	 ldr r3,.L438+8
 6367 00b8 5B68     	 ldr r3,[r3,#4]
 6368 00ba 43F48023 	 orr r3,r3,#262144
 6369 00be 5360     	 str r3,[r2,#4]
1698:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 6370              	 .loc 3 1698 0
 6371 00c0 00BF     	 nop
 6372              	.L432:
 6373              	 .loc 3 1698 0 is_stmt 0 discriminator 1
 6374 00c2 284B     	 ldr r3,.L438+8
 6375 00c4 1B68     	 ldr r3,[r3]
 6376 00c6 03F00403 	 and r3,r3,#4
 6377 00ca 002B     	 cmp r3,#0
 6378 00cc F9D0     	 beq .L432
1699:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1700:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for PLL Lock */
1701:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1702:../Libraries/XMCLib/src/xmc4_scu.c **** 
1703:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to normal mode */
1704:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_VCOBYP_Msk;
 6379              	 .loc 3 1704 0 is_stmt 1
 6380 00ce 254A     	 ldr r2,.L438+8
 6381 00d0 244B     	 ldr r3,.L438+8
 6382 00d2 5B68     	 ldr r3,[r3,#4]
 6383 00d4 23F00103 	 bic r3,r3,#1
 6384 00d8 5360     	 str r3,[r2,#4]
1705:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 6385              	 .loc 3 1705 0
 6386 00da 00BF     	 nop
 6387              	.L433:
 6388              	 .loc 3 1705 0 is_stmt 0 discriminator 1
 6389 00dc 214B     	 ldr r3,.L438+8
 6390 00de 1B68     	 ldr r3,[r3]
 6391 00e0 03F00103 	 and r3,r3,#1
 6392 00e4 002B     	 cmp r3,#0
 6393 00e6 F9D1     	 bne .L433
1706:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1707:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for normal mode */
1708:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1709:../Libraries/XMCLib/src/xmc4_scu.c **** 
1710:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Ramp up PLL frequency in steps */
1711:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 60UL) >> 22;
 6394              	 .loc 3 1711 0 is_stmt 1
 6395 00e8 7B69     	 ldr r3,[r7,#20]
 6396 00ea 204A     	 ldr r2,.L438+16
 6397 00ec A2FB0323 	 umull r2,r3,r2,r3
 6398 00f0 5B09     	 lsrs r3,r3,#5
 6399 00f2 9B0D     	 lsrs r3,r3,#22
 6400 00f4 3B61     	 str r3,[r7,#16]
1712:../Libraries/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 6401              	 .loc 3 1712 0
 6402 00f6 3A6A     	 ldr r2,[r7,#32]
 6403 00f8 3B69     	 ldr r3,[r7,#16]
 6404 00fa 9A42     	 cmp r2,r3
 6405 00fc 02D2     	 bcs .L434
1713:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1714:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 6406              	 .loc 3 1714 0
 6407 00fe 3869     	 ldr r0,[r7,#16]
 6408 0100 FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6409              	.L434:
1715:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1716:../Libraries/XMCLib/src/xmc4_scu.c **** 
1717:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 90UL) >> 22;
 6410              	 .loc 3 1717 0
 6411 0104 7B69     	 ldr r3,[r7,#20]
 6412 0106 5B08     	 lsrs r3,r3,#1
 6413 0108 194A     	 ldr r2,.L438+20
 6414 010a A2FB0323 	 umull r2,r3,r2,r3
 6415 010e 5B09     	 lsrs r3,r3,#5
 6416 0110 9B0D     	 lsrs r3,r3,#22
 6417 0112 3B61     	 str r3,[r7,#16]
1718:../Libraries/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 6418              	 .loc 3 1718 0
 6419 0114 3A6A     	 ldr r2,[r7,#32]
 6420 0116 3B69     	 ldr r3,[r7,#16]
 6421 0118 9A42     	 cmp r2,r3
 6422 011a 02D2     	 bcs .L435
1719:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1720:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 6423              	 .loc 3 1720 0
 6424 011c 3869     	 ldr r0,[r7,#16]
 6425 011e FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6426              	.L435:
1721:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1722:../Libraries/XMCLib/src/xmc4_scu.c **** 
1723:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv);
 6427              	 .loc 3 1723 0
 6428 0122 386A     	 ldr r0,[r7,#32]
 6429 0124 FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6430 0128 15E0     	 b .L428
 6431              	.L429:
1724:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1725:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1726:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1727:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K1DIV_Msk) |
 6432              	 .loc 3 1727 0
 6433 012a 0E49     	 ldr r1,.L438+8
 6434 012c 0D4B     	 ldr r3,.L438+8
 6435 012e 9B68     	 ldr r3,[r3,#8]
 6436 0130 23F07F02 	 bic r2,r3,#127
1728:../Libraries/XMCLib/src/xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 6437              	 .loc 3 1728 0
 6438 0134 3B6A     	 ldr r3,[r7,#32]
 6439 0136 013B     	 subs r3,r3,#1
1727:../Libraries/XMCLib/src/xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 6440              	 .loc 3 1727 0
 6441 0138 1343     	 orrs r3,r3,r2
 6442 013a 8B60     	 str r3,[r1,#8]
1729:../Libraries/XMCLib/src/xmc4_scu.c **** 
1730:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1731:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 6443              	 .loc 3 1731 0
 6444 013c 094A     	 ldr r2,.L438+8
 6445 013e 094B     	 ldr r3,.L438+8
 6446 0140 5B68     	 ldr r3,[r3,#4]
 6447 0142 43F00103 	 orr r3,r3,#1
 6448 0146 5360     	 str r3,[r2,#4]
1732:../Libraries/XMCLib/src/xmc4_scu.c **** 
1733:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) == 0U)
 6449              	 .loc 3 1733 0
 6450 0148 00BF     	 nop
 6451              	.L437:
 6452              	 .loc 3 1733 0 is_stmt 0 discriminator 1
 6453 014a 064B     	 ldr r3,.L438+8
 6454 014c 1B68     	 ldr r3,[r3]
 6455 014e 03F00103 	 and r3,r3,#1
 6456 0152 002B     	 cmp r3,#0
 6457 0154 F9D0     	 beq .L437
 6458              	.L428:
1734:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1735:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for prescaler mode */
1736:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1737:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1738:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6459              	 .loc 3 1738 0 is_stmt 1
 6460 0156 1837     	 adds r7,r7,#24
 6461              	.LCFI565:
 6462              	 .cfi_def_cfa_offset 8
 6463 0158 BD46     	 mov sp,r7
 6464              	.LCFI566:
 6465              	 .cfi_def_cfa_register 13
 6466              	 
 6467 015a 80BD     	 pop {r7,pc}
 6468              	.L439:
 6469              	 .align 2
 6470              	.L438:
 6471 015c 83DE1B43 	 .word 1125899907
 6472 0160 ABAAAAAA 	 .word -1431655765
 6473 0164 10470050 	 .word 1342195472
 6474 0168 FF8080F0 	 .word -260013825
 6475 016c 89888888 	 .word -2004318071
 6476 0170 B7600BB6 	 .word -1240768329
 6477              	 .cfi_endproc
 6478              	.LFE268:
 6480              	 .section .text.XMC_SCU_CLOCK_StopSystemPll,"ax",%progbits
 6481              	 .align 2
 6482              	 .global XMC_SCU_CLOCK_StopSystemPll
 6483              	 .thumb
 6484              	 .thumb_func
 6486              	XMC_SCU_CLOCK_StopSystemPll:
 6487              	.LFB269:
1739:../Libraries/XMCLib/src/xmc4_scu.c **** 
1740:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to stop main PLL operation */
1741:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopSystemPll(void)
1742:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6488              	 .loc 3 1742 0
 6489              	 .cfi_startproc
 6490              	 
 6491              	 
 6492              	 
 6493 0000 80B4     	 push {r7}
 6494              	.LCFI567:
 6495              	 .cfi_def_cfa_offset 4
 6496              	 .cfi_offset 7,-4
 6497 0002 00AF     	 add r7,sp,#0
 6498              	.LCFI568:
 6499              	 .cfi_def_cfa_register 7
1743:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_PLLPWD_Msk;
 6500              	 .loc 3 1743 0
 6501 0004 044A     	 ldr r2,.L441
 6502 0006 044B     	 ldr r3,.L441
 6503 0008 5B68     	 ldr r3,[r3,#4]
 6504 000a 43F48033 	 orr r3,r3,#65536
 6505 000e 5360     	 str r3,[r2,#4]
1744:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6506              	 .loc 3 1744 0
 6507 0010 BD46     	 mov sp,r7
 6508              	.LCFI569:
 6509              	 .cfi_def_cfa_register 13
 6510              	 
 6511 0012 5DF8047B 	 ldr r7,[sp],#4
 6512              	.LCFI570:
 6513              	 .cfi_restore 7
 6514              	 .cfi_def_cfa_offset 0
 6515 0016 7047     	 bx lr
 6516              	.L442:
 6517              	 .align 2
 6518              	.L441:
 6519 0018 10470050 	 .word 1342195472
 6520              	 .cfi_endproc
 6521              	.LFE269:
 6523              	 .section .text.XMC_SCU_CLOCK_StepSystemPllFrequency,"ax",%progbits
 6524              	 .align 2
 6525              	 .global XMC_SCU_CLOCK_StepSystemPllFrequency
 6526              	 .thumb
 6527              	 .thumb_func
 6529              	XMC_SCU_CLOCK_StepSystemPllFrequency:
 6530              	.LFB270:
1745:../Libraries/XMCLib/src/xmc4_scu.c **** 
1746:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to step up/down the main PLL frequency */
1747:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StepSystemPllFrequency(uint32_t kdiv)
1748:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6531              	 .loc 3 1748 0
 6532              	 .cfi_startproc
 6533              	 
 6534              	 
 6535 0000 80B5     	 push {r7,lr}
 6536              	.LCFI571:
 6537              	 .cfi_def_cfa_offset 8
 6538              	 .cfi_offset 7,-8
 6539              	 .cfi_offset 14,-4
 6540 0002 82B0     	 sub sp,sp,#8
 6541              	.LCFI572:
 6542              	 .cfi_def_cfa_offset 16
 6543 0004 00AF     	 add r7,sp,#0
 6544              	.LCFI573:
 6545              	 .cfi_def_cfa_register 7
 6546 0006 7860     	 str r0,[r7,#4]
1749:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 6547              	 .loc 3 1749 0
 6548 0008 0749     	 ldr r1,.L444
 6549 000a 074B     	 ldr r3,.L444
 6550 000c 9B68     	 ldr r3,[r3,#8]
 6551 000e 23F4FE02 	 bic r2,r3,#8323072
1750:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((kdiv - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos));
 6552              	 .loc 3 1750 0
 6553 0012 7B68     	 ldr r3,[r7,#4]
 6554 0014 013B     	 subs r3,r3,#1
 6555 0016 1B04     	 lsls r3,r3,#16
1749:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 6556              	 .loc 3 1749 0
 6557 0018 1343     	 orrs r3,r3,r2
 6558 001a 8B60     	 str r3,[r1,#8]
1751:../Libraries/XMCLib/src/xmc4_scu.c **** 
1752:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(50U);
 6559              	 .loc 3 1752 0
 6560 001c 3220     	 movs r0,#50
 6561 001e FFF7FEFF 	 bl XMC_SCU_lDelay
1753:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6562              	 .loc 3 1753 0
 6563 0022 0837     	 adds r7,r7,#8
 6564              	.LCFI574:
 6565              	 .cfi_def_cfa_offset 8
 6566 0024 BD46     	 mov sp,r7
 6567              	.LCFI575:
 6568              	 .cfi_def_cfa_register 13
 6569              	 
 6570 0026 80BD     	 pop {r7,pc}
 6571              	.L445:
 6572              	 .align 2
 6573              	.L444:
 6574 0028 10470050 	 .word 1342195472
 6575              	 .cfi_endproc
 6576              	.LFE270:
 6578              	 .section .text.XMC_SCU_CLOCK_IsSystemPllLocked,"ax",%progbits
 6579              	 .align 2
 6580              	 .global XMC_SCU_CLOCK_IsSystemPllLocked
 6581              	 .thumb
 6582              	 .thumb_func
 6584              	XMC_SCU_CLOCK_IsSystemPllLocked:
 6585              	.LFB271:
1754:../Libraries/XMCLib/src/xmc4_scu.c **** 
1755:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check main PLL is locked or not */
1756:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsSystemPllLocked(void)
1757:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6586              	 .loc 3 1757 0
 6587              	 .cfi_startproc
 6588              	 
 6589              	 
 6590              	 
 6591 0000 80B4     	 push {r7}
 6592              	.LCFI576:
 6593              	 .cfi_def_cfa_offset 4
 6594              	 .cfi_offset 7,-4
 6595 0002 00AF     	 add r7,sp,#0
 6596              	.LCFI577:
 6597              	 .cfi_def_cfa_register 7
1758:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) != 0UL);
 6598              	 .loc 3 1758 0
 6599 0004 064B     	 ldr r3,.L448
 6600 0006 1B68     	 ldr r3,[r3]
 6601 0008 03F00403 	 and r3,r3,#4
 6602 000c 002B     	 cmp r3,#0
 6603 000e 14BF     	 ite ne
 6604 0010 0123     	 movne r3,#1
 6605 0012 0023     	 moveq r3,#0
 6606 0014 DBB2     	 uxtb r3,r3
1759:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6607              	 .loc 3 1759 0
 6608 0016 1846     	 mov r0,r3
 6609 0018 BD46     	 mov sp,r7
 6610              	.LCFI578:
 6611              	 .cfi_def_cfa_register 13
 6612              	 
 6613 001a 5DF8047B 	 ldr r7,[sp],#4
 6614              	.LCFI579:
 6615              	 .cfi_restore 7
 6616              	 .cfi_def_cfa_offset 0
 6617 001e 7047     	 bx lr
 6618              	.L449:
 6619              	 .align 2
 6620              	.L448:
 6621 0020 10470050 	 .word 1342195472
 6622              	 .cfi_endproc
 6623              	.LFE271:
 6625              	 .section .text.XMC_SCU_INTERRUPT_SetEventHandler,"ax",%progbits
 6626              	 .align 2
 6627              	 .global XMC_SCU_INTERRUPT_SetEventHandler
 6628              	 .thumb
 6629              	 .thumb_func
 6631              	XMC_SCU_INTERRUPT_SetEventHandler:
 6632              	.LFB272:
1760:../Libraries/XMCLib/src/xmc4_scu.c **** 
1761:../Libraries/XMCLib/src/xmc4_scu.c **** /*
1762:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to assign the event handler function to be executed on occurrence of the selected event.
1763:../Libraries/XMCLib/src/xmc4_scu.c ****  */
1764:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_INTERRUPT_SetEventHandler(const XMC_SCU_INTERRUPT_EVENT_t event,
1765:../Libraries/XMCLib/src/xmc4_scu.c ****                                                    const XMC_SCU_INTERRUPT_EVENT_HANDLER_t handler)
1766:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6633              	 .loc 3 1766 0
 6634              	 .cfi_startproc
 6635              	 
 6636              	 
 6637              	 
 6638 0000 80B4     	 push {r7}
 6639              	.LCFI580:
 6640              	 .cfi_def_cfa_offset 4
 6641              	 .cfi_offset 7,-4
 6642 0002 85B0     	 sub sp,sp,#20
 6643              	.LCFI581:
 6644              	 .cfi_def_cfa_offset 24
 6645 0004 00AF     	 add r7,sp,#0
 6646              	.LCFI582:
 6647              	 .cfi_def_cfa_register 7
 6648 0006 7860     	 str r0,[r7,#4]
 6649 0008 3960     	 str r1,[r7]
1767:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1768:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status;
1769:../Libraries/XMCLib/src/xmc4_scu.c ****   
1770:../Libraries/XMCLib/src/xmc4_scu.c ****   index = 0U;
 6650              	 .loc 3 1770 0
 6651 000a 0023     	 movs r3,#0
 6652 000c FB60     	 str r3,[r7,#12]
1771:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 6653              	 .loc 3 1771 0
 6654 000e 02E0     	 b .L451
 6655              	.L453:
1772:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1773:../Libraries/XMCLib/src/xmc4_scu.c ****     index++;
 6656              	 .loc 3 1773 0
 6657 0010 FB68     	 ldr r3,[r7,#12]
 6658 0012 0133     	 adds r3,r3,#1
 6659 0014 FB60     	 str r3,[r7,#12]
 6660              	.L451:
1771:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 6661              	 .loc 3 1771 0
 6662 0016 FB68     	 ldr r3,[r7,#12]
 6663 0018 7A68     	 ldr r2,[r7,#4]
 6664 001a 22FA03F3 	 lsr r3,r2,r3
 6665 001e 03F00103 	 and r3,r3,#1
 6666 0022 002B     	 cmp r3,#0
 6667 0024 02D1     	 bne .L452
1771:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 6668              	 .loc 3 1771 0 is_stmt 0 discriminator 1
 6669 0026 FB68     	 ldr r3,[r7,#12]
 6670 0028 1F2B     	 cmp r3,#31
 6671 002a F1D9     	 bls .L453
 6672              	.L452:
1774:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1775:../Libraries/XMCLib/src/xmc4_scu.c ****   
1776:../Libraries/XMCLib/src/xmc4_scu.c ****   if (index == XMC_SCU_INTERRUPT_EVENT_MAX)
 6673              	 .loc 3 1776 0 is_stmt 1
 6674 002c FB68     	 ldr r3,[r7,#12]
 6675 002e 202B     	 cmp r3,#32
 6676 0030 02D1     	 bne .L454
1777:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1778:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 6677              	 .loc 3 1778 0
 6678 0032 0123     	 movs r3,#1
 6679 0034 FB72     	 strb r3,[r7,#11]
 6680 0036 06E0     	 b .L455
 6681              	.L454:
1779:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1780:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1781:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1782:../Libraries/XMCLib/src/xmc4_scu.c ****     event_handler_list[index] = handler;
 6682              	 .loc 3 1782 0
 6683 0038 0649     	 ldr r1,.L457
 6684 003a FB68     	 ldr r3,[r7,#12]
 6685 003c 3A68     	 ldr r2,[r7]
 6686 003e 41F82320 	 str r2,[r1,r3,lsl#2]
1783:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_OK;      
 6687              	 .loc 3 1783 0
 6688 0042 0023     	 movs r3,#0
 6689 0044 FB72     	 strb r3,[r7,#11]
 6690              	.L455:
1784:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1785:../Libraries/XMCLib/src/xmc4_scu.c ****   
1786:../Libraries/XMCLib/src/xmc4_scu.c ****   return (status);
 6691              	 .loc 3 1786 0
 6692 0046 FB7A     	 ldrb r3,[r7,#11]
1787:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6693              	 .loc 3 1787 0
 6694 0048 1846     	 mov r0,r3
 6695 004a 1437     	 adds r7,r7,#20
 6696              	.LCFI583:
 6697              	 .cfi_def_cfa_offset 4
 6698 004c BD46     	 mov sp,r7
 6699              	.LCFI584:
 6700              	 .cfi_def_cfa_register 13
 6701              	 
 6702 004e 5DF8047B 	 ldr r7,[sp],#4
 6703              	.LCFI585:
 6704              	 .cfi_restore 7
 6705              	 .cfi_def_cfa_offset 0
 6706 0052 7047     	 bx lr
 6707              	.L458:
 6708              	 .align 2
 6709              	.L457:
 6710 0054 00000000 	 .word event_handler_list
 6711              	 .cfi_endproc
 6712              	.LFE272:
 6714              	 .section .text.XMC_SCU_IRQHandler,"ax",%progbits
 6715              	 .align 2
 6716              	 .global XMC_SCU_IRQHandler
 6717              	 .thumb
 6718              	 .thumb_func
 6720              	XMC_SCU_IRQHandler:
 6721              	.LFB273:
1788:../Libraries/XMCLib/src/xmc4_scu.c **** 
1789:../Libraries/XMCLib/src/xmc4_scu.c **** /*
1790:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to execute callback functions for multiple events.
1791:../Libraries/XMCLib/src/xmc4_scu.c ****  */
1792:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_IRQHandler(uint32_t sr_num)
1793:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6722              	 .loc 3 1793 0
 6723              	 .cfi_startproc
 6724              	 
 6725              	 
 6726 0000 80B5     	 push {r7,lr}
 6727              	.LCFI586:
 6728              	 .cfi_def_cfa_offset 8
 6729              	 .cfi_offset 7,-8
 6730              	 .cfi_offset 14,-4
 6731 0002 86B0     	 sub sp,sp,#24
 6732              	.LCFI587:
 6733              	 .cfi_def_cfa_offset 32
 6734 0004 00AF     	 add r7,sp,#0
 6735              	.LCFI588:
 6736              	 .cfi_def_cfa_register 7
 6737 0006 7860     	 str r0,[r7,#4]
1794:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1795:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_t event;
1796:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler;
1797:../Libraries/XMCLib/src/xmc4_scu.c ****   
1798:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_UNUSED_ARG(sr_num);
1799:../Libraries/XMCLib/src/xmc4_scu.c ****   
1800:../Libraries/XMCLib/src/xmc4_scu.c ****   index = 0U;
 6738              	 .loc 3 1800 0
 6739 0008 0023     	 movs r3,#0
 6740 000a 7B61     	 str r3,[r7,#20]
1801:../Libraries/XMCLib/src/xmc4_scu.c ****   event = XMC_SCU_INTERUPT_GetEventStatus();
 6741              	 .loc 3 1801 0
 6742 000c FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6743 0010 3861     	 str r0,[r7,#16]
1802:../Libraries/XMCLib/src/xmc4_scu.c ****   while (index < XMC_SCU_INTERRUPT_EVENT_MAX)
 6744              	 .loc 3 1802 0
 6745 0012 1CE0     	 b .L460
 6746              	.L464:
1803:../Libraries/XMCLib/src/xmc4_scu.c ****   {    
1804:../Libraries/XMCLib/src/xmc4_scu.c ****     if ((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) != 0U)
 6747              	 .loc 3 1804 0
 6748 0014 7B69     	 ldr r3,[r7,#20]
 6749 0016 3A69     	 ldr r2,[r7,#16]
 6750 0018 22FA03F3 	 lsr r3,r2,r3
 6751 001c 03F00103 	 and r3,r3,#1
 6752 0020 002B     	 cmp r3,#0
 6753 0022 11D0     	 beq .L461
1805:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1806:../Libraries/XMCLib/src/xmc4_scu.c ****       event_handler = event_handler_list[index];
 6754              	 .loc 3 1806 0
 6755 0024 0D4A     	 ldr r2,.L465
 6756 0026 7B69     	 ldr r3,[r7,#20]
 6757 0028 52F82330 	 ldr r3,[r2,r3,lsl#2]
 6758 002c FB60     	 str r3,[r7,#12]
1807:../Libraries/XMCLib/src/xmc4_scu.c ****       if (event_handler != NULL)
 6759              	 .loc 3 1807 0
 6760 002e FB68     	 ldr r3,[r7,#12]
 6761 0030 002B     	 cmp r3,#0
 6762 0032 01D0     	 beq .L462
1808:../Libraries/XMCLib/src/xmc4_scu.c ****       {
1809:../Libraries/XMCLib/src/xmc4_scu.c ****           (event_handler)();
 6763              	 .loc 3 1809 0
 6764 0034 FB68     	 ldr r3,[r7,#12]
 6765 0036 9847     	 blx r3
 6766              	.L462:
1810:../Libraries/XMCLib/src/xmc4_scu.c ****       }
1811:../Libraries/XMCLib/src/xmc4_scu.c ****       
1812:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_INTERRUPT_ClearEventStatus((uint32_t)(1UL << index));
 6767              	 .loc 3 1812 0
 6768 0038 7B69     	 ldr r3,[r7,#20]
 6769 003a 0122     	 movs r2,#1
 6770 003c 02FA03F3 	 lsl r3,r2,r3
 6771 0040 1846     	 mov r0,r3
 6772 0042 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1813:../Libraries/XMCLib/src/xmc4_scu.c ****       
1814:../Libraries/XMCLib/src/xmc4_scu.c ****       break;
 6773              	 .loc 3 1814 0
 6774 0046 05E0     	 b .L459
 6775              	.L461:
1815:../Libraries/XMCLib/src/xmc4_scu.c ****     }   
1816:../Libraries/XMCLib/src/xmc4_scu.c ****     index++;    
 6776              	 .loc 3 1816 0
 6777 0048 7B69     	 ldr r3,[r7,#20]
 6778 004a 0133     	 adds r3,r3,#1
 6779 004c 7B61     	 str r3,[r7,#20]
 6780              	.L460:
1802:../Libraries/XMCLib/src/xmc4_scu.c ****   {    
 6781              	 .loc 3 1802 0
 6782 004e 7B69     	 ldr r3,[r7,#20]
 6783 0050 1F2B     	 cmp r3,#31
 6784 0052 DFD9     	 bls .L464
 6785              	.L459:
1817:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1818:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6786              	 .loc 3 1818 0
 6787 0054 1837     	 adds r7,r7,#24
 6788              	.LCFI589:
 6789              	 .cfi_def_cfa_offset 8
 6790 0056 BD46     	 mov sp,r7
 6791              	.LCFI590:
 6792              	 .cfi_def_cfa_register 13
 6793              	 
 6794 0058 80BD     	 pop {r7,pc}
 6795              	.L466:
 6796 005a 00BF     	 .align 2
 6797              	.L465:
 6798 005c 00000000 	 .word event_handler_list
 6799              	 .cfi_endproc
 6800              	.LFE273:
 6802              	 .text
 6803              	.Letext0:
 6804              	 .file 4 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 6805              	 .file 5 "c:\\program files (x86)\\dave\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 6806              	 .file 6 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 6807              	 .file 7 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Include/core_cm4.h"
 6808              	 .file 8 "C:/Users/VMORAIS/Documents/DAVE_WS/1p_inverter_200V/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_scu.c
    {standard input}:20     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 $t
    {standard input}:24     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 XMC_SCU_CLOCK_GetUsbClockSource
    {standard input}:57     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000018 $d
    {standard input}:62     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 $t
    {standard input}:66     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 XMC_SCU_CLOCK_GetWdtClockSource
    {standard input}:98     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000018 $d
    {standard input}:103    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 $t
    {standard input}:107    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_GetExternalOutputClockSource
    {standard input}:141    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:0000001c $d
    {standard input}:146    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 $t
    {standard input}:150    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemClockFrequency
    {standard input}:185    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000020 $d
    {standard input}:191    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 $t
    {standard input}:195    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 XMC_SCU_CLOCK_GetCpuClockFrequency
    {standard input}:227    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000014 $d
                            *COM*:00000080 event_handler_list
    {standard input}:233    .text.XMC_SCU_lDelay:00000000 $t
    {standard input}:237    .text.XMC_SCU_lDelay:00000000 XMC_SCU_lDelay
    {standard input}:299    .text.XMC_SCU_lDelay:0000003c $d
    {standard input}:305    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 $t
    {standard input}:310    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 XMC_SCU_INTERRUPT_EnableEvent
    {standard input}:351    .text.XMC_SCU_INTERRUPT_EnableEvent:00000020 $d
    {standard input}:356    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 $t
    {standard input}:361    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 XMC_SCU_INTERRUPT_DisableEvent
    {standard input}:403    .text.XMC_SCU_INTERRUPT_DisableEvent:00000020 $d
    {standard input}:408    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 $t
    {standard input}:413    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 XMC_SCU_INTERRUPT_TriggerEvent
    {standard input}:454    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000020 $d
    {standard input}:459    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 $t
    {standard input}:464    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 XMC_SCU_INTERUPT_GetEventStatus
    {standard input}:495    .text.XMC_SCU_INTERUPT_GetEventStatus:00000014 $d
    {standard input}:500    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 $t
    {standard input}:505    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 XMC_SCU_INTERRUPT_ClearEventStatus
    {standard input}:543    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000018 $d
    {standard input}:548    .text.XMC_SCU_GetBootMode:00000000 $t
    {standard input}:553    .text.XMC_SCU_GetBootMode:00000000 XMC_SCU_GetBootMode
    {standard input}:585    .text.XMC_SCU_GetBootMode:00000018 $d
    {standard input}:590    .text.XMC_SCU_SetBootMode:00000000 $t
    {standard input}:595    .text.XMC_SCU_SetBootMode:00000000 XMC_SCU_SetBootMode
    {standard input}:634    .text.XMC_SCU_SetBootMode:0000001c $d
    {standard input}:639    .text.XMC_SCU_ReadGPR:00000000 $t
    {standard input}:644    .text.XMC_SCU_ReadGPR:00000000 XMC_SCU_ReadGPR
    {standard input}:686    .text.XMC_SCU_ReadGPR:00000020 $d
    {standard input}:691    .text.XMC_SCU_WriteGPR:00000000 $t
    {standard input}:696    .text.XMC_SCU_WriteGPR:00000000 XMC_SCU_WriteGPR
    {standard input}:739    .text.XMC_SCU_WriteGPR:00000024 $d
    {standard input}:744    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 $t
    {standard input}:749    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 XMC_SCU_EnableOutOfRangeComparator
    {standard input}:797    .text.XMC_SCU_EnableOutOfRangeComparator:00000034 $d
    {standard input}:802    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 $t
    {standard input}:807    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 XMC_SCU_DisableOutOfRangeComparator
    {standard input}:856    .text.XMC_SCU_DisableOutOfRangeComparator:00000034 $d
    {standard input}:861    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 $t
    {standard input}:866    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 XMC_SCU_CalibrateTemperatureSensor
    {standard input}:914    .text.XMC_SCU_CalibrateTemperatureSensor:00000028 $d
    {standard input}:919    .text.XMC_SCU_EnableTemperatureSensor:00000000 $t
    {standard input}:924    .text.XMC_SCU_EnableTemperatureSensor:00000000 XMC_SCU_EnableTemperatureSensor
    {standard input}:957    .text.XMC_SCU_EnableTemperatureSensor:0000001c $d
    {standard input}:962    .text.XMC_SCU_DisableTemperatureSensor:00000000 $t
    {standard input}:967    .text.XMC_SCU_DisableTemperatureSensor:00000000 XMC_SCU_DisableTemperatureSensor
    {standard input}:1000   .text.XMC_SCU_DisableTemperatureSensor:0000001c $d
    {standard input}:1005   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 $t
    {standard input}:1010   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 XMC_SCU_IsTemperatureSensorEnabled
    {standard input}:1047   .text.XMC_SCU_IsTemperatureSensorEnabled:00000024 $d
    {standard input}:1052   .text.XMC_SCU_IsTemperatureSensorReady:00000000 $t
    {standard input}:1057   .text.XMC_SCU_IsTemperatureSensorReady:00000000 XMC_SCU_IsTemperatureSensorReady
    {standard input}:1094   .text.XMC_SCU_IsTemperatureSensorReady:00000024 $d
    {standard input}:1099   .text.XMC_SCU_StartTemperatureMeasurement:00000000 $t
    {standard input}:1104   .text.XMC_SCU_StartTemperatureMeasurement:00000000 XMC_SCU_StartTemperatureMeasurement
    {standard input}:1235   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 XMC_SCU_IsTemperatureSensorBusy
    {standard input}:1165   .text.XMC_SCU_StartTemperatureMeasurement:00000048 $d
    {standard input}:1170   .text.XMC_SCU_GetTemperatureMeasurement:00000000 $t
    {standard input}:1175   .text.XMC_SCU_GetTemperatureMeasurement:00000000 XMC_SCU_GetTemperatureMeasurement
    {standard input}:1225   .text.XMC_SCU_GetTemperatureMeasurement:00000034 $d
    {standard input}:1230   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 $t
    {standard input}:1272   .text.XMC_SCU_IsTemperatureSensorBusy:00000024 $d
    {standard input}:1277   .text.XMC_SCU_WriteToRetentionMemory:00000000 $t
    {standard input}:1282   .text.XMC_SCU_WriteToRetentionMemory:00000000 XMC_SCU_WriteToRetentionMemory
    {standard input}:1343   .text.XMC_SCU_WriteToRetentionMemory:00000048 $d
    {standard input}:1348   .text.XMC_SCU_ReadFromRetentionMemory:00000000 $t
    {standard input}:1353   .text.XMC_SCU_ReadFromRetentionMemory:00000000 XMC_SCU_ReadFromRetentionMemory
    {standard input}:1413   .text.XMC_SCU_ReadFromRetentionMemory:00000044 $d
    {standard input}:1418   .text.XMC_SCU_CLOCK_Init:00000000 $t
    {standard input}:1423   .text.XMC_SCU_CLOCK_Init:00000000 XMC_SCU_CLOCK_Init
    {standard input}:3039   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 XMC_SCU_CLOCK_SetSystemClockSource
    {standard input}:4564   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 XMC_SCU_HIB_EnableHibernateDomain
    {standard input}:5602   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillator
    {standard input}:5555   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 XMC_SCU_CLOCK_IsLowPowerOscillatorStable
    {standard input}:3381   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 XMC_SCU_HIB_SetStandbyClockSource
    {standard input}:4365   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 XMC_SCU_CLOCK_SetBackupClockCalibrationMode
    {standard input}:3446   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 XMC_SCU_CLOCK_SetSystemClockDivider
    {standard input}:3556   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 XMC_SCU_CLOCK_SetCpuClockDivider
    {standard input}:3501   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 XMC_SCU_CLOCK_SetCcuClockDivider
    {standard input}:3611   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 XMC_SCU_CLOCK_SetPeripheralClockDivider
    {standard input}:5885   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillator
    {standard input}:5947   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
    {standard input}:6209   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 XMC_SCU_CLOCK_DisableSystemPll
    {standard input}:6165   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 XMC_SCU_CLOCK_EnableSystemPll
    {standard input}:6253   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 XMC_SCU_CLOCK_StartSystemPll
    {standard input}:1575   .text.XMC_SCU_TRAP_Enable:00000000 $t
    {standard input}:1580   .text.XMC_SCU_TRAP_Enable:00000000 XMC_SCU_TRAP_Enable
    {standard input}:1622   .text.XMC_SCU_TRAP_Enable:00000020 $d
    {standard input}:1627   .text.XMC_SCU_TRAP_Disable:00000000 $t
    {standard input}:1632   .text.XMC_SCU_TRAP_Disable:00000000 XMC_SCU_TRAP_Disable
    {standard input}:1673   .text.XMC_SCU_TRAP_Disable:00000020 $d
    {standard input}:1678   .text.XMC_SCU_TRAP_GetStatus:00000000 $t
    {standard input}:1683   .text.XMC_SCU_TRAP_GetStatus:00000000 XMC_SCU_TRAP_GetStatus
    {standard input}:1714   .text.XMC_SCU_TRAP_GetStatus:00000014 $d
    {standard input}:1719   .text.XMC_SCU_TRAP_Trigger:00000000 $t
    {standard input}:1724   .text.XMC_SCU_TRAP_Trigger:00000000 XMC_SCU_TRAP_Trigger
    {standard input}:1762   .text.XMC_SCU_TRAP_Trigger:00000018 $d
    {standard input}:1767   .text.XMC_SCU_TRAP_ClearStatus:00000000 $t
    {standard input}:1772   .text.XMC_SCU_TRAP_ClearStatus:00000000 XMC_SCU_TRAP_ClearStatus
    {standard input}:1810   .text.XMC_SCU_TRAP_ClearStatus:00000018 $d
    {standard input}:1815   .text.XMC_SCU_PARITY_ClearStatus:00000000 $t
    {standard input}:1820   .text.XMC_SCU_PARITY_ClearStatus:00000000 XMC_SCU_PARITY_ClearStatus
    {standard input}:1861   .text.XMC_SCU_PARITY_ClearStatus:00000020 $d
    {standard input}:1866   .text.XMC_SCU_PARITY_GetStatus:00000000 $t
    {standard input}:1871   .text.XMC_SCU_PARITY_GetStatus:00000000 XMC_SCU_PARITY_GetStatus
    {standard input}:1902   .text.XMC_SCU_PARITY_GetStatus:00000014 $d
    {standard input}:1907   .text.XMC_SCU_PARITY_Enable:00000000 $t
    {standard input}:1912   .text.XMC_SCU_PARITY_Enable:00000000 XMC_SCU_PARITY_Enable
    {standard input}:1953   .text.XMC_SCU_PARITY_Enable:00000020 $d
    {standard input}:1958   .text.XMC_SCU_PARITY_Disable:00000000 $t
    {standard input}:1963   .text.XMC_SCU_PARITY_Disable:00000000 XMC_SCU_PARITY_Disable
    {standard input}:2005   .text.XMC_SCU_PARITY_Disable:00000020 $d
    {standard input}:2010   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 $t
    {standard input}:2015   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 XMC_SCU_PARITY_EnableTrapGeneration
    {standard input}:2056   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000020 $d
    {standard input}:2061   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 $t
    {standard input}:2066   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 XMC_SCU_PARITY_DisableTrapGeneration
    {standard input}:2108   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000020 $d
    {standard input}:2113   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 $t
    {standard input}:2118   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 XMC_SCU_INTERRUPT_EnableNmiRequest
    {standard input}:2159   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000020 $d
    {standard input}:2164   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 $t
    {standard input}:2169   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 XMC_SCU_INTERRUPT_DisableNmiRequest
    {standard input}:2211   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000020 $d
    {standard input}:2216   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 $t
    {standard input}:2221   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 XMC_SCU_RESET_AssertPeripheralReset
    {standard input}:2274   .text.XMC_SCU_RESET_AssertPeripheralReset:00000034 $d
    {standard input}:2279   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 $t
    {standard input}:2284   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 XMC_SCU_RESET_DeassertPeripheralReset
    {standard input}:2337   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000034 $d
    {standard input}:2342   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 $t
    {standard input}:2347   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 XMC_SCU_RESET_IsPeripheralResetAsserted
    {standard input}:2407   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000044 $d
    {standard input}:2412   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 $t
    {standard input}:2417   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockFrequency
    {standard input}:2510   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
    {standard input}:2500   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000078 $d
    {standard input}:2505   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 $t
    {standard input}:2557   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000028 $d
    {standard input}:2563   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 $t
    {standard input}:2568   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbPllClockFrequency
    {standard input}:2632   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000050 $d
    {standard input}:2637   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 $t
    {standard input}:2642   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 XMC_SCU_CLOCK_GetCcuClockFrequency
    {standard input}:2684   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000028 $d
    {standard input}:2689   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 $t
    {standard input}:2694   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbClockFrequency
    {standard input}:2756   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000044 $d
    {standard input}:2761   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000000 $t
    {standard input}:2766   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000000 XMC_SCU_CLOCK_GetEbuClockFrequency
    {standard input}:2808   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000024 $d
    {standard input}:2813   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 $t
    {standard input}:2818   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 XMC_SCU_CLOCK_GetWdtClockFrequency
    {standard input}:2889   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000050 $d
    {standard input}:2895   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 $t
    {standard input}:2900   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 XMC_SCU_CLOCK_GetExternalOutputClockFrequency
    {standard input}:2989   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:0000006c $d
    {standard input}:2995   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 $t
    {standard input}:3000   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 XMC_SCU_CLOCK_GetPeripheralClockFrequency
    {standard input}:3029   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:0000001c $d
    {standard input}:3034   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 $t
    {standard input}:3081   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000024 $d
    {standard input}:3086   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 $t
    {standard input}:3091   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 XMC_SCU_CLOCK_SetUsbClockSource
    {standard input}:3133   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000024 $d
    {standard input}:3138   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 $t
    {standard input}:3143   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 XMC_SCU_CLOCK_SetWdtClockSource
    {standard input}:3185   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000024 $d
    {standard input}:3190   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 $t
    {standard input}:3195   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_SetExternalOutputClockSource
    {standard input}:3240   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000024 $d
    {standard input}:3245   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 $t
    {standard input}:3250   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 XMC_SCU_CLOCK_SetSystemPllClockSource
    {standard input}:3306   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:0000003c $d
    {standard input}:3311   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 $t
    {standard input}:3316   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 XMC_SCU_HIB_SetRtcClockSource
    {standard input}:3370   .text.XMC_SCU_HIB_SetRtcClockSource:00000034 $d
    {standard input}:3376   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 $t
    {standard input}:3435   .text.XMC_SCU_HIB_SetStandbyClockSource:00000034 $d
    {standard input}:3441   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 $t
    {standard input}:3491   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000024 $d
    {standard input}:3496   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 $t
    {standard input}:3546   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000024 $d
    {standard input}:3551   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 $t
    {standard input}:3601   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000024 $d
    {standard input}:3606   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 $t
    {standard input}:3656   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000024 $d
    {standard input}:3661   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 $t
    {standard input}:3666   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 XMC_SCU_CLOCK_SetUsbClockDivider
    {standard input}:3711   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000024 $d
    {standard input}:3716   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000000 $t
    {standard input}:3721   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000000 XMC_SCU_CLOCK_SetEbuClockDivider
    {standard input}:3766   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000024 $d
    {standard input}:3771   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 $t
    {standard input}:3776   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 XMC_SCU_CLOCK_SetWdtClockDivider
    {standard input}:3821   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000024 $d
    {standard input}:3826   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 $t
    {standard input}:3831   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 XMC_SCU_CLOCK_SetExternalOutputClockDivider
    {standard input}:3878   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:0000002c $d
    {standard input}:3883   .text.XMC_SCU_CLOCK_EnableClock:00000000 $t
    {standard input}:3888   .text.XMC_SCU_CLOCK_EnableClock:00000000 XMC_SCU_CLOCK_EnableClock
    {standard input}:3927   .text.XMC_SCU_CLOCK_EnableClock:0000001c $d
    {standard input}:3932   .text.XMC_SCU_CLOCK_DisableClock:00000000 $t
    {standard input}:3937   .text.XMC_SCU_CLOCK_DisableClock:00000000 XMC_SCU_CLOCK_DisableClock
    {standard input}:3976   .text.XMC_SCU_CLOCK_DisableClock:0000001c $d
    {standard input}:3981   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 $t
    {standard input}:3986   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 XMC_SCU_CLOCK_IsClockEnabled
    {standard input}:4032   .text.XMC_SCU_CLOCK_IsClockEnabled:00000028 $d
    {standard input}:4037   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 $t
    {standard input}:4042   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 XMC_SCU_POWER_GetEVR13Voltage
    {standard input}:4079   .text.XMC_SCU_POWER_GetEVR13Voltage:00000028 $d
    {standard input}:4085   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 $t
    {standard input}:4090   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 XMC_SCU_POWER_GetEVR33Voltage
    {standard input}:4128   .text.XMC_SCU_POWER_GetEVR33Voltage:0000002c $d
    {standard input}:4134   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 $t
    {standard input}:4139   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 XMC_SCU_CLOCK_EnableUsbPll
    {standard input}:4173   .text.XMC_SCU_CLOCK_EnableUsbPll:0000001c $d
    {standard input}:4178   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 $t
    {standard input}:4183   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 XMC_SCU_CLOCK_DisableUsbPll
    {standard input}:4217   .text.XMC_SCU_CLOCK_DisableUsbPll:0000001c $d
    {standard input}:4222   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 $t
    {standard input}:4227   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 XMC_SCU_CLOCK_StartUsbPll
    {standard input}:4313   .text.XMC_SCU_CLOCK_StartUsbPll:00000070 $d
    {standard input}:4318   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 $t
    {standard input}:4323   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 XMC_SCU_CLOCK_StopUsbPll
    {standard input}:4354   .text.XMC_SCU_CLOCK_StopUsbPll:00000014 $d
    {standard input}:4360   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 $t
    {standard input}:4425   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000048 $d
    {standard input}:4430   .text.XMC_SCU_POWER_EnableUsb:00000000 $t
    {standard input}:4435   .text.XMC_SCU_POWER_EnableUsb:00000000 XMC_SCU_POWER_EnableUsb
    {standard input}:4466   .text.XMC_SCU_POWER_EnableUsb:00000014 $d
    {standard input}:4471   .text.XMC_SCU_POWER_DisableUsb:00000000 $t
    {standard input}:4476   .text.XMC_SCU_POWER_DisableUsb:00000000 XMC_SCU_POWER_DisableUsb
    {standard input}:4507   .text.XMC_SCU_POWER_DisableUsb:00000014 $d
    {standard input}:4512   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 $t
    {standard input}:4517   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 XMC_SCU_CLOCK_IsUsbPllLocked
    {standard input}:4554   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000020 $d
    {standard input}:4559   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 $t
    {standard input}:4631   .text.XMC_SCU_HIB_EnableHibernateDomain:00000050 $d
    {standard input}:4637   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 $t
    {standard input}:4642   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 XMC_SCU_HIB_DisableHibernateDomain
    {standard input}:4677   .text.XMC_SCU_HIB_DisableHibernateDomain:0000001c $d
    {standard input}:4683   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 $t
    {standard input}:4688   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 XMC_SCU_HIB_IsHibernateDomainEnabled
    {standard input}:4739   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000034 $d
    {standard input}:4745   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 $t
    {standard input}:4750   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 XMC_SCU_HIB_EnableInternalSlowClock
    {standard input}:4792   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000028 $d
    {standard input}:4798   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 $t
    {standard input}:4803   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 XMC_SCU_HIB_DisableInternalSlowClock
    {standard input}:4845   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000028 $d
    {standard input}:4851   .text.XMC_SCU_HIB_ClearEventStatus:00000000 $t
    {standard input}:4856   .text.XMC_SCU_HIB_ClearEventStatus:00000000 XMC_SCU_HIB_ClearEventStatus
    {standard input}:4903   .text.XMC_SCU_HIB_ClearEventStatus:00000028 $d
    {standard input}:4909   .text.XMC_SCU_HIB_TriggerEvent:00000000 $t
    {standard input}:4914   .text.XMC_SCU_HIB_TriggerEvent:00000000 XMC_SCU_HIB_TriggerEvent
    {standard input}:4961   .text.XMC_SCU_HIB_TriggerEvent:00000028 $d
    {standard input}:4967   .text.XMC_SCU_HIB_EnableEvent:00000000 $t
    {standard input}:4972   .text.XMC_SCU_HIB_EnableEvent:00000000 XMC_SCU_HIB_EnableEvent
    {standard input}:5022   .text.XMC_SCU_HIB_EnableEvent:00000030 $d
    {standard input}:5028   .text.XMC_SCU_HIB_DisableEvent:00000000 $t
    {standard input}:5033   .text.XMC_SCU_HIB_DisableEvent:00000000 XMC_SCU_HIB_DisableEvent
    {standard input}:5084   .text.XMC_SCU_HIB_DisableEvent:00000030 $d
    {standard input}:5090   .text.XMC_SCU_HIB_EnterHibernateState:00000000 $t
    {standard input}:5095   .text.XMC_SCU_HIB_EnterHibernateState:00000000 XMC_SCU_HIB_EnterHibernateState
    {standard input}:5137   .text.XMC_SCU_HIB_EnterHibernateState:00000028 $d
    {standard input}:5143   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 $t
    {standard input}:5148   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 XMC_SCU_HIB_EnterHibernateStateEx
    {standard input}:5187   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 $t
    {standard input}:5192   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 XMC_SCU_HIB_SetWakeupTriggerInput
    {standard input}:5255   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000044 $d
    {standard input}:5261   .text.XMC_SCU_HIB_SetPinMode:00000000 $t
    {standard input}:5266   .text.XMC_SCU_HIB_SetPinMode:00000000 XMC_SCU_HIB_SetPinMode
    {standard input}:5333   .text.XMC_SCU_HIB_SetPinMode:0000004c $d
    {standard input}:5339   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 $t
    {standard input}:5344   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 XMC_SCU_HIB_SetPinOutputLevel
    {standard input}:5407   .text.XMC_SCU_HIB_SetPinOutputLevel:0000004c $d
    {standard input}:5413   .text.XMC_SCU_HIB_SetInput0:00000000 $t
    {standard input}:5418   .text.XMC_SCU_HIB_SetInput0:00000000 XMC_SCU_HIB_SetInput0
    {standard input}:5481   .text.XMC_SCU_HIB_SetInput0:00000044 $d
    {standard input}:5487   .text.XMC_SCU_HIB_SetSR0Input:00000000 $t
    {standard input}:5492   .text.XMC_SCU_HIB_SetSR0Input:00000000 XMC_SCU_HIB_SetSR0Input
    {standard input}:5544   .text.XMC_SCU_HIB_SetSR0Input:00000034 $d
    {standard input}:5550   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 $t
    {standard input}:5592   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000020 $d
    {standard input}:5597   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 $t
    {standard input}:5672   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:0000005c $d
    {standard input}:5678   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 $t
    {standard input}:5683   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillator
    {standard input}:5725   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000028 $d
    {standard input}:5731   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:5736   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
    {standard input}:5778   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000028 $d
    {standard input}:5784   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:5789   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
    {standard input}:5832   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:0000002c $d
    {standard input}:5838   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:5843   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
    {standard input}:5875   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:5880   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 $t
    {standard input}:5935   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000044 $d
    {standard input}:5942   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 $t
    {standard input}:5984   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000024 $d
    {standard input}:5989   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 $t
    {standard input}:5994   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillator
    {standard input}:6027   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000018 $d
    {standard input}:6032   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6037   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:6070   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:6075   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6080   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:6113   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:6118   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:6123   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
    {standard input}:6155   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:6160   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 $t
    {standard input}:6199   .text.XMC_SCU_CLOCK_EnableSystemPll:0000001c $d
    {standard input}:6204   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 $t
    {standard input}:6243   .text.XMC_SCU_CLOCK_DisableSystemPll:0000001c $d
    {standard input}:6248   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 $t
    {standard input}:6529   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 XMC_SCU_CLOCK_StepSystemPllFrequency
    {standard input}:6471   .text.XMC_SCU_CLOCK_StartSystemPll:0000015c $d
    {standard input}:6481   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 $t
    {standard input}:6486   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 XMC_SCU_CLOCK_StopSystemPll
    {standard input}:6519   .text.XMC_SCU_CLOCK_StopSystemPll:00000018 $d
    {standard input}:6524   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 $t
    {standard input}:6574   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000028 $d
    {standard input}:6579   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 $t
    {standard input}:6584   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 XMC_SCU_CLOCK_IsSystemPllLocked
    {standard input}:6621   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000020 $d
    {standard input}:6626   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 $t
    {standard input}:6631   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 XMC_SCU_INTERRUPT_SetEventHandler
    {standard input}:6710   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000054 $d
    {standard input}:6715   .text.XMC_SCU_IRQHandler:00000000 $t
    {standard input}:6720   .text.XMC_SCU_IRQHandler:00000000 XMC_SCU_IRQHandler
    {standard input}:6798   .text.XMC_SCU_IRQHandler:0000005c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
SystemCoreClockUpdate
OSCHP_GetFrequency
